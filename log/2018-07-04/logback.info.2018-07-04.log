2018-07-04 08:41:56,228 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:41:56,232 - ===========请求时间:2018-07-04 08:41:56==========================
2018-07-04 08:41:56,232 - url=http://localhost:8081/signIn
2018-07-04 08:41:56,232 - method=POST
2018-07-04 08:41:56,232 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:41:56,232 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:41:56,232 - args:userName=admin,password=123456,
2018-07-04 08:41:56,447 - =============结束请求时间:2018-07-04 08:41:56,耗时:0s======================
2018-07-04 08:41:56,448 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:41:56, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:45:38,348 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 3952 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 08:45:38,373 - No active profile set, falling back to default profiles: default
2018-07-04 08:45:38,567 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 08:45:38,652 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6fb35e9f: startup date [Wed Jul 04 08:45:38 CST 2018]; root of context hierarchy
2018-07-04 08:45:39,600 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 08:45:41,014 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 08:45:41,025 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 08:45:41,034 - Starting service [Tomcat]
2018-07-04 08:45:41,034 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 08:45:41,132 - Initializing Spring embedded WebApplicationContext
2018-07-04 08:45:41,132 - Root WebApplicationContext: initialization completed in 2480 ms
2018-07-04 08:45:41,340 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 08:45:41,347 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 08:45:41,347 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 08:45:41,348 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 08:45:41,348 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 08:45:41,348 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 08:45:42,053 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6fb35e9f: startup date [Wed Jul 04 08:45:38 CST 2018]; root of context hierarchy
2018-07-04 08:45:42,114 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 08:45:42,115 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 08:45:42,115 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 08:45:42,115 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 08:45:42,116 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 08:45:42,116 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 08:45:42,116 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 08:45:42,116 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 08:45:42,116 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 08:45:42,116 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 08:45:42,117 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 08:45:42,117 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 08:45:42,117 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 08:45:42,117 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 08:45:42,117 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 08:45:42,117 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 08:45:42,120 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 08:45:42,120 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 08:45:42,122 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 08:45:42,122 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 08:45:42,166 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:45:42,166 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:45:42,183 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 08:45:42,208 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:45:42,800 - LiveReload server is running on port 35729
2018-07-04 08:45:42,948 - Registering beans for JMX exposure on startup
2018-07-04 08:45:42,949 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 08:45:42,955 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 08:45:42,966 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 08:45:42,979 - Using a shared selector for servlet write/read
2018-07-04 08:45:42,994 - Tomcat started on port(s): 8081 (http)
2018-07-04 08:45:42,999 - Started FqLtdWasBackstageApplication in 5.333 seconds (JVM running for 6.345)
2018-07-04 08:45:48,644 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 08:45:48,644 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 08:45:48,682 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 08:45:48,707 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:45:48,708 - ===========请求时间:2018-07-04 08:45:48==========================
2018-07-04 08:45:48,708 - url=http://localhost:8081/login
2018-07-04 08:45:48,708 - method=GET
2018-07-04 08:45:48,708 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:45:48,708 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:45:48,708 - args:
2018-07-04 08:45:48,711 - =============结束请求时间:2018-07-04 08:45:48,耗时:0s======================
2018-07-04 08:45:48,711 - response=/login
2018-07-04 08:45:48,741 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 08:45:48,777 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 08:45:48,777 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 08:45:48,778 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 08:45:48,778 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 08:45:48,782 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 08:45:48,782 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 08:45:49,465 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:45:49,465 - ===========请求时间:2018-07-04 08:45:49==========================
2018-07-04 08:45:49,465 - url=http://localhost:8081/login
2018-07-04 08:45:49,466 - method=GET
2018-07-04 08:45:49,466 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:45:49,466 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:45:49,466 - args:
2018-07-04 08:45:49,466 - =============结束请求时间:2018-07-04 08:45:49,耗时:0s======================
2018-07-04 08:45:49,466 - response=/login
2018-07-04 08:45:54,481 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:45:54,482 - ===========请求时间:2018-07-04 08:45:54==========================
2018-07-04 08:45:54,482 - url=http://localhost:8081/signIn
2018-07-04 08:45:54,482 - method=POST
2018-07-04 08:45:54,482 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:45:54,482 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:45:54,483 - args:userName=admin,password=123456,
2018-07-04 08:45:54,552 - {dataSource-1} inited
2018-07-04 08:45:55,035 - =============结束请求时间:2018-07-04 08:45:55,耗时:0s======================
2018-07-04 08:45:55,035 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:45:54, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:46:18,194 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2860 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 08:46:18,196 - No active profile set, falling back to default profiles: default
2018-07-04 08:46:18,334 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 08:46:18,404 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f1b0269: startup date [Wed Jul 04 08:46:18 CST 2018]; root of context hierarchy
2018-07-04 08:46:19,193 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 08:46:20,165 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 08:46:20,179 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 08:46:20,191 - Starting service [Tomcat]
2018-07-04 08:46:20,191 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 08:46:20,305 - Initializing Spring embedded WebApplicationContext
2018-07-04 08:46:20,305 - Root WebApplicationContext: initialization completed in 1901 ms
2018-07-04 08:46:20,540 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 08:46:20,545 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 08:46:20,546 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 08:46:20,546 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 08:46:20,546 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 08:46:20,546 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 08:46:21,260 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f1b0269: startup date [Wed Jul 04 08:46:18 CST 2018]; root of context hierarchy
2018-07-04 08:46:21,326 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 08:46:21,327 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 08:46:21,327 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 08:46:21,327 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 08:46:21,327 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 08:46:21,327 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 08:46:21,328 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 08:46:21,328 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 08:46:21,328 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 08:46:21,328 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 08:46:21,328 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 08:46:21,329 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 08:46:21,329 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 08:46:21,329 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 08:46:21,329 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 08:46:21,329 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 08:46:21,332 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 08:46:21,332 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 08:46:21,334 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 08:46:21,334 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 08:46:21,385 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:46:21,385 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:46:21,406 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 08:46:21,432 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:46:22,009 - LiveReload server is running on port 35729
2018-07-04 08:46:22,140 - Registering beans for JMX exposure on startup
2018-07-04 08:46:22,141 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 08:46:22,146 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 08:46:22,155 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 08:46:22,166 - Using a shared selector for servlet write/read
2018-07-04 08:46:22,193 - Tomcat started on port(s): 8081 (http)
2018-07-04 08:46:22,197 - Started FqLtdWasBackstageApplication in 4.753 seconds (JVM running for 5.849)
2018-07-04 08:46:24,816 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 08:46:24,816 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 08:46:24,853 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 08:46:24,877 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:46:24,878 - ===========请求时间:2018-07-04 08:46:24==========================
2018-07-04 08:46:24,878 - url=http://localhost:8081/login
2018-07-04 08:46:24,878 - method=GET
2018-07-04 08:46:24,878 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:24,878 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:46:24,878 - args:
2018-07-04 08:46:24,881 - =============结束请求时间:2018-07-04 08:46:24,耗时:0s======================
2018-07-04 08:46:24,881 - response=/login
2018-07-04 08:46:24,906 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 08:46:24,948 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 08:46:24,948 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 08:46:24,948 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 08:46:24,948 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 08:46:24,951 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 08:46:24,951 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 08:46:29,223 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:46:29,223 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,223 - url=http://localhost:8081/signIn
2018-07-04 08:46:29,223 - method=POST
2018-07-04 08:46:29,223 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,223 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:46:29,223 - args:userName=admin,password=123456,
2018-07-04 08:46:29,278 - {dataSource-1} inited
2018-07-04 08:46:29,597 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,597 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:46:29, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:46:29,663 - ===========进入拦截器==============
2018-07-04 08:46:29,663 - http://localhost:8081/home
2018-07-04 08:46:29,668 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 08:46:29,668 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,668 - url=http://localhost:8081/home
2018-07-04 08:46:29,668 - method=GET
2018-07-04 08:46:29,668 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,668 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 08:46:29,668 - args:
2018-07-04 08:46:29,668 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,668 - response=/home
2018-07-04 08:46:29,668 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:29,782 - ===========进入拦截器==============
2018-07-04 08:46:29,782 - http://localhost:8081/welcome
2018-07-04 08:46:29,790 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 08:46:29,790 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,790 - url=http://localhost:8081/welcome
2018-07-04 08:46:29,790 - method=GET
2018-07-04 08:46:29,790 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,790 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 08:46:29,790 - args:
2018-07-04 08:46:29,791 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,791 - response=/welcome
2018-07-04 08:46:29,791 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:29,826 - ===========进入拦截器==============
2018-07-04 08:46:29,826 - http://localhost:8081/common/top
2018-07-04 08:46:29,828 - ===========进入拦截器==============
2018-07-04 08:46:29,828 - http://localhost:8081/common/left
2018-07-04 08:46:29,830 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 08:46:29,830 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,830 - url=http://localhost:8081/common/top
2018-07-04 08:46:29,830 - method=GET
2018-07-04 08:46:29,830 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,830 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 08:46:29,830 - args:
2018-07-04 08:46:29,831 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,831 - response=/common/top
2018-07-04 08:46:29,831 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:29,839 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 08:46:29,839 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,840 - url=http://localhost:8081/common/left
2018-07-04 08:46:29,840 - method=GET
2018-07-04 08:46:29,840 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,840 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 08:46:29,840 - args:
2018-07-04 08:46:29,840 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,840 - response=/common/left
2018-07-04 08:46:29,840 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:29,835 - ===========进入拦截器==============
2018-07-04 08:46:29,841 - http://localhost:8081/common/footer
2018-07-04 08:46:29,846 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 08:46:29,846 - ===========请求时间:2018-07-04 08:46:29==========================
2018-07-04 08:46:29,846 - url=http://localhost:8081/common/footer
2018-07-04 08:46:29,846 - method=GET
2018-07-04 08:46:29,846 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:29,846 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 08:46:29,846 - args:
2018-07-04 08:46:29,847 - =============结束请求时间:2018-07-04 08:46:29,耗时:0s======================
2018-07-04 08:46:29,847 - response=/common/footer
2018-07-04 08:46:29,847 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:29,911 - ===========进入拦截器==============
2018-07-04 08:46:29,912 - http://localhost:8081/error
2018-07-04 08:46:29,965 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:30,022 - ===========进入拦截器==============
2018-07-04 08:46:30,022 - http://localhost:8081/error
2018-07-04 08:46:30,032 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,600 - ===========进入拦截器==============
2018-07-04 08:46:33,600 - http://localhost:8081/user.html
2018-07-04 08:46:33,611 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 08:46:33,612 - ===========请求时间:2018-07-04 08:46:33==========================
2018-07-04 08:46:33,612 - url=http://localhost:8081/user.html
2018-07-04 08:46:33,612 - method=GET
2018-07-04 08:46:33,612 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:46:33,612 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 08:46:33,612 - args:
2018-07-04 08:46:33,612 - =============结束请求时间:2018-07-04 08:46:33,耗时:0s======================
2018-07-04 08:46:33,612 - response=/user
2018-07-04 08:46:33,612 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,633 - ===========进入拦截器==============
2018-07-04 08:46:33,633 - http://localhost:8081/error
2018-07-04 08:46:33,634 - ===========进入拦截器==============
2018-07-04 08:46:33,634 - http://localhost:8081/error
2018-07-04 08:46:33,635 - ===========进入拦截器==============
2018-07-04 08:46:33,635 - http://localhost:8081/error
2018-07-04 08:46:33,635 - ===========进入拦截器==============
2018-07-04 08:46:33,635 - http://localhost:8081/error
2018-07-04 08:46:33,644 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,645 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,648 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,651 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,654 - ===========进入拦截器==============
2018-07-04 08:46:33,655 - http://localhost:8081/error
2018-07-04 08:46:33,662 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:46:33,689 - ===========进入拦截器==============
2018-07-04 08:46:33,689 - http://localhost:8081/error
2018-07-04 08:46:33,696 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:48:48,995 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10992 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 08:48:48,997 - No active profile set, falling back to default profiles: default
2018-07-04 08:48:49,179 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 08:48:49,271 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@90c0d64: startup date [Wed Jul 04 08:48:49 CST 2018]; root of context hierarchy
2018-07-04 08:48:50,342 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 08:48:51,334 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 08:48:51,345 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 08:48:51,354 - Starting service [Tomcat]
2018-07-04 08:48:51,354 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 08:48:51,450 - Initializing Spring embedded WebApplicationContext
2018-07-04 08:48:51,451 - Root WebApplicationContext: initialization completed in 2180 ms
2018-07-04 08:48:51,650 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 08:48:51,654 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 08:48:51,654 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 08:48:51,654 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 08:48:51,654 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 08:48:51,655 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 08:48:52,351 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@90c0d64: startup date [Wed Jul 04 08:48:49 CST 2018]; root of context hierarchy
2018-07-04 08:48:52,413 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 08:48:52,413 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 08:48:52,414 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 08:48:52,414 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 08:48:52,414 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 08:48:52,414 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 08:48:52,414 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 08:48:52,414 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 08:48:52,415 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 08:48:52,415 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 08:48:52,415 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 08:48:52,415 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 08:48:52,415 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 08:48:52,415 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 08:48:52,416 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 08:48:52,416 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 08:48:52,418 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 08:48:52,418 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 08:48:52,421 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 08:48:52,421 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 08:48:52,462 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:48:52,463 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:48:52,481 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 08:48:52,507 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:48:53,069 - LiveReload server is running on port 35729
2018-07-04 08:48:53,198 - Registering beans for JMX exposure on startup
2018-07-04 08:48:53,199 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 08:48:53,204 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 08:48:53,212 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 08:48:53,224 - Using a shared selector for servlet write/read
2018-07-04 08:48:53,237 - Tomcat started on port(s): 8081 (http)
2018-07-04 08:48:53,241 - Started FqLtdWasBackstageApplication in 4.766 seconds (JVM running for 5.826)
2018-07-04 08:49:00,350 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 08:49:00,350 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 08:49:00,385 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 08:49:00,399 - ===========进入拦截器==============
2018-07-04 08:49:00,421 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:49:00,421 - ===========请求时间:2018-07-04 08:49:00==========================
2018-07-04 08:49:00,421 - url=http://localhost:8081/login
2018-07-04 08:49:00,421 - method=GET
2018-07-04 08:49:00,421 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:00,421 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:49:00,421 - args:
2018-07-04 08:49:00,424 - =============结束请求时间:2018-07-04 08:49:00,耗时:0s======================
2018-07-04 08:49:00,424 - response=/login
2018-07-04 08:49:00,449 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 08:49:00,487 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 08:49:00,487 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 08:49:00,487 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 08:49:00,487 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 08:49:00,490 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 08:49:00,490 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 08:49:08,859 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:49:08,860 - ===========请求时间:2018-07-04 08:49:08==========================
2018-07-04 08:49:08,860 - url=http://localhost:8081/signIn
2018-07-04 08:49:08,860 - method=POST
2018-07-04 08:49:08,860 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:08,860 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:49:08,860 - args:userName=admin,password=123456,
2018-07-04 08:49:08,914 - {dataSource-1} inited
2018-07-04 08:49:09,262 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,262 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:49:09, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:49:09,329 - ===========进入拦截器==============
2018-07-04 08:49:09,329 - http://localhost:8081/home
2018-07-04 08:49:09,335 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 08:49:09,335 - ===========请求时间:2018-07-04 08:49:09==========================
2018-07-04 08:49:09,335 - url=http://localhost:8081/home
2018-07-04 08:49:09,335 - method=GET
2018-07-04 08:49:09,335 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:09,335 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 08:49:09,335 - args:
2018-07-04 08:49:09,336 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,336 - response=/home
2018-07-04 08:49:09,336 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,434 - ===========进入拦截器==============
2018-07-04 08:49:09,434 - http://localhost:8081/welcome
2018-07-04 08:49:09,441 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 08:49:09,441 - ===========请求时间:2018-07-04 08:49:09==========================
2018-07-04 08:49:09,442 - url=http://localhost:8081/welcome
2018-07-04 08:49:09,442 - method=GET
2018-07-04 08:49:09,442 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:09,442 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 08:49:09,442 - args:
2018-07-04 08:49:09,442 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,442 - response=/welcome
2018-07-04 08:49:09,442 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,465 - ===========进入拦截器==============
2018-07-04 08:49:09,465 - http://localhost:8081/common/top
2018-07-04 08:49:09,465 - ===========进入拦截器==============
2018-07-04 08:49:09,465 - ===========进入拦截器==============
2018-07-04 08:49:09,465 - http://localhost:8081/common/footer
2018-07-04 08:49:09,465 - http://localhost:8081/common/left
2018-07-04 08:49:09,469 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 08:49:09,469 - ===========请求时间:2018-07-04 08:49:09==========================
2018-07-04 08:49:09,469 - url=http://localhost:8081/common/top
2018-07-04 08:49:09,469 - method=GET
2018-07-04 08:49:09,470 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:09,470 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 08:49:09,470 - args:
2018-07-04 08:49:09,470 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,470 - response=/common/top
2018-07-04 08:49:09,470 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,474 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 08:49:09,474 - ===========请求时间:2018-07-04 08:49:09==========================
2018-07-04 08:49:09,474 - url=http://localhost:8081/common/footer
2018-07-04 08:49:09,474 - method=GET
2018-07-04 08:49:09,474 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:09,475 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 08:49:09,475 - args:
2018-07-04 08:49:09,475 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,475 - response=/common/footer
2018-07-04 08:49:09,475 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,486 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 08:49:09,486 - ===========请求时间:2018-07-04 08:49:09==========================
2018-07-04 08:49:09,486 - url=http://localhost:8081/common/left
2018-07-04 08:49:09,486 - method=GET
2018-07-04 08:49:09,486 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:09,486 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 08:49:09,486 - args:
2018-07-04 08:49:09,487 - =============结束请求时间:2018-07-04 08:49:09,耗时:0s======================
2018-07-04 08:49:09,487 - response=/common/left
2018-07-04 08:49:09,487 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,570 - ===========进入拦截器==============
2018-07-04 08:49:09,570 - http://localhost:8081/error
2018-07-04 08:49:09,585 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:09,662 - ===========进入拦截器==============
2018-07-04 08:49:09,662 - http://localhost:8081/error
2018-07-04 08:49:09,671 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:11,263 - ===========进入拦截器==============
2018-07-04 08:49:11,263 - http://localhost:8081/user.html
2018-07-04 08:49:11,269 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 08:49:11,269 - ===========请求时间:2018-07-04 08:49:11==========================
2018-07-04 08:49:11,269 - url=http://localhost:8081/user.html
2018-07-04 08:49:11,269 - method=GET
2018-07-04 08:49:11,269 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:49:11,269 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 08:49:11,269 - args:
2018-07-04 08:49:11,269 - =============结束请求时间:2018-07-04 08:49:11,耗时:0s======================
2018-07-04 08:49:11,269 - response=/user
2018-07-04 08:49:11,270 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:11,300 - ===========进入拦截器==============
2018-07-04 08:49:11,300 - http://localhost:8081/error
2018-07-04 08:49:11,308 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:49:11,357 - ===========进入拦截器==============
2018-07-04 08:49:11,357 - http://localhost:8081/error
2018-07-04 08:49:11,362 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:13,790 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@90c0d64: startup date [Wed Jul 04 08:48:49 CST 2018]; root of context hierarchy
2018-07-04 08:55:13,792 - Unregistering JMX-exposed beans on shutdown
2018-07-04 08:55:13,793 - Unregistering JMX-exposed beans
2018-07-04 08:55:13,804 - {dataSource-1} closed
2018-07-04 08:55:14,327 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10992 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 08:55:14,328 - No active profile set, falling back to default profiles: default
2018-07-04 08:55:14,341 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3506064d: startup date [Wed Jul 04 08:55:14 CST 2018]; root of context hierarchy
2018-07-04 08:55:14,867 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 08:55:15,087 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 08:55:15,088 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 08:55:15,088 - Starting service [Tomcat]
2018-07-04 08:55:15,088 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 08:55:15,125 - Initializing Spring embedded WebApplicationContext
2018-07-04 08:55:15,126 - Root WebApplicationContext: initialization completed in 785 ms
2018-07-04 08:55:15,178 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 08:55:15,179 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 08:55:15,179 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 08:55:15,179 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 08:55:15,179 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 08:55:15,179 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 08:55:15,474 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3506064d: startup date [Wed Jul 04 08:55:14 CST 2018]; root of context hierarchy
2018-07-04 08:55:15,488 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 08:55:15,488 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 08:55:15,488 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 08:55:15,488 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 08:55:15,489 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 08:55:15,489 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 08:55:15,489 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 08:55:15,489 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 08:55:15,489 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 08:55:15,489 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 08:55:15,490 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 08:55:15,490 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 08:55:15,490 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 08:55:15,490 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 08:55:15,490 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 08:55:15,490 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 08:55:15,491 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 08:55:15,491 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 08:55:15,492 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 08:55:15,492 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 08:55:15,492 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 08:55:15,492 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 08:55:15,493 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 08:55:15,493 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 08:55:15,493 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 08:55:15,493 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 08:55:15,493 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 08:55:15,494 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 08:55:15,494 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 08:55:15,494 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 08:55:15,494 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 08:55:15,494 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 08:55:15,495 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 08:55:15,495 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 08:55:15,495 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 08:55:15,496 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 08:55:15,496 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:55:15,496 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:55:15,496 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:55:15,496 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 08:55:15,497 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 08:55:15,497 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 08:55:15,522 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:55:15,522 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:55:15,532 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 08:55:15,542 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:55:15,735 - LiveReload server is running on port 35729
2018-07-04 08:55:15,870 - Registering beans for JMX exposure on startup
2018-07-04 08:55:15,870 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 08:55:15,874 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 08:55:15,877 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 08:55:15,878 - Using a shared selector for servlet write/read
2018-07-04 08:55:15,882 - Tomcat started on port(s): 8081 (http)
2018-07-04 08:55:15,883 - Started FqLtdWasBackstageApplication in 1.634 seconds (JVM running for 388.468)
2018-07-04 08:55:19,689 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 08:55:19,689 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 08:55:19,699 - FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
2018-07-04 08:55:19,700 - ===========进入拦截器==============
2018-07-04 08:55:19,711 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:55:19,711 - ===========请求时间:2018-07-04 08:55:19==========================
2018-07-04 08:55:19,711 - url=http://localhost:8081/login
2018-07-04 08:55:19,711 - method=GET
2018-07-04 08:55:19,711 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:19,711 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:55:19,711 - args:
2018-07-04 08:55:19,715 - =============结束请求时间:2018-07-04 08:55:19,耗时:0s======================
2018-07-04 08:55:19,715 - response=/login
2018-07-04 08:55:19,720 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 08:55:19,721 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 08:55:19,721 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 08:55:19,721 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 08:55:19,721 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 08:55:19,722 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 08:55:19,722 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 08:55:25,076 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:55:25,076 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,076 - url=http://localhost:8081/signIn
2018-07-04 08:55:25,076 - method=POST
2018-07-04 08:55:25,076 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,076 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:55:25,076 - args:userName=admin,password=123456,
2018-07-04 08:55:25,083 - {dataSource-2} inited
2018-07-04 08:55:25,279 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,279 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:55:25, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:55:25,304 - ===========进入拦截器==============
2018-07-04 08:55:25,304 - http://localhost:8081/home
2018-07-04 08:55:25,312 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 08:55:25,312 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,313 - url=http://localhost:8081/home
2018-07-04 08:55:25,313 - method=GET
2018-07-04 08:55:25,313 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,313 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 08:55:25,313 - args:
2018-07-04 08:55:25,313 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,313 - response=/home
2018-07-04 08:55:25,313 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,413 - ===========进入拦截器==============
2018-07-04 08:55:25,413 - http://localhost:8081/welcome
2018-07-04 08:55:25,423 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 08:55:25,423 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,423 - url=http://localhost:8081/welcome
2018-07-04 08:55:25,423 - method=GET
2018-07-04 08:55:25,423 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,423 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 08:55:25,423 - args:
2018-07-04 08:55:25,423 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,423 - response=/welcome
2018-07-04 08:55:25,424 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,442 - ===========进入拦截器==============
2018-07-04 08:55:25,442 - http://localhost:8081/common/top
2018-07-04 08:55:25,444 - ===========进入拦截器==============
2018-07-04 08:55:25,444 - http://localhost:8081/common/left
2018-07-04 08:55:25,444 - ===========进入拦截器==============
2018-07-04 08:55:25,444 - http://localhost:8081/common/footer
2018-07-04 08:55:25,446 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 08:55:25,447 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,447 - url=http://localhost:8081/common/top
2018-07-04 08:55:25,447 - method=GET
2018-07-04 08:55:25,447 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,447 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 08:55:25,447 - args:
2018-07-04 08:55:25,447 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,447 - response=/common/top
2018-07-04 08:55:25,447 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,451 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 08:55:25,451 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,451 - url=http://localhost:8081/common/left
2018-07-04 08:55:25,451 - method=GET
2018-07-04 08:55:25,451 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,451 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 08:55:25,451 - args:
2018-07-04 08:55:25,451 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,451 - response=/common/left
2018-07-04 08:55:25,451 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,465 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 08:55:25,465 - ===========请求时间:2018-07-04 08:55:25==========================
2018-07-04 08:55:25,465 - url=http://localhost:8081/common/footer
2018-07-04 08:55:25,465 - method=GET
2018-07-04 08:55:25,465 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:25,465 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 08:55:25,465 - args:
2018-07-04 08:55:25,465 - =============结束请求时间:2018-07-04 08:55:25,耗时:0s======================
2018-07-04 08:55:25,465 - response=/common/footer
2018-07-04 08:55:25,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,514 - ===========进入拦截器==============
2018-07-04 08:55:25,514 - http://localhost:8081/error
2018-07-04 08:55:25,524 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:25,644 - ===========进入拦截器==============
2018-07-04 08:55:25,644 - http://localhost:8081/error
2018-07-04 08:55:25,652 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:27,399 - ===========进入拦截器==============
2018-07-04 08:55:27,399 - http://localhost:8081/user.html
2018-07-04 08:55:27,404 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 08:55:27,404 - ===========请求时间:2018-07-04 08:55:27==========================
2018-07-04 08:55:27,404 - url=http://localhost:8081/user.html
2018-07-04 08:55:27,404 - method=GET
2018-07-04 08:55:27,404 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:27,404 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 08:55:27,404 - args:
2018-07-04 08:55:27,404 - =============结束请求时间:2018-07-04 08:55:27,耗时:0s======================
2018-07-04 08:55:27,404 - response=/user
2018-07-04 08:55:27,405 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:27,427 - ===========进入拦截器==============
2018-07-04 08:55:27,427 - http://localhost:8081/error
2018-07-04 08:55:27,432 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:27,479 - ===========进入拦截器==============
2018-07-04 08:55:27,479 - http://localhost:8081/error
2018-07-04 08:55:27,483 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:55:27,519 - ===========进入拦截器==============
2018-07-04 08:55:27,519 - http://localhost:8081/user/findAllUser
2018-07-04 08:55:27,525 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 08:55:27,525 - ===========请求时间:2018-07-04 08:55:27==========================
2018-07-04 08:55:27,525 - url=http://localhost:8081/user/findAllUser
2018-07-04 08:55:27,525 - method=GET
2018-07-04 08:55:27,525 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:55:27,525 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 08:55:27,525 - args:userName=,
2018-07-04 08:55:27,535 - =============结束请求时间:2018-07-04 08:55:27,耗时:0s======================
2018-07-04 08:55:27,535 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:55:25.0, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 08:55:27,542 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:56:18,742 - ===========进入拦截器==============
2018-07-04 08:56:18,742 - http://localhost:8081/user.html
2018-07-04 08:56:18,752 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 08:56:18,752 - ===========请求时间:2018-07-04 08:56:18==========================
2018-07-04 08:56:18,752 - url=http://localhost:8081/user.html
2018-07-04 08:56:18,752 - method=GET
2018-07-04 08:56:18,752 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:56:18,752 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 08:56:18,752 - args:
2018-07-04 08:56:18,752 - =============结束请求时间:2018-07-04 08:56:18,耗时:0s======================
2018-07-04 08:56:18,752 - response=/user
2018-07-04 08:56:18,752 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:56:18,777 - ===========进入拦截器==============
2018-07-04 08:56:18,778 - http://localhost:8081/error
2018-07-04 08:56:18,784 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:56:18,832 - ===========进入拦截器==============
2018-07-04 08:56:18,832 - http://localhost:8081/error
2018-07-04 08:56:18,837 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:56:18,870 - ===========进入拦截器==============
2018-07-04 08:56:18,871 - http://localhost:8081/user/findAllUser
2018-07-04 08:56:18,875 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 08:56:18,875 - ===========请求时间:2018-07-04 08:56:18==========================
2018-07-04 08:56:18,875 - url=http://localhost:8081/user/findAllUser
2018-07-04 08:56:18,875 - method=GET
2018-07-04 08:56:18,875 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:56:18,875 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 08:56:18,875 - args:userName=,
2018-07-04 08:56:18,879 - =============结束请求时间:2018-07-04 08:56:18,耗时:0s======================
2018-07-04 08:56:18,879 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:55:25.0, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 08:56:18,880 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:20,999 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16344 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 08:58:21,002 - No active profile set, falling back to default profiles: default
2018-07-04 08:58:21,169 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 08:58:21,226 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1788d1cc: startup date [Wed Jul 04 08:58:21 CST 2018]; root of context hierarchy
2018-07-04 08:58:21,960 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 08:58:22,908 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 08:58:22,920 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 08:58:22,929 - Starting service [Tomcat]
2018-07-04 08:58:22,929 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 08:58:23,030 - Initializing Spring embedded WebApplicationContext
2018-07-04 08:58:23,030 - Root WebApplicationContext: initialization completed in 1804 ms
2018-07-04 08:58:23,239 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 08:58:23,243 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 08:58:23,244 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 08:58:23,244 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 08:58:23,244 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 08:58:23,244 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 08:58:24,017 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1788d1cc: startup date [Wed Jul 04 08:58:21 CST 2018]; root of context hierarchy
2018-07-04 08:58:24,083 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 08:58:24,084 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 08:58:24,084 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 08:58:24,084 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 08:58:24,085 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 08:58:24,085 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 08:58:24,085 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 08:58:24,085 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 08:58:24,085 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 08:58:24,085 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 08:58:24,085 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 08:58:24,086 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 08:58:24,086 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 08:58:24,086 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 08:58:24,086 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 08:58:24,086 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 08:58:24,089 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 08:58:24,089 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 08:58:24,091 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 08:58:24,092 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 08:58:24,092 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 08:58:24,092 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 08:58:24,092 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 08:58:24,092 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 08:58:24,092 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 08:58:24,093 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 08:58:24,093 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 08:58:24,094 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 08:58:24,094 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 08:58:24,094 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 08:58:24,094 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 08:58:24,094 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 08:58:24,095 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 08:58:24,097 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:58:24,097 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 08:58:24,097 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 08:58:24,097 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:58:24,097 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 08:58:24,097 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 08:58:24,098 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 08:58:24,099 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 08:58:24,099 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 08:58:24,144 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:58:24,144 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:58:24,164 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 08:58:24,192 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 08:58:24,866 - LiveReload server is running on port 35729
2018-07-04 08:58:24,994 - Registering beans for JMX exposure on startup
2018-07-04 08:58:24,995 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 08:58:24,999 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 08:58:25,008 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 08:58:25,019 - Using a shared selector for servlet write/read
2018-07-04 08:58:25,032 - Tomcat started on port(s): 8081 (http)
2018-07-04 08:58:25,036 - Started FqLtdWasBackstageApplication in 4.755 seconds (JVM running for 5.93)
2018-07-04 08:58:25,282 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 08:58:25,282 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 08:58:25,341 - FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2018-07-04 08:58:25,364 - ===========进入拦截器==============
2018-07-04 08:58:25,389 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 08:58:25,389 - ===========请求时间:2018-07-04 08:58:25==========================
2018-07-04 08:58:25,390 - url=http://localhost:8081/login
2018-07-04 08:58:25,390 - method=GET
2018-07-04 08:58:25,390 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:25,390 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 08:58:25,390 - args:
2018-07-04 08:58:25,392 - =============结束请求时间:2018-07-04 08:58:25,耗时:0s======================
2018-07-04 08:58:25,393 - response=/login
2018-07-04 08:58:25,418 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 08:58:25,457 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 08:58:25,457 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 08:58:25,457 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 08:58:25,457 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 08:58:25,460 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 08:58:25,461 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 08:58:30,044 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 08:58:30,044 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,044 - url=http://localhost:8081/signIn
2018-07-04 08:58:30,044 - method=POST
2018-07-04 08:58:30,044 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,044 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 08:58:30,044 - args:userName=admin,password=123456,
2018-07-04 08:58:30,098 - {dataSource-1} inited
2018-07-04 08:58:30,419 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,420 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:58:30, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 08:58:30,485 - ===========进入拦截器==============
2018-07-04 08:58:30,486 - http://localhost:8081/home
2018-07-04 08:58:30,491 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 08:58:30,491 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,491 - url=http://localhost:8081/home
2018-07-04 08:58:30,491 - method=GET
2018-07-04 08:58:30,491 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,491 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 08:58:30,491 - args:
2018-07-04 08:58:30,492 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,492 - response=/home
2018-07-04 08:58:30,492 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,589 - ===========进入拦截器==============
2018-07-04 08:58:30,589 - http://localhost:8081/welcome
2018-07-04 08:58:30,594 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 08:58:30,594 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,594 - url=http://localhost:8081/welcome
2018-07-04 08:58:30,594 - method=GET
2018-07-04 08:58:30,594 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,594 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 08:58:30,594 - args:
2018-07-04 08:58:30,594 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,594 - response=/welcome
2018-07-04 08:58:30,595 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,627 - ===========进入拦截器==============
2018-07-04 08:58:30,627 - http://localhost:8081/common/top
2018-07-04 08:58:30,628 - ===========进入拦截器==============
2018-07-04 08:58:30,628 - http://localhost:8081/common/left
2018-07-04 08:58:30,632 - ===========进入拦截器==============
2018-07-04 08:58:30,632 - http://localhost:8081/common/footer
2018-07-04 08:58:30,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 08:58:30,633 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,633 - url=http://localhost:8081/common/top
2018-07-04 08:58:30,633 - method=GET
2018-07-04 08:58:30,633 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,633 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 08:58:30,633 - args:
2018-07-04 08:58:30,634 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,634 - response=/common/top
2018-07-04 08:58:30,634 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,642 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 08:58:30,643 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,643 - url=http://localhost:8081/common/left
2018-07-04 08:58:30,643 - method=GET
2018-07-04 08:58:30,643 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,643 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 08:58:30,643 - args:
2018-07-04 08:58:30,643 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,643 - response=/common/left
2018-07-04 08:58:30,643 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,650 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 08:58:30,650 - ===========请求时间:2018-07-04 08:58:30==========================
2018-07-04 08:58:30,650 - url=http://localhost:8081/common/footer
2018-07-04 08:58:30,650 - method=GET
2018-07-04 08:58:30,650 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:30,650 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 08:58:30,650 - args:
2018-07-04 08:58:30,650 - =============结束请求时间:2018-07-04 08:58:30,耗时:0s======================
2018-07-04 08:58:30,651 - response=/common/footer
2018-07-04 08:58:30,651 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,703 - ===========进入拦截器==============
2018-07-04 08:58:30,703 - http://localhost:8081/error
2018-07-04 08:58:30,716 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,797 - ===========进入拦截器==============
2018-07-04 08:58:30,797 - http://localhost:8081/error
2018-07-04 08:58:30,804 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:30,827 - ===========进入拦截器==============
2018-07-04 08:58:30,827 - http://localhost:8081/error
2018-07-04 08:58:30,832 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:32,806 - ===========进入拦截器==============
2018-07-04 08:58:32,807 - http://localhost:8081/user.html
2018-07-04 08:58:32,811 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 08:58:32,812 - ===========请求时间:2018-07-04 08:58:32==========================
2018-07-04 08:58:32,812 - url=http://localhost:8081/user.html
2018-07-04 08:58:32,812 - method=GET
2018-07-04 08:58:32,812 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:32,812 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 08:58:32,812 - args:
2018-07-04 08:58:32,812 - =============结束请求时间:2018-07-04 08:58:32,耗时:0s======================
2018-07-04 08:58:32,812 - response=/user
2018-07-04 08:58:32,812 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 08:58:32,936 - ===========进入拦截器==============
2018-07-04 08:58:32,936 - http://localhost:8081/user/findAllUser
2018-07-04 08:58:32,940 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 08:58:32,941 - ===========请求时间:2018-07-04 08:58:32==========================
2018-07-04 08:58:32,941 - url=http://localhost:8081/user/findAllUser
2018-07-04 08:58:32,941 - method=GET
2018-07-04 08:58:32,941 - ip=0:0:0:0:0:0:0:1
2018-07-04 08:58:32,941 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 08:58:32,941 - args:userName=,
2018-07-04 08:58:32,949 - =============结束请求时间:2018-07-04 08:58:32,耗时:0s======================
2018-07-04 08:58:32,949 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 08:58:30.0, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 08:58:32,955 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:00:30,609 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8780 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:00:30,613 - No active profile set, falling back to default profiles: default
2018-07-04 09:00:30,791 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:00:30,864 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@58c74830: startup date [Wed Jul 04 09:00:30 CST 2018]; root of context hierarchy
2018-07-04 09:00:31,557 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:00:32,543 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:00:32,554 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:00:32,563 - Starting service [Tomcat]
2018-07-04 09:00:32,563 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:00:32,659 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:00:32,659 - Root WebApplicationContext: initialization completed in 1796 ms
2018-07-04 09:00:32,858 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:00:32,863 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:00:32,863 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:00:32,864 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:00:32,864 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:00:32,864 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:00:33,586 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@58c74830: startup date [Wed Jul 04 09:00:30 CST 2018]; root of context hierarchy
2018-07-04 09:00:33,648 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:00:33,649 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:00:33,649 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:00:33,649 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:00:33,649 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:00:33,649 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:00:33,650 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:00:33,650 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:00:33,650 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:00:33,650 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:00:33,650 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:00:33,650 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:00:33,650 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:00:33,650 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:00:33,651 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:00:33,651 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:00:33,653 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:00:33,653 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:00:33,656 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:00:33,656 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:00:33,656 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:00:33,657 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:00:33,657 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:00:33,657 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:00:33,657 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:00:33,657 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:00:33,657 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:00:33,658 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:00:33,659 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:00:33,659 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:00:33,659 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:00:33,659 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:00:33,659 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:00:33,660 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:00:33,661 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:00:33,661 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:00:33,661 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:00:33,661 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:00:33,661 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:00:33,661 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:00:33,663 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:00:33,663 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:00:33,710 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:00:33,710 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:00:33,728 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:00:33,753 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:00:34,356 - LiveReload server is running on port 35729
2018-07-04 09:00:34,477 - Registering beans for JMX exposure on startup
2018-07-04 09:00:34,478 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:00:34,482 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:00:34,491 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:00:34,509 - Using a shared selector for servlet write/read
2018-07-04 09:00:34,526 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:00:34,531 - Started FqLtdWasBackstageApplication in 4.591 seconds (JVM running for 5.604)
2018-07-04 09:00:42,210 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:00:42,210 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:00:42,249 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 09:00:42,264 - ===========进入拦截器==============
2018-07-04 09:00:42,285 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:00:42,285 - ===========请求时间:2018-07-04 09:00:42==========================
2018-07-04 09:00:42,285 - url=http://localhost:8081/login
2018-07-04 09:00:42,285 - method=GET
2018-07-04 09:00:42,285 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:42,285 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:00:42,286 - args:
2018-07-04 09:00:42,288 - =============结束请求时间:2018-07-04 09:00:42,耗时:0s======================
2018-07-04 09:00:42,289 - response=/login
2018-07-04 09:00:42,314 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:00:42,349 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:00:42,349 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:00:42,349 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:00:42,349 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:00:42,352 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:00:42,352 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:00:46,828 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:00:46,828 - ===========请求时间:2018-07-04 09:00:46==========================
2018-07-04 09:00:46,828 - url=http://localhost:8081/signIn
2018-07-04 09:00:46,828 - method=POST
2018-07-04 09:00:46,828 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:46,828 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:00:46,829 - args:userName=admin,password=123456,
2018-07-04 09:00:46,884 - {dataSource-1} inited
2018-07-04 09:00:47,280 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,280 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:00:47, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:00:47,346 - ===========进入拦截器==============
2018-07-04 09:00:47,346 - http://localhost:8081/home
2018-07-04 09:00:47,351 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:00:47,351 - ===========请求时间:2018-07-04 09:00:47==========================
2018-07-04 09:00:47,351 - url=http://localhost:8081/home
2018-07-04 09:00:47,351 - method=GET
2018-07-04 09:00:47,351 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:47,351 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:00:47,351 - args:
2018-07-04 09:00:47,351 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,351 - response=/home
2018-07-04 09:00:47,352 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:00:47,463 - ===========进入拦截器==============
2018-07-04 09:00:47,463 - http://localhost:8081/welcome
2018-07-04 09:00:47,470 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:00:47,470 - ===========请求时间:2018-07-04 09:00:47==========================
2018-07-04 09:00:47,470 - url=http://localhost:8081/welcome
2018-07-04 09:00:47,470 - method=GET
2018-07-04 09:00:47,470 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:47,470 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:00:47,471 - args:
2018-07-04 09:00:47,471 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,471 - response=/welcome
2018-07-04 09:00:47,471 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:00:47,506 - ===========进入拦截器==============
2018-07-04 09:00:47,507 - http://localhost:8081/common/top
2018-07-04 09:00:47,509 - ===========进入拦截器==============
2018-07-04 09:00:47,509 - http://localhost:8081/common/left
2018-07-04 09:00:47,510 - ===========进入拦截器==============
2018-07-04 09:00:47,510 - http://localhost:8081/common/footer
2018-07-04 09:00:47,515 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:00:47,515 - ===========请求时间:2018-07-04 09:00:47==========================
2018-07-04 09:00:47,515 - url=http://localhost:8081/common/top
2018-07-04 09:00:47,515 - method=GET
2018-07-04 09:00:47,515 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:47,515 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:00:47,515 - args:
2018-07-04 09:00:47,516 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,516 - response=/common/top
2018-07-04 09:00:47,516 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:00:47,519 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:00:47,519 - ===========请求时间:2018-07-04 09:00:47==========================
2018-07-04 09:00:47,519 - url=http://localhost:8081/common/left
2018-07-04 09:00:47,519 - method=GET
2018-07-04 09:00:47,519 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:47,519 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:00:47,519 - args:
2018-07-04 09:00:47,520 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,520 - response=/common/left
2018-07-04 09:00:47,520 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:00:47,524 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:00:47,524 - ===========请求时间:2018-07-04 09:00:47==========================
2018-07-04 09:00:47,524 - url=http://localhost:8081/common/footer
2018-07-04 09:00:47,525 - method=GET
2018-07-04 09:00:47,525 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:00:47,525 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:00:47,525 - args:
2018-07-04 09:00:47,525 - =============结束请求时间:2018-07-04 09:00:47,耗时:0s======================
2018-07-04 09:00:47,525 - response=/common/footer
2018-07-04 09:00:47,525 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:01:42,607 - ===========进入拦截器==============
2018-07-04 09:01:42,607 - http://localhost:8081/user.html
2018-07-04 09:01:42,614 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 09:01:42,614 - ===========请求时间:2018-07-04 09:01:42==========================
2018-07-04 09:01:42,614 - url=http://localhost:8081/user.html
2018-07-04 09:01:42,614 - method=GET
2018-07-04 09:01:42,614 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:01:42,614 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 09:01:42,614 - args:
2018-07-04 09:01:42,614 - =============结束请求时间:2018-07-04 09:01:42,耗时:0s======================
2018-07-04 09:01:42,614 - response=/user
2018-07-04 09:01:42,615 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:01:42,738 - ===========进入拦截器==============
2018-07-04 09:01:42,738 - http://localhost:8081/user/findAllUser
2018-07-04 09:01:42,746 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 09:01:42,746 - ===========请求时间:2018-07-04 09:01:42==========================
2018-07-04 09:01:42,746 - url=http://localhost:8081/user/findAllUser
2018-07-04 09:01:42,746 - method=GET
2018-07-04 09:01:42,746 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:01:42,747 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 09:01:42,747 - args:userName=,
2018-07-04 09:01:42,758 - =============结束请求时间:2018-07-04 09:01:42,耗时:0s======================
2018-07-04 09:01:42,758 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:00:47.0, version=1, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-03 19:02:33.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 09:01:42,764 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:41,443 - ===========进入拦截器==============
2018-07-04 09:03:41,444 - http://localhost:8081/user/updateUser
2018-07-04 09:03:41,476 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.updateUser============
2018-07-04 09:03:41,476 - ===========请求时间:2018-07-04 09:03:41==========================
2018-07-04 09:03:41,476 - url=http://localhost:8081/user/updateUser
2018-07-04 09:03:41,476 - method=GET
2018-07-04 09:03:41,476 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:41,476 - class_method=com.fq.fqltdwasbackstage.controller.UserController.updateUser
2018-07-04 09:03:41,476 - args:userName=admin,status=1,
2018-07-04 09:03:41,492 - =============结束请求时间:2018-07-04 09:03:41,耗时:0s======================
2018-07-04 09:03:41,492 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 09:03:41,494 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:41,506 - ===========进入拦截器==============
2018-07-04 09:03:41,506 - http://localhost:8081/user.html
2018-07-04 09:03:41,512 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 09:03:41,512 - ===========请求时间:2018-07-04 09:03:41==========================
2018-07-04 09:03:41,513 - url=http://localhost:8081/user.html
2018-07-04 09:03:41,513 - method=GET
2018-07-04 09:03:41,513 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:41,513 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 09:03:41,513 - args:
2018-07-04 09:03:41,513 - =============结束请求时间:2018-07-04 09:03:41,耗时:0s======================
2018-07-04 09:03:41,513 - response=/user
2018-07-04 09:03:41,513 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:41,630 - ===========进入拦截器==============
2018-07-04 09:03:41,630 - http://localhost:8081/user/findAllUser
2018-07-04 09:03:41,635 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 09:03:41,636 - ===========请求时间:2018-07-04 09:03:41==========================
2018-07-04 09:03:41,636 - url=http://localhost:8081/user/findAllUser
2018-07-04 09:03:41,636 - method=GET
2018-07-04 09:03:41,636 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:41,636 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 09:03:41,636 - args:userName=,
2018-07-04 09:03:41,646 - =============结束请求时间:2018-07-04 09:03:41,耗时:0s======================
2018-07-04 09:03:41,646 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:00:47.0, version=2, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:41.0, status=1)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 09:03:41,647 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:44,442 - ===========进入拦截器==============
2018-07-04 09:03:44,442 - http://localhost:8081/user/updateUser
2018-07-04 09:03:44,447 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.updateUser============
2018-07-04 09:03:44,448 - ===========请求时间:2018-07-04 09:03:44==========================
2018-07-04 09:03:44,448 - url=http://localhost:8081/user/updateUser
2018-07-04 09:03:44,448 - method=GET
2018-07-04 09:03:44,448 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:44,448 - class_method=com.fq.fqltdwasbackstage.controller.UserController.updateUser
2018-07-04 09:03:44,448 - args:userName=admin,status=0,
2018-07-04 09:03:44,465 - =============结束请求时间:2018-07-04 09:03:44,耗时:0s======================
2018-07-04 09:03:44,465 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 09:03:44,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:44,474 - ===========进入拦截器==============
2018-07-04 09:03:44,474 - http://localhost:8081/user.html
2018-07-04 09:03:44,478 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 09:03:44,478 - ===========请求时间:2018-07-04 09:03:44==========================
2018-07-04 09:03:44,479 - url=http://localhost:8081/user.html
2018-07-04 09:03:44,479 - method=GET
2018-07-04 09:03:44,479 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:44,479 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 09:03:44,479 - args:
2018-07-04 09:03:44,479 - =============结束请求时间:2018-07-04 09:03:44,耗时:0s======================
2018-07-04 09:03:44,479 - response=/user
2018-07-04 09:03:44,479 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:44,601 - ===========进入拦截器==============
2018-07-04 09:03:44,601 - http://localhost:8081/user/findAllUser
2018-07-04 09:03:44,687 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 09:03:44,687 - ===========请求时间:2018-07-04 09:03:44==========================
2018-07-04 09:03:44,687 - url=http://localhost:8081/user/findAllUser
2018-07-04 09:03:44,687 - method=GET
2018-07-04 09:03:44,687 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:03:44,687 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 09:03:44,688 - args:userName=,
2018-07-04 09:03:44,753 - =============结束请求时间:2018-07-04 09:03:44,耗时:0s======================
2018-07-04 09:03:44,754 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:00:47.0, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 09:03:44,755 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:47,077 - ===========进入拦截器==============
2018-07-04 09:03:47,077 - http://localhost:8081/error
2018-07-04 09:03:47,091 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:47,096 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:03:51,103 - ===========进入拦截器==============
2018-07-04 09:03:51,103 - http://localhost:8081/error
2018-07-04 09:03:51,111 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:03:51,111 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:04:24,665 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2092 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:04:24,669 - No active profile set, falling back to default profiles: default
2018-07-04 09:04:24,884 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:04:25,008 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:04:25 CST 2018]; root of context hierarchy
2018-07-04 09:04:26,140 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:04:27,424 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:04:27,435 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:04:27,443 - Starting service [Tomcat]
2018-07-04 09:04:27,444 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:04:27,576 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:04:27,576 - Root WebApplicationContext: initialization completed in 2568 ms
2018-07-04 09:04:27,808 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:04:27,811 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:04:27,812 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:04:27,812 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:04:27,812 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:04:27,812 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:04:28,554 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:04:25 CST 2018]; root of context hierarchy
2018-07-04 09:04:28,618 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:04:28,619 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:04:28,620 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:04:28,620 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:04:28,620 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:04:28,620 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:04:28,620 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:04:28,620 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:04:28,620 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:04:28,620 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:04:28,621 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:04:28,621 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:04:28,621 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:04:28,621 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:04:28,621 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:04:28,621 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:04:28,624 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:04:28,624 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:04:28,626 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:04:28,626 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:04:28,627 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:04:28,627 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:04:28,627 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:04:28,627 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:04:28,627 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:04:28,627 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:04:28,627 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:04:28,629 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:04:28,629 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:04:28,629 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:04:28,629 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:04:28,629 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:04:28,629 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:04:28,631 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:04:28,631 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:04:28,631 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:04:28,632 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:04:28,632 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:04:28,632 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:04:28,632 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:04:28,634 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:04:28,634 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:04:28,679 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:04:28,679 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:04:28,705 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:04:28,732 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:04:29,423 - LiveReload server is running on port 35729
2018-07-04 09:04:29,554 - Registering beans for JMX exposure on startup
2018-07-04 09:04:29,555 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:04:29,559 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:04:29,568 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:04:29,579 - Using a shared selector for servlet write/read
2018-07-04 09:04:29,593 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:04:29,597 - Started FqLtdWasBackstageApplication in 5.652 seconds (JVM running for 6.782)
2018-07-04 09:04:35,358 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:04:35,358 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:04:35,396 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 09:04:35,410 - ===========进入拦截器==============
2018-07-04 09:04:35,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:04:35,429 - ===========请求时间:2018-07-04 09:04:35==========================
2018-07-04 09:04:35,430 - url=http://localhost:8081/login
2018-07-04 09:04:35,430 - method=GET
2018-07-04 09:04:35,430 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:35,430 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:04:35,430 - args:
2018-07-04 09:04:35,432 - =============结束请求时间:2018-07-04 09:04:35,耗时:0s======================
2018-07-04 09:04:35,432 - response=/login
2018-07-04 09:04:35,461 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:04:35,494 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:04:35,494 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:04:35,494 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:04:35,494 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:04:35,497 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:04:35,497 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:04:39,795 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:04:39,796 - ===========请求时间:2018-07-04 09:04:39==========================
2018-07-04 09:04:39,796 - url=http://localhost:8081/signIn
2018-07-04 09:04:39,796 - method=POST
2018-07-04 09:04:39,796 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:39,796 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:04:39,796 - args:userName=admin,password=123456,
2018-07-04 09:04:39,850 - {dataSource-1} inited
2018-07-04 09:04:40,184 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,184 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:04:40, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:04:40,246 - ===========进入拦截器==============
2018-07-04 09:04:40,247 - http://localhost:8081/home
2018-07-04 09:04:40,252 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:04:40,252 - ===========请求时间:2018-07-04 09:04:40==========================
2018-07-04 09:04:40,252 - url=http://localhost:8081/home
2018-07-04 09:04:40,252 - method=GET
2018-07-04 09:04:40,252 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:40,252 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:04:40,252 - args:
2018-07-04 09:04:40,253 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,253 - response=/home
2018-07-04 09:04:40,253 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:40,351 - ===========进入拦截器==============
2018-07-04 09:04:40,351 - http://localhost:8081/welcome
2018-07-04 09:04:40,355 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:04:40,355 - ===========请求时间:2018-07-04 09:04:40==========================
2018-07-04 09:04:40,355 - url=http://localhost:8081/welcome
2018-07-04 09:04:40,355 - method=GET
2018-07-04 09:04:40,355 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:40,356 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:04:40,356 - args:
2018-07-04 09:04:40,356 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,356 - response=/welcome
2018-07-04 09:04:40,356 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:40,394 - ===========进入拦截器==============
2018-07-04 09:04:40,394 - http://localhost:8081/common/top
2018-07-04 09:04:40,395 - ===========进入拦截器==============
2018-07-04 09:04:40,395 - ===========进入拦截器==============
2018-07-04 09:04:40,395 - http://localhost:8081/common/left
2018-07-04 09:04:40,395 - http://localhost:8081/common/footer
2018-07-04 09:04:40,406 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:04:40,406 - ===========请求时间:2018-07-04 09:04:40==========================
2018-07-04 09:04:40,406 - url=http://localhost:8081/common/top
2018-07-04 09:04:40,406 - method=GET
2018-07-04 09:04:40,406 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:40,406 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:04:40,406 - args:
2018-07-04 09:04:40,406 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,406 - response=/common/top
2018-07-04 09:04:40,406 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:40,427 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:04:40,427 - ===========请求时间:2018-07-04 09:04:40==========================
2018-07-04 09:04:40,427 - url=http://localhost:8081/common/footer
2018-07-04 09:04:40,427 - method=GET
2018-07-04 09:04:40,427 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:40,427 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:04:40,428 - args:
2018-07-04 09:04:40,428 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,428 - response=/common/footer
2018-07-04 09:04:40,428 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:40,431 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:04:40,431 - ===========请求时间:2018-07-04 09:04:40==========================
2018-07-04 09:04:40,431 - url=http://localhost:8081/common/left
2018-07-04 09:04:40,431 - method=GET
2018-07-04 09:04:40,431 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:40,431 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:04:40,431 - args:
2018-07-04 09:04:40,432 - =============结束请求时间:2018-07-04 09:04:40,耗时:0s======================
2018-07-04 09:04:40,432 - response=/common/left
2018-07-04 09:04:40,432 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:41,881 - ===========进入拦截器==============
2018-07-04 09:04:41,881 - http://localhost:8081/user.html
2018-07-04 09:04:41,887 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 09:04:41,887 - ===========请求时间:2018-07-04 09:04:41==========================
2018-07-04 09:04:41,887 - url=http://localhost:8081/user.html
2018-07-04 09:04:41,887 - method=GET
2018-07-04 09:04:41,887 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:41,887 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 09:04:41,887 - args:
2018-07-04 09:04:41,887 - =============结束请求时间:2018-07-04 09:04:41,耗时:0s======================
2018-07-04 09:04:41,887 - response=/user
2018-07-04 09:04:41,887 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:42,003 - ===========进入拦截器==============
2018-07-04 09:04:42,004 - http://localhost:8081/user/findAllUser
2018-07-04 09:04:42,008 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 09:04:42,008 - ===========请求时间:2018-07-04 09:04:42==========================
2018-07-04 09:04:42,008 - url=http://localhost:8081/user/findAllUser
2018-07-04 09:04:42,008 - method=GET
2018-07-04 09:04:42,008 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:04:42,008 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 09:04:42,008 - args:userName=,
2018-07-04 09:04:42,017 - =============结束请求时间:2018-07-04 09:04:42,耗时:0s======================
2018-07-04 09:04:42,017 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:04:40.0, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 09:04:42,025 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:44,474 - ===========进入拦截器==============
2018-07-04 09:04:44,474 - http://localhost:8081/error
2018-07-04 09:04:44,488 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:04:44,493 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:15:29,269 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15040 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:15:29,271 - No active profile set, falling back to default profiles: default
2018-07-04 09:15:29,498 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:15:29,556 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1602c0dd: startup date [Wed Jul 04 09:15:29 CST 2018]; root of context hierarchy
2018-07-04 09:15:30,521 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:15:31,856 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:15:31,867 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:15:31,876 - Starting service [Tomcat]
2018-07-04 09:15:31,876 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:15:31,973 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:15:31,973 - Root WebApplicationContext: initialization completed in 2417 ms
2018-07-04 09:15:32,175 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:15:32,179 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:15:32,179 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:15:32,179 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:15:32,179 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:15:32,179 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:15:32,959 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1602c0dd: startup date [Wed Jul 04 09:15:29 CST 2018]; root of context hierarchy
2018-07-04 09:15:33,025 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:15:33,026 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:15:33,026 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:15:33,026 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:15:33,026 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:15:33,026 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:15:33,026 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:15:33,026 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:15:33,027 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:15:33,027 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:15:33,027 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:15:33,027 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:15:33,027 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:15:33,027 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:15:33,027 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:15:33,028 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:15:33,031 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:15:33,032 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:15:33,035 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:15:33,036 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:15:33,036 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:15:33,036 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:15:33,036 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:15:33,037 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:15:33,037 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:15:33,037 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:15:33,037 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:15:33,039 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:15:33,039 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:15:33,039 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:15:33,040 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:15:33,040 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:15:33,040 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:15:33,041 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:15:33,041 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:15:33,042 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:15:33,042 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:15:33,042 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:15:33,042 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:15:33,042 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:15:33,043 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:15:33,045 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:15:33,088 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:15:33,088 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:15:33,106 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:15:33,134 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:15:33,777 - LiveReload server is running on port 35729
2018-07-04 09:15:33,899 - Registering beans for JMX exposure on startup
2018-07-04 09:15:33,899 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:15:33,904 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:15:33,912 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:15:33,923 - Using a shared selector for servlet write/read
2018-07-04 09:15:33,937 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:15:33,942 - Started FqLtdWasBackstageApplication in 5.311 seconds (JVM running for 6.408)
2018-07-04 09:15:37,677 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:15:37,677 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:15:37,714 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 09:15:37,729 - ===========进入拦截器==============
2018-07-04 09:15:37,748 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:15:37,748 - ===========请求时间:2018-07-04 09:15:37==========================
2018-07-04 09:15:37,748 - url=http://localhost:8081/login
2018-07-04 09:15:37,748 - method=GET
2018-07-04 09:15:37,748 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:37,748 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:15:37,748 - args:
2018-07-04 09:15:37,752 - =============结束请求时间:2018-07-04 09:15:37,耗时:0s======================
2018-07-04 09:15:37,752 - response=/login
2018-07-04 09:15:37,780 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:15:37,816 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:15:37,816 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:15:37,816 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:15:37,816 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:15:37,819 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:15:37,819 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:15:42,476 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:15:42,476 - ===========请求时间:2018-07-04 09:15:42==========================
2018-07-04 09:15:42,476 - url=http://localhost:8081/signIn
2018-07-04 09:15:42,476 - method=POST
2018-07-04 09:15:42,476 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:42,476 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:15:42,476 - args:userName=admin,password=123456,
2018-07-04 09:15:42,531 - {dataSource-1} inited
2018-07-04 09:15:42,881 - =============结束请求时间:2018-07-04 09:15:42,耗时:0s======================
2018-07-04 09:15:42,881 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:15:42, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:15:42,952 - ===========进入拦截器==============
2018-07-04 09:15:42,952 - http://localhost:8081/home
2018-07-04 09:15:42,958 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:15:42,959 - ===========请求时间:2018-07-04 09:15:42==========================
2018-07-04 09:15:42,959 - url=http://localhost:8081/home
2018-07-04 09:15:42,959 - method=GET
2018-07-04 09:15:42,959 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:42,959 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:15:42,959 - args:
2018-07-04 09:15:42,959 - =============结束请求时间:2018-07-04 09:15:42,耗时:0s======================
2018-07-04 09:15:42,959 - response=/home
2018-07-04 09:15:42,959 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:43,061 - ===========进入拦截器==============
2018-07-04 09:15:43,061 - http://localhost:8081/welcome
2018-07-04 09:15:43,066 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:15:43,066 - ===========请求时间:2018-07-04 09:15:43==========================
2018-07-04 09:15:43,066 - url=http://localhost:8081/welcome
2018-07-04 09:15:43,066 - method=GET
2018-07-04 09:15:43,066 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:43,066 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:15:43,066 - args:
2018-07-04 09:15:43,066 - =============结束请求时间:2018-07-04 09:15:43,耗时:0s======================
2018-07-04 09:15:43,067 - response=/welcome
2018-07-04 09:15:43,067 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:43,103 - ===========进入拦截器==============
2018-07-04 09:15:43,103 - http://localhost:8081/common/top
2018-07-04 09:15:43,104 - ===========进入拦截器==============
2018-07-04 09:15:43,104 - http://localhost:8081/common/left
2018-07-04 09:15:43,108 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:15:43,108 - ===========请求时间:2018-07-04 09:15:43==========================
2018-07-04 09:15:43,108 - url=http://localhost:8081/common/top
2018-07-04 09:15:43,108 - method=GET
2018-07-04 09:15:43,108 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:43,108 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:15:43,108 - args:
2018-07-04 09:15:43,108 - =============结束请求时间:2018-07-04 09:15:43,耗时:0s======================
2018-07-04 09:15:43,108 - response=/common/top
2018-07-04 09:15:43,109 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:43,109 - ===========进入拦截器==============
2018-07-04 09:15:43,109 - http://localhost:8081/common/footer
2018-07-04 09:15:43,116 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:15:43,116 - ===========请求时间:2018-07-04 09:15:43==========================
2018-07-04 09:15:43,116 - url=http://localhost:8081/common/footer
2018-07-04 09:15:43,116 - method=GET
2018-07-04 09:15:43,116 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:43,117 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:15:43,117 - args:
2018-07-04 09:15:43,117 - =============结束请求时间:2018-07-04 09:15:43,耗时:0s======================
2018-07-04 09:15:43,117 - response=/common/footer
2018-07-04 09:15:43,117 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:43,125 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:15:43,125 - ===========请求时间:2018-07-04 09:15:43==========================
2018-07-04 09:15:43,125 - url=http://localhost:8081/common/left
2018-07-04 09:15:43,125 - method=GET
2018-07-04 09:15:43,125 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:15:43,125 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:15:43,125 - args:
2018-07-04 09:15:43,125 - =============结束请求时间:2018-07-04 09:15:43,耗时:0s======================
2018-07-04 09:15:43,125 - response=/common/left
2018-07-04 09:15:43,126 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:44,623 - ===========进入拦截器==============
2018-07-04 09:15:44,623 - http://localhost:8081/error
2018-07-04 09:15:44,635 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:15:44,641 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:17:41,137 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10096 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:17:41,141 - No active profile set, falling back to default profiles: default
2018-07-04 09:17:41,362 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:17:41,423 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50570670: startup date [Wed Jul 04 09:17:41 CST 2018]; root of context hierarchy
2018-07-04 09:17:42,391 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:17:43,759 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:17:43,770 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:17:43,779 - Starting service [Tomcat]
2018-07-04 09:17:43,779 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:17:43,896 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:17:43,896 - Root WebApplicationContext: initialization completed in 2473 ms
2018-07-04 09:17:44,117 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:17:44,123 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:17:44,124 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:17:44,124 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:17:44,124 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:17:44,124 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:17:44,922 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@50570670: startup date [Wed Jul 04 09:17:41 CST 2018]; root of context hierarchy
2018-07-04 09:17:44,987 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:17:44,988 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:17:44,988 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:17:44,988 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:17:44,988 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:17:44,988 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:17:44,988 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:17:44,989 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:17:44,989 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:17:44,989 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:17:44,989 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:17:44,989 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:17:44,989 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:17:44,990 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:17:44,990 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:17:44,990 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:17:44,990 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:17:44,992 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:17:44,993 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:17:44,995 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:17:44,995 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:17:44,995 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:17:44,995 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:17:44,995 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:17:44,995 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:17:44,995 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:17:44,996 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:17:44,996 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:17:44,997 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:17:44,997 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:17:44,997 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:17:44,997 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:17:44,998 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:17:44,998 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:17:44,999 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:17:44,999 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:17:44,999 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:17:44,999 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:17:45,000 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:17:45,000 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:17:45,000 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:17:45,002 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:17:45,002 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:17:45,049 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:17:45,049 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:17:45,068 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:17:45,095 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:17:45,702 - LiveReload server is running on port 35729
2018-07-04 09:17:45,826 - Registering beans for JMX exposure on startup
2018-07-04 09:17:45,828 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:17:45,832 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:17:45,841 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:17:45,853 - Using a shared selector for servlet write/read
2018-07-04 09:17:45,866 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:17:45,871 - Started FqLtdWasBackstageApplication in 5.419 seconds (JVM running for 6.558)
2018-07-04 09:17:48,969 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:17:48,970 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:17:49,006 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 09:17:49,021 - ===========进入拦截器==============
2018-07-04 09:17:49,041 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:17:49,042 - ===========请求时间:2018-07-04 09:17:49==========================
2018-07-04 09:17:49,042 - url=http://localhost:8081/login
2018-07-04 09:17:49,042 - method=GET
2018-07-04 09:17:49,042 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:49,042 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:17:49,042 - args:
2018-07-04 09:17:49,045 - =============结束请求时间:2018-07-04 09:17:49,耗时:0s======================
2018-07-04 09:17:49,045 - response=/login
2018-07-04 09:17:49,075 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:17:49,112 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:17:49,112 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:17:49,112 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:17:49,112 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:17:49,115 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:17:49,115 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:17:53,312 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:17:53,312 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,312 - url=http://localhost:8081/signIn
2018-07-04 09:17:53,312 - method=POST
2018-07-04 09:17:53,312 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,312 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:17:53,312 - args:userName=admin,password=123456,
2018-07-04 09:17:53,367 - {dataSource-1} inited
2018-07-04 09:17:53,724 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,724 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:17:53, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:17:53,791 - ===========进入拦截器==============
2018-07-04 09:17:53,792 - http://localhost:8081/home
2018-07-04 09:17:53,796 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:17:53,797 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,797 - url=http://localhost:8081/home
2018-07-04 09:17:53,797 - method=GET
2018-07-04 09:17:53,797 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,797 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:17:53,797 - args:
2018-07-04 09:17:53,797 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,797 - response=/home
2018-07-04 09:17:53,798 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:53,901 - ===========进入拦截器==============
2018-07-04 09:17:53,901 - http://localhost:8081/welcome
2018-07-04 09:17:53,919 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:17:53,919 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,919 - url=http://localhost:8081/welcome
2018-07-04 09:17:53,919 - method=GET
2018-07-04 09:17:53,919 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,919 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:17:53,919 - args:
2018-07-04 09:17:53,919 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,919 - response=/welcome
2018-07-04 09:17:53,919 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:53,930 - ===========进入拦截器==============
2018-07-04 09:17:53,931 - http://localhost:8081/common/top
2018-07-04 09:17:53,934 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:17:53,935 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,935 - url=http://localhost:8081/common/top
2018-07-04 09:17:53,935 - method=GET
2018-07-04 09:17:53,935 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,935 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:17:53,935 - args:
2018-07-04 09:17:53,935 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,935 - response=/common/top
2018-07-04 09:17:53,936 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:53,938 - ===========进入拦截器==============
2018-07-04 09:17:53,938 - http://localhost:8081/common/footer
2018-07-04 09:17:53,943 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:17:53,943 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,943 - url=http://localhost:8081/common/footer
2018-07-04 09:17:53,943 - method=GET
2018-07-04 09:17:53,943 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,943 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:17:53,943 - args:
2018-07-04 09:17:53,943 - ===========进入拦截器==============
2018-07-04 09:17:53,943 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,944 - http://localhost:8081/common/left
2018-07-04 09:17:53,944 - response=/common/footer
2018-07-04 09:17:53,944 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:53,951 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:17:53,951 - ===========请求时间:2018-07-04 09:17:53==========================
2018-07-04 09:17:53,951 - url=http://localhost:8081/common/left
2018-07-04 09:17:53,951 - method=GET
2018-07-04 09:17:53,951 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:53,951 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:17:53,951 - args:
2018-07-04 09:17:53,951 - =============结束请求时间:2018-07-04 09:17:53,耗时:0s======================
2018-07-04 09:17:53,951 - response=/common/left
2018-07-04 09:17:53,952 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:55,445 - ===========进入拦截器==============
2018-07-04 09:17:55,445 - http://localhost:8081/role.html
2018-07-04 09:17:55,451 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 09:17:55,451 - ===========请求时间:2018-07-04 09:17:55==========================
2018-07-04 09:17:55,451 - url=http://localhost:8081/role.html
2018-07-04 09:17:55,451 - method=GET
2018-07-04 09:17:55,451 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:55,451 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 09:17:55,451 - args:
2018-07-04 09:17:55,452 - =============结束请求时间:2018-07-04 09:17:55,耗时:0s======================
2018-07-04 09:17:55,452 - response=/role
2018-07-04 09:17:55,452 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:17:55,565 - ===========进入拦截器==============
2018-07-04 09:17:55,565 - http://localhost:8081/role/findAllRole
2018-07-04 09:17:55,572 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 09:17:55,572 - ===========请求时间:2018-07-04 09:17:55==========================
2018-07-04 09:17:55,572 - url=http://localhost:8081/role/findAllRole
2018-07-04 09:17:55,572 - method=GET
2018-07-04 09:17:55,572 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:17:55,572 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 09:17:55,572 - args:roleName=,
2018-07-04 09:17:55,582 - =============结束请求时间:2018-07-04 09:17:55,耗时:0s======================
2018-07-04 09:17:55,582 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=1, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-03 19:04:24.0, status=0)], page=null, totalCount=null)
2018-07-04 09:17:55,586 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:06,866 - ===========进入拦截器==============
2018-07-04 09:18:06,867 - http://localhost:8081/role/updateRole
2018-07-04 09:18:06,878 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.updateRole============
2018-07-04 09:18:06,878 - ===========请求时间:2018-07-04 09:18:06==========================
2018-07-04 09:18:06,878 - url=http://localhost:8081/role/updateRole
2018-07-04 09:18:06,878 - method=GET
2018-07-04 09:18:06,878 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:06,878 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.updateRole
2018-07-04 09:18:06,878 - args:gid=1,status=1,
2018-07-04 09:18:06,920 - =============结束请求时间:2018-07-04 09:18:06,耗时:0s======================
2018-07-04 09:18:06,921 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 09:18:06,923 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:06,933 - ===========进入拦截器==============
2018-07-04 09:18:06,934 - http://localhost:8081/role.html
2018-07-04 09:18:06,939 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 09:18:06,939 - ===========请求时间:2018-07-04 09:18:06==========================
2018-07-04 09:18:06,939 - url=http://localhost:8081/role.html
2018-07-04 09:18:06,939 - method=GET
2018-07-04 09:18:06,939 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:06,939 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 09:18:06,939 - args:
2018-07-04 09:18:06,940 - =============结束请求时间:2018-07-04 09:18:06,耗时:0s======================
2018-07-04 09:18:06,940 - response=/role
2018-07-04 09:18:06,940 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:07,091 - ===========进入拦截器==============
2018-07-04 09:18:07,091 - http://localhost:8081/role/findAllRole
2018-07-04 09:18:07,099 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 09:18:07,099 - ===========请求时间:2018-07-04 09:18:07==========================
2018-07-04 09:18:07,099 - url=http://localhost:8081/role/findAllRole
2018-07-04 09:18:07,099 - method=GET
2018-07-04 09:18:07,099 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:07,099 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 09:18:07,099 - args:roleName=,
2018-07-04 09:18:07,103 - =============结束请求时间:2018-07-04 09:18:07,耗时:0s======================
2018-07-04 09:18:07,103 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=2, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:06.0, status=1)], page=null, totalCount=null)
2018-07-04 09:18:07,104 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:09,410 - ===========进入拦截器==============
2018-07-04 09:18:09,410 - http://localhost:8081/role/updateRole
2018-07-04 09:18:09,414 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.updateRole============
2018-07-04 09:18:09,414 - ===========请求时间:2018-07-04 09:18:09==========================
2018-07-04 09:18:09,415 - url=http://localhost:8081/role/updateRole
2018-07-04 09:18:09,415 - method=GET
2018-07-04 09:18:09,415 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:09,415 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.updateRole
2018-07-04 09:18:09,415 - args:gid=1,status=0,
2018-07-04 09:18:09,441 - =============结束请求时间:2018-07-04 09:18:09,耗时:0s======================
2018-07-04 09:18:09,441 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 09:18:09,441 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:09,451 - ===========进入拦截器==============
2018-07-04 09:18:09,451 - http://localhost:8081/role.html
2018-07-04 09:18:09,456 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 09:18:09,456 - ===========请求时间:2018-07-04 09:18:09==========================
2018-07-04 09:18:09,456 - url=http://localhost:8081/role.html
2018-07-04 09:18:09,456 - method=GET
2018-07-04 09:18:09,456 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:09,456 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 09:18:09,456 - args:
2018-07-04 09:18:09,456 - =============结束请求时间:2018-07-04 09:18:09,耗时:0s======================
2018-07-04 09:18:09,456 - response=/role
2018-07-04 09:18:09,457 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:09,569 - ===========进入拦截器==============
2018-07-04 09:18:09,569 - http://localhost:8081/role/findAllRole
2018-07-04 09:18:09,574 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 09:18:09,574 - ===========请求时间:2018-07-04 09:18:09==========================
2018-07-04 09:18:09,574 - url=http://localhost:8081/role/findAllRole
2018-07-04 09:18:09,574 - method=GET
2018-07-04 09:18:09,574 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:18:09,574 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 09:18:09,574 - args:roleName=,
2018-07-04 09:18:09,583 - =============结束请求时间:2018-07-04 09:18:09,耗时:0s======================
2018-07-04 09:18:09,584 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 09:18:09,584 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:15,268 - ===========进入拦截器==============
2018-07-04 09:18:15,269 - http://localhost:8081/error
2018-07-04 09:18:15,293 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:15,299 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:18:18,214 - ===========进入拦截器==============
2018-07-04 09:18:18,214 - http://localhost:8081/error
2018-07-04 09:18:18,221 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:18:18,221 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-04 09:27:11,808 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2348 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:27:11,811 - No active profile set, falling back to default profiles: default
2018-07-04 09:27:12,014 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:27:12,058 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5c3491: startup date [Wed Jul 04 09:27:12 CST 2018]; root of context hierarchy
2018-07-04 09:27:12,760 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:27:13,697 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:27:13,708 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:27:13,717 - Starting service [Tomcat]
2018-07-04 09:27:13,717 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:27:13,810 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:27:13,811 - Root WebApplicationContext: initialization completed in 1753 ms
2018-07-04 09:27:14,012 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:27:14,016 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:27:14,016 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:27:14,016 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:27:14,016 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:27:14,016 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:27:14,748 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5c3491: startup date [Wed Jul 04 09:27:12 CST 2018]; root of context hierarchy
2018-07-04 09:27:14,808 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:27:14,808 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:27:14,809 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:27:14,809 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:27:14,809 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:27:14,809 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:27:14,809 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:27:14,809 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:27:14,809 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:27:14,809 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:27:14,810 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:27:14,810 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:27:14,810 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:27:14,811 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:27:14,811 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:27:14,811 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:27:14,811 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:27:14,813 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:27:14,814 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:27:14,816 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:27:14,816 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:27:14,816 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:27:14,816 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:27:14,817 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:27:14,817 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:27:14,817 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:27:14,817 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:27:14,817 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:27:14,818 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:27:14,818 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:27:14,819 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:27:14,819 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:27:14,819 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:27:14,819 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:27:14,821 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:27:14,822 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:27:14,822 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:27:14,822 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:27:14,822 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:27:14,822 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:27:14,822 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:27:14,824 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:27:14,824 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:27:14,876 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:27:14,876 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:27:14,894 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:27:14,920 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:27:15,530 - LiveReload server is running on port 35729
2018-07-04 09:27:15,665 - Registering beans for JMX exposure on startup
2018-07-04 09:27:15,666 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:27:15,670 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:27:15,684 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:27:15,697 - Using a shared selector for servlet write/read
2018-07-04 09:27:15,713 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:27:15,719 - Started FqLtdWasBackstageApplication in 4.591 seconds (JVM running for 5.651)
2018-07-04 09:27:26,692 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:27:26,692 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:27:26,731 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 09:27:26,746 - ===========进入拦截器==============
2018-07-04 09:27:26,766 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:27:26,766 - ===========请求时间:2018-07-04 09:27:26==========================
2018-07-04 09:27:26,766 - url=http://localhost:8081/login
2018-07-04 09:27:26,766 - method=GET
2018-07-04 09:27:26,766 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:26,766 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:27:26,766 - args:
2018-07-04 09:27:26,770 - =============结束请求时间:2018-07-04 09:27:26,耗时:0s======================
2018-07-04 09:27:26,770 - response=/login
2018-07-04 09:27:26,795 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:27:26,830 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:27:26,830 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:27:26,830 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:27:26,830 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:27:26,833 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:27:26,834 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:27:31,235 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:27:31,235 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,235 - url=http://localhost:8081/signIn
2018-07-04 09:27:31,235 - method=POST
2018-07-04 09:27:31,235 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,235 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:27:31,235 - args:userName=admin,password=123456,
2018-07-04 09:27:31,292 - {dataSource-1} inited
2018-07-04 09:27:31,761 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,761 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:27:31, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:27:31,828 - ===========进入拦截器==============
2018-07-04 09:27:31,828 - http://localhost:8081/home
2018-07-04 09:27:31,833 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:27:31,833 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,833 - url=http://localhost:8081/home
2018-07-04 09:27:31,833 - method=GET
2018-07-04 09:27:31,833 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,833 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:27:31,833 - args:
2018-07-04 09:27:31,833 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,833 - response=/home
2018-07-04 09:27:31,833 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:31,925 - ===========进入拦截器==============
2018-07-04 09:27:31,925 - http://localhost:8081/welcome
2018-07-04 09:27:31,933 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:27:31,933 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,933 - url=http://localhost:8081/welcome
2018-07-04 09:27:31,933 - method=GET
2018-07-04 09:27:31,933 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,933 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:27:31,933 - args:
2018-07-04 09:27:31,933 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,933 - response=/welcome
2018-07-04 09:27:31,933 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:31,959 - ===========进入拦截器==============
2018-07-04 09:27:31,959 - http://localhost:8081/common/top
2018-07-04 09:27:31,960 - ===========进入拦截器==============
2018-07-04 09:27:31,960 - http://localhost:8081/common/left
2018-07-04 09:27:31,961 - ===========进入拦截器==============
2018-07-04 09:27:31,961 - http://localhost:8081/common/footer
2018-07-04 09:27:31,965 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:27:31,965 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,965 - url=http://localhost:8081/common/top
2018-07-04 09:27:31,965 - method=GET
2018-07-04 09:27:31,965 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,965 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:27:31,965 - args:
2018-07-04 09:27:31,965 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,965 - response=/common/top
2018-07-04 09:27:31,965 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:31,976 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:27:31,976 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,976 - url=http://localhost:8081/common/left
2018-07-04 09:27:31,976 - method=GET
2018-07-04 09:27:31,976 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,976 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:27:31,976 - args:
2018-07-04 09:27:31,976 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,976 - response=/common/left
2018-07-04 09:27:31,977 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:31,988 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:27:31,988 - ===========请求时间:2018-07-04 09:27:31==========================
2018-07-04 09:27:31,988 - url=http://localhost:8081/common/footer
2018-07-04 09:27:31,988 - method=GET
2018-07-04 09:27:31,988 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:31,988 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:27:31,988 - args:
2018-07-04 09:27:31,989 - =============结束请求时间:2018-07-04 09:27:31,耗时:0s======================
2018-07-04 09:27:31,989 - response=/common/footer
2018-07-04 09:27:31,989 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:35,061 - ===========进入拦截器==============
2018-07-04 09:27:35,061 - http://localhost:8081/icon.html
2018-07-04 09:27:35,068 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-04 09:27:35,068 - ===========请求时间:2018-07-04 09:27:35==========================
2018-07-04 09:27:35,068 - url=http://localhost:8081/icon.html
2018-07-04 09:27:35,068 - method=GET
2018-07-04 09:27:35,068 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:35,068 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-04 09:27:35,069 - args:
2018-07-04 09:27:35,069 - =============结束请求时间:2018-07-04 09:27:35,耗时:0s======================
2018-07-04 09:27:35,069 - response=/icon
2018-07-04 09:27:35,069 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:27:35,187 - ===========进入拦截器==============
2018-07-04 09:27:35,187 - http://localhost:8081/menu/findIconList
2018-07-04 09:27:35,191 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:27:35,191 - ===========请求时间:2018-07-04 09:27:35==========================
2018-07-04 09:27:35,191 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:27:35,191 - method=GET
2018-07-04 09:27:35,191 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:27:35,191 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:27:35,191 - args:
2018-07-04 09:27:35,213 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-04 09:27:35,260 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-04 09:27:35,264 - =============结束请求时间:2018-07-04 09:27:35,耗时:0s======================
2018-07-04 09:29:41,581 - ===========进入拦截器==============
2018-07-04 09:29:41,581 - http://localhost:8081/icon.html
2018-07-04 09:29:41,618 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-04 09:29:41,619 - ===========请求时间:2018-07-04 09:29:41==========================
2018-07-04 09:29:41,619 - url=http://localhost:8081/icon.html
2018-07-04 09:29:41,619 - method=GET
2018-07-04 09:29:41,619 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:29:41,619 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-04 09:29:41,619 - args:
2018-07-04 09:29:41,619 - =============结束请求时间:2018-07-04 09:29:41,耗时:0s======================
2018-07-04 09:29:41,619 - response=/icon
2018-07-04 09:29:41,619 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:29:41,741 - ===========进入拦截器==============
2018-07-04 09:29:41,741 - http://localhost:8081/menu/findIconList
2018-07-04 09:29:41,747 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:29:41,748 - ===========请求时间:2018-07-04 09:29:41==========================
2018-07-04 09:29:41,748 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:29:41,748 - method=GET
2018-07-04 09:29:41,748 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:29:41,748 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:29:41,749 - args:
2018-07-04 09:29:41,769 - =============结束请求时间:2018-07-04 09:29:41,耗时:0s======================
2018-07-04 09:29:41,769 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:29:41,779 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:29:57,948 - ===========进入拦截器==============
2018-07-04 09:29:57,948 - http://localhost:8081/menu.html
2018-07-04 09:29:57,958 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:29:57,958 - ===========请求时间:2018-07-04 09:29:57==========================
2018-07-04 09:29:57,958 - url=http://localhost:8081/menu.html
2018-07-04 09:29:57,958 - method=GET
2018-07-04 09:29:57,958 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:29:57,958 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:29:57,958 - args:
2018-07-04 09:29:57,958 - =============结束请求时间:2018-07-04 09:29:57,耗时:0s======================
2018-07-04 09:29:57,958 - response=/menu
2018-07-04 09:29:57,958 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:29:58,016 - ===========进入拦截器==============
2018-07-04 09:29:58,016 - http://localhost:8081/error
2018-07-04 09:29:58,030 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:29:58,061 - ===========进入拦截器==============
2018-07-04 09:29:58,061 - http://localhost:8081/error
2018-07-04 09:29:58,066 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:19,688 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 1000 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:33:19,691 - No active profile set, falling back to default profiles: default
2018-07-04 09:33:19,827 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:33:19,907 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:33:19 CST 2018]; root of context hierarchy
2018-07-04 09:33:20,681 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:33:21,646 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:33:21,658 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:33:21,667 - Starting service [Tomcat]
2018-07-04 09:33:21,667 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:33:21,766 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:33:21,766 - Root WebApplicationContext: initialization completed in 1859 ms
2018-07-04 09:33:21,974 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:33:21,978 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:33:21,979 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:33:21,979 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:33:21,979 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:33:21,979 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:33:22,735 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:33:19 CST 2018]; root of context hierarchy
2018-07-04 09:33:22,800 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:33:22,801 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:33:22,801 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:33:22,802 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:33:22,802 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:33:22,802 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:33:22,802 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:33:22,803 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:33:22,803 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:33:22,803 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:33:22,803 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:33:22,803 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:33:22,803 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:33:22,803 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:33:22,803 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:33:22,804 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:33:22,804 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:33:22,806 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:33:22,807 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:33:22,808 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:33:22,809 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:33:22,810 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:33:22,810 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:33:22,810 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:33:22,810 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:33:22,810 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:33:22,810 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:33:22,811 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:33:22,812 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:33:22,812 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:33:22,812 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:33:22,812 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:33:22,813 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:33:22,813 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:33:22,814 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:33:22,814 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:33:22,814 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:33:22,814 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:33:22,815 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:33:22,815 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:33:22,815 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:33:22,816 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:33:22,817 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:33:22,861 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:33:22,861 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:33:22,879 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:33:22,906 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:33:23,532 - LiveReload server is running on port 35729
2018-07-04 09:33:23,658 - Registering beans for JMX exposure on startup
2018-07-04 09:33:23,659 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:33:23,663 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:33:23,671 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:33:23,682 - Using a shared selector for servlet write/read
2018-07-04 09:33:23,695 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:33:23,700 - Started FqLtdWasBackstageApplication in 4.727 seconds (JVM running for 5.835)
2018-07-04 09:33:33,178 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:33:33,178 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:33:33,215 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 09:33:33,230 - ===========进入拦截器==============
2018-07-04 09:33:33,251 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:33:33,251 - ===========请求时间:2018-07-04 09:33:33==========================
2018-07-04 09:33:33,251 - url=http://localhost:8081/login
2018-07-04 09:33:33,251 - method=GET
2018-07-04 09:33:33,251 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:33,251 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:33:33,251 - args:
2018-07-04 09:33:33,255 - =============结束请求时间:2018-07-04 09:33:33,耗时:0s======================
2018-07-04 09:33:33,255 - response=/login
2018-07-04 09:33:33,282 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:33:33,319 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:33:33,319 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:33:33,319 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:33:33,319 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:33:33,323 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:33:33,323 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:33:40,178 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:33:40,178 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,178 - url=http://localhost:8081/signIn
2018-07-04 09:33:40,178 - method=POST
2018-07-04 09:33:40,178 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,178 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:33:40,178 - args:userName=admin,password=123456,
2018-07-04 09:33:40,234 - {dataSource-1} inited
2018-07-04 09:33:40,557 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,557 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:33:40, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:33:40,619 - ===========进入拦截器==============
2018-07-04 09:33:40,619 - http://localhost:8081/home
2018-07-04 09:33:40,624 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:33:40,625 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,625 - url=http://localhost:8081/home
2018-07-04 09:33:40,625 - method=GET
2018-07-04 09:33:40,625 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,625 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:33:40,625 - args:
2018-07-04 09:33:40,625 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,625 - response=/home
2018-07-04 09:33:40,626 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:40,706 - ===========进入拦截器==============
2018-07-04 09:33:40,706 - http://localhost:8081/welcome
2018-07-04 09:33:40,711 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:33:40,711 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,711 - url=http://localhost:8081/welcome
2018-07-04 09:33:40,711 - method=GET
2018-07-04 09:33:40,711 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,711 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:33:40,711 - args:
2018-07-04 09:33:40,711 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,711 - response=/welcome
2018-07-04 09:33:40,711 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:40,720 - ===========进入拦截器==============
2018-07-04 09:33:40,721 - http://localhost:8081/common/top
2018-07-04 09:33:40,725 - ===========进入拦截器==============
2018-07-04 09:33:40,725 - http://localhost:8081/common/left
2018-07-04 09:33:40,726 - ===========进入拦截器==============
2018-07-04 09:33:40,726 - http://localhost:8081/common/footer
2018-07-04 09:33:40,730 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:33:40,730 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,730 - url=http://localhost:8081/common/top
2018-07-04 09:33:40,730 - method=GET
2018-07-04 09:33:40,730 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,730 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:33:40,730 - args:
2018-07-04 09:33:40,730 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,730 - response=/common/top
2018-07-04 09:33:40,731 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:40,741 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:33:40,741 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,741 - url=http://localhost:8081/common/left
2018-07-04 09:33:40,741 - method=GET
2018-07-04 09:33:40,741 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,741 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:33:40,741 - args:
2018-07-04 09:33:40,741 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,741 - response=/common/left
2018-07-04 09:33:40,741 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:40,750 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:33:40,750 - ===========请求时间:2018-07-04 09:33:40==========================
2018-07-04 09:33:40,750 - url=http://localhost:8081/common/footer
2018-07-04 09:33:40,750 - method=GET
2018-07-04 09:33:40,750 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:40,750 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:33:40,750 - args:
2018-07-04 09:33:40,750 - =============结束请求时间:2018-07-04 09:33:40,耗时:0s======================
2018-07-04 09:33:40,750 - response=/common/footer
2018-07-04 09:33:40,751 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:43,452 - ===========进入拦截器==============
2018-07-04 09:33:43,452 - http://localhost:8081/icon.html
2018-07-04 09:33:43,467 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-04 09:33:43,467 - ===========请求时间:2018-07-04 09:33:43==========================
2018-07-04 09:33:43,467 - url=http://localhost:8081/icon.html
2018-07-04 09:33:43,468 - method=GET
2018-07-04 09:33:43,468 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:43,468 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-04 09:33:43,468 - args:
2018-07-04 09:33:43,468 - =============结束请求时间:2018-07-04 09:33:43,耗时:0s======================
2018-07-04 09:33:43,468 - response=/icon
2018-07-04 09:33:43,468 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:43,551 - ===========进入拦截器==============
2018-07-04 09:33:43,551 - http://localhost:8081/menu/findIconList
2018-07-04 09:33:43,596 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:33:43,596 - ===========请求时间:2018-07-04 09:33:43==========================
2018-07-04 09:33:43,596 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:33:43,596 - method=GET
2018-07-04 09:33:43,596 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:43,596 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:33:43,596 - args:
2018-07-04 09:33:43,622 - =============结束请求时间:2018-07-04 09:33:43,耗时:0s======================
2018-07-04 09:33:43,622 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:33:43,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:44,725 - ===========进入拦截器==============
2018-07-04 09:33:44,725 - http://localhost:8081/menu.html
2018-07-04 09:33:44,734 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:33:44,734 - ===========请求时间:2018-07-04 09:33:44==========================
2018-07-04 09:33:44,734 - url=http://localhost:8081/menu.html
2018-07-04 09:33:44,734 - method=GET
2018-07-04 09:33:44,735 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:44,735 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:33:44,735 - args:
2018-07-04 09:33:44,735 - =============结束请求时间:2018-07-04 09:33:44,耗时:0s======================
2018-07-04 09:33:44,735 - response=/menu
2018-07-04 09:33:44,735 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:33:44,826 - ===========进入拦截器==============
2018-07-04 09:33:44,826 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:33:44,834 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:33:44,834 - ===========请求时间:2018-07-04 09:33:44==========================
2018-07-04 09:33:44,834 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:33:44,834 - method=GET
2018-07-04 09:33:44,834 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:33:44,834 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:33:44,834 - args:
2018-07-04 09:33:44,848 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-04 09:33:44,890 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-04 09:33:44,894 - =============结束请求时间:2018-07-04 09:33:44,耗时:0s======================
2018-07-04 09:37:27,163 - ===========进入拦截器==============
2018-07-04 09:37:27,163 - http://localhost:8081/menu.html
2018-07-04 09:37:27,185 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:37:27,186 - ===========请求时间:2018-07-04 09:37:27==========================
2018-07-04 09:37:27,186 - url=http://localhost:8081/menu.html
2018-07-04 09:37:27,186 - method=GET
2018-07-04 09:37:27,186 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:37:27,186 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:37:27,186 - args:
2018-07-04 09:37:27,186 - =============结束请求时间:2018-07-04 09:37:27,耗时:0s======================
2018-07-04 09:37:27,186 - response=/menu
2018-07-04 09:37:27,186 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:27,273 - ===========进入拦截器==============
2018-07-04 09:37:27,273 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:37:27,277 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:37:27,277 - ===========请求时间:2018-07-04 09:37:27==========================
2018-07-04 09:37:27,277 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:37:27,277 - method=GET
2018-07-04 09:37:27,277 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:37:27,277 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:37:27,277 - args:
2018-07-04 09:37:27,294 - =============结束请求时间:2018-07-04 09:37:27,耗时:0s======================
2018-07-04 09:37:27,295 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:37:27,298 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,691 - ===========进入拦截器==============
2018-07-04 09:37:39,691 - http://localhost:8081/error
2018-07-04 09:37:39,706 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,714 - ===========进入拦截器==============
2018-07-04 09:37:39,714 - http://localhost:8081/errorpage/404
2018-07-04 09:37:39,722 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:37:39,722 - ===========请求时间:2018-07-04 09:37:39==========================
2018-07-04 09:37:39,722 - url=http://localhost:8081/errorpage/404
2018-07-04 09:37:39,722 - method=GET
2018-07-04 09:37:39,722 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:37:39,722 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:37:39,722 - args:
2018-07-04 09:37:39,722 - =============结束请求时间:2018-07-04 09:37:39,耗时:0s======================
2018-07-04 09:37:39,722 - response=/errorpage/404
2018-07-04 09:37:39,723 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,745 - ===========进入拦截器==============
2018-07-04 09:37:39,745 - http://localhost:8081/error
2018-07-04 09:37:39,746 - ===========进入拦截器==============
2018-07-04 09:37:39,746 - http://localhost:8081/error
2018-07-04 09:37:39,746 - ===========进入拦截器==============
2018-07-04 09:37:39,747 - http://localhost:8081/error
2018-07-04 09:37:39,749 - ===========进入拦截器==============
2018-07-04 09:37:39,750 - http://localhost:8081/error
2018-07-04 09:37:39,750 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,761 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,766 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,766 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,770 - ===========进入拦截器==============
2018-07-04 09:37:39,770 - http://localhost:8081/error
2018-07-04 09:37:39,775 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:37:39,784 - ===========进入拦截器==============
2018-07-04 09:37:39,784 - http://localhost:8081/error
2018-07-04 09:37:39,789 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:23,022 - ===========进入拦截器==============
2018-07-04 09:38:23,022 - http://localhost:8081/menu.html
2018-07-04 09:38:23,029 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:38:23,029 - ===========请求时间:2018-07-04 09:38:23==========================
2018-07-04 09:38:23,029 - url=http://localhost:8081/menu.html
2018-07-04 09:38:23,029 - method=GET
2018-07-04 09:38:23,029 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:23,029 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:38:23,029 - args:
2018-07-04 09:38:23,029 - =============结束请求时间:2018-07-04 09:38:23,耗时:0s======================
2018-07-04 09:38:23,029 - response=/menu
2018-07-04 09:38:23,029 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:23,120 - ===========进入拦截器==============
2018-07-04 09:38:23,120 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:38:23,134 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:38:23,135 - ===========请求时间:2018-07-04 09:38:23==========================
2018-07-04 09:38:23,135 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:38:23,135 - method=GET
2018-07-04 09:38:23,135 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:23,135 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:38:23,135 - args:
2018-07-04 09:38:23,156 - =============结束请求时间:2018-07-04 09:38:23,耗时:0s======================
2018-07-04 09:38:23,156 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:38:23,160 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,004 - ===========进入拦截器==============
2018-07-04 09:38:24,005 - http://localhost:8081/error
2018-07-04 09:38:24,013 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,019 - ===========进入拦截器==============
2018-07-04 09:38:24,019 - http://localhost:8081/errorpage/404
2018-07-04 09:38:24,025 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:38:24,026 - ===========请求时间:2018-07-04 09:38:24==========================
2018-07-04 09:38:24,026 - url=http://localhost:8081/errorpage/404
2018-07-04 09:38:24,026 - method=GET
2018-07-04 09:38:24,026 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:24,026 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:38:24,026 - args:
2018-07-04 09:38:24,026 - =============结束请求时间:2018-07-04 09:38:24,耗时:0s======================
2018-07-04 09:38:24,026 - response=/errorpage/404
2018-07-04 09:38:24,027 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,044 - ===========进入拦截器==============
2018-07-04 09:38:24,044 - http://localhost:8081/error
2018-07-04 09:38:24,045 - ===========进入拦截器==============
2018-07-04 09:38:24,045 - http://localhost:8081/error
2018-07-04 09:38:24,046 - ===========进入拦截器==============
2018-07-04 09:38:24,047 - http://localhost:8081/error
2018-07-04 09:38:24,047 - ===========进入拦截器==============
2018-07-04 09:38:24,047 - http://localhost:8081/error
2018-07-04 09:38:24,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,060 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:24,064 - ===========进入拦截器==============
2018-07-04 09:38:24,065 - http://localhost:8081/error
2018-07-04 09:38:24,071 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:26,225 - ===========进入拦截器==============
2018-07-04 09:38:26,225 - http://localhost:8081/home.html
2018-07-04 09:38:26,231 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:38:26,231 - ===========请求时间:2018-07-04 09:38:26==========================
2018-07-04 09:38:26,231 - url=http://localhost:8081/home.html
2018-07-04 09:38:26,231 - method=GET
2018-07-04 09:38:26,231 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:26,231 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:38:26,231 - args:
2018-07-04 09:38:26,231 - =============结束请求时间:2018-07-04 09:38:26,耗时:0s======================
2018-07-04 09:38:26,231 - response=/home
2018-07-04 09:38:26,232 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:26,290 - ===========进入拦截器==============
2018-07-04 09:38:26,290 - http://localhost:8081/welcome
2018-07-04 09:38:26,297 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:38:26,297 - ===========请求时间:2018-07-04 09:38:26==========================
2018-07-04 09:38:26,297 - url=http://localhost:8081/welcome
2018-07-04 09:38:26,297 - method=GET
2018-07-04 09:38:26,297 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:26,297 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:38:26,297 - args:
2018-07-04 09:38:26,297 - =============结束请求时间:2018-07-04 09:38:26,耗时:0s======================
2018-07-04 09:38:26,297 - response=/welcome
2018-07-04 09:38:26,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:26,308 - ===========进入拦截器==============
2018-07-04 09:38:26,308 - http://localhost:8081/common/top
2018-07-04 09:38:26,309 - ===========进入拦截器==============
2018-07-04 09:38:26,309 - http://localhost:8081/common/left
2018-07-04 09:38:26,310 - ===========进入拦截器==============
2018-07-04 09:38:26,310 - http://localhost:8081/common/footer
2018-07-04 09:38:26,316 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:38:26,316 - ===========请求时间:2018-07-04 09:38:26==========================
2018-07-04 09:38:26,316 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:38:26,316 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:38:26,316 - url=http://localhost:8081/common/left
2018-07-04 09:38:26,317 - method=GET
2018-07-04 09:38:26,317 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:26,317 - ===========请求时间:2018-07-04 09:38:26==========================
2018-07-04 09:38:26,317 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:38:26,317 - url=http://localhost:8081/common/footer
2018-07-04 09:38:26,317 - method=GET
2018-07-04 09:38:26,317 - args:
2018-07-04 09:38:26,317 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:26,317 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:38:26,317 - args:
2018-07-04 09:38:26,317 - =============结束请求时间:2018-07-04 09:38:26,耗时:0s======================
2018-07-04 09:38:26,317 - ===========请求时间:2018-07-04 09:38:26==========================
2018-07-04 09:38:26,317 - url=http://localhost:8081/common/top
2018-07-04 09:38:26,317 - method=GET
2018-07-04 09:38:26,317 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:26,317 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:38:26,317 - args:
2018-07-04 09:38:26,317 - =============结束请求时间:2018-07-04 09:38:26,耗时:0s======================
2018-07-04 09:38:26,317 - response=/common/footer
2018-07-04 09:38:26,317 - response=/common/left
2018-07-04 09:38:26,317 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:26,317 - =============结束请求时间:2018-07-04 09:38:26,耗时:0s======================
2018-07-04 09:38:26,317 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:26,318 - response=/common/top
2018-07-04 09:38:26,318 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:32,706 - ===========进入拦截器==============
2018-07-04 09:38:32,707 - http://localhost:8081/menu.html
2018-07-04 09:38:32,715 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:38:32,715 - ===========请求时间:2018-07-04 09:38:32==========================
2018-07-04 09:38:32,715 - url=http://localhost:8081/menu.html
2018-07-04 09:38:32,715 - method=GET
2018-07-04 09:38:32,715 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:32,715 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:38:32,715 - args:
2018-07-04 09:38:32,715 - =============结束请求时间:2018-07-04 09:38:32,耗时:0s======================
2018-07-04 09:38:32,715 - response=/menu
2018-07-04 09:38:32,715 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:32,797 - ===========进入拦截器==============
2018-07-04 09:38:32,797 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:38:32,803 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:38:32,803 - ===========请求时间:2018-07-04 09:38:32==========================
2018-07-04 09:38:32,803 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:38:32,803 - method=GET
2018-07-04 09:38:32,803 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:32,803 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:38:32,803 - args:
2018-07-04 09:38:32,809 - =============结束请求时间:2018-07-04 09:38:32,耗时:0s======================
2018-07-04 09:38:32,809 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:38:32,810 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,060 - ===========进入拦截器==============
2018-07-04 09:38:34,060 - http://localhost:8081/error
2018-07-04 09:38:34,067 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,074 - ===========进入拦截器==============
2018-07-04 09:38:34,074 - http://localhost:8081/errorpage/404
2018-07-04 09:38:34,092 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:38:34,092 - ===========请求时间:2018-07-04 09:38:34==========================
2018-07-04 09:38:34,092 - url=http://localhost:8081/errorpage/404
2018-07-04 09:38:34,092 - method=GET
2018-07-04 09:38:34,092 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:38:34,092 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:38:34,092 - args:
2018-07-04 09:38:34,092 - =============结束请求时间:2018-07-04 09:38:34,耗时:0s======================
2018-07-04 09:38:34,092 - response=/errorpage/404
2018-07-04 09:38:34,092 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,107 - ===========进入拦截器==============
2018-07-04 09:38:34,108 - http://localhost:8081/error
2018-07-04 09:38:34,108 - ===========进入拦截器==============
2018-07-04 09:38:34,108 - http://localhost:8081/error
2018-07-04 09:38:34,109 - ===========进入拦截器==============
2018-07-04 09:38:34,109 - http://localhost:8081/error
2018-07-04 09:38:34,109 - ===========进入拦截器==============
2018-07-04 09:38:34,109 - http://localhost:8081/error
2018-07-04 09:38:34,115 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,115 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,115 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,122 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,127 - ===========进入拦截器==============
2018-07-04 09:38:34,127 - http://localhost:8081/error
2018-07-04 09:38:34,134 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:38:34,138 - ===========进入拦截器==============
2018-07-04 09:38:34,138 - http://localhost:8081/error
2018-07-04 09:38:34,142 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:13,332 - ===========进入拦截器==============
2018-07-04 09:39:13,332 - http://localhost:8081/menu.html
2018-07-04 09:39:13,362 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:39:13,362 - ===========请求时间:2018-07-04 09:39:13==========================
2018-07-04 09:39:13,362 - url=http://localhost:8081/menu.html
2018-07-04 09:39:13,362 - method=GET
2018-07-04 09:39:13,362 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:39:13,362 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:39:13,362 - args:
2018-07-04 09:39:13,362 - =============结束请求时间:2018-07-04 09:39:13,耗时:0s======================
2018-07-04 09:39:13,362 - response=/menu
2018-07-04 09:39:13,362 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:13,448 - ===========进入拦截器==============
2018-07-04 09:39:13,448 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:39:13,453 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:39:13,453 - ===========请求时间:2018-07-04 09:39:13==========================
2018-07-04 09:39:13,453 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:39:13,453 - method=GET
2018-07-04 09:39:13,453 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:39:13,453 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:39:13,453 - args:
2018-07-04 09:39:13,456 - =============结束请求时间:2018-07-04 09:39:13,耗时:0s======================
2018-07-04 09:39:13,456 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:39:13,457 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:13,957 - ===========进入拦截器==============
2018-07-04 09:39:13,957 - http://localhost:8081/error
2018-07-04 09:39:13,961 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:13,970 - ===========进入拦截器==============
2018-07-04 09:39:13,970 - http://localhost:8081/errorpage/404
2018-07-04 09:39:13,981 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:39:13,981 - ===========请求时间:2018-07-04 09:39:13==========================
2018-07-04 09:39:13,981 - url=http://localhost:8081/errorpage/404
2018-07-04 09:39:13,981 - method=GET
2018-07-04 09:39:13,981 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:39:13,981 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:39:13,981 - args:
2018-07-04 09:39:13,981 - =============结束请求时间:2018-07-04 09:39:13,耗时:0s======================
2018-07-04 09:39:13,981 - response=/errorpage/404
2018-07-04 09:39:13,981 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,000 - ===========进入拦截器==============
2018-07-04 09:39:14,000 - ===========进入拦截器==============
2018-07-04 09:39:14,000 - http://localhost:8081/error
2018-07-04 09:39:14,000 - http://localhost:8081/error
2018-07-04 09:39:14,000 - ===========进入拦截器==============
2018-07-04 09:39:14,000 - http://localhost:8081/error
2018-07-04 09:39:14,001 - ===========进入拦截器==============
2018-07-04 09:39:14,001 - http://localhost:8081/error
2018-07-04 09:39:14,005 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,005 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,006 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,007 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,013 - ===========进入拦截器==============
2018-07-04 09:39:14,013 - http://localhost:8081/error
2018-07-04 09:39:14,018 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:14,021 - ===========进入拦截器==============
2018-07-04 09:39:14,021 - http://localhost:8081/error
2018-07-04 09:39:14,025 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:39:57,877 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13912 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:39:57,880 - No active profile set, falling back to default profiles: default
2018-07-04 09:39:58,072 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:39:58,122 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e4e7b4b: startup date [Wed Jul 04 09:39:58 CST 2018]; root of context hierarchy
2018-07-04 09:39:59,242 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:40:00,378 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:40:00,390 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:40:00,399 - Starting service [Tomcat]
2018-07-04 09:40:00,399 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:40:00,497 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:40:00,497 - Root WebApplicationContext: initialization completed in 2375 ms
2018-07-04 09:40:00,756 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:40:00,762 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:40:00,763 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:40:00,763 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:40:00,763 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:40:00,763 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:40:01,495 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5e4e7b4b: startup date [Wed Jul 04 09:39:58 CST 2018]; root of context hierarchy
2018-07-04 09:40:01,560 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:40:01,560 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:40:01,561 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:40:01,561 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:40:01,561 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:40:01,562 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:40:01,562 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:40:01,562 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:40:01,562 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:40:01,562 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:40:01,562 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:40:01,562 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:40:01,562 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:40:01,563 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:40:01,563 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:40:01,563 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:40:01,563 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:40:01,565 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:40:01,566 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:40:01,568 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:40:01,568 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:40:01,568 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:40:01,568 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:40:01,569 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:40:01,569 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:40:01,569 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:40:01,569 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:40:01,569 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:40:01,570 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:40:01,570 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:40:01,571 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:40:01,571 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:40:01,571 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:40:01,571 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:40:01,573 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:40:01,573 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:40:01,574 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:40:01,574 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:40:01,574 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:40:01,574 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:40:01,574 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:40:01,575 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:40:01,576 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:40:01,619 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:40:01,620 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:40:01,637 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:40:01,662 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:40:02,237 - LiveReload server is running on port 35729
2018-07-04 09:40:02,360 - Registering beans for JMX exposure on startup
2018-07-04 09:40:02,361 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:40:02,366 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:40:02,375 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:40:02,385 - Using a shared selector for servlet write/read
2018-07-04 09:40:02,397 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:40:02,402 - Started FqLtdWasBackstageApplication in 4.921 seconds (JVM running for 5.927)
2018-07-04 09:40:07,791 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:40:07,791 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:40:07,830 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 09:40:08,605 - ===========进入拦截器==============
2018-07-04 09:40:08,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:40:08,633 - ===========请求时间:2018-07-04 09:40:08==========================
2018-07-04 09:40:08,634 - url=http://localhost:8081/login
2018-07-04 09:40:08,634 - method=GET
2018-07-04 09:40:08,634 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:08,634 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:40:08,634 - args:
2018-07-04 09:40:08,637 - =============结束请求时间:2018-07-04 09:40:08,耗时:0s======================
2018-07-04 09:40:08,637 - response=/login
2018-07-04 09:40:08,668 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:40:08,700 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:40:08,700 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:40:08,700 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:40:08,700 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:40:08,703 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:40:08,703 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:40:13,033 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:40:13,033 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,033 - url=http://localhost:8081/signIn
2018-07-04 09:40:13,033 - method=POST
2018-07-04 09:40:13,033 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,033 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:40:13,033 - args:userName=admin,password=123456,
2018-07-04 09:40:13,093 - {dataSource-1} inited
2018-07-04 09:40:13,420 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,420 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:40:13, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:40:13,484 - ===========进入拦截器==============
2018-07-04 09:40:13,485 - http://localhost:8081/home
2018-07-04 09:40:13,491 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:40:13,491 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,491 - url=http://localhost:8081/home
2018-07-04 09:40:13,491 - method=GET
2018-07-04 09:40:13,491 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,491 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:40:13,491 - args:
2018-07-04 09:40:13,491 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,491 - response=/home
2018-07-04 09:40:13,492 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:13,586 - ===========进入拦截器==============
2018-07-04 09:40:13,586 - http://localhost:8081/welcome
2018-07-04 09:40:13,591 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:40:13,592 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,592 - url=http://localhost:8081/welcome
2018-07-04 09:40:13,592 - method=GET
2018-07-04 09:40:13,592 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,592 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:40:13,592 - args:
2018-07-04 09:40:13,592 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,592 - response=/welcome
2018-07-04 09:40:13,592 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:13,621 - ===========进入拦截器==============
2018-07-04 09:40:13,622 - http://localhost:8081/common/top
2018-07-04 09:40:13,624 - ===========进入拦截器==============
2018-07-04 09:40:13,624 - ===========进入拦截器==============
2018-07-04 09:40:13,624 - http://localhost:8081/common/footer
2018-07-04 09:40:13,624 - http://localhost:8081/common/left
2018-07-04 09:40:13,628 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:40:13,628 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,628 - url=http://localhost:8081/common/top
2018-07-04 09:40:13,628 - method=GET
2018-07-04 09:40:13,628 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,628 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:40:13,628 - args:
2018-07-04 09:40:13,628 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,628 - response=/common/top
2018-07-04 09:40:13,629 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:13,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:40:13,633 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,633 - url=http://localhost:8081/common/footer
2018-07-04 09:40:13,633 - method=GET
2018-07-04 09:40:13,633 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,633 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:40:13,633 - args:
2018-07-04 09:40:13,634 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,634 - response=/common/footer
2018-07-04 09:40:13,634 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:13,646 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:40:13,647 - ===========请求时间:2018-07-04 09:40:13==========================
2018-07-04 09:40:13,647 - url=http://localhost:8081/common/left
2018-07-04 09:40:13,647 - method=GET
2018-07-04 09:40:13,647 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:13,647 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:40:13,647 - args:
2018-07-04 09:40:13,647 - =============结束请求时间:2018-07-04 09:40:13,耗时:0s======================
2018-07-04 09:40:13,647 - response=/common/left
2018-07-04 09:40:13,647 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:15,445 - ===========进入拦截器==============
2018-07-04 09:40:15,445 - http://localhost:8081/menu.html
2018-07-04 09:40:15,451 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:40:15,451 - ===========请求时间:2018-07-04 09:40:15==========================
2018-07-04 09:40:15,451 - url=http://localhost:8081/menu.html
2018-07-04 09:40:15,451 - method=GET
2018-07-04 09:40:15,451 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:15,451 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:40:15,451 - args:
2018-07-04 09:40:15,451 - =============结束请求时间:2018-07-04 09:40:15,耗时:0s======================
2018-07-04 09:40:15,451 - response=/menu
2018-07-04 09:40:15,452 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:15,576 - ===========进入拦截器==============
2018-07-04 09:40:15,576 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:40:15,580 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:40:15,580 - ===========请求时间:2018-07-04 09:40:15==========================
2018-07-04 09:40:15,580 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:40:15,580 - method=GET
2018-07-04 09:40:15,580 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:15,580 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:40:15,580 - args:
2018-07-04 09:40:15,589 - =============结束请求时间:2018-07-04 09:40:15,耗时:0s======================
2018-07-04 09:40:15,589 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:40:15,593 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:17,771 - ===========进入拦截器==============
2018-07-04 09:40:17,771 - http://localhost:8081/error
2018-07-04 09:40:17,781 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:17,792 - ===========进入拦截器==============
2018-07-04 09:40:17,792 - http://localhost:8081/errorpage/404
2018-07-04 09:40:17,796 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:40:17,797 - ===========请求时间:2018-07-04 09:40:17==========================
2018-07-04 09:40:17,797 - url=http://localhost:8081/errorpage/404
2018-07-04 09:40:17,797 - method=GET
2018-07-04 09:40:17,797 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:40:17,797 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:40:17,797 - args:
2018-07-04 09:40:17,797 - =============结束请求时间:2018-07-04 09:40:17,耗时:0s======================
2018-07-04 09:40:17,797 - response=/errorpage/404
2018-07-04 09:40:17,797 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:17,820 - ===========进入拦截器==============
2018-07-04 09:40:17,820 - ===========进入拦截器==============
2018-07-04 09:40:17,820 - http://localhost:8081/error
2018-07-04 09:40:17,820 - http://localhost:8081/error
2018-07-04 09:40:17,822 - ===========进入拦截器==============
2018-07-04 09:40:17,822 - http://localhost:8081/error
2018-07-04 09:40:17,825 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:17,826 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:40:17,835 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:06,322 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11076 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:41:06,327 - No active profile set, falling back to default profiles: default
2018-07-04 09:41:06,576 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:41:06,632 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f1b0269: startup date [Wed Jul 04 09:41:06 CST 2018]; root of context hierarchy
2018-07-04 09:41:07,380 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:41:08,352 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:41:08,363 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:41:08,371 - Starting service [Tomcat]
2018-07-04 09:41:08,371 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:41:08,468 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:41:08,468 - Root WebApplicationContext: initialization completed in 1836 ms
2018-07-04 09:41:08,677 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:41:08,681 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:41:08,682 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:41:08,682 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:41:08,682 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:41:08,682 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:41:09,420 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7f1b0269: startup date [Wed Jul 04 09:41:06 CST 2018]; root of context hierarchy
2018-07-04 09:41:09,487 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:41:09,487 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:41:09,488 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:41:09,488 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:41:09,488 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:41:09,488 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:41:09,488 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:41:09,488 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:41:09,488 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:41:09,488 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:41:09,489 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:41:09,489 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:41:09,489 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:41:09,489 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:41:09,489 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:41:09,489 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:41:09,489 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:41:09,492 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:41:09,492 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:41:09,494 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:41:09,494 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:41:09,494 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:41:09,494 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:41:09,495 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:41:09,495 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:41:09,495 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:41:09,495 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:41:09,495 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:41:09,497 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:41:09,497 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:41:09,497 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:41:09,497 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:41:09,497 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:41:09,498 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:41:09,500 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:41:09,501 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:41:09,501 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:41:09,501 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:41:09,501 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:41:09,501 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:41:09,501 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:41:09,503 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:41:09,503 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:41:09,550 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:41:09,551 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:41:09,569 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:41:09,595 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:41:10,213 - LiveReload server is running on port 35729
2018-07-04 09:41:10,341 - Registering beans for JMX exposure on startup
2018-07-04 09:41:10,342 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:41:10,349 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:41:10,360 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:41:10,372 - Using a shared selector for servlet write/read
2018-07-04 09:41:10,387 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:41:10,396 - Started FqLtdWasBackstageApplication in 5.278 seconds (JVM running for 6.763)
2018-07-04 09:41:14,049 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:41:14,049 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:41:14,085 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 09:41:14,099 - ===========进入拦截器==============
2018-07-04 09:41:14,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:41:14,120 - ===========请求时间:2018-07-04 09:41:14==========================
2018-07-04 09:41:14,120 - url=http://localhost:8081/login
2018-07-04 09:41:14,120 - method=GET
2018-07-04 09:41:14,120 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:14,120 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:41:14,120 - args:
2018-07-04 09:41:14,124 - =============结束请求时间:2018-07-04 09:41:14,耗时:0s======================
2018-07-04 09:41:14,124 - response=/login
2018-07-04 09:41:14,154 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:41:14,190 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:41:14,190 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:41:14,190 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:41:14,190 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:41:14,193 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:41:14,193 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:41:18,122 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:41:18,123 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,123 - url=http://localhost:8081/signIn
2018-07-04 09:41:18,123 - method=POST
2018-07-04 09:41:18,123 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,123 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:41:18,123 - args:userName=admin,password=123456,
2018-07-04 09:41:18,180 - {dataSource-1} inited
2018-07-04 09:41:18,528 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,528 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:41:18, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:41:18,596 - ===========进入拦截器==============
2018-07-04 09:41:18,596 - http://localhost:8081/home
2018-07-04 09:41:18,601 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:41:18,601 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,601 - url=http://localhost:8081/home
2018-07-04 09:41:18,601 - method=GET
2018-07-04 09:41:18,601 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,601 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:41:18,601 - args:
2018-07-04 09:41:18,602 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,602 - response=/home
2018-07-04 09:41:18,602 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:18,698 - ===========进入拦截器==============
2018-07-04 09:41:18,699 - http://localhost:8081/welcome
2018-07-04 09:41:18,706 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:41:18,706 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,706 - url=http://localhost:8081/welcome
2018-07-04 09:41:18,706 - method=GET
2018-07-04 09:41:18,706 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,706 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:41:18,706 - args:
2018-07-04 09:41:18,707 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,707 - response=/welcome
2018-07-04 09:41:18,707 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:18,729 - ===========进入拦截器==============
2018-07-04 09:41:18,729 - http://localhost:8081/common/top
2018-07-04 09:41:18,732 - ===========进入拦截器==============
2018-07-04 09:41:18,732 - http://localhost:8081/common/left
2018-07-04 09:41:18,732 - ===========进入拦截器==============
2018-07-04 09:41:18,732 - http://localhost:8081/common/footer
2018-07-04 09:41:18,737 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:41:18,737 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,737 - url=http://localhost:8081/common/top
2018-07-04 09:41:18,737 - method=GET
2018-07-04 09:41:18,737 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,737 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:41:18,737 - args:
2018-07-04 09:41:18,737 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,737 - response=/common/top
2018-07-04 09:41:18,737 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:18,747 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:41:18,747 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,747 - url=http://localhost:8081/common/left
2018-07-04 09:41:18,747 - method=GET
2018-07-04 09:41:18,747 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,747 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:41:18,747 - args:
2018-07-04 09:41:18,748 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,748 - response=/common/left
2018-07-04 09:41:18,748 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:18,756 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:41:18,756 - ===========请求时间:2018-07-04 09:41:18==========================
2018-07-04 09:41:18,757 - url=http://localhost:8081/common/footer
2018-07-04 09:41:18,757 - method=GET
2018-07-04 09:41:18,757 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:18,757 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:41:18,757 - args:
2018-07-04 09:41:18,757 - =============结束请求时间:2018-07-04 09:41:18,耗时:0s======================
2018-07-04 09:41:18,757 - response=/common/footer
2018-07-04 09:41:18,757 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:20,413 - ===========进入拦截器==============
2018-07-04 09:41:20,413 - http://localhost:8081/menu.html
2018-07-04 09:41:20,419 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:41:20,420 - ===========请求时间:2018-07-04 09:41:20==========================
2018-07-04 09:41:20,420 - url=http://localhost:8081/menu.html
2018-07-04 09:41:20,420 - method=GET
2018-07-04 09:41:20,420 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:20,420 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:41:20,420 - args:
2018-07-04 09:41:20,420 - =============结束请求时间:2018-07-04 09:41:20,耗时:0s======================
2018-07-04 09:41:20,420 - response=/menu
2018-07-04 09:41:20,420 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:20,550 - ===========进入拦截器==============
2018-07-04 09:41:20,551 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:41:20,557 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:41:20,558 - ===========请求时间:2018-07-04 09:41:20==========================
2018-07-04 09:41:20,558 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:41:20,558 - method=GET
2018-07-04 09:41:20,558 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:20,558 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:41:20,558 - args:
2018-07-04 09:41:20,568 - =============结束请求时间:2018-07-04 09:41:20,耗时:0s======================
2018-07-04 09:41:20,569 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:41:20,573 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,107 - ===========进入拦截器==============
2018-07-04 09:41:21,107 - http://localhost:8081/error
2018-07-04 09:41:21,119 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,129 - ===========进入拦截器==============
2018-07-04 09:41:21,129 - http://localhost:8081/errorpage/404
2018-07-04 09:41:21,135 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:41:21,136 - ===========请求时间:2018-07-04 09:41:21==========================
2018-07-04 09:41:21,136 - url=http://localhost:8081/errorpage/404
2018-07-04 09:41:21,136 - method=GET
2018-07-04 09:41:21,136 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:41:21,136 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:41:21,136 - args:
2018-07-04 09:41:21,136 - =============结束请求时间:2018-07-04 09:41:21,耗时:0s======================
2018-07-04 09:41:21,136 - response=/errorpage/404
2018-07-04 09:41:21,136 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,168 - ===========进入拦截器==============
2018-07-04 09:41:21,168 - http://localhost:8081/error
2018-07-04 09:41:21,169 - ===========进入拦截器==============
2018-07-04 09:41:21,169 - http://localhost:8081/error
2018-07-04 09:41:21,175 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,175 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,186 - ===========进入拦截器==============
2018-07-04 09:41:21,186 - http://localhost:8081/error
2018-07-04 09:41:21,188 - ===========进入拦截器==============
2018-07-04 09:41:21,189 - http://localhost:8081/error
2018-07-04 09:41:21,189 - ===========进入拦截器==============
2018-07-04 09:41:21,189 - http://localhost:8081/error
2018-07-04 09:41:21,192 - ===========进入拦截器==============
2018-07-04 09:41:21,192 - http://localhost:8081/error
2018-07-04 09:41:21,193 - ===========进入拦截器==============
2018-07-04 09:41:21,193 - http://localhost:8081/error
2018-07-04 09:41:21,194 - ===========进入拦截器==============
2018-07-04 09:41:21,194 - http://localhost:8081/error
2018-07-04 09:41:21,198 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,200 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,205 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,207 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,209 - ===========进入拦截器==============
2018-07-04 09:41:21,209 - http://localhost:8081/error
2018-07-04 09:41:21,211 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,215 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,215 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,223 - ===========进入拦截器==============
2018-07-04 09:41:21,223 - http://localhost:8081/error
2018-07-04 09:41:21,227 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,235 - ===========进入拦截器==============
2018-07-04 09:41:21,235 - http://localhost:8081/error
2018-07-04 09:41:21,259 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,263 - ===========进入拦截器==============
2018-07-04 09:41:21,263 - http://localhost:8081/error
2018-07-04 09:41:21,268 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,273 - ===========进入拦截器==============
2018-07-04 09:41:21,273 - http://localhost:8081/error
2018-07-04 09:41:21,282 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:41:21,316 - ===========进入拦截器==============
2018-07-04 09:41:21,316 - http://localhost:8081/error
2018-07-04 09:41:21,323 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:42:17,595 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13604 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:42:17,600 - No active profile set, falling back to default profiles: default
2018-07-04 09:42:17,796 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:42:17,864 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d9225c: startup date [Wed Jul 04 09:42:17 CST 2018]; root of context hierarchy
2018-07-04 09:42:19,113 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:42:20,098 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:42:20,115 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:42:20,128 - Starting service [Tomcat]
2018-07-04 09:42:20,129 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:42:20,262 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:42:20,262 - Root WebApplicationContext: initialization completed in 2398 ms
2018-07-04 09:42:20,558 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:42:20,563 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:42:20,564 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:42:20,564 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:42:20,564 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:42:20,564 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:42:21,761 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d9225c: startup date [Wed Jul 04 09:42:17 CST 2018]; root of context hierarchy
2018-07-04 09:42:21,857 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:42:21,859 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:42:21,860 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:42:21,860 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:42:21,860 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:42:21,860 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:42:21,861 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:42:21,861 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:42:21,861 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:42:21,861 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:42:21,862 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:42:21,862 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:42:21,862 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:42:21,862 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:42:21,863 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:42:21,863 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:42:21,863 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:42:21,867 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:42:21,867 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:42:21,869 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:42:21,869 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:42:21,869 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:42:21,870 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:42:21,870 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:42:21,870 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:42:21,870 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:42:21,871 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:42:21,871 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:42:21,873 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:42:21,874 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:42:21,874 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:42:21,874 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:42:21,874 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:42:21,875 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:42:21,876 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:42:21,877 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:42:21,878 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:42:21,878 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:42:21,878 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:42:21,878 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:42:21,878 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:42:21,880 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:42:21,880 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:42:21,976 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:42:21,976 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:42:22,007 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:42:22,076 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:42:22,896 - LiveReload server is running on port 35729
2018-07-04 09:42:23,021 - Registering beans for JMX exposure on startup
2018-07-04 09:42:23,022 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:42:23,026 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:42:23,035 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:42:23,046 - Using a shared selector for servlet write/read
2018-07-04 09:42:23,058 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:42:23,063 - Started FqLtdWasBackstageApplication in 5.974 seconds (JVM running for 7.035)
2018-07-04 09:43:05,154 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:43:05,155 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:43:05,192 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 09:43:05,207 - ===========进入拦截器==============
2018-07-04 09:43:05,226 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:43:05,226 - ===========请求时间:2018-07-04 09:43:05==========================
2018-07-04 09:43:05,227 - url=http://localhost:8081/login
2018-07-04 09:43:05,227 - method=GET
2018-07-04 09:43:05,227 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:05,227 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:43:05,227 - args:
2018-07-04 09:43:05,229 - =============结束请求时间:2018-07-04 09:43:05,耗时:0s======================
2018-07-04 09:43:05,229 - response=/login
2018-07-04 09:43:05,260 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:43:05,293 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:43:05,294 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:43:05,294 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:43:05,295 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:43:05,297 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:43:05,298 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:43:09,826 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:43:09,826 - ===========请求时间:2018-07-04 09:43:09==========================
2018-07-04 09:43:09,827 - url=http://localhost:8081/signIn
2018-07-04 09:43:09,827 - method=POST
2018-07-04 09:43:09,827 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:09,827 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:43:09,827 - args:userName=admin,password=123456,
2018-07-04 09:43:09,882 - {dataSource-1} inited
2018-07-04 09:43:10,249 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,249 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:43:10, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:43:10,329 - ===========进入拦截器==============
2018-07-04 09:43:10,329 - http://localhost:8081/home
2018-07-04 09:43:10,335 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:43:10,335 - ===========请求时间:2018-07-04 09:43:10==========================
2018-07-04 09:43:10,335 - url=http://localhost:8081/home
2018-07-04 09:43:10,335 - method=GET
2018-07-04 09:43:10,335 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:10,335 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:43:10,335 - args:
2018-07-04 09:43:10,335 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,335 - response=/home
2018-07-04 09:43:10,335 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:10,438 - ===========进入拦截器==============
2018-07-04 09:43:10,439 - http://localhost:8081/welcome
2018-07-04 09:43:10,444 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:43:10,444 - ===========请求时间:2018-07-04 09:43:10==========================
2018-07-04 09:43:10,444 - url=http://localhost:8081/welcome
2018-07-04 09:43:10,444 - method=GET
2018-07-04 09:43:10,444 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:10,444 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:43:10,445 - args:
2018-07-04 09:43:10,445 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,445 - response=/welcome
2018-07-04 09:43:10,445 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:10,482 - ===========进入拦截器==============
2018-07-04 09:43:10,484 - http://localhost:8081/common/top
2018-07-04 09:43:10,485 - ===========进入拦截器==============
2018-07-04 09:43:10,485 - http://localhost:8081/common/left
2018-07-04 09:43:10,488 - ===========进入拦截器==============
2018-07-04 09:43:10,489 - http://localhost:8081/common/footer
2018-07-04 09:43:10,489 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:43:10,489 - ===========请求时间:2018-07-04 09:43:10==========================
2018-07-04 09:43:10,489 - url=http://localhost:8081/common/top
2018-07-04 09:43:10,489 - method=GET
2018-07-04 09:43:10,489 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:10,489 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:43:10,489 - args:
2018-07-04 09:43:10,490 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,490 - response=/common/top
2018-07-04 09:43:10,490 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:10,500 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:43:10,500 - ===========请求时间:2018-07-04 09:43:10==========================
2018-07-04 09:43:10,500 - url=http://localhost:8081/common/left
2018-07-04 09:43:10,500 - method=GET
2018-07-04 09:43:10,500 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:10,500 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:43:10,500 - args:
2018-07-04 09:43:10,501 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,501 - response=/common/left
2018-07-04 09:43:10,501 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:10,510 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:43:10,510 - ===========请求时间:2018-07-04 09:43:10==========================
2018-07-04 09:43:10,511 - url=http://localhost:8081/common/footer
2018-07-04 09:43:10,511 - method=GET
2018-07-04 09:43:10,511 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:10,511 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:43:10,511 - args:
2018-07-04 09:43:10,511 - =============结束请求时间:2018-07-04 09:43:10,耗时:0s======================
2018-07-04 09:43:10,511 - response=/common/footer
2018-07-04 09:43:10,511 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:12,101 - ===========进入拦截器==============
2018-07-04 09:43:12,102 - http://localhost:8081/menu.html
2018-07-04 09:43:12,108 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:43:12,109 - ===========请求时间:2018-07-04 09:43:12==========================
2018-07-04 09:43:12,109 - url=http://localhost:8081/menu.html
2018-07-04 09:43:12,109 - method=GET
2018-07-04 09:43:12,109 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:12,109 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:43:12,109 - args:
2018-07-04 09:43:12,109 - =============结束请求时间:2018-07-04 09:43:12,耗时:0s======================
2018-07-04 09:43:12,109 - response=/menu
2018-07-04 09:43:12,109 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:12,238 - ===========进入拦截器==============
2018-07-04 09:43:12,238 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:43:12,243 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:43:12,243 - ===========请求时间:2018-07-04 09:43:12==========================
2018-07-04 09:43:12,243 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:43:12,244 - method=GET
2018-07-04 09:43:12,244 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:12,244 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:43:12,244 - args:
2018-07-04 09:43:12,257 - =============结束请求时间:2018-07-04 09:43:12,耗时:0s======================
2018-07-04 09:43:12,257 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:43:12,268 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,148 - ===========进入拦截器==============
2018-07-04 09:43:13,148 - http://localhost:8081/error
2018-07-04 09:43:13,162 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,171 - ===========进入拦截器==============
2018-07-04 09:43:13,171 - http://localhost:8081/errorpage/404
2018-07-04 09:43:13,183 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:43:13,184 - ===========请求时间:2018-07-04 09:43:13==========================
2018-07-04 09:43:13,184 - url=http://localhost:8081/errorpage/404
2018-07-04 09:43:13,184 - method=GET
2018-07-04 09:43:13,184 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:13,184 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:43:13,184 - args:
2018-07-04 09:43:13,184 - =============结束请求时间:2018-07-04 09:43:13,耗时:0s======================
2018-07-04 09:43:13,184 - response=/errorpage/404
2018-07-04 09:43:13,184 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,217 - ===========进入拦截器==============
2018-07-04 09:43:13,217 - ===========进入拦截器==============
2018-07-04 09:43:13,217 - http://localhost:8081/error
2018-07-04 09:43:13,217 - http://localhost:8081/error
2018-07-04 09:43:13,229 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,230 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,242 - ===========进入拦截器==============
2018-07-04 09:43:13,242 - http://localhost:8081/error
2018-07-04 09:43:13,246 - ===========进入拦截器==============
2018-07-04 09:43:13,247 - http://localhost:8081/error
2018-07-04 09:43:13,249 - ===========进入拦截器==============
2018-07-04 09:43:13,249 - http://localhost:8081/error
2018-07-04 09:43:13,249 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,252 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,254 - ===========进入拦截器==============
2018-07-04 09:43:13,254 - http://localhost:8081/error
2018-07-04 09:43:13,255 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,255 - ===========进入拦截器==============
2018-07-04 09:43:13,256 - http://localhost:8081/error
2018-07-04 09:43:13,259 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,247 - ===========进入拦截器==============
2018-07-04 09:43:13,262 - http://localhost:8081/error
2018-07-04 09:43:13,264 - ===========进入拦截器==============
2018-07-04 09:43:13,264 - http://localhost:8081/error
2018-07-04 09:43:13,265 - ===========进入拦截器==============
2018-07-04 09:43:13,266 - http://localhost:8081/error
2018-07-04 09:43:13,268 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,281 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,282 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,289 - ===========进入拦截器==============
2018-07-04 09:43:13,289 - http://localhost:8081/error
2018-07-04 09:43:13,295 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,300 - ===========进入拦截器==============
2018-07-04 09:43:13,300 - http://localhost:8081/error
2018-07-04 09:43:13,307 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,312 - ===========进入拦截器==============
2018-07-04 09:43:13,312 - http://localhost:8081/error
2018-07-04 09:43:13,318 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:13,325 - ===========进入拦截器==============
2018-07-04 09:43:13,325 - http://localhost:8081/error
2018-07-04 09:43:13,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:19,443 - ===========进入拦截器==============
2018-07-04 09:43:19,443 - http://localhost:8081/menu.html
2018-07-04 09:43:19,448 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:43:19,448 - ===========请求时间:2018-07-04 09:43:19==========================
2018-07-04 09:43:19,448 - url=http://localhost:8081/menu.html
2018-07-04 09:43:19,448 - method=GET
2018-07-04 09:43:19,448 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:19,448 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:43:19,448 - args:
2018-07-04 09:43:19,448 - =============结束请求时间:2018-07-04 09:43:19,耗时:0s======================
2018-07-04 09:43:19,448 - response=/menu
2018-07-04 09:43:19,449 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:43:19,574 - ===========进入拦截器==============
2018-07-04 09:43:19,575 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:43:19,579 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:43:19,579 - ===========请求时间:2018-07-04 09:43:19==========================
2018-07-04 09:43:19,579 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:43:19,579 - method=GET
2018-07-04 09:43:19,579 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:43:19,579 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:43:19,579 - args:
2018-07-04 09:43:19,583 - =============结束请求时间:2018-07-04 09:43:19,耗时:0s======================
2018-07-04 09:43:19,583 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:43:19,583 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,532 - ===========进入拦截器==============
2018-07-04 09:44:41,532 - http://localhost:8081/error
2018-07-04 09:44:41,553 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,563 - ===========进入拦截器==============
2018-07-04 09:44:41,563 - http://localhost:8081/errorpage/404
2018-07-04 09:44:41,567 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:44:41,567 - ===========请求时间:2018-07-04 09:44:41==========================
2018-07-04 09:44:41,567 - url=http://localhost:8081/errorpage/404
2018-07-04 09:44:41,567 - method=GET
2018-07-04 09:44:41,567 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:44:41,568 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:44:41,568 - args:
2018-07-04 09:44:41,568 - =============结束请求时间:2018-07-04 09:44:41,耗时:0s======================
2018-07-04 09:44:41,568 - response=/errorpage/404
2018-07-04 09:44:41,568 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,603 - ===========进入拦截器==============
2018-07-04 09:44:41,603 - http://localhost:8081/error
2018-07-04 09:44:41,605 - ===========进入拦截器==============
2018-07-04 09:44:41,605 - http://localhost:8081/error
2018-07-04 09:44:41,611 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,613 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,623 - ===========进入拦截器==============
2018-07-04 09:44:41,623 - http://localhost:8081/error
2018-07-04 09:44:41,623 - ===========进入拦截器==============
2018-07-04 09:44:41,623 - http://localhost:8081/error
2018-07-04 09:44:41,625 - ===========进入拦截器==============
2018-07-04 09:44:41,625 - http://localhost:8081/error
2018-07-04 09:44:41,625 - ===========进入拦截器==============
2018-07-04 09:44:41,626 - http://localhost:8081/error
2018-07-04 09:44:41,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,630 - ===========进入拦截器==============
2018-07-04 09:44:41,630 - http://localhost:8081/error
2018-07-04 09:44:41,632 - ===========进入拦截器==============
2018-07-04 09:44:41,632 - http://localhost:8081/error
2018-07-04 09:44:41,635 - ===========进入拦截器==============
2018-07-04 09:44:41,636 - http://localhost:8081/error
2018-07-04 09:44:41,636 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,636 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,639 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,642 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,646 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,648 - ===========进入拦截器==============
2018-07-04 09:44:41,648 - http://localhost:8081/error
2018-07-04 09:44:41,653 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,658 - ===========进入拦截器==============
2018-07-04 09:44:41,658 - http://localhost:8081/error
2018-07-04 09:44:41,668 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,675 - ===========进入拦截器==============
2018-07-04 09:44:41,675 - http://localhost:8081/error
2018-07-04 09:44:41,679 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:41,684 - ===========进入拦截器==============
2018-07-04 09:44:41,684 - http://localhost:8081/error
2018-07-04 09:44:41,691 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:55,387 - ===========进入拦截器==============
2018-07-04 09:44:55,387 - http://localhost:8081/user.html
2018-07-04 09:44:55,395 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-04 09:44:55,395 - ===========请求时间:2018-07-04 09:44:55==========================
2018-07-04 09:44:55,395 - url=http://localhost:8081/user.html
2018-07-04 09:44:55,395 - method=GET
2018-07-04 09:44:55,395 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:44:55,395 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-04 09:44:55,395 - args:
2018-07-04 09:44:55,395 - =============结束请求时间:2018-07-04 09:44:55,耗时:0s======================
2018-07-04 09:44:55,395 - response=/user
2018-07-04 09:44:55,395 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:55,520 - ===========进入拦截器==============
2018-07-04 09:44:55,520 - http://localhost:8081/user/findAllUser
2018-07-04 09:44:55,526 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-04 09:44:55,527 - ===========请求时间:2018-07-04 09:44:55==========================
2018-07-04 09:44:55,527 - url=http://localhost:8081/user/findAllUser
2018-07-04 09:44:55,527 - method=GET
2018-07-04 09:44:55,527 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:44:55,527 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-04 09:44:55,527 - args:userName=,
2018-07-04 09:44:55,538 - =============结束请求时间:2018-07-04 09:44:55,耗时:0s======================
2018-07-04 09:44:55,539 - response=Result(code=200, msg=成功, data=[User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:43:10.0, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=1, totalPage=null), totalCount=1)
2018-07-04 09:44:55,541 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:56,446 - ===========进入拦截器==============
2018-07-04 09:44:56,446 - http://localhost:8081/menu.html
2018-07-04 09:44:56,452 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:44:56,452 - ===========请求时间:2018-07-04 09:44:56==========================
2018-07-04 09:44:56,452 - url=http://localhost:8081/menu.html
2018-07-04 09:44:56,452 - method=GET
2018-07-04 09:44:56,452 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:44:56,452 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:44:56,453 - args:
2018-07-04 09:44:56,453 - =============结束请求时间:2018-07-04 09:44:56,耗时:0s======================
2018-07-04 09:44:56,453 - response=/menu
2018-07-04 09:44:56,453 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:44:56,565 - ===========进入拦截器==============
2018-07-04 09:44:56,565 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:44:56,569 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:44:56,569 - ===========请求时间:2018-07-04 09:44:56==========================
2018-07-04 09:44:56,569 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:44:56,569 - method=GET
2018-07-04 09:44:56,569 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:44:56,569 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:44:56,569 - args:
2018-07-04 09:44:56,573 - =============结束请求时间:2018-07-04 09:44:56,耗时:0s======================
2018-07-04 09:44:56,574 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:44:56,574 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,322 - ===========进入拦截器==============
2018-07-04 09:45:00,322 - http://localhost:8081/error
2018-07-04 09:45:00,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,343 - ===========进入拦截器==============
2018-07-04 09:45:00,343 - http://localhost:8081/errorpage/404
2018-07-04 09:45:00,347 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:45:00,348 - ===========请求时间:2018-07-04 09:45:00==========================
2018-07-04 09:45:00,348 - url=http://localhost:8081/errorpage/404
2018-07-04 09:45:00,348 - method=GET
2018-07-04 09:45:00,348 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:45:00,348 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:45:00,348 - args:
2018-07-04 09:45:00,348 - =============结束请求时间:2018-07-04 09:45:00,耗时:0s======================
2018-07-04 09:45:00,348 - response=/errorpage/404
2018-07-04 09:45:00,348 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,380 - ===========进入拦截器==============
2018-07-04 09:45:00,380 - http://localhost:8081/error
2018-07-04 09:45:00,381 - ===========进入拦截器==============
2018-07-04 09:45:00,382 - http://localhost:8081/error
2018-07-04 09:45:00,386 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,387 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,397 - ===========进入拦截器==============
2018-07-04 09:45:00,397 - http://localhost:8081/error
2018-07-04 09:45:00,398 - ===========进入拦截器==============
2018-07-04 09:45:00,398 - http://localhost:8081/error
2018-07-04 09:45:00,398 - ===========进入拦截器==============
2018-07-04 09:45:00,398 - http://localhost:8081/error
2018-07-04 09:45:00,398 - ===========进入拦截器==============
2018-07-04 09:45:00,398 - http://localhost:8081/error
2018-07-04 09:45:00,399 - ===========进入拦截器==============
2018-07-04 09:45:00,399 - http://localhost:8081/error
2018-07-04 09:45:00,401 - ===========进入拦截器==============
2018-07-04 09:45:00,401 - http://localhost:8081/error
2018-07-04 09:45:00,403 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,403 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,404 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,404 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,407 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,413 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,417 - ===========进入拦截器==============
2018-07-04 09:45:00,417 - http://localhost:8081/error
2018-07-04 09:45:00,417 - ===========进入拦截器==============
2018-07-04 09:45:00,417 - http://localhost:8081/error
2018-07-04 09:45:00,418 - ===========进入拦截器==============
2018-07-04 09:45:00,419 - http://localhost:8081/error
2018-07-04 09:45:00,420 - ===========进入拦截器==============
2018-07-04 09:45:00,421 - http://localhost:8081/error
2018-07-04 09:45:00,421 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,422 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,423 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,431 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,436 - ===========进入拦截器==============
2018-07-04 09:45:00,437 - http://localhost:8081/error
2018-07-04 09:45:00,441 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,446 - ===========进入拦截器==============
2018-07-04 09:45:00,446 - http://localhost:8081/error
2018-07-04 09:45:00,451 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:00,456 - ===========进入拦截器==============
2018-07-04 09:45:00,456 - http://localhost:8081/error
2018-07-04 09:45:00,463 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:56,644 - ===========进入拦截器==============
2018-07-04 09:45:56,644 - http://localhost:8081/menu.html
2018-07-04 09:45:56,655 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:45:56,656 - ===========请求时间:2018-07-04 09:45:56==========================
2018-07-04 09:45:56,656 - url=http://localhost:8081/menu.html
2018-07-04 09:45:56,656 - method=GET
2018-07-04 09:45:56,656 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:45:56,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:45:56,656 - args:
2018-07-04 09:45:56,656 - =============结束请求时间:2018-07-04 09:45:56,耗时:0s======================
2018-07-04 09:45:56,656 - response=/menu
2018-07-04 09:45:56,657 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:56,794 - ===========进入拦截器==============
2018-07-04 09:45:56,794 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:45:56,801 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:45:56,801 - ===========请求时间:2018-07-04 09:45:56==========================
2018-07-04 09:45:56,801 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:45:56,801 - method=GET
2018-07-04 09:45:56,801 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:45:56,801 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:45:56,801 - args:
2018-07-04 09:45:56,808 - =============结束请求时间:2018-07-04 09:45:56,耗时:0s======================
2018-07-04 09:45:56,808 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:45:56,809 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,315 - ===========进入拦截器==============
2018-07-04 09:45:59,315 - http://localhost:8081/error
2018-07-04 09:45:59,321 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,334 - ===========进入拦截器==============
2018-07-04 09:45:59,334 - http://localhost:8081/errorpage/404
2018-07-04 09:45:59,343 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.notFound============
2018-07-04 09:45:59,343 - ===========请求时间:2018-07-04 09:45:59==========================
2018-07-04 09:45:59,343 - url=http://localhost:8081/errorpage/404
2018-07-04 09:45:59,343 - method=GET
2018-07-04 09:45:59,343 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:45:59,343 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.notFound
2018-07-04 09:45:59,343 - args:
2018-07-04 09:45:59,343 - =============结束请求时间:2018-07-04 09:45:59,耗时:0s======================
2018-07-04 09:45:59,343 - response=/errorpage/404
2018-07-04 09:45:59,344 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,374 - ===========进入拦截器==============
2018-07-04 09:45:59,374 - ===========进入拦截器==============
2018-07-04 09:45:59,374 - http://localhost:8081/error
2018-07-04 09:45:59,374 - http://localhost:8081/error
2018-07-04 09:45:59,378 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,379 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,390 - ===========进入拦截器==============
2018-07-04 09:45:59,390 - http://localhost:8081/error
2018-07-04 09:45:59,392 - ===========进入拦截器==============
2018-07-04 09:45:59,392 - http://localhost:8081/error
2018-07-04 09:45:59,393 - ===========进入拦截器==============
2018-07-04 09:45:59,393 - http://localhost:8081/error
2018-07-04 09:45:59,395 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,396 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,398 - ===========进入拦截器==============
2018-07-04 09:45:59,398 - http://localhost:8081/error
2018-07-04 09:45:59,399 - ===========进入拦截器==============
2018-07-04 09:45:59,399 - http://localhost:8081/error
2018-07-04 09:45:59,400 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,399 - ===========进入拦截器==============
2018-07-04 09:45:59,401 - http://localhost:8081/error
2018-07-04 09:45:59,402 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,404 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,412 - ===========进入拦截器==============
2018-07-04 09:45:59,412 - http://localhost:8081/error
2018-07-04 09:45:59,414 - ===========进入拦截器==============
2018-07-04 09:45:59,414 - ===========进入拦截器==============
2018-07-04 09:45:59,414 - http://localhost:8081/error
2018-07-04 09:45:59,414 - http://localhost:8081/error
2018-07-04 09:45:59,415 - ===========进入拦截器==============
2018-07-04 09:45:59,415 - http://localhost:8081/error
2018-07-04 09:45:59,433 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,434 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,434 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,434 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,434 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,442 - ===========进入拦截器==============
2018-07-04 09:45:59,442 - http://localhost:8081/error
2018-07-04 09:45:59,447 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:45:59,452 - ===========进入拦截器==============
2018-07-04 09:45:59,452 - http://localhost:8081/error
2018-07-04 09:45:59,458 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:48:55,791 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13608 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:48:55,793 - No active profile set, falling back to default profiles: default
2018-07-04 09:48:55,998 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:48:56,038 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:48:56 CST 2018]; root of context hierarchy
2018-07-04 09:48:56,828 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:48:57,914 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:48:57,926 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:48:57,934 - Starting service [Tomcat]
2018-07-04 09:48:57,934 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:48:58,029 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:48:58,029 - Root WebApplicationContext: initialization completed in 1991 ms
2018-07-04 09:48:58,275 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:48:58,278 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:48:58,279 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:48:58,279 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:48:58,279 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:48:58,279 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:48:59,135 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78dc2fcc: startup date [Wed Jul 04 09:48:56 CST 2018]; root of context hierarchy
2018-07-04 09:48:59,198 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:48:59,199 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:48:59,199 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:48:59,199 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:48:59,199 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:48:59,199 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:48:59,199 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:48:59,199 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:48:59,200 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:48:59,200 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:48:59,200 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:48:59,200 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:48:59,200 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:48:59,200 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:48:59,200 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:48:59,201 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:48:59,201 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:48:59,204 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:48:59,204 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:48:59,206 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:48:59,206 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:48:59,206 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:48:59,206 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:48:59,206 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:48:59,207 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:48:59,207 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:48:59,207 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:48:59,207 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:48:59,208 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 09:48:59,208 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 09:48:59,208 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 09:48:59,208 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 09:48:59,209 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:48:59,210 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:48:59,210 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:48:59,210 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:48:59,210 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:48:59,210 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:48:59,212 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:48:59,212 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:48:59,212 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:48:59,212 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:48:59,212 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:48:59,212 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:48:59,212 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:48:59,214 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:48:59,215 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:48:59,257 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:48:59,257 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:48:59,276 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:48:59,303 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:48:59,902 - LiveReload server is running on port 35729
2018-07-04 09:49:00,028 - Registering beans for JMX exposure on startup
2018-07-04 09:49:00,029 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:49:00,033 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:49:00,043 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:49:00,054 - Using a shared selector for servlet write/read
2018-07-04 09:49:00,067 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:49:00,072 - Started FqLtdWasBackstageApplication in 4.974 seconds (JVM running for 6.108)
2018-07-04 09:49:02,627 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:49:02,627 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:49:02,664 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 09:49:02,679 - ===========进入拦截器==============
2018-07-04 09:49:02,699 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:49:02,700 - ===========请求时间:2018-07-04 09:49:02==========================
2018-07-04 09:49:02,700 - url=http://localhost:8081/login
2018-07-04 09:49:02,700 - method=GET
2018-07-04 09:49:02,701 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:02,701 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:49:02,701 - args:
2018-07-04 09:49:02,704 - =============结束请求时间:2018-07-04 09:49:02,耗时:0s======================
2018-07-04 09:49:02,704 - response=/login
2018-07-04 09:49:02,732 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:49:02,766 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:49:02,766 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:49:02,766 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:49:02,766 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:49:02,769 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:49:02,769 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:49:08,083 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:49:08,084 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,084 - url=http://localhost:8081/signIn
2018-07-04 09:49:08,084 - method=POST
2018-07-04 09:49:08,084 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,084 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:49:08,084 - args:userName=admin,password=123456,
2018-07-04 09:49:08,155 - {dataSource-1} inited
2018-07-04 09:49:08,509 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,509 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:49:08, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:49:08,593 - ===========进入拦截器==============
2018-07-04 09:49:08,593 - http://localhost:8081/home
2018-07-04 09:49:08,602 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:49:08,602 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,602 - url=http://localhost:8081/home
2018-07-04 09:49:08,602 - method=GET
2018-07-04 09:49:08,602 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,602 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:49:08,602 - args:
2018-07-04 09:49:08,602 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,602 - response=/home
2018-07-04 09:49:08,603 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:08,706 - ===========进入拦截器==============
2018-07-04 09:49:08,707 - http://localhost:8081/welcome
2018-07-04 09:49:08,714 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:49:08,714 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,714 - url=http://localhost:8081/welcome
2018-07-04 09:49:08,714 - method=GET
2018-07-04 09:49:08,714 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,714 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:49:08,714 - args:
2018-07-04 09:49:08,714 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,714 - response=/welcome
2018-07-04 09:49:08,715 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:08,744 - ===========进入拦截器==============
2018-07-04 09:49:08,744 - http://localhost:8081/common/top
2018-07-04 09:49:08,745 - ===========进入拦截器==============
2018-07-04 09:49:08,745 - http://localhost:8081/common/left
2018-07-04 09:49:08,745 - ===========进入拦截器==============
2018-07-04 09:49:08,745 - http://localhost:8081/common/footer
2018-07-04 09:49:08,749 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:49:08,749 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,749 - url=http://localhost:8081/common/top
2018-07-04 09:49:08,749 - method=GET
2018-07-04 09:49:08,749 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,749 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:49:08,749 - args:
2018-07-04 09:49:08,749 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,749 - response=/common/top
2018-07-04 09:49:08,750 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:08,764 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:49:08,764 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,764 - url=http://localhost:8081/common/left
2018-07-04 09:49:08,764 - method=GET
2018-07-04 09:49:08,764 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,764 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:49:08,764 - args:
2018-07-04 09:49:08,765 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,765 - response=/common/left
2018-07-04 09:49:08,765 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:08,776 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:49:08,776 - ===========请求时间:2018-07-04 09:49:08==========================
2018-07-04 09:49:08,776 - url=http://localhost:8081/common/footer
2018-07-04 09:49:08,776 - method=GET
2018-07-04 09:49:08,776 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:08,776 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:49:08,776 - args:
2018-07-04 09:49:08,776 - =============结束请求时间:2018-07-04 09:49:08,耗时:0s======================
2018-07-04 09:49:08,776 - response=/common/footer
2018-07-04 09:49:08,777 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:11,219 - ===========进入拦截器==============
2018-07-04 09:49:11,220 - http://localhost:8081/menu.html
2018-07-04 09:49:11,227 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:49:11,227 - ===========请求时间:2018-07-04 09:49:11==========================
2018-07-04 09:49:11,227 - url=http://localhost:8081/menu.html
2018-07-04 09:49:11,227 - method=GET
2018-07-04 09:49:11,227 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:11,227 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:49:11,227 - args:
2018-07-04 09:49:11,227 - =============结束请求时间:2018-07-04 09:49:11,耗时:0s======================
2018-07-04 09:49:11,227 - response=/menu
2018-07-04 09:49:11,227 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:11,367 - ===========进入拦截器==============
2018-07-04 09:49:11,367 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:49:11,373 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:49:11,373 - ===========请求时间:2018-07-04 09:49:11==========================
2018-07-04 09:49:11,373 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:49:11,373 - method=GET
2018-07-04 09:49:11,373 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:11,373 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:49:11,373 - args:
2018-07-04 09:49:11,385 - =============结束请求时间:2018-07-04 09:49:11,耗时:0s======================
2018-07-04 09:49:11,385 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:49:11,392 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:49:14,628 - ===========进入拦截器==============
2018-07-04 09:49:14,628 - http://localhost:8081/project/findAllProject
2018-07-04 09:49:14,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 09:49:14,633 - ===========请求时间:2018-07-04 09:49:14==========================
2018-07-04 09:49:14,633 - url=http://localhost:8081/project/findAllProject
2018-07-04 09:49:14,633 - method=GET
2018-07-04 09:49:14,633 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:49:14,633 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 09:49:14,633 - args:
2018-07-04 09:49:14,649 - =============结束请求时间:2018-07-04 09:49:14,耗时:0s======================
2018-07-04 09:49:14,650 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 09:49:14,652 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:50:35,928 - ===========进入拦截器==============
2018-07-04 09:50:35,928 - http://localhost:8081/menu/findIconList
2018-07-04 09:50:35,963 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:50:35,963 - ===========请求时间:2018-07-04 09:50:35==========================
2018-07-04 09:50:35,964 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:50:35,964 - method=GET
2018-07-04 09:50:35,964 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:50:35,964 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:50:35,964 - args:
2018-07-04 09:50:35,973 - =============结束请求时间:2018-07-04 09:50:35,耗时:0s======================
2018-07-04 09:50:35,973 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:50:35,975 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:51:02,274 - ===========进入拦截器==============
2018-07-04 09:51:02,274 - http://localhost:8081/menu/addMenu
2018-07-04 09:51:02,286 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 09:51:02,286 - ===========请求时间:2018-07-04 09:51:02==========================
2018-07-04 09:51:02,286 - url=http://localhost:8081/menu/addMenu
2018-07-04 09:51:02,286 - method=GET
2018-07-04 09:51:02,286 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:51:02,286 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 09:51:02,286 - args:menuName=数字货币管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 09:51:02,294 - =============结束请求时间:2018-07-04 09:51:02,耗时:0s======================
2018-07-04 09:55:45,525 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9592 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:55:45,528 - No active profile set, falling back to default profiles: default
2018-07-04 09:55:45,706 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:55:45,802 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38dedd69: startup date [Wed Jul 04 09:55:45 CST 2018]; root of context hierarchy
2018-07-04 09:55:47,015 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:55:47,982 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:55:47,994 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:55:48,003 - Starting service [Tomcat]
2018-07-04 09:55:48,004 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:55:48,102 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:55:48,103 - Root WebApplicationContext: initialization completed in 2301 ms
2018-07-04 09:55:48,301 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:55:48,305 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:55:48,306 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:55:48,306 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:55:48,306 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:55:48,306 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:55:49,065 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@38dedd69: startup date [Wed Jul 04 09:55:45 CST 2018]; root of context hierarchy
2018-07-04 09:55:49,133 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:55:49,134 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:55:49,135 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:55:49,135 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:55:49,135 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:55:49,135 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:55:49,135 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:55:49,135 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:55:49,135 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:55:49,135 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:55:49,135 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:55:49,136 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:55:49,136 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:55:49,136 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:55:49,136 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:55:49,136 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:55:49,136 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:55:49,139 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:55:49,140 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:55:49,142 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:55:49,142 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:55:49,142 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:55:49,142 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:55:49,143 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:55:49,143 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:55:49,143 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:55:49,143 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:55:49,143 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:55:49,144 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 09:55:49,144 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 09:55:49,144 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 09:55:49,145 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 09:55:49,146 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:55:49,146 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:55:49,146 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:55:49,146 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:55:49,146 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:55:49,146 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:55:49,148 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:55:49,148 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:55:49,149 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:55:49,149 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:55:49,149 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:55:49,149 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:55:49,149 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:55:49,150 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:55:49,151 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:55:49,195 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:55:49,195 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:55:49,215 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:55:49,241 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:55:49,830 - LiveReload server is running on port 35729
2018-07-04 09:55:49,954 - Registering beans for JMX exposure on startup
2018-07-04 09:55:49,955 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:55:49,960 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:55:49,969 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:55:49,980 - Using a shared selector for servlet write/read
2018-07-04 09:55:49,992 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:55:49,997 - Started FqLtdWasBackstageApplication in 5.014 seconds (JVM running for 6.038)
2018-07-04 09:55:52,223 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:55:52,223 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:55:52,261 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 09:55:52,276 - ===========进入拦截器==============
2018-07-04 09:55:52,297 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:55:52,297 - ===========请求时间:2018-07-04 09:55:52==========================
2018-07-04 09:55:52,297 - url=http://localhost:8081/login
2018-07-04 09:55:52,297 - method=GET
2018-07-04 09:55:52,298 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:52,298 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:55:52,298 - args:
2018-07-04 09:55:52,301 - =============结束请求时间:2018-07-04 09:55:52,耗时:0s======================
2018-07-04 09:55:52,301 - response=/login
2018-07-04 09:55:52,329 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:55:52,363 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:55:52,363 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:55:52,363 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:55:52,363 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:55:52,365 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:55:52,366 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:55:57,400 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:55:57,400 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,400 - url=http://localhost:8081/signIn
2018-07-04 09:55:57,400 - method=POST
2018-07-04 09:55:57,400 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,400 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:55:57,400 - args:userName=admin,password=123456,
2018-07-04 09:55:57,455 - {dataSource-1} inited
2018-07-04 09:55:57,805 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,805 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:55:57, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:55:57,870 - ===========进入拦截器==============
2018-07-04 09:55:57,870 - http://localhost:8081/home
2018-07-04 09:55:57,877 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:55:57,877 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,877 - url=http://localhost:8081/home
2018-07-04 09:55:57,877 - method=GET
2018-07-04 09:55:57,877 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,877 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:55:57,877 - args:
2018-07-04 09:55:57,877 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,877 - response=/home
2018-07-04 09:55:57,877 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:55:57,953 - ===========进入拦截器==============
2018-07-04 09:55:57,953 - http://localhost:8081/welcome
2018-07-04 09:55:57,960 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:55:57,960 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,960 - url=http://localhost:8081/welcome
2018-07-04 09:55:57,960 - method=GET
2018-07-04 09:55:57,960 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,960 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:55:57,960 - args:
2018-07-04 09:55:57,960 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,960 - response=/welcome
2018-07-04 09:55:57,960 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:55:57,970 - ===========进入拦截器==============
2018-07-04 09:55:57,971 - http://localhost:8081/common/top
2018-07-04 09:55:57,974 - ===========进入拦截器==============
2018-07-04 09:55:57,974 - http://localhost:8081/common/left
2018-07-04 09:55:57,976 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:55:57,977 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,977 - url=http://localhost:8081/common/top
2018-07-04 09:55:57,977 - method=GET
2018-07-04 09:55:57,977 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,977 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:55:57,977 - args:
2018-07-04 09:55:57,977 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,977 - response=/common/top
2018-07-04 09:55:57,977 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:55:57,978 - ===========进入拦截器==============
2018-07-04 09:55:57,979 - http://localhost:8081/common/footer
2018-07-04 09:55:57,984 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:55:57,984 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,984 - url=http://localhost:8081/common/footer
2018-07-04 09:55:57,984 - method=GET
2018-07-04 09:55:57,984 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,984 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:55:57,984 - args:
2018-07-04 09:55:57,985 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,985 - response=/common/footer
2018-07-04 09:55:57,985 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:55:57,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:55:57,991 - ===========请求时间:2018-07-04 09:55:57==========================
2018-07-04 09:55:57,991 - url=http://localhost:8081/common/left
2018-07-04 09:55:57,991 - method=GET
2018-07-04 09:55:57,991 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:57,991 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:55:57,991 - args:
2018-07-04 09:55:57,991 - =============结束请求时间:2018-07-04 09:55:57,耗时:0s======================
2018-07-04 09:55:57,991 - response=/common/left
2018-07-04 09:55:57,992 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:55:59,970 - ===========进入拦截器==============
2018-07-04 09:55:59,970 - http://localhost:8081/menu.html
2018-07-04 09:55:59,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:55:59,976 - ===========请求时间:2018-07-04 09:55:59==========================
2018-07-04 09:55:59,976 - url=http://localhost:8081/menu.html
2018-07-04 09:55:59,976 - method=GET
2018-07-04 09:55:59,976 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:55:59,976 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:55:59,976 - args:
2018-07-04 09:55:59,976 - =============结束请求时间:2018-07-04 09:55:59,耗时:0s======================
2018-07-04 09:55:59,976 - response=/menu
2018-07-04 09:55:59,976 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:00,076 - ===========进入拦截器==============
2018-07-04 09:56:00,076 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:56:00,081 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:56:00,081 - ===========请求时间:2018-07-04 09:56:00==========================
2018-07-04 09:56:00,081 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:56:00,081 - method=GET
2018-07-04 09:56:00,081 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:00,081 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:56:00,081 - args:
2018-07-04 09:56:00,092 - =============结束请求时间:2018-07-04 09:56:00,耗时:0s======================
2018-07-04 09:56:00,092 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:56:00,096 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:02,570 - ===========进入拦截器==============
2018-07-04 09:56:02,570 - http://localhost:8081/project/findAllProject
2018-07-04 09:56:02,575 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 09:56:02,575 - ===========请求时间:2018-07-04 09:56:02==========================
2018-07-04 09:56:02,575 - url=http://localhost:8081/project/findAllProject
2018-07-04 09:56:02,575 - method=GET
2018-07-04 09:56:02,575 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:02,575 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 09:56:02,575 - args:
2018-07-04 09:56:02,587 - =============结束请求时间:2018-07-04 09:56:02,耗时:0s======================
2018-07-04 09:56:02,587 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 09:56:02,589 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:12,238 - ===========进入拦截器==============
2018-07-04 09:56:12,238 - http://localhost:8081/menu/findIconList
2018-07-04 09:56:12,272 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:56:12,272 - ===========请求时间:2018-07-04 09:56:12==========================
2018-07-04 09:56:12,272 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:56:12,273 - method=GET
2018-07-04 09:56:12,273 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:12,273 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:56:12,273 - args:
2018-07-04 09:56:12,283 - =============结束请求时间:2018-07-04 09:56:12,耗时:0s======================
2018-07-04 09:56:12,283 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:56:12,286 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:14,778 - ===========进入拦截器==============
2018-07-04 09:56:14,778 - http://localhost:8081/menu/addMenu
2018-07-04 09:56:14,790 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 09:56:14,790 - ===========请求时间:2018-07-04 09:56:14==========================
2018-07-04 09:56:14,790 - url=http://localhost:8081/menu/addMenu
2018-07-04 09:56:14,790 - method=GET
2018-07-04 09:56:14,790 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:14,790 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 09:56:14,790 - args:menuName=数字货币管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 09:56:14,820 - =============结束请求时间:2018-07-04 09:56:14,耗时:0s======================
2018-07-04 09:56:14,820 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 09:56:14,822 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:17,033 - ===========进入拦截器==============
2018-07-04 09:56:17,033 - http://localhost:8081/menu.html
2018-07-04 09:56:17,037 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:56:17,037 - ===========请求时间:2018-07-04 09:56:17==========================
2018-07-04 09:56:17,038 - url=http://localhost:8081/menu.html
2018-07-04 09:56:17,038 - method=GET
2018-07-04 09:56:17,038 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:17,038 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:56:17,038 - args:
2018-07-04 09:56:17,038 - =============结束请求时间:2018-07-04 09:56:17,耗时:0s======================
2018-07-04 09:56:17,038 - response=/menu
2018-07-04 09:56:17,038 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:56:17,138 - ===========进入拦截器==============
2018-07-04 09:56:17,138 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:56:17,143 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:56:17,143 - ===========请求时间:2018-07-04 09:56:17==========================
2018-07-04 09:56:17,143 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:56:17,143 - method=GET
2018-07-04 09:56:17,143 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:56:17,143 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:56:17,143 - args:
2018-07-04 09:56:17,148 - =============结束请求时间:2018-07-04 09:56:17,耗时:0s======================
2018-07-04 09:56:17,148 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=null, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 09:56:17,151 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:37,946 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16156 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 09:57:37,950 - No active profile set, falling back to default profiles: default
2018-07-04 09:57:38,157 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 09:57:38,184 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@bc4d4e1: startup date [Wed Jul 04 09:57:38 CST 2018]; root of context hierarchy
2018-07-04 09:57:39,049 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 09:57:40,068 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 09:57:40,080 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 09:57:40,090 - Starting service [Tomcat]
2018-07-04 09:57:40,090 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 09:57:40,191 - Initializing Spring embedded WebApplicationContext
2018-07-04 09:57:40,191 - Root WebApplicationContext: initialization completed in 2007 ms
2018-07-04 09:57:40,405 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 09:57:40,410 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 09:57:40,410 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 09:57:40,410 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 09:57:40,410 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 09:57:40,410 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 09:57:41,230 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@bc4d4e1: startup date [Wed Jul 04 09:57:38 CST 2018]; root of context hierarchy
2018-07-04 09:57:41,297 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 09:57:41,298 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 09:57:41,298 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 09:57:41,298 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 09:57:41,298 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 09:57:41,298 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 09:57:41,298 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 09:57:41,299 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 09:57:41,299 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 09:57:41,299 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 09:57:41,299 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 09:57:41,299 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 09:57:41,300 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 09:57:41,300 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 09:57:41,300 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 09:57:41,300 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 09:57:41,300 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 09:57:41,303 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 09:57:41,304 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 09:57:41,305 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 09:57:41,306 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 09:57:41,306 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 09:57:41,307 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 09:57:41,307 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 09:57:41,307 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 09:57:41,307 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:57:41,308 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 09:57:41,308 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 09:57:41,310 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 09:57:41,310 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 09:57:41,310 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 09:57:41,310 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 09:57:41,311 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 09:57:41,311 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 09:57:41,312 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 09:57:41,312 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 09:57:41,312 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 09:57:41,312 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 09:57:41,313 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:57:41,313 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:57:41,313 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 09:57:41,314 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 09:57:41,314 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 09:57:41,314 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 09:57:41,314 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 09:57:41,316 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 09:57:41,316 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 09:57:41,381 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:57:41,381 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:57:41,401 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 09:57:41,429 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 09:57:42,089 - LiveReload server is running on port 35729
2018-07-04 09:57:42,220 - Registering beans for JMX exposure on startup
2018-07-04 09:57:42,220 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 09:57:42,226 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 09:57:42,235 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 09:57:42,250 - Using a shared selector for servlet write/read
2018-07-04 09:57:42,263 - Tomcat started on port(s): 8081 (http)
2018-07-04 09:57:42,269 - Started FqLtdWasBackstageApplication in 5.088 seconds (JVM running for 6.16)
2018-07-04 09:57:45,176 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 09:57:45,176 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 09:57:45,215 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 09:57:45,229 - ===========进入拦截器==============
2018-07-04 09:57:45,250 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 09:57:45,250 - ===========请求时间:2018-07-04 09:57:45==========================
2018-07-04 09:57:45,250 - url=http://localhost:8081/login
2018-07-04 09:57:45,250 - method=GET
2018-07-04 09:57:45,250 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:45,250 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 09:57:45,251 - args:
2018-07-04 09:57:45,253 - =============结束请求时间:2018-07-04 09:57:45,耗时:0s======================
2018-07-04 09:57:45,253 - response=/login
2018-07-04 09:57:45,282 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 09:57:45,319 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 09:57:45,319 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 09:57:45,319 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 09:57:45,319 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 09:57:45,322 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 09:57:45,322 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 09:57:50,512 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 09:57:50,512 - ===========请求时间:2018-07-04 09:57:50==========================
2018-07-04 09:57:50,512 - url=http://localhost:8081/signIn
2018-07-04 09:57:50,512 - method=POST
2018-07-04 09:57:50,512 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:50,512 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 09:57:50,512 - args:userName=admin,password=123456,
2018-07-04 09:57:50,570 - {dataSource-1} inited
2018-07-04 09:57:50,942 - =============结束请求时间:2018-07-04 09:57:50,耗时:0s======================
2018-07-04 09:57:50,942 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 09:57:50, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 09:57:51,010 - ===========进入拦截器==============
2018-07-04 09:57:51,010 - http://localhost:8081/home
2018-07-04 09:57:51,015 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 09:57:51,015 - ===========请求时间:2018-07-04 09:57:51==========================
2018-07-04 09:57:51,015 - url=http://localhost:8081/home
2018-07-04 09:57:51,015 - method=GET
2018-07-04 09:57:51,015 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:51,015 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 09:57:51,015 - args:
2018-07-04 09:57:51,015 - =============结束请求时间:2018-07-04 09:57:51,耗时:0s======================
2018-07-04 09:57:51,015 - response=/home
2018-07-04 09:57:51,015 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:51,085 - ===========进入拦截器==============
2018-07-04 09:57:51,085 - http://localhost:8081/welcome
2018-07-04 09:57:51,090 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 09:57:51,090 - ===========请求时间:2018-07-04 09:57:51==========================
2018-07-04 09:57:51,090 - url=http://localhost:8081/welcome
2018-07-04 09:57:51,090 - method=GET
2018-07-04 09:57:51,090 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:51,090 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 09:57:51,090 - args:
2018-07-04 09:57:51,091 - =============结束请求时间:2018-07-04 09:57:51,耗时:0s======================
2018-07-04 09:57:51,091 - response=/welcome
2018-07-04 09:57:51,091 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:51,102 - ===========进入拦截器==============
2018-07-04 09:57:51,102 - http://localhost:8081/common/left
2018-07-04 09:57:51,107 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 09:57:51,108 - ===========请求时间:2018-07-04 09:57:51==========================
2018-07-04 09:57:51,108 - url=http://localhost:8081/common/left
2018-07-04 09:57:51,108 - method=GET
2018-07-04 09:57:51,108 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:51,108 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 09:57:51,108 - args:
2018-07-04 09:57:51,108 - =============结束请求时间:2018-07-04 09:57:51,耗时:0s======================
2018-07-04 09:57:51,108 - response=/common/left
2018-07-04 09:57:51,108 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:51,111 - ===========进入拦截器==============
2018-07-04 09:57:51,111 - http://localhost:8081/common/top
2018-07-04 09:57:51,112 - ===========进入拦截器==============
2018-07-04 09:57:51,114 - http://localhost:8081/common/footer
2018-07-04 09:57:51,119 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 09:57:51,119 - ===========请求时间:2018-07-04 09:57:51==========================
2018-07-04 09:57:51,119 - url=http://localhost:8081/common/top
2018-07-04 09:57:51,119 - method=GET
2018-07-04 09:57:51,119 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:51,119 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 09:57:51,119 - args:
2018-07-04 09:57:51,119 - =============结束请求时间:2018-07-04 09:57:51,耗时:0s======================
2018-07-04 09:57:51,119 - response=/common/top
2018-07-04 09:57:51,119 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:51,132 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 09:57:51,132 - ===========请求时间:2018-07-04 09:57:51==========================
2018-07-04 09:57:51,132 - url=http://localhost:8081/common/footer
2018-07-04 09:57:51,132 - method=GET
2018-07-04 09:57:51,132 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:51,132 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 09:57:51,132 - args:
2018-07-04 09:57:51,132 - =============结束请求时间:2018-07-04 09:57:51,耗时:0s======================
2018-07-04 09:57:51,132 - response=/common/footer
2018-07-04 09:57:51,133 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:53,011 - ===========进入拦截器==============
2018-07-04 09:57:53,011 - http://localhost:8081/menu.html
2018-07-04 09:57:53,018 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 09:57:53,018 - ===========请求时间:2018-07-04 09:57:53==========================
2018-07-04 09:57:53,018 - url=http://localhost:8081/menu.html
2018-07-04 09:57:53,018 - method=GET
2018-07-04 09:57:53,018 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:53,018 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 09:57:53,018 - args:
2018-07-04 09:57:53,018 - =============结束请求时间:2018-07-04 09:57:53,耗时:0s======================
2018-07-04 09:57:53,018 - response=/menu
2018-07-04 09:57:53,018 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:53,122 - ===========进入拦截器==============
2018-07-04 09:57:53,122 - http://localhost:8081/menu/findAllMenu
2018-07-04 09:57:53,142 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 09:57:53,143 - ===========请求时间:2018-07-04 09:57:53==========================
2018-07-04 09:57:53,143 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 09:57:53,143 - method=GET
2018-07-04 09:57:53,143 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:53,143 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 09:57:53,143 - args:
2018-07-04 09:57:53,159 - =============结束请求时间:2018-07-04 09:57:53,耗时:0s======================
2018-07-04 09:57:53,159 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=null, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 09:57:53,169 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:54,914 - ===========进入拦截器==============
2018-07-04 09:57:54,914 - http://localhost:8081/menu/findChildMenu
2018-07-04 09:57:54,921 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 09:57:54,921 - ===========请求时间:2018-07-04 09:57:54==========================
2018-07-04 09:57:54,921 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 09:57:54,921 - method=GET
2018-07-04 09:57:54,921 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:54,921 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 09:57:54,921 - args:parentCode=1,
2018-07-04 09:57:54,926 - =============结束请求时间:2018-07-04 09:57:54,耗时:0s======================
2018-07-04 09:57:54,926 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 09:57:54,927 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:57:57,848 - ===========进入拦截器==============
2018-07-04 09:57:57,848 - http://localhost:8081/project/findAllProject
2018-07-04 09:57:57,853 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 09:57:57,853 - ===========请求时间:2018-07-04 09:57:57==========================
2018-07-04 09:57:57,853 - url=http://localhost:8081/project/findAllProject
2018-07-04 09:57:57,853 - method=GET
2018-07-04 09:57:57,853 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:57:57,853 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 09:57:57,853 - args:
2018-07-04 09:57:57,868 - =============结束请求时间:2018-07-04 09:57:57,耗时:0s======================
2018-07-04 09:57:57,868 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 09:57:57,870 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:58:34,495 - ===========进入拦截器==============
2018-07-04 09:58:34,495 - http://localhost:8081/menu/findIconList
2018-07-04 09:58:34,500 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:58:34,500 - ===========请求时间:2018-07-04 09:58:34==========================
2018-07-04 09:58:34,500 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:58:34,500 - method=GET
2018-07-04 09:58:34,500 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:58:34,500 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:58:34,500 - args:
2018-07-04 09:58:34,513 - =============结束请求时间:2018-07-04 09:58:34,耗时:0s======================
2018-07-04 09:58:34,513 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:58:34,519 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:58:36,942 - ===========进入拦截器==============
2018-07-04 09:58:36,942 - http://localhost:8081/menu/findIconList
2018-07-04 09:58:36,951 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 09:58:36,951 - ===========请求时间:2018-07-04 09:58:36==========================
2018-07-04 09:58:36,951 - url=http://localhost:8081/menu/findIconList
2018-07-04 09:58:36,951 - method=GET
2018-07-04 09:58:36,951 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:58:36,951 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 09:58:36,951 - args:
2018-07-04 09:58:36,958 - =============结束请求时间:2018-07-04 09:58:36,耗时:0s======================
2018-07-04 09:58:36,958 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 09:58:36,959 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 09:58:42,801 - ===========进入拦截器==============
2018-07-04 09:58:42,801 - http://localhost:8081/menu/addMenu
2018-07-04 09:58:42,816 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 09:58:42,817 - ===========请求时间:2018-07-04 09:58:42==========================
2018-07-04 09:58:42,817 - url=http://localhost:8081/menu/addMenu
2018-07-04 09:58:42,817 - method=GET
2018-07-04 09:58:42,817 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:58:42,817 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 09:58:42,817 - args:menuName=数字货币管理,url=number-coin.html,belong=1,icon=,parentCode=1,menuType=0,
2018-07-04 09:58:42,868 - =============结束请求时间:2018-07-04 09:58:42,耗时:0s======================
2018-07-04 09:59:08,537 - ===========进入拦截器==============
2018-07-04 09:59:08,537 - http://localhost:8081/menu/addMenu
2018-07-04 09:59:08,547 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 09:59:08,547 - ===========请求时间:2018-07-04 09:59:08==========================
2018-07-04 09:59:08,547 - url=http://localhost:8081/menu/addMenu
2018-07-04 09:59:08,547 - method=GET
2018-07-04 09:59:08,547 - ip=0:0:0:0:0:0:0:1
2018-07-04 09:59:08,547 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 09:59:08,547 - args:menuName=数字货币管理,url=number-coin.html,belong=1,icon=,parentCode=1,menuType=0,
2018-07-04 10:01:49,863 - =============结束请求时间:2018-07-04 10:01:49,耗时:161s======================
2018-07-04 10:06:26,695 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10604 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:06:26,697 - No active profile set, falling back to default profiles: default
2018-07-04 10:06:26,840 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:06:26,921 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@25420876: startup date [Wed Jul 04 10:06:26 CST 2018]; root of context hierarchy
2018-07-04 10:06:27,906 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:06:29,433 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:06:29,444 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:06:29,454 - Starting service [Tomcat]
2018-07-04 10:06:29,455 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:06:29,558 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:06:29,559 - Root WebApplicationContext: initialization completed in 2638 ms
2018-07-04 10:06:29,783 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:06:29,787 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:06:29,788 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:06:29,788 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:06:29,788 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:06:29,788 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:06:30,563 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@25420876: startup date [Wed Jul 04 10:06:26 CST 2018]; root of context hierarchy
2018-07-04 10:06:30,626 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:06:30,626 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:06:30,627 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:06:30,627 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:06:30,627 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:06:30,628 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:06:30,628 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:06:30,628 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:06:30,628 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:06:30,628 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:06:30,628 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:06:30,628 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:06:30,628 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:06:30,629 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:06:30,629 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:06:30,629 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:06:30,629 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:06:30,632 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:06:30,632 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:06:30,633 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:06:30,634 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:06:30,634 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:06:30,634 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:06:30,634 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:06:30,634 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:06:30,634 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:06:30,635 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:06:30,635 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:06:30,636 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:06:30,636 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:06:30,636 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:06:30,636 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:06:30,639 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:06:30,639 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:06:30,639 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:06:30,639 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:06:30,639 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:06:30,640 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:06:30,641 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:06:30,641 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:06:30,641 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:06:30,641 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:06:30,641 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:06:30,641 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:06:30,642 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:06:30,643 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:06:30,643 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:06:30,689 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:06:30,689 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:06:30,708 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:06:30,733 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:06:31,427 - LiveReload server is running on port 35729
2018-07-04 10:06:31,550 - Registering beans for JMX exposure on startup
2018-07-04 10:06:31,550 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:06:31,555 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:06:31,564 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:06:31,575 - Using a shared selector for servlet write/read
2018-07-04 10:06:31,588 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:06:31,593 - Started FqLtdWasBackstageApplication in 5.666 seconds (JVM running for 6.775)
2018-07-04 10:06:35,826 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:06:35,826 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:06:35,864 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 10:06:35,879 - ===========进入拦截器==============
2018-07-04 10:06:35,900 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:06:35,901 - ===========请求时间:2018-07-04 10:06:35==========================
2018-07-04 10:06:35,901 - url=http://localhost:8081/login
2018-07-04 10:06:35,901 - method=GET
2018-07-04 10:06:35,901 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:35,901 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:06:35,901 - args:
2018-07-04 10:06:35,904 - =============结束请求时间:2018-07-04 10:06:35,耗时:0s======================
2018-07-04 10:06:35,904 - response=/login
2018-07-04 10:06:35,933 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:06:35,970 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:06:35,970 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:06:35,970 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:06:35,970 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:06:35,973 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:06:35,973 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:06:40,545 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:06:40,546 - ===========请求时间:2018-07-04 10:06:40==========================
2018-07-04 10:06:40,546 - url=http://localhost:8081/signIn
2018-07-04 10:06:40,546 - method=POST
2018-07-04 10:06:40,546 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:40,546 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:06:40,546 - args:userName=admin,password=123456,
2018-07-04 10:06:40,601 - {dataSource-1} inited
2018-07-04 10:06:40,913 - =============结束请求时间:2018-07-04 10:06:40,耗时:0s======================
2018-07-04 10:06:40,914 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:06:40, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:06:40,977 - ===========进入拦截器==============
2018-07-04 10:06:40,977 - http://localhost:8081/home
2018-07-04 10:06:40,982 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:06:40,982 - ===========请求时间:2018-07-04 10:06:40==========================
2018-07-04 10:06:40,982 - url=http://localhost:8081/home
2018-07-04 10:06:40,982 - method=GET
2018-07-04 10:06:40,982 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:40,982 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:06:40,982 - args:
2018-07-04 10:06:40,982 - =============结束请求时间:2018-07-04 10:06:40,耗时:0s======================
2018-07-04 10:06:40,982 - response=/home
2018-07-04 10:06:40,982 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:41,057 - ===========进入拦截器==============
2018-07-04 10:06:41,057 - http://localhost:8081/welcome
2018-07-04 10:06:41,061 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:06:41,061 - ===========请求时间:2018-07-04 10:06:41==========================
2018-07-04 10:06:41,061 - url=http://localhost:8081/welcome
2018-07-04 10:06:41,061 - method=GET
2018-07-04 10:06:41,061 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:41,061 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:06:41,061 - args:
2018-07-04 10:06:41,061 - =============结束请求时间:2018-07-04 10:06:41,耗时:0s======================
2018-07-04 10:06:41,062 - response=/welcome
2018-07-04 10:06:41,062 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:41,079 - ===========进入拦截器==============
2018-07-04 10:06:41,080 - http://localhost:8081/common/top
2018-07-04 10:06:41,082 - ===========进入拦截器==============
2018-07-04 10:06:41,082 - http://localhost:8081/common/left
2018-07-04 10:06:41,083 - ===========进入拦截器==============
2018-07-04 10:06:41,084 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:06:41,084 - http://localhost:8081/common/footer
2018-07-04 10:06:41,084 - ===========请求时间:2018-07-04 10:06:41==========================
2018-07-04 10:06:41,084 - url=http://localhost:8081/common/top
2018-07-04 10:06:41,084 - method=GET
2018-07-04 10:06:41,084 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:41,084 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:06:41,084 - args:
2018-07-04 10:06:41,085 - =============结束请求时间:2018-07-04 10:06:41,耗时:0s======================
2018-07-04 10:06:41,085 - response=/common/top
2018-07-04 10:06:41,085 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:41,089 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:06:41,089 - ===========请求时间:2018-07-04 10:06:41==========================
2018-07-04 10:06:41,089 - url=http://localhost:8081/common/footer
2018-07-04 10:06:41,089 - method=GET
2018-07-04 10:06:41,089 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:41,089 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:06:41,090 - args:
2018-07-04 10:06:41,090 - =============结束请求时间:2018-07-04 10:06:41,耗时:0s======================
2018-07-04 10:06:41,090 - response=/common/footer
2018-07-04 10:06:41,090 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:41,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:06:41,102 - ===========请求时间:2018-07-04 10:06:41==========================
2018-07-04 10:06:41,102 - url=http://localhost:8081/common/left
2018-07-04 10:06:41,102 - method=GET
2018-07-04 10:06:41,102 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:41,102 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:06:41,102 - args:
2018-07-04 10:06:41,102 - =============结束请求时间:2018-07-04 10:06:41,耗时:0s======================
2018-07-04 10:06:41,102 - response=/common/left
2018-07-04 10:06:41,103 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:42,978 - ===========进入拦截器==============
2018-07-04 10:06:42,978 - http://localhost:8081/menu.html
2018-07-04 10:06:42,986 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:06:42,986 - ===========请求时间:2018-07-04 10:06:42==========================
2018-07-04 10:06:42,987 - url=http://localhost:8081/menu.html
2018-07-04 10:06:42,987 - method=GET
2018-07-04 10:06:42,987 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:42,987 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:06:42,987 - args:
2018-07-04 10:06:42,987 - =============结束请求时间:2018-07-04 10:06:42,耗时:0s======================
2018-07-04 10:06:42,987 - response=/menu
2018-07-04 10:06:42,987 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:43,085 - ===========进入拦截器==============
2018-07-04 10:06:43,085 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:06:43,088 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:06:43,089 - ===========请求时间:2018-07-04 10:06:43==========================
2018-07-04 10:06:43,089 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:06:43,089 - method=GET
2018-07-04 10:06:43,089 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:43,089 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:06:43,089 - args:
2018-07-04 10:06:43,099 - =============结束请求时间:2018-07-04 10:06:43,耗时:0s======================
2018-07-04 10:06:43,099 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:06:43,105 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:44,800 - ===========进入拦截器==============
2018-07-04 10:06:44,800 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:06:44,805 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:06:44,805 - ===========请求时间:2018-07-04 10:06:44==========================
2018-07-04 10:06:44,805 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:06:44,805 - method=GET
2018-07-04 10:06:44,805 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:44,805 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:06:44,805 - args:parentCode=1,
2018-07-04 10:06:44,810 - =============结束请求时间:2018-07-04 10:06:44,耗时:0s======================
2018-07-04 10:06:44,810 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:06:44,811 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:06:47,728 - ===========进入拦截器==============
2018-07-04 10:06:47,728 - http://localhost:8081/project/findAllProject
2018-07-04 10:06:47,733 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:06:47,734 - ===========请求时间:2018-07-04 10:06:47==========================
2018-07-04 10:06:47,734 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:06:47,734 - method=GET
2018-07-04 10:06:47,734 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:06:47,734 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:06:47,734 - args:
2018-07-04 10:06:47,744 - =============结束请求时间:2018-07-04 10:06:47,耗时:0s======================
2018-07-04 10:06:47,744 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:06:47,746 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:05,679 - ===========进入拦截器==============
2018-07-04 10:07:05,679 - http://localhost:8081/menu/findIconList
2018-07-04 10:07:05,694 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:07:05,695 - ===========请求时间:2018-07-04 10:07:05==========================
2018-07-04 10:07:05,695 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:07:05,695 - method=GET
2018-07-04 10:07:05,695 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:05,695 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:07:05,695 - args:
2018-07-04 10:07:05,705 - =============结束请求时间:2018-07-04 10:07:05,耗时:0s======================
2018-07-04 10:07:05,706 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:07:05,709 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:11,232 - ===========进入拦截器==============
2018-07-04 10:07:11,232 - http://localhost:8081/menu/addMenu
2018-07-04 10:07:11,245 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:07:11,246 - ===========请求时间:2018-07-04 10:07:11==========================
2018-07-04 10:07:11,246 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:07:11,246 - method=GET
2018-07-04 10:07:11,246 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:11,246 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:07:11,246 - args:menuName=数字货币管理,url=number-coin.html,belong=1,icon=,parentCode=1,menuType=0,
2018-07-04 10:07:11,291 - =============结束请求时间:2018-07-04 10:07:11,耗时:0s======================
2018-07-04 10:07:11,291 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:07:11,292 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:13,514 - ===========进入拦截器==============
2018-07-04 10:07:13,514 - http://localhost:8081/menu.html
2018-07-04 10:07:13,521 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:07:13,521 - ===========请求时间:2018-07-04 10:07:13==========================
2018-07-04 10:07:13,522 - url=http://localhost:8081/menu.html
2018-07-04 10:07:13,522 - method=GET
2018-07-04 10:07:13,522 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:13,522 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:07:13,522 - args:
2018-07-04 10:07:13,522 - =============结束请求时间:2018-07-04 10:07:13,耗时:0s======================
2018-07-04 10:07:13,522 - response=/menu
2018-07-04 10:07:13,523 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:13,623 - ===========进入拦截器==============
2018-07-04 10:07:13,623 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:07:13,634 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:07:13,635 - ===========请求时间:2018-07-04 10:07:13==========================
2018-07-04 10:07:13,635 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:07:13,635 - method=GET
2018-07-04 10:07:13,635 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:13,635 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:07:13,635 - args:
2018-07-04 10:07:13,641 - =============结束请求时间:2018-07-04 10:07:13,耗时:0s======================
2018-07-04 10:07:13,642 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:07:13,643 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:15,119 - ===========进入拦截器==============
2018-07-04 10:07:15,120 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:07:15,124 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:07:15,124 - ===========请求时间:2018-07-04 10:07:15==========================
2018-07-04 10:07:15,124 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:07:15,124 - method=GET
2018-07-04 10:07:15,124 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:15,124 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:07:15,125 - args:parentCode=1,
2018-07-04 10:07:15,130 - =============结束请求时间:2018-07-04 10:07:15,耗时:0s======================
2018-07-04 10:07:15,130 - response=Result(code=200, msg=成功, data=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], page=null, totalCount=null)
2018-07-04 10:07:15,131 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:36,745 - ===========进入拦截器==============
2018-07-04 10:07:36,745 - http://localhost:8081/project/findAllProject
2018-07-04 10:07:36,751 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:07:36,751 - ===========请求时间:2018-07-04 10:07:36==========================
2018-07-04 10:07:36,751 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:07:36,751 - method=GET
2018-07-04 10:07:36,751 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:36,751 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:07:36,751 - args:
2018-07-04 10:07:36,756 - =============结束请求时间:2018-07-04 10:07:36,耗时:0s======================
2018-07-04 10:07:36,756 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:07:36,757 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:46,334 - ===========进入拦截器==============
2018-07-04 10:07:46,334 - http://localhost:8081/menu/findIconList
2018-07-04 10:07:46,346 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:07:46,347 - ===========请求时间:2018-07-04 10:07:46==========================
2018-07-04 10:07:46,347 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:07:46,347 - method=GET
2018-07-04 10:07:46,347 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:46,347 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:07:46,347 - args:
2018-07-04 10:07:46,357 - =============结束请求时间:2018-07-04 10:07:46,耗时:0s======================
2018-07-04 10:07:46,357 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:07:46,358 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:07:54,746 - ===========进入拦截器==============
2018-07-04 10:07:54,747 - http://localhost:8081/menu/addMenu
2018-07-04 10:07:54,753 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:07:54,753 - ===========请求时间:2018-07-04 10:07:54==========================
2018-07-04 10:07:54,753 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:07:54,753 - method=GET
2018-07-04 10:07:54,753 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:07:54,753 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:07:54,753 - args:menuName=数字货币监控及预警,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:07:54,759 - =============结束请求时间:2018-07-04 10:07:54,耗时:0s======================
2018-07-04 10:09:16,377 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12420 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:09:16,380 - No active profile set, falling back to default profiles: default
2018-07-04 10:09:16,578 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:09:16,641 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24c997eb: startup date [Wed Jul 04 10:09:16 CST 2018]; root of context hierarchy
2018-07-04 10:09:17,858 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:09:18,816 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:09:18,827 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:09:18,836 - Starting service [Tomcat]
2018-07-04 10:09:18,836 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:09:18,932 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:09:18,933 - Root WebApplicationContext: initialization completed in 2292 ms
2018-07-04 10:09:19,131 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:09:19,135 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:09:19,135 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:09:19,135 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:09:19,135 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:09:19,136 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:09:19,880 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@24c997eb: startup date [Wed Jul 04 10:09:16 CST 2018]; root of context hierarchy
2018-07-04 10:09:19,943 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:09:19,944 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:09:19,944 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:09:19,945 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:09:19,945 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:09:19,945 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:09:19,945 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:09:19,945 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:09:19,945 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:09:19,945 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:09:19,945 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:09:19,946 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:09:19,946 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:09:19,946 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:09:19,946 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:09:19,946 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:09:19,946 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:09:19,949 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:09:19,949 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:09:19,951 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:09:19,952 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:09:19,952 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:09:19,952 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:09:19,952 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:09:19,953 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:09:19,953 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:09:19,953 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:09:19,953 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:09:19,954 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:09:19,954 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:09:19,954 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:09:19,954 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:09:19,955 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:09:19,956 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:09:19,957 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:09:19,957 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:09:19,957 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:09:19,957 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:09:19,958 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:09:19,959 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:09:19,959 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:09:19,959 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:09:19,959 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:09:19,959 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:09:19,959 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:09:19,961 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:09:19,961 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:09:20,003 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:09:20,003 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:09:20,021 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:09:20,046 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:09:20,629 - LiveReload server is running on port 35729
2018-07-04 10:09:20,752 - Registering beans for JMX exposure on startup
2018-07-04 10:09:20,753 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:09:20,759 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:09:20,767 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:09:20,779 - Using a shared selector for servlet write/read
2018-07-04 10:09:20,791 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:09:20,796 - Started FqLtdWasBackstageApplication in 4.947 seconds (JVM running for 6.022)
2018-07-04 10:09:24,072 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:09:24,072 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:09:24,107 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 10:09:24,121 - ===========进入拦截器==============
2018-07-04 10:09:24,142 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:09:24,143 - ===========请求时间:2018-07-04 10:09:24==========================
2018-07-04 10:09:24,143 - url=http://localhost:8081/login
2018-07-04 10:09:24,143 - method=GET
2018-07-04 10:09:24,143 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:24,143 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:09:24,143 - args:
2018-07-04 10:09:24,146 - =============结束请求时间:2018-07-04 10:09:24,耗时:0s======================
2018-07-04 10:09:24,146 - response=/login
2018-07-04 10:09:24,175 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:09:24,210 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:09:24,210 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:09:24,211 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:09:24,211 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:09:24,213 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:09:24,213 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:09:28,913 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:09:28,913 - ===========请求时间:2018-07-04 10:09:28==========================
2018-07-04 10:09:28,913 - url=http://localhost:8081/signIn
2018-07-04 10:09:28,913 - method=POST
2018-07-04 10:09:28,913 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:28,913 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:09:28,913 - args:userName=admin,password=123456,
2018-07-04 10:09:28,970 - {dataSource-1} inited
2018-07-04 10:09:29,310 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,310 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:09:29, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:09:29,372 - ===========进入拦截器==============
2018-07-04 10:09:29,372 - http://localhost:8081/home
2018-07-04 10:09:29,378 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:09:29,378 - ===========请求时间:2018-07-04 10:09:29==========================
2018-07-04 10:09:29,378 - url=http://localhost:8081/home
2018-07-04 10:09:29,378 - method=GET
2018-07-04 10:09:29,378 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:29,379 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:09:29,379 - args:
2018-07-04 10:09:29,379 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,379 - response=/home
2018-07-04 10:09:29,379 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:29,449 - ===========进入拦截器==============
2018-07-04 10:09:29,449 - http://localhost:8081/welcome
2018-07-04 10:09:29,456 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:09:29,456 - ===========请求时间:2018-07-04 10:09:29==========================
2018-07-04 10:09:29,456 - url=http://localhost:8081/welcome
2018-07-04 10:09:29,456 - method=GET
2018-07-04 10:09:29,456 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:29,456 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:09:29,457 - args:
2018-07-04 10:09:29,457 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,457 - response=/welcome
2018-07-04 10:09:29,457 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:29,463 - ===========进入拦截器==============
2018-07-04 10:09:29,463 - http://localhost:8081/common/top
2018-07-04 10:09:29,466 - ===========进入拦截器==============
2018-07-04 10:09:29,466 - http://localhost:8081/common/left
2018-07-04 10:09:29,469 - ===========进入拦截器==============
2018-07-04 10:09:29,469 - http://localhost:8081/common/footer
2018-07-04 10:09:29,473 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:09:29,473 - ===========请求时间:2018-07-04 10:09:29==========================
2018-07-04 10:09:29,473 - url=http://localhost:8081/common/top
2018-07-04 10:09:29,473 - method=GET
2018-07-04 10:09:29,473 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:29,473 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:09:29,473 - args:
2018-07-04 10:09:29,473 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,473 - response=/common/top
2018-07-04 10:09:29,474 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:29,485 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:09:29,486 - ===========请求时间:2018-07-04 10:09:29==========================
2018-07-04 10:09:29,486 - url=http://localhost:8081/common/left
2018-07-04 10:09:29,486 - method=GET
2018-07-04 10:09:29,486 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:29,486 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:09:29,486 - args:
2018-07-04 10:09:29,486 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,486 - response=/common/left
2018-07-04 10:09:29,486 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:29,492 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:09:29,492 - ===========请求时间:2018-07-04 10:09:29==========================
2018-07-04 10:09:29,492 - url=http://localhost:8081/common/footer
2018-07-04 10:09:29,492 - method=GET
2018-07-04 10:09:29,492 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:29,492 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:09:29,492 - args:
2018-07-04 10:09:29,492 - =============结束请求时间:2018-07-04 10:09:29,耗时:0s======================
2018-07-04 10:09:29,492 - response=/common/footer
2018-07-04 10:09:29,492 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:31,777 - ===========进入拦截器==============
2018-07-04 10:09:31,777 - http://localhost:8081/menu.html
2018-07-04 10:09:31,783 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:09:31,784 - ===========请求时间:2018-07-04 10:09:31==========================
2018-07-04 10:09:31,784 - url=http://localhost:8081/menu.html
2018-07-04 10:09:31,784 - method=GET
2018-07-04 10:09:31,784 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:31,784 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:09:31,784 - args:
2018-07-04 10:09:31,784 - =============结束请求时间:2018-07-04 10:09:31,耗时:0s======================
2018-07-04 10:09:31,784 - response=/menu
2018-07-04 10:09:31,784 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:31,881 - ===========进入拦截器==============
2018-07-04 10:09:31,881 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:09:31,886 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:09:31,886 - ===========请求时间:2018-07-04 10:09:31==========================
2018-07-04 10:09:31,886 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:09:31,886 - method=GET
2018-07-04 10:09:31,886 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:31,886 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:09:31,886 - args:
2018-07-04 10:09:31,897 - =============结束请求时间:2018-07-04 10:09:31,耗时:0s======================
2018-07-04 10:09:31,897 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:09:31,903 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:34,561 - ===========进入拦截器==============
2018-07-04 10:09:34,562 - http://localhost:8081/project/findAllProject
2018-07-04 10:09:34,566 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:09:34,566 - ===========请求时间:2018-07-04 10:09:34==========================
2018-07-04 10:09:34,566 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:09:34,566 - method=GET
2018-07-04 10:09:34,566 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:34,566 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:09:34,566 - args:
2018-07-04 10:09:34,578 - =============结束请求时间:2018-07-04 10:09:34,耗时:0s======================
2018-07-04 10:09:34,578 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:09:34,580 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:47,726 - ===========进入拦截器==============
2018-07-04 10:09:47,726 - http://localhost:8081/menu/findIconList
2018-07-04 10:09:47,732 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:09:47,733 - ===========请求时间:2018-07-04 10:09:47==========================
2018-07-04 10:09:47,733 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:09:47,733 - method=GET
2018-07-04 10:09:47,733 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:47,733 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:09:47,733 - args:
2018-07-04 10:09:47,746 - =============结束请求时间:2018-07-04 10:09:47,耗时:0s======================
2018-07-04 10:09:47,746 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:09:47,749 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:09:49,889 - ===========进入拦截器==============
2018-07-04 10:09:49,890 - http://localhost:8081/menu/addMenu
2018-07-04 10:09:49,900 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:09:49,901 - ===========请求时间:2018-07-04 10:09:49==========================
2018-07-04 10:09:49,901 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:09:49,901 - method=GET
2018-07-04 10:09:49,901 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:49,901 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:09:49,901 - args:menuName=数字货币监控及预警,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:09:49,908 - =============结束请求时间:2018-07-04 10:09:49,耗时:0s======================
2018-07-04 10:09:56,703 - ===========进入拦截器==============
2018-07-04 10:09:56,703 - http://localhost:8081/menu/addMenu
2018-07-04 10:09:56,707 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:09:56,707 - ===========请求时间:2018-07-04 10:09:56==========================
2018-07-04 10:09:56,707 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:09:56,707 - method=GET
2018-07-04 10:09:56,707 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:09:56,707 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:09:56,708 - args:menuName=数字货币监控及预警,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:10:28,782 - =============结束请求时间:2018-07-04 10:10:28,耗时:32s======================
2018-07-04 10:10:58,646 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14848 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:10:58,649 - No active profile set, falling back to default profiles: default
2018-07-04 10:10:58,861 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:10:58,898 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14d48f90: startup date [Wed Jul 04 10:10:58 CST 2018]; root of context hierarchy
2018-07-04 10:11:00,028 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:11:01,253 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:11:01,264 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:11:01,273 - Starting service [Tomcat]
2018-07-04 10:11:01,273 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:11:01,370 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:11:01,370 - Root WebApplicationContext: initialization completed in 2472 ms
2018-07-04 10:11:01,571 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:11:01,575 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:11:01,576 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:11:01,576 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:11:01,576 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:11:01,576 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:11:02,317 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@14d48f90: startup date [Wed Jul 04 10:10:58 CST 2018]; root of context hierarchy
2018-07-04 10:11:02,378 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:11:02,379 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:11:02,379 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:11:02,380 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:11:02,380 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:11:02,380 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:11:02,380 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:11:02,380 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:11:02,380 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:11:02,380 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:11:02,380 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:11:02,381 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:11:02,381 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:11:02,381 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:11:02,381 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:11:02,381 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:11:02,381 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:11:02,384 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:11:02,384 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:11:02,385 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:11:02,386 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:11:02,386 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:11:02,386 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:11:02,386 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:11:02,386 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:11:02,387 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:11:02,387 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:11:02,387 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:11:02,388 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:11:02,388 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:11:02,388 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:11:02,388 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:11:02,389 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:11:02,389 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:11:02,390 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:11:02,390 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:11:02,390 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:11:02,390 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:11:02,392 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:11:02,392 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:11:02,392 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:11:02,393 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:11:02,393 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:11:02,393 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:11:02,393 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:11:02,394 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:11:02,395 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:11:02,437 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:11:02,437 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:11:02,455 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:11:02,483 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:11:03,081 - LiveReload server is running on port 35729
2018-07-04 10:11:03,212 - Registering beans for JMX exposure on startup
2018-07-04 10:11:03,212 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:11:03,218 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:11:03,227 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:11:03,238 - Using a shared selector for servlet write/read
2018-07-04 10:11:03,250 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:11:03,255 - Started FqLtdWasBackstageApplication in 5.334 seconds (JVM running for 6.408)
2018-07-04 10:11:08,063 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:11:08,063 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:11:08,098 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 10:11:08,113 - ===========进入拦截器==============
2018-07-04 10:11:08,133 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:11:08,133 - ===========请求时间:2018-07-04 10:11:08==========================
2018-07-04 10:11:08,133 - url=http://localhost:8081/login
2018-07-04 10:11:08,133 - method=GET
2018-07-04 10:11:08,133 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:08,133 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:11:08,133 - args:
2018-07-04 10:11:08,136 - =============结束请求时间:2018-07-04 10:11:08,耗时:0s======================
2018-07-04 10:11:08,136 - response=/login
2018-07-04 10:11:08,165 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:11:08,200 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:11:08,201 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:11:08,201 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:11:08,201 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:11:08,204 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:11:08,204 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:11:12,670 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:11:12,671 - ===========请求时间:2018-07-04 10:11:12==========================
2018-07-04 10:11:12,671 - url=http://localhost:8081/signIn
2018-07-04 10:11:12,671 - method=POST
2018-07-04 10:11:12,671 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:12,671 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:11:12,671 - args:userName=admin,password=123456,
2018-07-04 10:11:12,728 - {dataSource-1} inited
2018-07-04 10:11:13,094 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,094 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:11:13, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:11:13,159 - ===========进入拦截器==============
2018-07-04 10:11:13,160 - http://localhost:8081/home
2018-07-04 10:11:13,164 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:11:13,164 - ===========请求时间:2018-07-04 10:11:13==========================
2018-07-04 10:11:13,164 - url=http://localhost:8081/home
2018-07-04 10:11:13,164 - method=GET
2018-07-04 10:11:13,164 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:13,164 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:11:13,164 - args:
2018-07-04 10:11:13,164 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,164 - response=/home
2018-07-04 10:11:13,165 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:13,236 - ===========进入拦截器==============
2018-07-04 10:11:13,237 - http://localhost:8081/welcome
2018-07-04 10:11:13,241 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:11:13,242 - ===========请求时间:2018-07-04 10:11:13==========================
2018-07-04 10:11:13,242 - url=http://localhost:8081/welcome
2018-07-04 10:11:13,242 - method=GET
2018-07-04 10:11:13,242 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:13,242 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:11:13,242 - args:
2018-07-04 10:11:13,242 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,242 - response=/welcome
2018-07-04 10:11:13,243 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:13,254 - ===========进入拦截器==============
2018-07-04 10:11:13,254 - http://localhost:8081/common/top
2018-07-04 10:11:13,258 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:11:13,258 - ===========请求时间:2018-07-04 10:11:13==========================
2018-07-04 10:11:13,258 - url=http://localhost:8081/common/top
2018-07-04 10:11:13,258 - method=GET
2018-07-04 10:11:13,259 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:13,259 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:11:13,259 - args:
2018-07-04 10:11:13,259 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,259 - response=/common/top
2018-07-04 10:11:13,259 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:13,262 - ===========进入拦截器==============
2018-07-04 10:11:13,262 - http://localhost:8081/common/footer
2018-07-04 10:11:13,263 - ===========进入拦截器==============
2018-07-04 10:11:13,263 - http://localhost:8081/common/left
2018-07-04 10:11:13,266 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:11:13,266 - ===========请求时间:2018-07-04 10:11:13==========================
2018-07-04 10:11:13,266 - url=http://localhost:8081/common/footer
2018-07-04 10:11:13,266 - method=GET
2018-07-04 10:11:13,266 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:13,266 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:11:13,266 - args:
2018-07-04 10:11:13,266 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,266 - response=/common/footer
2018-07-04 10:11:13,267 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:13,270 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:11:13,270 - ===========请求时间:2018-07-04 10:11:13==========================
2018-07-04 10:11:13,270 - url=http://localhost:8081/common/left
2018-07-04 10:11:13,270 - method=GET
2018-07-04 10:11:13,270 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:13,270 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:11:13,270 - args:
2018-07-04 10:11:13,271 - =============结束请求时间:2018-07-04 10:11:13,耗时:0s======================
2018-07-04 10:11:13,271 - response=/common/left
2018-07-04 10:11:13,271 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:15,154 - ===========进入拦截器==============
2018-07-04 10:11:15,154 - http://localhost:8081/menu.html
2018-07-04 10:11:15,160 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:11:15,160 - ===========请求时间:2018-07-04 10:11:15==========================
2018-07-04 10:11:15,160 - url=http://localhost:8081/menu.html
2018-07-04 10:11:15,160 - method=GET
2018-07-04 10:11:15,160 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:15,160 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:11:15,160 - args:
2018-07-04 10:11:15,161 - =============结束请求时间:2018-07-04 10:11:15,耗时:0s======================
2018-07-04 10:11:15,161 - response=/menu
2018-07-04 10:11:15,161 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:15,254 - ===========进入拦截器==============
2018-07-04 10:11:15,254 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:11:15,261 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:11:15,261 - ===========请求时间:2018-07-04 10:11:15==========================
2018-07-04 10:11:15,261 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:11:15,261 - method=GET
2018-07-04 10:11:15,261 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:15,261 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:11:15,261 - args:
2018-07-04 10:11:15,276 - =============结束请求时间:2018-07-04 10:11:15,耗时:0s======================
2018-07-04 10:11:15,277 - response=Result(code=200, msg=成功, data=[Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:11:15,291 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:17,225 - ===========进入拦截器==============
2018-07-04 10:11:17,225 - http://localhost:8081/project/findAllProject
2018-07-04 10:11:17,230 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:11:17,230 - ===========请求时间:2018-07-04 10:11:17==========================
2018-07-04 10:11:17,230 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:11:17,230 - method=GET
2018-07-04 10:11:17,230 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:17,230 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:11:17,230 - args:
2018-07-04 10:11:17,243 - =============结束请求时间:2018-07-04 10:11:17,耗时:0s======================
2018-07-04 10:11:17,243 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:11:17,245 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:20,782 - ===========进入拦截器==============
2018-07-04 10:11:20,782 - http://localhost:8081/menu/findIconList
2018-07-04 10:11:20,786 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:11:20,786 - ===========请求时间:2018-07-04 10:11:20==========================
2018-07-04 10:11:20,786 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:11:20,786 - method=GET
2018-07-04 10:11:20,786 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:20,786 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:11:20,786 - args:
2018-07-04 10:11:20,796 - =============结束请求时间:2018-07-04 10:11:20,耗时:0s======================
2018-07-04 10:11:20,796 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:11:20,800 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:23,233 - ===========进入拦截器==============
2018-07-04 10:11:23,233 - http://localhost:8081/menu/addMenu
2018-07-04 10:11:23,249 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:11:23,249 - ===========请求时间:2018-07-04 10:11:23==========================
2018-07-04 10:11:23,249 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:11:23,249 - method=GET
2018-07-04 10:11:23,249 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:23,249 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:11:23,249 - args:menuName=数字货币监控及预警,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:11:23,295 - =============结束请求时间:2018-07-04 10:11:23,耗时:0s======================
2018-07-04 10:11:23,296 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:11:23,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:25,507 - ===========进入拦截器==============
2018-07-04 10:11:25,507 - http://localhost:8081/menu.html
2018-07-04 10:11:25,511 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:11:25,511 - ===========请求时间:2018-07-04 10:11:25==========================
2018-07-04 10:11:25,511 - url=http://localhost:8081/menu.html
2018-07-04 10:11:25,511 - method=GET
2018-07-04 10:11:25,511 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:25,511 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:11:25,511 - args:
2018-07-04 10:11:25,512 - =============结束请求时间:2018-07-04 10:11:25,耗时:0s======================
2018-07-04 10:11:25,512 - response=/menu
2018-07-04 10:11:25,512 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:25,597 - ===========进入拦截器==============
2018-07-04 10:11:25,598 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:11:25,605 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:11:25,606 - ===========请求时间:2018-07-04 10:11:25==========================
2018-07-04 10:11:25,606 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:11:25,606 - method=GET
2018-07-04 10:11:25,606 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:25,606 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:11:25,606 - args:
2018-07-04 10:11:25,611 - =============结束请求时间:2018-07-04 10:11:25,耗时:0s======================
2018-07-04 10:11:25,611 - response=Result(code=200, msg=成功, data=[Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:11:25,612 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:40,079 - ===========进入拦截器==============
2018-07-04 10:11:40,080 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:11:40,086 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:11:40,086 - ===========请求时间:2018-07-04 10:11:40==========================
2018-07-04 10:11:40,086 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:11:40,086 - method=GET
2018-07-04 10:11:40,086 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:40,086 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:11:40,086 - args:parentCode=3,
2018-07-04 10:11:40,090 - =============结束请求时间:2018-07-04 10:11:40,耗时:0s======================
2018-07-04 10:11:40,090 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:11:40,091 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:11:43,070 - ===========进入拦截器==============
2018-07-04 10:11:43,070 - http://localhost:8081/project/findAllProject
2018-07-04 10:11:43,079 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:11:43,079 - ===========请求时间:2018-07-04 10:11:43==========================
2018-07-04 10:11:43,079 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:11:43,079 - method=GET
2018-07-04 10:11:43,079 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:11:43,079 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:11:43,079 - args:
2018-07-04 10:11:43,085 - =============结束请求时间:2018-07-04 10:11:43,耗时:0s======================
2018-07-04 10:11:43,085 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:11:43,086 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:10,286 - ===========进入拦截器==============
2018-07-04 10:12:10,286 - http://localhost:8081/menu/findIconList
2018-07-04 10:12:10,291 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:12:10,291 - ===========请求时间:2018-07-04 10:12:10==========================
2018-07-04 10:12:10,291 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:12:10,291 - method=GET
2018-07-04 10:12:10,291 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:10,292 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:12:10,292 - args:
2018-07-04 10:12:10,300 - =============结束请求时间:2018-07-04 10:12:10,耗时:0s======================
2018-07-04 10:12:10,300 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:10,301 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:13,575 - ===========进入拦截器==============
2018-07-04 10:12:13,575 - http://localhost:8081/menu/addMenu
2018-07-04 10:12:13,585 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:12:13,586 - ===========请求时间:2018-07-04 10:12:13==========================
2018-07-04 10:12:13,586 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:12:13,586 - method=GET
2018-07-04 10:12:13,586 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:13,586 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:12:13,586 - args:menuName=数字货币监控及预警,url=/control-waring.html,belong=1,icon=,parentCode=3,menuType=0,
2018-07-04 10:12:13,637 - =============结束请求时间:2018-07-04 10:12:13,耗时:0s======================
2018-07-04 10:12:13,637 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:12:13,638 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:15,845 - ===========进入拦截器==============
2018-07-04 10:12:15,845 - http://localhost:8081/menu.html
2018-07-04 10:12:15,849 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:12:15,849 - ===========请求时间:2018-07-04 10:12:15==========================
2018-07-04 10:12:15,849 - url=http://localhost:8081/menu.html
2018-07-04 10:12:15,849 - method=GET
2018-07-04 10:12:15,849 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:15,849 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:12:15,849 - args:
2018-07-04 10:12:15,849 - =============结束请求时间:2018-07-04 10:12:15,耗时:0s======================
2018-07-04 10:12:15,849 - response=/menu
2018-07-04 10:12:15,849 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:15,940 - ===========进入拦截器==============
2018-07-04 10:12:15,940 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:12:15,945 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:12:15,945 - ===========请求时间:2018-07-04 10:12:15==========================
2018-07-04 10:12:15,945 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:12:15,945 - method=GET
2018-07-04 10:12:15,945 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:15,946 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:12:15,946 - args:
2018-07-04 10:12:15,954 - =============结束请求时间:2018-07-04 10:12:15,耗时:0s======================
2018-07-04 10:12:15,954 - response=Result(code=200, msg=成功, data=[Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:15,955 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,161 - ===========进入拦截器==============
2018-07-04 10:12:17,162 - http://localhost:8081/number-coin.html
2018-07-04 10:12:17,167 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-04 10:12:17,167 - ===========请求时间:2018-07-04 10:12:17==========================
2018-07-04 10:12:17,167 - url=http://localhost:8081/number-coin.html
2018-07-04 10:12:17,167 - method=GET
2018-07-04 10:12:17,167 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:17,167 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-04 10:12:17,167 - args:
2018-07-04 10:12:17,167 - =============结束请求时间:2018-07-04 10:12:17,耗时:0s======================
2018-07-04 10:12:17,167 - response=/number-coin
2018-07-04 10:12:17,167 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,198 - ===========进入拦截器==============
2018-07-04 10:12:17,198 - ===========进入拦截器==============
2018-07-04 10:12:17,198 - http://localhost:8081/error
2018-07-04 10:12:17,198 - http://localhost:8081/error
2018-07-04 10:12:17,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,226 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,238 - ===========进入拦截器==============
2018-07-04 10:12:17,238 - ===========进入拦截器==============
2018-07-04 10:12:17,238 - http://localhost:8081/error
2018-07-04 10:12:17,238 - http://localhost:8081/error
2018-07-04 10:12:17,244 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,247 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:17,258 - ===========进入拦截器==============
2018-07-04 10:12:17,259 - http://localhost:8081/error
2018-07-04 10:12:17,264 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:20,489 - ===========进入拦截器==============
2018-07-04 10:12:20,489 - http://localhost:8081/control-waring.html
2018-07-04 10:12:20,494 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.controlWaring============
2018-07-04 10:12:20,494 - ===========请求时间:2018-07-04 10:12:20==========================
2018-07-04 10:12:20,494 - url=http://localhost:8081/control-waring.html
2018-07-04 10:12:20,494 - method=GET
2018-07-04 10:12:20,494 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:20,494 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.controlWaring
2018-07-04 10:12:20,494 - args:
2018-07-04 10:12:20,494 - =============结束请求时间:2018-07-04 10:12:20,耗时:0s======================
2018-07-04 10:12:20,494 - response=/control-waring
2018-07-04 10:12:20,495 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:20,508 - ===========进入拦截器==============
2018-07-04 10:12:20,508 - http://localhost:8081/error
2018-07-04 10:12:20,509 - ===========进入拦截器==============
2018-07-04 10:12:20,509 - http://localhost:8081/error
2018-07-04 10:12:20,514 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:20,515 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:20,570 - ===========进入拦截器==============
2018-07-04 10:12:20,571 - http://localhost:8081/error
2018-07-04 10:12:20,570 - ===========进入拦截器==============
2018-07-04 10:12:20,571 - http://localhost:8081/error
2018-07-04 10:12:20,575 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:20,576 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:24,530 - ===========进入拦截器==============
2018-07-04 10:12:24,530 - http://localhost:8081/role.html
2018-07-04 10:12:24,535 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:12:24,535 - ===========请求时间:2018-07-04 10:12:24==========================
2018-07-04 10:12:24,536 - url=http://localhost:8081/role.html
2018-07-04 10:12:24,536 - method=GET
2018-07-04 10:12:24,536 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:24,536 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:12:24,536 - args:
2018-07-04 10:12:24,536 - =============结束请求时间:2018-07-04 10:12:24,耗时:0s======================
2018-07-04 10:12:24,536 - response=/role
2018-07-04 10:12:24,536 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:24,625 - ===========进入拦截器==============
2018-07-04 10:12:24,625 - http://localhost:8081/role/findAllRole
2018-07-04 10:12:24,630 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:12:24,631 - ===========请求时间:2018-07-04 10:12:24==========================
2018-07-04 10:12:24,631 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:12:24,631 - method=GET
2018-07-04 10:12:24,631 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:24,631 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:12:24,631 - args:roleName=,
2018-07-04 10:12:24,644 - =============结束请求时间:2018-07-04 10:12:24,耗时:0s======================
2018-07-04 10:12:24,644 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:24,645 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:27,048 - ===========进入拦截器==============
2018-07-04 10:12:27,048 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:12:27,107 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:12:27,108 - ===========请求时间:2018-07-04 10:12:27==========================
2018-07-04 10:12:27,108 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:12:27,108 - method=GET
2018-07-04 10:12:27,108 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:27,108 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:12:27,109 - args:parentCode=1,
2018-07-04 10:12:27,120 - =============结束请求时间:2018-07-04 10:12:27,耗时:0s======================
2018-07-04 10:12:27,120 - response=Result(code=200, msg=成功, data=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:27,122 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:32,314 - ===========进入拦截器==============
2018-07-04 10:12:32,314 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:12:32,318 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:12:32,318 - ===========请求时间:2018-07-04 10:12:32==========================
2018-07-04 10:12:32,318 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:12:32,318 - method=GET
2018-07-04 10:12:32,319 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:32,319 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:12:32,319 - args:parentCode=3,
2018-07-04 10:12:32,322 - =============结束请求时间:2018-07-04 10:12:32,耗时:0s======================
2018-07-04 10:12:32,322 - response=Result(code=200, msg=成功, data=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:32,323 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:37,967 - ===========进入拦截器==============
2018-07-04 10:12:37,968 - http://localhost:8081/project/findAllProject
2018-07-04 10:12:37,974 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:12:37,974 - ===========请求时间:2018-07-04 10:12:37==========================
2018-07-04 10:12:37,974 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:12:37,974 - method=GET
2018-07-04 10:12:37,974 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:37,974 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:12:37,974 - args:
2018-07-04 10:12:37,978 - =============结束请求时间:2018-07-04 10:12:37,耗时:0s======================
2018-07-04 10:12:37,978 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:37,979 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:45,381 - ===========进入拦截器==============
2018-07-04 10:12:45,381 - http://localhost:8081/menu/findIconList
2018-07-04 10:12:45,385 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:12:45,386 - ===========请求时间:2018-07-04 10:12:45==========================
2018-07-04 10:12:45,386 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:12:45,386 - method=GET
2018-07-04 10:12:45,386 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:45,386 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:12:45,386 - args:
2018-07-04 10:12:45,395 - =============结束请求时间:2018-07-04 10:12:45,耗时:0s======================
2018-07-04 10:12:45,395 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:12:45,396 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:12:47,591 - ===========进入拦截器==============
2018-07-04 10:12:47,591 - http://localhost:8081/menu/addMenu
2018-07-04 10:12:47,595 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:12:47,596 - ===========请求时间:2018-07-04 10:12:47==========================
2018-07-04 10:12:47,596 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:12:47,596 - method=GET
2018-07-04 10:12:47,596 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:12:47,596 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:12:47,596 - args:menuName=地址池管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:12:47,602 - =============结束请求时间:2018-07-04 10:12:47,耗时:0s======================
2018-07-04 10:13:32,425 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16072 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:13:32,428 - No active profile set, falling back to default profiles: default
2018-07-04 10:13:32,604 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:13:32,670 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59714c0a: startup date [Wed Jul 04 10:13:32 CST 2018]; root of context hierarchy
2018-07-04 10:13:33,812 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:13:34,836 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:13:34,846 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:13:34,854 - Starting service [Tomcat]
2018-07-04 10:13:34,855 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:13:34,954 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:13:34,955 - Root WebApplicationContext: initialization completed in 2286 ms
2018-07-04 10:13:35,158 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:13:35,162 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:13:35,162 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:13:35,162 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:13:35,162 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:13:35,162 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:13:35,926 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59714c0a: startup date [Wed Jul 04 10:13:32 CST 2018]; root of context hierarchy
2018-07-04 10:13:35,990 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:13:35,991 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:13:35,992 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:13:35,992 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:13:35,992 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:13:35,992 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:13:35,992 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:13:35,992 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:13:35,992 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:13:35,992 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:13:35,993 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:13:35,993 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:13:35,993 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:13:35,993 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:13:35,993 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:13:35,993 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:13:35,993 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:13:35,996 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:13:35,996 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:13:35,998 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:13:35,999 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:13:35,999 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:13:35,999 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:13:35,999 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:13:35,999 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:13:36,000 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:13:36,000 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:13:36,000 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:13:36,001 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:13:36,001 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:13:36,001 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:13:36,002 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:13:36,003 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:13:36,003 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:13:36,003 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:13:36,003 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:13:36,003 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:13:36,003 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:13:36,005 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:13:36,005 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:13:36,005 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:13:36,005 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:13:36,005 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:13:36,005 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:13:36,005 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:13:36,007 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:13:36,007 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:13:36,051 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:36,051 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:36,069 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:13:36,094 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:13:36,700 - LiveReload server is running on port 35729
2018-07-04 10:13:36,826 - Registering beans for JMX exposure on startup
2018-07-04 10:13:36,827 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:13:36,832 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:13:36,841 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:13:36,852 - Using a shared selector for servlet write/read
2018-07-04 10:13:36,864 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:13:36,869 - Started FqLtdWasBackstageApplication in 5.017 seconds (JVM running for 6.016)
2018-07-04 10:13:41,561 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:13:41,562 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:13:41,599 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 10:13:41,614 - ===========进入拦截器==============
2018-07-04 10:13:41,635 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:13:41,636 - ===========请求时间:2018-07-04 10:13:41==========================
2018-07-04 10:13:41,636 - url=http://localhost:8081/login
2018-07-04 10:13:41,636 - method=GET
2018-07-04 10:13:41,636 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:41,636 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:13:41,636 - args:
2018-07-04 10:13:41,639 - =============结束请求时间:2018-07-04 10:13:41,耗时:0s======================
2018-07-04 10:13:41,640 - response=/login
2018-07-04 10:13:41,670 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:13:41,709 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:13:41,709 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:13:41,710 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:13:41,710 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:13:41,713 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:13:41,713 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:13:45,949 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:13:45,950 - ===========请求时间:2018-07-04 10:13:45==========================
2018-07-04 10:13:45,950 - url=http://localhost:8081/signIn
2018-07-04 10:13:45,950 - method=POST
2018-07-04 10:13:45,950 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:45,950 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:13:45,950 - args:userName=admin,password=123456,
2018-07-04 10:13:46,009 - {dataSource-1} inited
2018-07-04 10:13:46,362 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,363 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:13:46, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:13:46,421 - ===========进入拦截器==============
2018-07-04 10:13:46,421 - http://localhost:8081/home
2018-07-04 10:13:46,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:13:46,430 - ===========请求时间:2018-07-04 10:13:46==========================
2018-07-04 10:13:46,430 - url=http://localhost:8081/home
2018-07-04 10:13:46,430 - method=GET
2018-07-04 10:13:46,430 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:46,430 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:13:46,430 - args:
2018-07-04 10:13:46,430 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,430 - response=/home
2018-07-04 10:13:46,430 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:46,499 - ===========进入拦截器==============
2018-07-04 10:13:46,500 - http://localhost:8081/welcome
2018-07-04 10:13:46,505 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:13:46,505 - ===========请求时间:2018-07-04 10:13:46==========================
2018-07-04 10:13:46,505 - url=http://localhost:8081/welcome
2018-07-04 10:13:46,505 - method=GET
2018-07-04 10:13:46,505 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:46,505 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:13:46,505 - args:
2018-07-04 10:13:46,506 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,506 - response=/welcome
2018-07-04 10:13:46,506 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:46,525 - ===========进入拦截器==============
2018-07-04 10:13:46,525 - http://localhost:8081/common/top
2018-07-04 10:13:46,527 - ===========进入拦截器==============
2018-07-04 10:13:46,527 - http://localhost:8081/common/left
2018-07-04 10:13:46,528 - ===========进入拦截器==============
2018-07-04 10:13:46,528 - http://localhost:8081/common/footer
2018-07-04 10:13:46,531 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:13:46,531 - ===========请求时间:2018-07-04 10:13:46==========================
2018-07-04 10:13:46,531 - url=http://localhost:8081/common/top
2018-07-04 10:13:46,531 - method=GET
2018-07-04 10:13:46,531 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:46,531 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:13:46,531 - args:
2018-07-04 10:13:46,531 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,531 - response=/common/top
2018-07-04 10:13:46,532 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:46,536 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:13:46,536 - ===========请求时间:2018-07-04 10:13:46==========================
2018-07-04 10:13:46,536 - url=http://localhost:8081/common/left
2018-07-04 10:13:46,536 - method=GET
2018-07-04 10:13:46,536 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:46,536 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:13:46,536 - args:
2018-07-04 10:13:46,536 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,536 - response=/common/left
2018-07-04 10:13:46,537 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:46,540 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:13:46,541 - ===========请求时间:2018-07-04 10:13:46==========================
2018-07-04 10:13:46,541 - url=http://localhost:8081/common/footer
2018-07-04 10:13:46,541 - method=GET
2018-07-04 10:13:46,541 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:46,541 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:13:46,541 - args:
2018-07-04 10:13:46,541 - =============结束请求时间:2018-07-04 10:13:46,耗时:0s======================
2018-07-04 10:13:46,541 - response=/common/footer
2018-07-04 10:13:46,541 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:48,035 - ===========进入拦截器==============
2018-07-04 10:13:48,035 - http://localhost:8081/menu.html
2018-07-04 10:13:48,040 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:13:48,041 - ===========请求时间:2018-07-04 10:13:48==========================
2018-07-04 10:13:48,041 - url=http://localhost:8081/menu.html
2018-07-04 10:13:48,041 - method=GET
2018-07-04 10:13:48,041 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:48,041 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:13:48,041 - args:
2018-07-04 10:13:48,042 - =============结束请求时间:2018-07-04 10:13:48,耗时:0s======================
2018-07-04 10:13:48,042 - response=/menu
2018-07-04 10:13:48,042 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:48,136 - ===========进入拦截器==============
2018-07-04 10:13:48,137 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:13:48,143 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:13:48,143 - ===========请求时间:2018-07-04 10:13:48==========================
2018-07-04 10:13:48,143 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:13:48,143 - method=GET
2018-07-04 10:13:48,143 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:48,143 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:13:48,143 - args:
2018-07-04 10:13:48,159 - =============结束请求时间:2018-07-04 10:13:48,耗时:0s======================
2018-07-04 10:13:48,159 - response=Result(code=200, msg=成功, data=[Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:13:48,170 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:49,952 - ===========进入拦截器==============
2018-07-04 10:13:49,953 - http://localhost:8081/project/findAllProject
2018-07-04 10:13:49,958 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:13:49,959 - ===========请求时间:2018-07-04 10:13:49==========================
2018-07-04 10:13:49,959 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:13:49,959 - method=GET
2018-07-04 10:13:49,959 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:49,959 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:13:49,959 - args:
2018-07-04 10:13:49,975 - =============结束请求时间:2018-07-04 10:13:49,耗时:0s======================
2018-07-04 10:13:49,975 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:13:49,977 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:53,486 - ===========进入拦截器==============
2018-07-04 10:13:53,486 - http://localhost:8081/menu/findIconList
2018-07-04 10:13:53,493 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:13:53,493 - ===========请求时间:2018-07-04 10:13:53==========================
2018-07-04 10:13:53,494 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:13:53,494 - method=GET
2018-07-04 10:13:53,494 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:53,494 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:13:53,494 - args:
2018-07-04 10:13:53,504 - =============结束请求时间:2018-07-04 10:13:53,耗时:0s======================
2018-07-04 10:13:53,504 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:13:53,507 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:55,329 - ===========进入拦截器==============
2018-07-04 10:13:55,329 - http://localhost:8081/menu/addMenu
2018-07-04 10:13:55,344 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:13:55,344 - ===========请求时间:2018-07-04 10:13:55==========================
2018-07-04 10:13:55,344 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:13:55,344 - method=GET
2018-07-04 10:13:55,344 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:55,344 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:13:55,344 - args:menuName=地址池管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:13:55,390 - =============结束请求时间:2018-07-04 10:13:55,耗时:0s======================
2018-07-04 10:13:55,390 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:13:55,391 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:57,610 - ===========进入拦截器==============
2018-07-04 10:13:57,610 - http://localhost:8081/menu.html
2018-07-04 10:13:57,619 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:13:57,619 - ===========请求时间:2018-07-04 10:13:57==========================
2018-07-04 10:13:57,619 - url=http://localhost:8081/menu.html
2018-07-04 10:13:57,619 - method=GET
2018-07-04 10:13:57,619 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:57,619 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:13:57,620 - args:
2018-07-04 10:13:57,620 - =============结束请求时间:2018-07-04 10:13:57,耗时:0s======================
2018-07-04 10:13:57,620 - response=/menu
2018-07-04 10:13:57,620 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:13:57,740 - ===========进入拦截器==============
2018-07-04 10:13:57,740 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:13:57,749 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:13:57,750 - ===========请求时间:2018-07-04 10:13:57==========================
2018-07-04 10:13:57,750 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:13:57,750 - method=GET
2018-07-04 10:13:57,750 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:13:57,750 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:13:57,750 - args:
2018-07-04 10:13:57,761 - =============结束请求时间:2018-07-04 10:13:57,耗时:0s======================
2018-07-04 10:13:57,761 - response=Result(code=200, msg=成功, data=[Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:13:57,762 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:01,839 - ===========进入拦截器==============
2018-07-04 10:14:01,839 - http://localhost:8081/project/findAllProject
2018-07-04 10:14:01,844 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:14:01,844 - ===========请求时间:2018-07-04 10:14:01==========================
2018-07-04 10:14:01,844 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:14:01,844 - method=GET
2018-07-04 10:14:01,844 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:01,844 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:14:01,844 - args:
2018-07-04 10:14:01,851 - =============结束请求时间:2018-07-04 10:14:01,耗时:0s======================
2018-07-04 10:14:01,851 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:01,852 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:12,437 - ===========进入拦截器==============
2018-07-04 10:14:12,437 - http://localhost:8081/menu/findIconList
2018-07-04 10:14:12,443 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:14:12,443 - ===========请求时间:2018-07-04 10:14:12==========================
2018-07-04 10:14:12,443 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:14:12,443 - method=GET
2018-07-04 10:14:12,443 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:12,443 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:14:12,443 - args:
2018-07-04 10:14:12,452 - =============结束请求时间:2018-07-04 10:14:12,耗时:0s======================
2018-07-04 10:14:12,453 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:12,454 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:14,409 - ===========进入拦截器==============
2018-07-04 10:14:14,410 - http://localhost:8081/menu/addMenu
2018-07-04 10:14:14,417 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:14:14,417 - ===========请求时间:2018-07-04 10:14:14==========================
2018-07-04 10:14:14,417 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:14:14,417 - method=GET
2018-07-04 10:14:14,417 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:14,417 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:14:14,417 - args:menuName=平台充值管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:14:14,459 - =============结束请求时间:2018-07-04 10:14:14,耗时:0s======================
2018-07-04 10:14:14,459 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:14:14,463 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:16,687 - ===========进入拦截器==============
2018-07-04 10:14:16,687 - http://localhost:8081/menu.html
2018-07-04 10:14:16,695 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:14:16,696 - ===========请求时间:2018-07-04 10:14:16==========================
2018-07-04 10:14:16,696 - url=http://localhost:8081/menu.html
2018-07-04 10:14:16,696 - method=GET
2018-07-04 10:14:16,697 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:16,697 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:14:16,697 - args:
2018-07-04 10:14:16,697 - =============结束请求时间:2018-07-04 10:14:16,耗时:0s======================
2018-07-04 10:14:16,698 - response=/menu
2018-07-04 10:14:16,698 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:16,825 - ===========进入拦截器==============
2018-07-04 10:14:16,825 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:16,828 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:14:16,829 - ===========请求时间:2018-07-04 10:14:16==========================
2018-07-04 10:14:16,829 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:16,829 - method=GET
2018-07-04 10:14:16,829 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:16,829 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:14:16,829 - args:
2018-07-04 10:14:16,834 - =============结束请求时间:2018-07-04 10:14:16,耗时:0s======================
2018-07-04 10:14:16,834 - response=Result(code=200, msg=成功, data=[Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:16,836 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:18,224 - ===========进入拦截器==============
2018-07-04 10:14:18,224 - http://localhost:8081/project/findAllProject
2018-07-04 10:14:18,229 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:14:18,229 - ===========请求时间:2018-07-04 10:14:18==========================
2018-07-04 10:14:18,229 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:14:18,229 - method=GET
2018-07-04 10:14:18,229 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:18,229 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:14:18,229 - args:
2018-07-04 10:14:18,236 - =============结束请求时间:2018-07-04 10:14:18,耗时:0s======================
2018-07-04 10:14:18,236 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:18,237 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:26,695 - ===========进入拦截器==============
2018-07-04 10:14:26,695 - http://localhost:8081/menu/findIconList
2018-07-04 10:14:26,699 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:14:26,699 - ===========请求时间:2018-07-04 10:14:26==========================
2018-07-04 10:14:26,699 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:14:26,699 - method=GET
2018-07-04 10:14:26,699 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:26,699 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:14:26,699 - args:
2018-07-04 10:14:26,706 - =============结束请求时间:2018-07-04 10:14:26,耗时:0s======================
2018-07-04 10:14:26,706 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:26,707 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:28,335 - ===========进入拦截器==============
2018-07-04 10:14:28,335 - http://localhost:8081/menu/addMenu
2018-07-04 10:14:28,340 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:14:28,340 - ===========请求时间:2018-07-04 10:14:28==========================
2018-07-04 10:14:28,340 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:14:28,340 - method=GET
2018-07-04 10:14:28,340 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:28,340 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:14:28,340 - args:menuName=平台提币管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:14:28,371 - =============结束请求时间:2018-07-04 10:14:28,耗时:0s======================
2018-07-04 10:14:28,372 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:14:28,376 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:30,592 - ===========进入拦截器==============
2018-07-04 10:14:30,592 - http://localhost:8081/menu.html
2018-07-04 10:14:30,596 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:14:30,596 - ===========请求时间:2018-07-04 10:14:30==========================
2018-07-04 10:14:30,596 - url=http://localhost:8081/menu.html
2018-07-04 10:14:30,596 - method=GET
2018-07-04 10:14:30,596 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:30,596 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:14:30,596 - args:
2018-07-04 10:14:30,597 - =============结束请求时间:2018-07-04 10:14:30,耗时:0s======================
2018-07-04 10:14:30,597 - response=/menu
2018-07-04 10:14:30,597 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:30,675 - ===========进入拦截器==============
2018-07-04 10:14:30,675 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:30,680 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:14:30,680 - ===========请求时间:2018-07-04 10:14:30==========================
2018-07-04 10:14:30,680 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:30,680 - method=GET
2018-07-04 10:14:30,680 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:30,680 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:14:30,680 - args:
2018-07-04 10:14:30,700 - =============结束请求时间:2018-07-04 10:14:30,耗时:0s======================
2018-07-04 10:14:30,700 - response=Result(code=200, msg=成功, data=[Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:30,701 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:32,584 - ===========进入拦截器==============
2018-07-04 10:14:32,585 - http://localhost:8081/project/findAllProject
2018-07-04 10:14:32,589 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:14:32,589 - ===========请求时间:2018-07-04 10:14:32==========================
2018-07-04 10:14:32,589 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:14:32,589 - method=GET
2018-07-04 10:14:32,589 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:32,589 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:14:32,589 - args:
2018-07-04 10:14:32,593 - =============结束请求时间:2018-07-04 10:14:32,耗时:0s======================
2018-07-04 10:14:32,593 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:32,594 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:38,189 - ===========进入拦截器==============
2018-07-04 10:14:38,190 - http://localhost:8081/menu/findIconList
2018-07-04 10:14:38,196 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:14:38,196 - ===========请求时间:2018-07-04 10:14:38==========================
2018-07-04 10:14:38,196 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:14:38,196 - method=GET
2018-07-04 10:14:38,196 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:38,196 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:14:38,196 - args:
2018-07-04 10:14:38,207 - =============结束请求时间:2018-07-04 10:14:38,耗时:0s======================
2018-07-04 10:14:38,207 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:38,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:42,967 - ===========进入拦截器==============
2018-07-04 10:14:42,967 - http://localhost:8081/menu/addMenu
2018-07-04 10:14:42,971 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:14:42,971 - ===========请求时间:2018-07-04 10:14:42==========================
2018-07-04 10:14:42,971 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:14:42,972 - method=GET
2018-07-04 10:14:42,972 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:42,972 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:14:42,972 - args:menuName=系统管理,url=--,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:14:43,010 - =============结束请求时间:2018-07-04 10:14:43,耗时:0s======================
2018-07-04 10:14:43,010 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:14:43,011 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:45,219 - ===========进入拦截器==============
2018-07-04 10:14:45,220 - http://localhost:8081/menu.html
2018-07-04 10:14:45,224 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:14:45,225 - ===========请求时间:2018-07-04 10:14:45==========================
2018-07-04 10:14:45,225 - url=http://localhost:8081/menu.html
2018-07-04 10:14:45,225 - method=GET
2018-07-04 10:14:45,225 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:45,225 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:14:45,225 - args:
2018-07-04 10:14:45,225 - =============结束请求时间:2018-07-04 10:14:45,耗时:0s======================
2018-07-04 10:14:45,225 - response=/menu
2018-07-04 10:14:45,225 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:45,301 - ===========进入拦截器==============
2018-07-04 10:14:45,301 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:45,307 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:14:45,307 - ===========请求时间:2018-07-04 10:14:45==========================
2018-07-04 10:14:45,307 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:14:45,307 - method=GET
2018-07-04 10:14:45,307 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:45,307 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:14:45,307 - args:
2018-07-04 10:14:45,318 - =============结束请求时间:2018-07-04 10:14:45,耗时:0s======================
2018-07-04 10:14:45,319 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:45,321 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:51,504 - ===========进入拦截器==============
2018-07-04 10:14:51,504 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:14:51,513 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:14:51,513 - ===========请求时间:2018-07-04 10:14:51==========================
2018-07-04 10:14:51,513 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:14:51,513 - method=GET
2018-07-04 10:14:51,513 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:51,513 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:14:51,513 - args:parentCode=8,
2018-07-04 10:14:51,518 - =============结束请求时间:2018-07-04 10:14:51,耗时:0s======================
2018-07-04 10:14:51,518 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:14:51,519 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:14:53,735 - ===========进入拦截器==============
2018-07-04 10:14:53,735 - http://localhost:8081/project/findAllProject
2018-07-04 10:14:53,739 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:14:53,739 - ===========请求时间:2018-07-04 10:14:53==========================
2018-07-04 10:14:53,739 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:14:53,739 - method=GET
2018-07-04 10:14:53,739 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:14:53,739 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:14:53,739 - args:
2018-07-04 10:14:53,745 - =============结束请求时间:2018-07-04 10:14:53,耗时:0s======================
2018-07-04 10:14:53,745 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:14:53,746 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:27,814 - ===========进入拦截器==============
2018-07-04 10:15:27,814 - http://localhost:8081/menu/findIconList
2018-07-04 10:15:27,827 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:15:27,827 - ===========请求时间:2018-07-04 10:15:27==========================
2018-07-04 10:15:27,827 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:15:27,827 - method=GET
2018-07-04 10:15:27,827 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:27,827 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:15:27,827 - args:
2018-07-04 10:15:27,832 - =============结束请求时间:2018-07-04 10:15:27,耗时:0s======================
2018-07-04 10:15:27,832 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:27,833 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:31,912 - ===========进入拦截器==============
2018-07-04 10:15:31,912 - http://localhost:8081/menu/addMenu
2018-07-04 10:15:31,942 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:15:31,942 - ===========请求时间:2018-07-04 10:15:31==========================
2018-07-04 10:15:31,942 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:15:31,942 - method=GET
2018-07-04 10:15:31,942 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:31,942 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:15:31,942 - args:menuName=用户管理,url=/user.html,belong=1,icon=,parentCode=8,menuType=0,
2018-07-04 10:15:31,999 - =============结束请求时间:2018-07-04 10:15:31,耗时:0s======================
2018-07-04 10:15:32,000 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:15:32,000 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:34,224 - ===========进入拦截器==============
2018-07-04 10:15:34,224 - http://localhost:8081/menu.html
2018-07-04 10:15:34,233 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:15:34,233 - ===========请求时间:2018-07-04 10:15:34==========================
2018-07-04 10:15:34,233 - url=http://localhost:8081/menu.html
2018-07-04 10:15:34,233 - method=GET
2018-07-04 10:15:34,233 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:34,233 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:15:34,233 - args:
2018-07-04 10:15:34,234 - =============结束请求时间:2018-07-04 10:15:34,耗时:0s======================
2018-07-04 10:15:34,234 - response=/menu
2018-07-04 10:15:34,234 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:34,347 - ===========进入拦截器==============
2018-07-04 10:15:34,347 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:15:34,351 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:15:34,351 - ===========请求时间:2018-07-04 10:15:34==========================
2018-07-04 10:15:34,351 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:15:34,351 - method=GET
2018-07-04 10:15:34,351 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:34,351 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:15:34,351 - args:
2018-07-04 10:15:34,357 - =============结束请求时间:2018-07-04 10:15:34,耗时:0s======================
2018-07-04 10:15:34,357 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:34,358 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:35,911 - ===========进入拦截器==============
2018-07-04 10:15:35,912 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:15:35,915 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:15:35,916 - ===========请求时间:2018-07-04 10:15:35==========================
2018-07-04 10:15:35,916 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:15:35,916 - method=GET
2018-07-04 10:15:35,916 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:35,916 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:15:35,916 - args:parentCode=8,
2018-07-04 10:15:35,921 - =============结束请求时间:2018-07-04 10:15:35,耗时:0s======================
2018-07-04 10:15:35,921 - response=Result(code=200, msg=成功, data=[Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:35,922 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:38,775 - ===========进入拦截器==============
2018-07-04 10:15:38,775 - http://localhost:8081/project/findAllProject
2018-07-04 10:15:38,779 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:15:38,779 - ===========请求时间:2018-07-04 10:15:38==========================
2018-07-04 10:15:38,779 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:15:38,779 - method=GET
2018-07-04 10:15:38,779 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:38,779 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:15:38,779 - args:
2018-07-04 10:15:38,782 - =============结束请求时间:2018-07-04 10:15:38,耗时:0s======================
2018-07-04 10:15:38,783 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:38,783 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:51,325 - ===========进入拦截器==============
2018-07-04 10:15:51,325 - http://localhost:8081/menu/findIconList
2018-07-04 10:15:51,328 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:15:51,329 - ===========请求时间:2018-07-04 10:15:51==========================
2018-07-04 10:15:51,329 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:15:51,329 - method=GET
2018-07-04 10:15:51,329 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:51,329 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:15:51,329 - args:
2018-07-04 10:15:51,334 - =============结束请求时间:2018-07-04 10:15:51,耗时:0s======================
2018-07-04 10:15:51,334 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:51,334 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:55,541 - ===========进入拦截器==============
2018-07-04 10:15:55,541 - http://localhost:8081/menu/addMenu
2018-07-04 10:15:55,548 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:15:55,548 - ===========请求时间:2018-07-04 10:15:55==========================
2018-07-04 10:15:55,548 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:15:55,548 - method=GET
2018-07-04 10:15:55,548 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:55,548 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:15:55,548 - args:menuName=角色管理,url=/role.html,belong=1,icon=,parentCode=8,menuType=0,
2018-07-04 10:15:55,590 - =============结束请求时间:2018-07-04 10:15:55,耗时:0s======================
2018-07-04 10:15:55,590 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:15:55,591 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:57,798 - ===========进入拦截器==============
2018-07-04 10:15:57,798 - http://localhost:8081/menu.html
2018-07-04 10:15:57,806 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:15:57,806 - ===========请求时间:2018-07-04 10:15:57==========================
2018-07-04 10:15:57,806 - url=http://localhost:8081/menu.html
2018-07-04 10:15:57,806 - method=GET
2018-07-04 10:15:57,806 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:57,806 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:15:57,806 - args:
2018-07-04 10:15:57,806 - =============结束请求时间:2018-07-04 10:15:57,耗时:0s======================
2018-07-04 10:15:57,806 - response=/menu
2018-07-04 10:15:57,807 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:57,884 - ===========进入拦截器==============
2018-07-04 10:15:57,884 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:15:57,894 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:15:57,894 - ===========请求时间:2018-07-04 10:15:57==========================
2018-07-04 10:15:57,894 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:15:57,894 - method=GET
2018-07-04 10:15:57,894 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:57,894 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:15:57,894 - args:
2018-07-04 10:15:57,910 - =============结束请求时间:2018-07-04 10:15:57,耗时:0s======================
2018-07-04 10:15:57,910 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:57,911 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:15:59,166 - ===========进入拦截器==============
2018-07-04 10:15:59,166 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:15:59,170 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:15:59,170 - ===========请求时间:2018-07-04 10:15:59==========================
2018-07-04 10:15:59,170 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:15:59,170 - method=GET
2018-07-04 10:15:59,170 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:15:59,170 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:15:59,170 - args:parentCode=8,
2018-07-04 10:15:59,175 - =============结束请求时间:2018-07-04 10:15:59,耗时:0s======================
2018-07-04 10:15:59,175 - response=Result(code=200, msg=成功, data=[Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=8, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:15:59,176 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:00,992 - ===========进入拦截器==============
2018-07-04 10:16:00,992 - http://localhost:8081/menu/findById
2018-07-04 10:16:01,011 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:16:01,011 - ===========请求时间:2018-07-04 10:16:01==========================
2018-07-04 10:16:01,011 - url=http://localhost:8081/menu/findById
2018-07-04 10:16:01,011 - method=GET
2018-07-04 10:16:01,011 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:01,011 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:16:01,011 - args:id=9,
2018-07-04 10:16:01,015 - =============结束请求时间:2018-07-04 10:16:01,耗时:0s======================
2018-07-04 10:16:01,015 - response=Result(code=200, msg=成功, data=Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:16:01,015 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:01,894 - ===========进入拦截器==============
2018-07-04 10:16:01,894 - http://localhost:8081/menu/findIconList
2018-07-04 10:16:01,900 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:16:01,900 - ===========请求时间:2018-07-04 10:16:01==========================
2018-07-04 10:16:01,900 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:16:01,900 - method=GET
2018-07-04 10:16:01,900 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:01,900 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:16:01,900 - args:
2018-07-04 10:16:01,911 - =============结束请求时间:2018-07-04 10:16:01,耗时:0s======================
2018-07-04 10:16:01,911 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:01,912 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:10,664 - ===========进入拦截器==============
2018-07-04 10:16:10,664 - http://localhost:8081/home
2018-07-04 10:16:10,672 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:16:10,672 - ===========请求时间:2018-07-04 10:16:10==========================
2018-07-04 10:16:10,672 - url=http://localhost:8081/home
2018-07-04 10:16:10,672 - method=GET
2018-07-04 10:16:10,672 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:10,672 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:16:10,672 - args:
2018-07-04 10:16:10,672 - =============结束请求时间:2018-07-04 10:16:10,耗时:0s======================
2018-07-04 10:16:10,672 - response=/home
2018-07-04 10:16:10,673 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:10,754 - ===========进入拦截器==============
2018-07-04 10:16:10,754 - http://localhost:8081/welcome
2018-07-04 10:16:10,772 - ===========进入拦截器==============
2018-07-04 10:16:10,772 - http://localhost:8081/common/top
2018-07-04 10:16:10,775 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:16:10,775 - ===========请求时间:2018-07-04 10:16:10==========================
2018-07-04 10:16:10,775 - url=http://localhost:8081/welcome
2018-07-04 10:16:10,775 - method=GET
2018-07-04 10:16:10,775 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:10,775 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:16:10,775 - args:
2018-07-04 10:16:10,775 - =============结束请求时间:2018-07-04 10:16:10,耗时:0s======================
2018-07-04 10:16:10,775 - response=/welcome
2018-07-04 10:16:10,776 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:10,782 - ===========进入拦截器==============
2018-07-04 10:16:10,782 - http://localhost:8081/common/left
2018-07-04 10:16:10,785 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:16:10,786 - ===========请求时间:2018-07-04 10:16:10==========================
2018-07-04 10:16:10,786 - url=http://localhost:8081/common/left
2018-07-04 10:16:10,786 - method=GET
2018-07-04 10:16:10,786 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:10,786 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:16:10,786 - args:
2018-07-04 10:16:10,786 - =============结束请求时间:2018-07-04 10:16:10,耗时:0s======================
2018-07-04 10:16:10,786 - response=/common/left
2018-07-04 10:16:10,786 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:10,786 - ===========进入拦截器==============
2018-07-04 10:16:10,786 - http://localhost:8081/common/footer
2018-07-04 10:16:10,789 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:16:10,789 - ===========请求时间:2018-07-04 10:16:10==========================
2018-07-04 10:16:10,789 - url=http://localhost:8081/common/footer
2018-07-04 10:16:10,789 - method=GET
2018-07-04 10:16:10,789 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:10,789 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:16:10,789 - args:
2018-07-04 10:16:10,790 - =============结束请求时间:2018-07-04 10:16:10,耗时:0s======================
2018-07-04 10:16:10,790 - response=/common/footer
2018-07-04 10:16:10,790 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:10,814 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:16:10,814 - ===========请求时间:2018-07-04 10:16:10==========================
2018-07-04 10:16:10,814 - url=http://localhost:8081/common/top
2018-07-04 10:16:10,814 - method=GET
2018-07-04 10:16:10,814 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:10,814 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:16:10,814 - args:
2018-07-04 10:16:10,814 - =============结束请求时间:2018-07-04 10:16:10,耗时:0s======================
2018-07-04 10:16:10,814 - response=/common/top
2018-07-04 10:16:10,814 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:13,785 - ===========进入拦截器==============
2018-07-04 10:16:13,785 - http://localhost:8081/menu.html
2018-07-04 10:16:13,789 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:16:13,789 - ===========请求时间:2018-07-04 10:16:13==========================
2018-07-04 10:16:13,789 - url=http://localhost:8081/menu.html
2018-07-04 10:16:13,789 - method=GET
2018-07-04 10:16:13,789 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:13,789 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:16:13,789 - args:
2018-07-04 10:16:13,789 - =============结束请求时间:2018-07-04 10:16:13,耗时:0s======================
2018-07-04 10:16:13,789 - response=/menu
2018-07-04 10:16:13,790 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:13,864 - ===========进入拦截器==============
2018-07-04 10:16:13,864 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:13,884 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:16:13,884 - ===========请求时间:2018-07-04 10:16:13==========================
2018-07-04 10:16:13,884 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:13,884 - method=GET
2018-07-04 10:16:13,884 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:13,884 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:16:13,884 - args:
2018-07-04 10:16:13,890 - =============结束请求时间:2018-07-04 10:16:13,耗时:0s======================
2018-07-04 10:16:13,891 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:13,891 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:15,193 - ===========进入拦截器==============
2018-07-04 10:16:15,193 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:16:15,198 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:16:15,199 - ===========请求时间:2018-07-04 10:16:15==========================
2018-07-04 10:16:15,199 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:16:15,199 - method=GET
2018-07-04 10:16:15,199 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:15,199 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:16:15,199 - args:parentCode=8,
2018-07-04 10:16:15,204 - =============结束请求时间:2018-07-04 10:16:15,耗时:0s======================
2018-07-04 10:16:15,204 - response=Result(code=200, msg=成功, data=[Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=8, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:15,205 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:20,639 - ===========进入拦截器==============
2018-07-04 10:16:20,640 - http://localhost:8081/project/findAllProject
2018-07-04 10:16:20,644 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:16:20,644 - ===========请求时间:2018-07-04 10:16:20==========================
2018-07-04 10:16:20,644 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:16:20,644 - method=GET
2018-07-04 10:16:20,644 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:20,644 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:16:20,644 - args:
2018-07-04 10:16:20,648 - =============结束请求时间:2018-07-04 10:16:20,耗时:0s======================
2018-07-04 10:16:20,648 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:20,649 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:32,453 - ===========进入拦截器==============
2018-07-04 10:16:32,454 - http://localhost:8081/menu/findIconList
2018-07-04 10:16:32,458 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:16:32,458 - ===========请求时间:2018-07-04 10:16:32==========================
2018-07-04 10:16:32,458 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:16:32,458 - method=GET
2018-07-04 10:16:32,458 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:32,458 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:16:32,458 - args:
2018-07-04 10:16:32,464 - =============结束请求时间:2018-07-04 10:16:32,耗时:0s======================
2018-07-04 10:16:32,464 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:32,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:35,440 - ===========进入拦截器==============
2018-07-04 10:16:35,440 - http://localhost:8081/menu/addMenu
2018-07-04 10:16:35,452 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:16:35,452 - ===========请求时间:2018-07-04 10:16:35==========================
2018-07-04 10:16:35,452 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:16:35,452 - method=GET
2018-07-04 10:16:35,452 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:35,452 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:16:35,452 - args:menuName=菜单管理,url=/menu.html,belong=1,icon=,parentCode=8,menuType=0,
2018-07-04 10:16:35,501 - =============结束请求时间:2018-07-04 10:16:35,耗时:0s======================
2018-07-04 10:16:35,501 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:16:35,501 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:37,710 - ===========进入拦截器==============
2018-07-04 10:16:37,710 - http://localhost:8081/menu.html
2018-07-04 10:16:37,716 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:16:37,716 - ===========请求时间:2018-07-04 10:16:37==========================
2018-07-04 10:16:37,716 - url=http://localhost:8081/menu.html
2018-07-04 10:16:37,716 - method=GET
2018-07-04 10:16:37,716 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:37,716 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:16:37,716 - args:
2018-07-04 10:16:37,716 - =============结束请求时间:2018-07-04 10:16:37,耗时:0s======================
2018-07-04 10:16:37,716 - response=/menu
2018-07-04 10:16:37,716 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:37,795 - ===========进入拦截器==============
2018-07-04 10:16:37,795 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:37,800 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:16:37,801 - ===========请求时间:2018-07-04 10:16:37==========================
2018-07-04 10:16:37,801 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:37,801 - method=GET
2018-07-04 10:16:37,801 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:37,801 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:16:37,801 - args:
2018-07-04 10:16:37,807 - =============结束请求时间:2018-07-04 10:16:37,耗时:0s======================
2018-07-04 10:16:37,807 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:37,808 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:39,007 - ===========进入拦截器==============
2018-07-04 10:16:39,007 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:16:39,016 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:16:39,016 - ===========请求时间:2018-07-04 10:16:39==========================
2018-07-04 10:16:39,016 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:16:39,016 - method=GET
2018-07-04 10:16:39,016 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:39,016 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:16:39,016 - args:parentCode=8,
2018-07-04 10:16:39,021 - =============结束请求时间:2018-07-04 10:16:39,耗时:0s======================
2018-07-04 10:16:39,021 - response=Result(code=200, msg=成功, data=[Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=8, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=8, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:39,021 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:40,814 - ===========进入拦截器==============
2018-07-04 10:16:40,814 - http://localhost:8081/project/findAllProject
2018-07-04 10:16:40,820 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:16:40,820 - ===========请求时间:2018-07-04 10:16:40==========================
2018-07-04 10:16:40,820 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:16:40,820 - method=GET
2018-07-04 10:16:40,820 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:40,820 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:16:40,820 - args:
2018-07-04 10:16:40,825 - =============结束请求时间:2018-07-04 10:16:40,耗时:0s======================
2018-07-04 10:16:40,825 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:40,825 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:51,141 - ===========进入拦截器==============
2018-07-04 10:16:51,141 - http://localhost:8081/menu/findIconList
2018-07-04 10:16:51,145 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:16:51,146 - ===========请求时间:2018-07-04 10:16:51==========================
2018-07-04 10:16:51,146 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:16:51,146 - method=GET
2018-07-04 10:16:51,146 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:51,146 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:16:51,146 - args:
2018-07-04 10:16:51,155 - =============结束请求时间:2018-07-04 10:16:51,耗时:0s======================
2018-07-04 10:16:51,156 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:51,156 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:54,486 - ===========进入拦截器==============
2018-07-04 10:16:54,486 - http://localhost:8081/menu/addMenu
2018-07-04 10:16:54,495 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:16:54,495 - ===========请求时间:2018-07-04 10:16:54==========================
2018-07-04 10:16:54,495 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:16:54,495 - method=GET
2018-07-04 10:16:54,495 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:54,495 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:16:54,495 - args:menuName=图标管理,url=/icon.html,belong=1,icon=,parentCode=8,menuType=0,
2018-07-04 10:16:54,550 - =============结束请求时间:2018-07-04 10:16:54,耗时:0s======================
2018-07-04 10:16:54,550 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:16:54,551 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:56,759 - ===========进入拦截器==============
2018-07-04 10:16:56,759 - http://localhost:8081/menu.html
2018-07-04 10:16:56,775 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:16:56,775 - ===========请求时间:2018-07-04 10:16:56==========================
2018-07-04 10:16:56,775 - url=http://localhost:8081/menu.html
2018-07-04 10:16:56,775 - method=GET
2018-07-04 10:16:56,775 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:56,775 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:16:56,775 - args:
2018-07-04 10:16:56,775 - =============结束请求时间:2018-07-04 10:16:56,耗时:0s======================
2018-07-04 10:16:56,775 - response=/menu
2018-07-04 10:16:56,775 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:16:56,852 - ===========进入拦截器==============
2018-07-04 10:16:56,852 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:56,857 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:16:56,859 - ===========请求时间:2018-07-04 10:16:56==========================
2018-07-04 10:16:56,859 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:16:56,859 - method=GET
2018-07-04 10:16:56,859 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:16:56,859 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:16:56,859 - args:
2018-07-04 10:16:56,866 - =============结束请求时间:2018-07-04 10:16:56,耗时:0s======================
2018-07-04 10:16:56,866 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:16:56,866 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:09,407 - ===========进入拦截器==============
2018-07-04 10:17:09,407 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:17:09,417 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:17:09,417 - ===========请求时间:2018-07-04 10:17:09==========================
2018-07-04 10:17:09,417 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:17:09,417 - method=GET
2018-07-04 10:17:09,417 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:09,417 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:17:09,417 - args:parentCode=7,
2018-07-04 10:17:09,422 - =============结束请求时间:2018-07-04 10:17:09,耗时:0s======================
2018-07-04 10:17:09,422 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:17:09,423 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:11,295 - ===========进入拦截器==============
2018-07-04 10:17:11,295 - http://localhost:8081/project/findAllProject
2018-07-04 10:17:11,301 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:17:11,301 - ===========请求时间:2018-07-04 10:17:11==========================
2018-07-04 10:17:11,301 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:17:11,301 - method=GET
2018-07-04 10:17:11,301 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:11,301 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:17:11,301 - args:
2018-07-04 10:17:11,306 - =============结束请求时间:2018-07-04 10:17:11,耗时:0s======================
2018-07-04 10:17:11,306 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:17:11,306 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:19,645 - ===========进入拦截器==============
2018-07-04 10:17:19,645 - http://localhost:8081/menu/findIconList
2018-07-04 10:17:19,687 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:17:19,687 - ===========请求时间:2018-07-04 10:17:19==========================
2018-07-04 10:17:19,687 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:17:19,687 - method=GET
2018-07-04 10:17:19,687 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:19,687 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:17:19,687 - args:
2018-07-04 10:17:19,694 - =============结束请求时间:2018-07-04 10:17:19,耗时:0s======================
2018-07-04 10:17:19,694 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:17:19,695 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:30,344 - ===========进入拦截器==============
2018-07-04 10:17:30,345 - http://localhost:8081/menu/addMenu
2018-07-04 10:17:30,352 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:17:30,352 - ===========请求时间:2018-07-04 10:17:30==========================
2018-07-04 10:17:30,352 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:17:30,352 - method=GET
2018-07-04 10:17:30,352 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:30,352 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:17:30,352 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 10:17:30,402 - =============结束请求时间:2018-07-04 10:17:30,耗时:0s======================
2018-07-04 10:17:30,402 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:17:30,402 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:32,612 - ===========进入拦截器==============
2018-07-04 10:17:32,612 - http://localhost:8081/menu.html
2018-07-04 10:17:32,617 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:17:32,617 - ===========请求时间:2018-07-04 10:17:32==========================
2018-07-04 10:17:32,617 - url=http://localhost:8081/menu.html
2018-07-04 10:17:32,617 - method=GET
2018-07-04 10:17:32,617 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:32,617 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:17:32,617 - args:
2018-07-04 10:17:32,618 - =============结束请求时间:2018-07-04 10:17:32,耗时:0s======================
2018-07-04 10:17:32,618 - response=/menu
2018-07-04 10:17:32,618 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:32,696 - ===========进入拦截器==============
2018-07-04 10:17:32,696 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:17:32,702 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:17:32,702 - ===========请求时间:2018-07-04 10:17:32==========================
2018-07-04 10:17:32,702 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:17:32,702 - method=GET
2018-07-04 10:17:32,703 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:32,703 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:17:32,703 - args:
2018-07-04 10:17:32,707 - =============结束请求时间:2018-07-04 10:17:32,耗时:0s======================
2018-07-04 10:17:32,708 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:17:32,708 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:35,727 - ===========进入拦截器==============
2018-07-04 10:17:35,727 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:17:35,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:17:35,736 - ===========请求时间:2018-07-04 10:17:35==========================
2018-07-04 10:17:35,736 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:17:35,736 - method=GET
2018-07-04 10:17:35,736 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:35,736 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:17:35,736 - args:parentCode=6,
2018-07-04 10:17:35,743 - =============结束请求时间:2018-07-04 10:17:35,耗时:0s======================
2018-07-04 10:17:35,743 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:17:35,743 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:37,782 - ===========进入拦截器==============
2018-07-04 10:17:37,782 - http://localhost:8081/project/findAllProject
2018-07-04 10:17:37,786 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:17:37,786 - ===========请求时间:2018-07-04 10:17:37==========================
2018-07-04 10:17:37,786 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:17:37,786 - method=GET
2018-07-04 10:17:37,786 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:37,786 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:17:37,786 - args:
2018-07-04 10:17:37,791 - =============结束请求时间:2018-07-04 10:17:37,耗时:0s======================
2018-07-04 10:17:37,791 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:17:37,791 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:44,732 - ===========进入拦截器==============
2018-07-04 10:17:44,732 - http://localhost:8081/menu/findIconList
2018-07-04 10:17:44,738 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:17:44,738 - ===========请求时间:2018-07-04 10:17:44==========================
2018-07-04 10:17:44,738 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:17:44,738 - method=GET
2018-07-04 10:17:44,738 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:44,738 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:17:44,738 - args:
2018-07-04 10:17:44,745 - =============结束请求时间:2018-07-04 10:17:44,耗时:0s======================
2018-07-04 10:17:44,745 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:17:44,746 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:17:57,774 - ===========进入拦截器==============
2018-07-04 10:17:57,774 - http://localhost:8081/menu/addMenu
2018-07-04 10:17:57,779 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:17:57,779 - ===========请求时间:2018-07-04 10:17:57==========================
2018-07-04 10:17:57,779 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:17:57,779 - method=GET
2018-07-04 10:17:57,779 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:17:57,779 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:17:57,779 - args:menuName=平台充值管理,url=/recharge-control.html,belong=1,icon=,parentCode=6,menuType=0,
2018-07-04 10:17:57,822 - =============结束请求时间:2018-07-04 10:17:57,耗时:0s======================
2018-07-04 10:17:57,822 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:17:57,823 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:00,032 - ===========进入拦截器==============
2018-07-04 10:18:00,032 - http://localhost:8081/menu.html
2018-07-04 10:18:00,038 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:18:00,038 - ===========请求时间:2018-07-04 10:18:00==========================
2018-07-04 10:18:00,038 - url=http://localhost:8081/menu.html
2018-07-04 10:18:00,038 - method=GET
2018-07-04 10:18:00,038 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:00,038 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:18:00,038 - args:
2018-07-04 10:18:00,038 - =============结束请求时间:2018-07-04 10:18:00,耗时:0s======================
2018-07-04 10:18:00,038 - response=/menu
2018-07-04 10:18:00,038 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:00,111 - ===========进入拦截器==============
2018-07-04 10:18:00,111 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:18:00,115 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:18:00,115 - ===========请求时间:2018-07-04 10:18:00==========================
2018-07-04 10:18:00,115 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:18:00,115 - method=GET
2018-07-04 10:18:00,115 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:00,115 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:18:00,115 - args:
2018-07-04 10:18:00,121 - =============结束请求时间:2018-07-04 10:18:00,耗时:0s======================
2018-07-04 10:18:00,121 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:18:00,122 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:04,368 - ===========进入拦截器==============
2018-07-04 10:18:04,368 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:18:04,373 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:18:04,373 - ===========请求时间:2018-07-04 10:18:04==========================
2018-07-04 10:18:04,373 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:18:04,373 - method=GET
2018-07-04 10:18:04,373 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:04,373 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:18:04,374 - args:parentCode=5,
2018-07-04 10:18:04,377 - =============结束请求时间:2018-07-04 10:18:04,耗时:0s======================
2018-07-04 10:18:04,377 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:18:04,378 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:06,407 - ===========进入拦截器==============
2018-07-04 10:18:06,407 - http://localhost:8081/project/findAllProject
2018-07-04 10:18:06,412 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:18:06,412 - ===========请求时间:2018-07-04 10:18:06==========================
2018-07-04 10:18:06,412 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:18:06,412 - method=GET
2018-07-04 10:18:06,412 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:06,412 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:18:06,412 - args:
2018-07-04 10:18:06,416 - =============结束请求时间:2018-07-04 10:18:06,耗时:0s======================
2018-07-04 10:18:06,416 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:18:06,416 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:11,284 - ===========进入拦截器==============
2018-07-04 10:18:11,284 - http://localhost:8081/menu/findIconList
2018-07-04 10:18:11,289 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:18:11,289 - ===========请求时间:2018-07-04 10:18:11==========================
2018-07-04 10:18:11,289 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:18:11,289 - method=GET
2018-07-04 10:18:11,289 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:11,289 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:18:11,289 - args:
2018-07-04 10:18:11,296 - =============结束请求时间:2018-07-04 10:18:11,耗时:0s======================
2018-07-04 10:18:11,297 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:18:11,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:20,976 - ===========进入拦截器==============
2018-07-04 10:18:20,976 - http://localhost:8081/menu/addMenu
2018-07-04 10:18:21,008 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:18:21,008 - ===========请求时间:2018-07-04 10:18:21==========================
2018-07-04 10:18:21,008 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:18:21,008 - method=GET
2018-07-04 10:18:21,008 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:21,008 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:18:21,008 - args:menuName=地址池明细,url=/address-pool.html,belong=1,icon=,parentCode=5,menuType=0,
2018-07-04 10:18:21,072 - =============结束请求时间:2018-07-04 10:18:21,耗时:0s======================
2018-07-04 10:18:21,072 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:18:21,073 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:23,283 - ===========进入拦截器==============
2018-07-04 10:18:23,283 - http://localhost:8081/menu.html
2018-07-04 10:18:23,288 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:18:23,288 - ===========请求时间:2018-07-04 10:18:23==========================
2018-07-04 10:18:23,288 - url=http://localhost:8081/menu.html
2018-07-04 10:18:23,288 - method=GET
2018-07-04 10:18:23,288 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:23,288 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:18:23,288 - args:
2018-07-04 10:18:23,288 - =============结束请求时间:2018-07-04 10:18:23,耗时:0s======================
2018-07-04 10:18:23,288 - response=/menu
2018-07-04 10:18:23,289 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:23,369 - ===========进入拦截器==============
2018-07-04 10:18:23,369 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:18:23,377 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:18:23,378 - ===========请求时间:2018-07-04 10:18:23==========================
2018-07-04 10:18:23,378 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:18:23,378 - method=GET
2018-07-04 10:18:23,378 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:23,378 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:18:23,378 - args:
2018-07-04 10:18:23,410 - =============结束请求时间:2018-07-04 10:18:23,耗时:0s======================
2018-07-04 10:18:23,410 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:18:23,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:31,315 - ===========进入拦截器==============
2018-07-04 10:18:31,315 - http://localhost:8081/menu/findById
2018-07-04 10:18:31,320 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:18:31,320 - ===========请求时间:2018-07-04 10:18:31==========================
2018-07-04 10:18:31,320 - url=http://localhost:8081/menu/findById
2018-07-04 10:18:31,320 - method=GET
2018-07-04 10:18:31,320 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:31,320 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:18:31,320 - args:id=1,
2018-07-04 10:18:31,323 - =============结束请求时间:2018-07-04 10:18:31,耗时:0s======================
2018-07-04 10:18:31,323 - response=Result(code=200, msg=成功, data=Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:18:31,324 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:18:32,980 - ===========进入拦截器==============
2018-07-04 10:18:32,980 - http://localhost:8081/menu/findIconList
2018-07-04 10:18:32,983 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:18:32,983 - ===========请求时间:2018-07-04 10:18:32==========================
2018-07-04 10:18:32,983 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:18:32,983 - method=GET
2018-07-04 10:18:32,983 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:18:32,983 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:18:32,983 - args:
2018-07-04 10:18:32,988 - =============结束请求时间:2018-07-04 10:18:32,耗时:0s======================
2018-07-04 10:18:32,988 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:18:32,988 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:20:44,048 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16276 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:20:44,050 - No active profile set, falling back to default profiles: default
2018-07-04 10:20:44,210 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:20:44,252 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Wed Jul 04 10:20:44 CST 2018]; root of context hierarchy
2018-07-04 10:20:45,003 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:20:45,930 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:20:45,941 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:20:45,951 - Starting service [Tomcat]
2018-07-04 10:20:45,951 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:20:46,046 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:20:46,046 - Root WebApplicationContext: initialization completed in 1794 ms
2018-07-04 10:20:46,243 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:20:46,247 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:20:46,248 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:20:46,248 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:20:46,248 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:20:46,248 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:20:47,003 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Wed Jul 04 10:20:44 CST 2018]; root of context hierarchy
2018-07-04 10:20:47,070 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:20:47,071 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:20:47,071 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:20:47,072 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:20:47,072 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:20:47,072 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:20:47,072 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:20:47,072 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:20:47,072 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:20:47,072 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:20:47,073 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:20:47,073 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:20:47,073 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:20:47,073 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:20:47,073 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:20:47,073 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:20:47,073 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:20:47,077 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:20:47,077 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:20:47,078 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:20:47,079 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:20:47,079 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:20:47,079 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:20:47,079 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:20:47,079 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:20:47,079 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:20:47,079 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:20:47,080 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:20:47,080 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:20:47,081 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:20:47,081 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:20:47,081 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:20:47,082 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:20:47,082 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:20:47,082 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:20:47,083 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:20:47,083 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:20:47,083 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:20:47,084 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:20:47,084 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:20:47,084 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:20:47,086 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:20:47,086 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:20:47,086 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:20:47,086 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:20:47,087 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:20:47,088 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:20:47,131 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:20:47,131 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:20:47,149 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:20:47,174 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:20:47,746 - LiveReload server is running on port 35729
2018-07-04 10:20:47,870 - Registering beans for JMX exposure on startup
2018-07-04 10:20:47,871 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:20:47,876 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:20:47,885 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:20:47,896 - Using a shared selector for servlet write/read
2018-07-04 10:20:47,908 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:20:47,912 - Started FqLtdWasBackstageApplication in 4.567 seconds (JVM running for 5.696)
2018-07-04 10:20:55,022 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:20:55,022 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:20:55,064 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-04 10:20:55,080 - ===========进入拦截器==============
2018-07-04 10:20:55,099 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:20:55,099 - ===========请求时间:2018-07-04 10:20:55==========================
2018-07-04 10:20:55,100 - url=http://localhost:8081/login
2018-07-04 10:20:55,100 - method=GET
2018-07-04 10:20:55,100 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:20:55,100 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:20:55,100 - args:
2018-07-04 10:20:55,103 - =============结束请求时间:2018-07-04 10:20:55,耗时:0s======================
2018-07-04 10:20:55,103 - response=/login
2018-07-04 10:20:55,138 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:20:55,181 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:20:55,182 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:20:55,182 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:20:55,182 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:20:55,185 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:20:55,185 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:21:00,518 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:21:00,518 - ===========请求时间:2018-07-04 10:21:00==========================
2018-07-04 10:21:00,518 - url=http://localhost:8081/signIn
2018-07-04 10:21:00,518 - method=POST
2018-07-04 10:21:00,518 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:00,518 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:21:00,518 - args:userName=admin,password=123456,
2018-07-04 10:21:00,575 - {dataSource-1} inited
2018-07-04 10:21:00,902 - =============结束请求时间:2018-07-04 10:21:00,耗时:0s======================
2018-07-04 10:21:00,902 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:21:00, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:21:00,969 - ===========进入拦截器==============
2018-07-04 10:21:00,969 - http://localhost:8081/home
2018-07-04 10:21:00,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:21:00,975 - ===========请求时间:2018-07-04 10:21:00==========================
2018-07-04 10:21:00,975 - url=http://localhost:8081/home
2018-07-04 10:21:00,975 - method=GET
2018-07-04 10:21:00,975 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:00,975 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:21:00,975 - args:
2018-07-04 10:21:00,975 - =============结束请求时间:2018-07-04 10:21:00,耗时:0s======================
2018-07-04 10:21:00,975 - response=/home
2018-07-04 10:21:00,975 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:01,088 - ===========进入拦截器==============
2018-07-04 10:21:01,090 - http://localhost:8081/welcome
2018-07-04 10:21:01,118 - ===========进入拦截器==============
2018-07-04 10:21:01,119 - http://localhost:8081/common/top
2018-07-04 10:21:01,119 - ===========进入拦截器==============
2018-07-04 10:21:01,120 - http://localhost:8081/common/left
2018-07-04 10:21:01,125 - ===========进入拦截器==============
2018-07-04 10:21:01,125 - http://localhost:8081/common/footer
2018-07-04 10:21:01,168 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:21:01,168 - ===========请求时间:2018-07-04 10:21:01==========================
2018-07-04 10:21:01,168 - url=http://localhost:8081/welcome
2018-07-04 10:21:01,168 - method=GET
2018-07-04 10:21:01,168 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:01,168 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:21:01,168 - args:
2018-07-04 10:21:01,168 - =============结束请求时间:2018-07-04 10:21:01,耗时:0s======================
2018-07-04 10:21:01,169 - response=/welcome
2018-07-04 10:21:01,169 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:01,173 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:21:01,173 - ===========请求时间:2018-07-04 10:21:01==========================
2018-07-04 10:21:01,173 - url=http://localhost:8081/common/top
2018-07-04 10:21:01,173 - method=GET
2018-07-04 10:21:01,173 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:01,173 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:21:01,173 - args:
2018-07-04 10:21:01,173 - =============结束请求时间:2018-07-04 10:21:01,耗时:0s======================
2018-07-04 10:21:01,173 - response=/common/top
2018-07-04 10:21:01,173 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:01,183 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:21:01,183 - ===========请求时间:2018-07-04 10:21:01==========================
2018-07-04 10:21:01,183 - url=http://localhost:8081/common/left
2018-07-04 10:21:01,183 - method=GET
2018-07-04 10:21:01,183 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:01,183 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:21:01,183 - args:
2018-07-04 10:21:01,183 - =============结束请求时间:2018-07-04 10:21:01,耗时:0s======================
2018-07-04 10:21:01,183 - response=/common/left
2018-07-04 10:21:01,184 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:01,196 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:21:01,197 - ===========请求时间:2018-07-04 10:21:01==========================
2018-07-04 10:21:01,197 - url=http://localhost:8081/common/footer
2018-07-04 10:21:01,197 - method=GET
2018-07-04 10:21:01,197 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:01,197 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:21:01,197 - args:
2018-07-04 10:21:01,197 - =============结束请求时间:2018-07-04 10:21:01,耗时:0s======================
2018-07-04 10:21:01,197 - response=/common/footer
2018-07-04 10:21:01,197 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:02,865 - ===========进入拦截器==============
2018-07-04 10:21:02,865 - http://localhost:8081/menu.html
2018-07-04 10:21:02,869 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:21:02,869 - ===========请求时间:2018-07-04 10:21:02==========================
2018-07-04 10:21:02,869 - url=http://localhost:8081/menu.html
2018-07-04 10:21:02,869 - method=GET
2018-07-04 10:21:02,870 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:02,870 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:21:02,870 - args:
2018-07-04 10:21:02,870 - =============结束请求时间:2018-07-04 10:21:02,耗时:0s======================
2018-07-04 10:21:02,870 - response=/menu
2018-07-04 10:21:02,870 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:02,996 - ===========进入拦截器==============
2018-07-04 10:21:02,996 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:21:03,000 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:21:03,000 - ===========请求时间:2018-07-04 10:21:03==========================
2018-07-04 10:21:03,000 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:21:03,000 - method=GET
2018-07-04 10:21:03,000 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:03,000 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:21:03,000 - args:
2018-07-04 10:21:03,013 - =============结束请求时间:2018-07-04 10:21:03,耗时:0s======================
2018-07-04 10:21:03,013 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:21:03,020 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:21:14,237 - ===========进入拦截器==============
2018-07-04 10:21:14,237 - http://localhost:8081/menu/findById
2018-07-04 10:21:14,242 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:21:14,242 - ===========请求时间:2018-07-04 10:21:14==========================
2018-07-04 10:21:14,243 - url=http://localhost:8081/menu/findById
2018-07-04 10:21:14,243 - method=GET
2018-07-04 10:21:14,243 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:21:14,243 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:21:14,243 - args:id=1,
2018-07-04 10:21:14,249 - =============结束请求时间:2018-07-04 10:21:14,耗时:0s======================
2018-07-04 10:21:14,249 - response=Result(code=200, msg=成功, data=Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:21:14,250 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:25:45,479 - ===========进入拦截器==============
2018-07-04 10:25:45,479 - http://localhost:8081/project/findAllProject
2018-07-04 10:25:45,515 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:25:45,515 - ===========请求时间:2018-07-04 10:25:45==========================
2018-07-04 10:25:45,515 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:25:45,515 - method=GET
2018-07-04 10:25:45,515 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:25:45,515 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:25:45,515 - args:
2018-07-04 10:25:45,526 - =============结束请求时间:2018-07-04 10:25:45,耗时:0s======================
2018-07-04 10:25:45,526 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:25:45,528 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:25:47,862 - ===========进入拦截器==============
2018-07-04 10:25:47,863 - http://localhost:8081/menu/findIconList
2018-07-04 10:25:47,869 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:25:47,869 - ===========请求时间:2018-07-04 10:25:47==========================
2018-07-04 10:25:47,869 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:25:47,869 - method=GET
2018-07-04 10:25:47,869 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:25:47,869 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:25:47,869 - args:
2018-07-04 10:25:47,879 - =============结束请求时间:2018-07-04 10:25:47,耗时:0s======================
2018-07-04 10:25:47,879 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:25:47,881 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:25:49,863 - ===========进入拦截器==============
2018-07-04 10:25:49,863 - http://localhost:8081/menu/addMenu
2018-07-04 10:25:49,879 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:25:49,879 - ===========请求时间:2018-07-04 10:25:49==========================
2018-07-04 10:25:49,879 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:25:49,879 - method=GET
2018-07-04 10:25:49,879 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:25:49,879 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:25:49,879 - args:menuName=eqw,url=eqw,belong=1,icon=,parentCode=0,menuType=0,
2018-07-04 10:25:49,920 - =============结束请求时间:2018-07-04 10:25:49,耗时:0s======================
2018-07-04 10:25:49,920 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:25:49,921 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:25:52,135 - ===========进入拦截器==============
2018-07-04 10:25:52,135 - http://localhost:8081/menu.html
2018-07-04 10:25:52,141 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:25:52,142 - ===========请求时间:2018-07-04 10:25:52==========================
2018-07-04 10:25:52,142 - url=http://localhost:8081/menu.html
2018-07-04 10:25:52,142 - method=GET
2018-07-04 10:25:52,142 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:25:52,142 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:25:52,142 - args:
2018-07-04 10:25:52,142 - =============结束请求时间:2018-07-04 10:25:52,耗时:0s======================
2018-07-04 10:25:52,142 - response=/menu
2018-07-04 10:25:52,142 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:25:52,292 - ===========进入拦截器==============
2018-07-04 10:25:52,292 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:25:52,357 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:25:52,358 - ===========请求时间:2018-07-04 10:25:52==========================
2018-07-04 10:25:52,358 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:25:52,359 - method=GET
2018-07-04 10:25:52,359 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:25:52,359 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:25:52,359 - args:
2018-07-04 10:25:52,379 - =============结束请求时间:2018-07-04 10:25:52,耗时:0s======================
2018-07-04 10:25:52,380 - response=Result(code=200, msg=成功, data=[Menu(gid=16, menuType=0, icon=, menuName=eqw, url=eqw, parentCode=0, code=7, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=13, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:30.0, updateTime=2018-07-04 10:17:30.0, status=0)], version=1, createTime=2018-07-04 10:25:49.0, updateTime=2018-07-04 10:25:49.0, status=0), Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:25:52,387 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:35,619 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15040 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:26:35,622 - No active profile set, falling back to default profiles: default
2018-07-04 10:26:35,818 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:26:35,969 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f736f7c: startup date [Wed Jul 04 10:26:35 CST 2018]; root of context hierarchy
2018-07-04 10:26:37,299 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:26:38,511 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:26:38,523 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:26:38,533 - Starting service [Tomcat]
2018-07-04 10:26:38,533 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:26:38,653 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:26:38,653 - Root WebApplicationContext: initialization completed in 2684 ms
2018-07-04 10:26:38,869 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:26:38,873 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:26:38,875 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:26:38,875 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:26:38,875 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:26:38,875 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:26:39,667 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f736f7c: startup date [Wed Jul 04 10:26:35 CST 2018]; root of context hierarchy
2018-07-04 10:26:39,738 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:26:39,739 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:26:39,739 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:26:39,739 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:26:39,739 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:26:39,740 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:26:39,740 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:26:39,740 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:26:39,740 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:26:39,740 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:26:39,740 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:26:39,740 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:26:39,740 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:26:39,741 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:26:39,741 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:26:39,741 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:26:39,741 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:26:39,743 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:26:39,743 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:26:39,745 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:26:39,746 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:26:39,746 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:26:39,746 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:26:39,746 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:26:39,747 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:26:39,747 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:26:39,747 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:26:39,747 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:26:39,748 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:26:39,748 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:26:39,749 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:26:39,749 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:26:39,750 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:26:39,750 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:26:39,750 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:26:39,750 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:26:39,751 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:26:39,752 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:26:39,753 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:26:39,754 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:26:39,754 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:26:39,754 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:26:39,754 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:26:39,755 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:26:39,755 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:26:39,757 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:26:39,757 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:26:39,803 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:39,804 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:39,823 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:26:39,853 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:26:40,481 - LiveReload server is running on port 35729
2018-07-04 10:26:40,617 - Registering beans for JMX exposure on startup
2018-07-04 10:26:40,618 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:26:40,622 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:26:40,632 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:26:40,648 - Using a shared selector for servlet write/read
2018-07-04 10:26:40,662 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:26:40,666 - Started FqLtdWasBackstageApplication in 5.5 seconds (JVM running for 6.608)
2018-07-04 10:26:42,842 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:26:42,842 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:26:42,885 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-04 10:26:42,905 - ===========进入拦截器==============
2018-07-04 10:26:42,932 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:26:42,932 - ===========请求时间:2018-07-04 10:26:42==========================
2018-07-04 10:26:42,932 - url=http://localhost:8081/login
2018-07-04 10:26:42,932 - method=GET
2018-07-04 10:26:42,932 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:42,932 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:26:42,933 - args:
2018-07-04 10:26:42,938 - =============结束请求时间:2018-07-04 10:26:42,耗时:0s======================
2018-07-04 10:26:42,938 - response=/login
2018-07-04 10:26:42,973 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:26:43,019 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:26:43,019 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:26:43,019 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:26:43,019 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:26:43,022 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:26:43,022 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:26:47,118 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:26:47,118 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,118 - url=http://localhost:8081/signIn
2018-07-04 10:26:47,118 - method=POST
2018-07-04 10:26:47,118 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,118 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:26:47,118 - args:userName=admin,password=123456,
2018-07-04 10:26:47,175 - {dataSource-1} inited
2018-07-04 10:26:47,526 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,527 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:26:47, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:26:47,589 - ===========进入拦截器==============
2018-07-04 10:26:47,590 - http://localhost:8081/home
2018-07-04 10:26:47,596 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:26:47,596 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,596 - url=http://localhost:8081/home
2018-07-04 10:26:47,596 - method=GET
2018-07-04 10:26:47,596 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,596 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:26:47,596 - args:
2018-07-04 10:26:47,596 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,596 - response=/home
2018-07-04 10:26:47,597 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:47,698 - ===========进入拦截器==============
2018-07-04 10:26:47,698 - http://localhost:8081/welcome
2018-07-04 10:26:47,704 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:26:47,704 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,704 - url=http://localhost:8081/welcome
2018-07-04 10:26:47,704 - method=GET
2018-07-04 10:26:47,704 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,704 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:26:47,704 - args:
2018-07-04 10:26:47,704 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,704 - response=/welcome
2018-07-04 10:26:47,705 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:47,731 - ===========进入拦截器==============
2018-07-04 10:26:47,731 - http://localhost:8081/common/top
2018-07-04 10:26:47,732 - ===========进入拦截器==============
2018-07-04 10:26:47,733 - http://localhost:8081/common/left
2018-07-04 10:26:47,733 - ===========进入拦截器==============
2018-07-04 10:26:47,733 - http://localhost:8081/common/footer
2018-07-04 10:26:47,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:26:47,737 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,737 - url=http://localhost:8081/common/top
2018-07-04 10:26:47,737 - method=GET
2018-07-04 10:26:47,737 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,737 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:26:47,737 - args:
2018-07-04 10:26:47,737 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,737 - response=/common/top
2018-07-04 10:26:47,737 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:47,750 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:26:47,750 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,750 - url=http://localhost:8081/common/left
2018-07-04 10:26:47,750 - method=GET
2018-07-04 10:26:47,750 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,750 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:26:47,750 - args:
2018-07-04 10:26:47,750 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,750 - response=/common/left
2018-07-04 10:26:47,751 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:47,757 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:26:47,757 - ===========请求时间:2018-07-04 10:26:47==========================
2018-07-04 10:26:47,757 - url=http://localhost:8081/common/footer
2018-07-04 10:26:47,757 - method=GET
2018-07-04 10:26:47,757 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:47,757 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:26:47,757 - args:
2018-07-04 10:26:47,757 - =============结束请求时间:2018-07-04 10:26:47,耗时:0s======================
2018-07-04 10:26:47,757 - response=/common/footer
2018-07-04 10:26:47,758 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:49,592 - ===========进入拦截器==============
2018-07-04 10:26:49,592 - http://localhost:8081/menu.html
2018-07-04 10:26:49,599 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:26:49,599 - ===========请求时间:2018-07-04 10:26:49==========================
2018-07-04 10:26:49,600 - url=http://localhost:8081/menu.html
2018-07-04 10:26:49,600 - method=GET
2018-07-04 10:26:49,600 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:49,600 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:26:49,600 - args:
2018-07-04 10:26:49,600 - =============结束请求时间:2018-07-04 10:26:49,耗时:0s======================
2018-07-04 10:26:49,600 - response=/menu
2018-07-04 10:26:49,600 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:49,731 - ===========进入拦截器==============
2018-07-04 10:26:49,731 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:26:49,740 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:26:49,740 - ===========请求时间:2018-07-04 10:26:49==========================
2018-07-04 10:26:49,740 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:26:49,740 - method=GET
2018-07-04 10:26:49,740 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:49,740 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:26:49,740 - args:
2018-07-04 10:26:49,760 - =============结束请求时间:2018-07-04 10:26:49,耗时:0s======================
2018-07-04 10:26:49,760 - response=Result(code=200, msg=成功, data=[Menu(gid=16, menuType=0, icon=, menuName=eqw, url=eqw, parentCode=0, code=7, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=13, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:30.0, updateTime=2018-07-04 10:17:30.0, status=0)], version=1, createTime=2018-07-04 10:25:49.0, updateTime=2018-07-04 10:25:49.0, status=0), Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:26:49,768 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:53,249 - ===========进入拦截器==============
2018-07-04 10:26:53,249 - http://localhost:8081/menu/delMenu
2018-07-04 10:26:53,256 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 10:26:53,256 - ===========请求时间:2018-07-04 10:26:53==========================
2018-07-04 10:26:53,256 - url=http://localhost:8081/menu/delMenu
2018-07-04 10:26:53,256 - method=GET
2018-07-04 10:26:53,256 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:53,256 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 10:26:53,256 - args:gid=16,
2018-07-04 10:26:53,404 - =============结束请求时间:2018-07-04 10:26:53,耗时:0s======================
2018-07-04 10:26:53,405 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:26:53,410 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:55,631 - ===========进入拦截器==============
2018-07-04 10:26:55,631 - http://localhost:8081/menu.html
2018-07-04 10:26:55,637 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:26:55,637 - ===========请求时间:2018-07-04 10:26:55==========================
2018-07-04 10:26:55,637 - url=http://localhost:8081/menu.html
2018-07-04 10:26:55,637 - method=GET
2018-07-04 10:26:55,637 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:55,637 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:26:55,637 - args:
2018-07-04 10:26:55,638 - =============结束请求时间:2018-07-04 10:26:55,耗时:0s======================
2018-07-04 10:26:55,638 - response=/menu
2018-07-04 10:26:55,638 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:26:55,780 - ===========进入拦截器==============
2018-07-04 10:26:55,780 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:26:55,810 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:26:55,810 - ===========请求时间:2018-07-04 10:26:55==========================
2018-07-04 10:26:55,810 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:26:55,810 - method=GET
2018-07-04 10:26:55,810 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:26:55,810 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:26:55,811 - args:
2018-07-04 10:26:55,820 - =============结束请求时间:2018-07-04 10:26:55,耗时:0s======================
2018-07-04 10:26:55,820 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:26:55,823 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:27:01,244 - ===========进入拦截器==============
2018-07-04 10:27:01,244 - http://localhost:8081/menu/findById
2018-07-04 10:27:01,248 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:27:01,248 - ===========请求时间:2018-07-04 10:27:01==========================
2018-07-04 10:27:01,248 - url=http://localhost:8081/menu/findById
2018-07-04 10:27:01,248 - method=GET
2018-07-04 10:27:01,248 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:27:01,249 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:27:01,249 - args:id=1,
2018-07-04 10:27:01,255 - =============结束请求时间:2018-07-04 10:27:01,耗时:0s======================
2018-07-04 10:27:01,256 - response=Result(code=200, msg=成功, data=Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:27:01,257 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:27:46,075 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14740 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:27:46,077 - No active profile set, falling back to default profiles: default
2018-07-04 10:27:46,258 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:27:46,330 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@244a35f7: startup date [Wed Jul 04 10:27:46 CST 2018]; root of context hierarchy
2018-07-04 10:27:47,609 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:27:48,619 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:27:48,630 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:27:48,639 - Starting service [Tomcat]
2018-07-04 10:27:48,639 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:27:48,736 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:27:48,736 - Root WebApplicationContext: initialization completed in 2406 ms
2018-07-04 10:27:48,944 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:27:48,948 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:27:48,949 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:27:48,949 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:27:48,949 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:27:48,949 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:27:49,805 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@244a35f7: startup date [Wed Jul 04 10:27:46 CST 2018]; root of context hierarchy
2018-07-04 10:27:49,870 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:27:49,871 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:27:49,871 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:27:49,871 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:27:49,871 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:27:49,872 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:27:49,872 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:27:49,872 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:27:49,872 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:27:49,872 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:27:49,872 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:27:49,872 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:27:49,874 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:27:49,875 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:27:49,875 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:27:49,875 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:27:49,875 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:27:49,878 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:27:49,878 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:27:49,880 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:27:49,880 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:27:49,880 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:27:49,880 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:27:49,880 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:27:49,880 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:27:49,881 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:27:49,881 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:27:49,881 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:27:49,882 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:27:49,882 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:27:49,882 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:27:49,882 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:27:49,883 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:27:49,884 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:27:49,884 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:27:49,884 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:27:49,884 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:27:49,884 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:27:49,885 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:27:49,886 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:27:49,886 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:27:49,886 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:27:49,886 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:27:49,886 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:27:49,886 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:27:49,889 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:27:49,890 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:27:49,938 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:27:49,939 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:27:49,961 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:27:49,990 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:27:50,621 - LiveReload server is running on port 35729
2018-07-04 10:27:50,746 - Registering beans for JMX exposure on startup
2018-07-04 10:27:50,746 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:27:50,751 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:27:50,761 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:27:50,772 - Using a shared selector for servlet write/read
2018-07-04 10:27:50,786 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:27:50,790 - Started FqLtdWasBackstageApplication in 5.288 seconds (JVM running for 6.42)
2018-07-04 10:27:55,861 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:27:55,861 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:27:55,900 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 10:27:55,917 - ===========进入拦截器==============
2018-07-04 10:27:55,943 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:27:55,943 - ===========请求时间:2018-07-04 10:27:55==========================
2018-07-04 10:27:55,943 - url=http://localhost:8081/login
2018-07-04 10:27:55,943 - method=GET
2018-07-04 10:27:55,943 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:27:55,943 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:27:55,944 - args:
2018-07-04 10:27:55,946 - =============结束请求时间:2018-07-04 10:27:55,耗时:0s======================
2018-07-04 10:27:55,946 - response=/login
2018-07-04 10:27:55,979 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:27:56,017 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:27:56,017 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:27:56,017 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:27:56,017 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:27:56,019 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:27:56,020 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:28:01,514 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:28:01,514 - ===========请求时间:2018-07-04 10:28:01==========================
2018-07-04 10:28:01,514 - url=http://localhost:8081/signIn
2018-07-04 10:28:01,515 - method=POST
2018-07-04 10:28:01,515 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:01,515 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:28:01,515 - args:userName=admin,password=123456,
2018-07-04 10:28:01,579 - {dataSource-1} inited
2018-07-04 10:28:01,973 - =============结束请求时间:2018-07-04 10:28:01,耗时:0s======================
2018-07-04 10:28:01,974 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:28:01, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:28:02,042 - ===========进入拦截器==============
2018-07-04 10:28:02,042 - http://localhost:8081/home
2018-07-04 10:28:02,050 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:28:02,051 - ===========请求时间:2018-07-04 10:28:02==========================
2018-07-04 10:28:02,051 - url=http://localhost:8081/home
2018-07-04 10:28:02,051 - method=GET
2018-07-04 10:28:02,051 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:02,051 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:28:02,051 - args:
2018-07-04 10:28:02,051 - =============结束请求时间:2018-07-04 10:28:02,耗时:0s======================
2018-07-04 10:28:02,051 - response=/home
2018-07-04 10:28:02,051 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:02,147 - ===========进入拦截器==============
2018-07-04 10:28:02,147 - http://localhost:8081/welcome
2018-07-04 10:28:02,152 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:28:02,152 - ===========请求时间:2018-07-04 10:28:02==========================
2018-07-04 10:28:02,152 - url=http://localhost:8081/welcome
2018-07-04 10:28:02,152 - method=GET
2018-07-04 10:28:02,152 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:02,152 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:28:02,152 - args:
2018-07-04 10:28:02,153 - =============结束请求时间:2018-07-04 10:28:02,耗时:0s======================
2018-07-04 10:28:02,153 - response=/welcome
2018-07-04 10:28:02,153 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:02,182 - ===========进入拦截器==============
2018-07-04 10:28:02,182 - http://localhost:8081/common/top
2018-07-04 10:28:02,182 - ===========进入拦截器==============
2018-07-04 10:28:02,182 - http://localhost:8081/common/left
2018-07-04 10:28:02,183 - ===========进入拦截器==============
2018-07-04 10:28:02,183 - http://localhost:8081/common/footer
2018-07-04 10:28:02,194 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:28:02,194 - ===========请求时间:2018-07-04 10:28:02==========================
2018-07-04 10:28:02,194 - url=http://localhost:8081/common/top
2018-07-04 10:28:02,194 - method=GET
2018-07-04 10:28:02,194 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:02,194 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:28:02,194 - args:
2018-07-04 10:28:02,194 - =============结束请求时间:2018-07-04 10:28:02,耗时:0s======================
2018-07-04 10:28:02,194 - response=/common/top
2018-07-04 10:28:02,195 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:02,201 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:28:02,201 - ===========请求时间:2018-07-04 10:28:02==========================
2018-07-04 10:28:02,202 - url=http://localhost:8081/common/left
2018-07-04 10:28:02,202 - method=GET
2018-07-04 10:28:02,202 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:02,202 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:28:02,202 - args:
2018-07-04 10:28:02,202 - =============结束请求时间:2018-07-04 10:28:02,耗时:0s======================
2018-07-04 10:28:02,202 - response=/common/left
2018-07-04 10:28:02,202 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:02,212 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:28:02,212 - ===========请求时间:2018-07-04 10:28:02==========================
2018-07-04 10:28:02,212 - url=http://localhost:8081/common/footer
2018-07-04 10:28:02,212 - method=GET
2018-07-04 10:28:02,212 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:02,212 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:28:02,212 - args:
2018-07-04 10:28:02,212 - =============结束请求时间:2018-07-04 10:28:02,耗时:0s======================
2018-07-04 10:28:02,212 - response=/common/footer
2018-07-04 10:28:02,213 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:03,953 - ===========进入拦截器==============
2018-07-04 10:28:03,954 - http://localhost:8081/menu.html
2018-07-04 10:28:03,960 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:28:03,961 - ===========请求时间:2018-07-04 10:28:03==========================
2018-07-04 10:28:03,961 - url=http://localhost:8081/menu.html
2018-07-04 10:28:03,961 - method=GET
2018-07-04 10:28:03,961 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:03,961 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:28:03,961 - args:
2018-07-04 10:28:03,961 - =============结束请求时间:2018-07-04 10:28:03,耗时:0s======================
2018-07-04 10:28:03,961 - response=/menu
2018-07-04 10:28:03,961 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:04,099 - ===========进入拦截器==============
2018-07-04 10:28:04,099 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:28:04,105 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:28:04,106 - ===========请求时间:2018-07-04 10:28:04==========================
2018-07-04 10:28:04,106 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:28:04,106 - method=GET
2018-07-04 10:28:04,106 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:04,106 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:28:04,106 - args:
2018-07-04 10:28:04,134 - =============结束请求时间:2018-07-04 10:28:04,耗时:0s======================
2018-07-04 10:28:04,134 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:28:04,148 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:07,373 - ===========进入拦截器==============
2018-07-04 10:28:07,373 - http://localhost:8081/menu/findById
2018-07-04 10:28:07,386 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:28:07,386 - ===========请求时间:2018-07-04 10:28:07==========================
2018-07-04 10:28:07,386 - url=http://localhost:8081/menu/findById
2018-07-04 10:28:07,386 - method=GET
2018-07-04 10:28:07,386 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:07,386 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:28:07,386 - args:id=8,
2018-07-04 10:28:07,393 - =============结束请求时间:2018-07-04 10:28:07,耗时:0s======================
2018-07-04 10:28:07,393 - response=Result(code=200, msg=成功, data=Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:28:07,394 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:38,721 - ===========进入拦截器==============
2018-07-04 10:28:38,722 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:28:38,733 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:28:38,733 - ===========请求时间:2018-07-04 10:28:38==========================
2018-07-04 10:28:38,733 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:28:38,733 - method=GET
2018-07-04 10:28:38,733 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:38,733 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:28:38,733 - args:parentCode=8,
2018-07-04 10:28:38,744 - =============结束请求时间:2018-07-04 10:28:38,耗时:0s======================
2018-07-04 10:28:38,744 - response=Result(code=200, msg=成功, data=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=8, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=8, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=8, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:28:38,745 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:28:39,927 - ===========进入拦截器==============
2018-07-04 10:28:39,927 - http://localhost:8081/menu/findById
2018-07-04 10:28:39,931 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-04 10:28:39,932 - ===========请求时间:2018-07-04 10:28:39==========================
2018-07-04 10:28:39,932 - url=http://localhost:8081/menu/findById
2018-07-04 10:28:39,932 - method=GET
2018-07-04 10:28:39,932 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:28:39,932 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-04 10:28:39,932 - args:id=12,
2018-07-04 10:28:39,938 - =============结束请求时间:2018-07-04 10:28:39,耗时:0s======================
2018-07-04 10:28:39,938 - response=Result(code=200, msg=成功, data=Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=8, code=4, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-04 10:28:39,941 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:15,751 - ===========进入拦截器==============
2018-07-04 10:30:15,751 - http://localhost:8081/project/findAllProject
2018-07-04 10:30:15,781 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:30:15,781 - ===========请求时间:2018-07-04 10:30:15==========================
2018-07-04 10:30:15,781 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:30:15,781 - method=GET
2018-07-04 10:30:15,781 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:15,781 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:30:15,782 - args:
2018-07-04 10:30:15,820 - =============结束请求时间:2018-07-04 10:30:15,耗时:0s======================
2018-07-04 10:30:15,820 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:15,823 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:19,046 - ===========进入拦截器==============
2018-07-04 10:30:19,046 - http://localhost:8081/menu/findIconList
2018-07-04 10:30:19,049 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:30:19,049 - ===========请求时间:2018-07-04 10:30:19==========================
2018-07-04 10:30:19,049 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:30:19,049 - method=GET
2018-07-04 10:30:19,049 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:19,049 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:30:19,049 - args:
2018-07-04 10:30:19,058 - =============结束请求时间:2018-07-04 10:30:19,耗时:0s======================
2018-07-04 10:30:19,058 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:19,061 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:21,014 - ===========进入拦截器==============
2018-07-04 10:30:21,015 - http://localhost:8081/menu/addMenu
2018-07-04 10:30:21,029 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:30:21,029 - ===========请求时间:2018-07-04 10:30:21==========================
2018-07-04 10:30:21,029 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:30:21,029 - method=GET
2018-07-04 10:30:21,029 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:21,029 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:30:21,029 - args:menuName=312,url=31231,belong=1,icon=,parentCode=8,menuType=0,
2018-07-04 10:30:21,074 - =============结束请求时间:2018-07-04 10:30:21,耗时:0s======================
2018-07-04 10:30:21,074 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:30:21,076 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:23,290 - ===========进入拦截器==============
2018-07-04 10:30:23,290 - http://localhost:8081/menu.html
2018-07-04 10:30:23,294 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:30:23,294 - ===========请求时间:2018-07-04 10:30:23==========================
2018-07-04 10:30:23,294 - url=http://localhost:8081/menu.html
2018-07-04 10:30:23,294 - method=GET
2018-07-04 10:30:23,294 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:23,294 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:30:23,294 - args:
2018-07-04 10:30:23,295 - =============结束请求时间:2018-07-04 10:30:23,耗时:0s======================
2018-07-04 10:30:23,295 - response=/menu
2018-07-04 10:30:23,295 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:23,425 - ===========进入拦截器==============
2018-07-04 10:30:23,425 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:30:23,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:30:23,429 - ===========请求时间:2018-07-04 10:30:23==========================
2018-07-04 10:30:23,429 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:30:23,429 - method=GET
2018-07-04 10:30:23,429 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:23,429 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:30:23,429 - args:
2018-07-04 10:30:23,439 - =============结束请求时间:2018-07-04 10:30:23,耗时:0s======================
2018-07-04 10:30:23,440 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=15, menuType=0, icon=, menuName=地址池明细, url=/address-pool.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:18:21.0, updateTime=2018-07-04 10:18:21.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:23,441 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:24,450 - ===========进入拦截器==============
2018-07-04 10:30:24,450 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:30:24,454 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:30:24,454 - ===========请求时间:2018-07-04 10:30:24==========================
2018-07-04 10:30:24,454 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:30:24,454 - method=GET
2018-07-04 10:30:24,454 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:24,454 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:30:24,454 - args:parentCode=8,
2018-07-04 10:30:24,460 - =============结束请求时间:2018-07-04 10:30:24,耗时:0s======================
2018-07-04 10:30:24,460 - response=Result(code=200, msg=成功, data=[Menu(gid=17, menuType=0, icon=, menuName=312, url=31231, parentCode=8, code=5, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:30:21.0, updateTime=2018-07-04 10:30:21.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=8, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=8, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=8, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=8, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:24,460 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:27,902 - ===========进入拦截器==============
2018-07-04 10:30:27,902 - http://localhost:8081/menu/delMenu
2018-07-04 10:30:27,907 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 10:30:27,907 - ===========请求时间:2018-07-04 10:30:27==========================
2018-07-04 10:30:27,907 - url=http://localhost:8081/menu/delMenu
2018-07-04 10:30:27,907 - method=GET
2018-07-04 10:30:27,907 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:27,907 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 10:30:27,907 - args:gid=17,
2018-07-04 10:30:28,113 - =============结束请求时间:2018-07-04 10:30:28,耗时:0s======================
2018-07-04 10:30:28,114 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:30:28,117 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:30,342 - ===========进入拦截器==============
2018-07-04 10:30:30,342 - http://localhost:8081/menu.html
2018-07-04 10:30:30,347 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:30:30,347 - ===========请求时间:2018-07-04 10:30:30==========================
2018-07-04 10:30:30,347 - url=http://localhost:8081/menu.html
2018-07-04 10:30:30,347 - method=GET
2018-07-04 10:30:30,347 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:30,347 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:30:30,347 - args:
2018-07-04 10:30:30,347 - =============结束请求时间:2018-07-04 10:30:30,耗时:0s======================
2018-07-04 10:30:30,347 - response=/menu
2018-07-04 10:30:30,348 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:30,476 - ===========进入拦截器==============
2018-07-04 10:30:30,476 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:30:30,480 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:30:30,480 - ===========请求时间:2018-07-04 10:30:30==========================
2018-07-04 10:30:30,480 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:30:30,480 - method=GET
2018-07-04 10:30:30,480 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:30,480 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:30:30,480 - args:
2018-07-04 10:30:30,488 - =============结束请求时间:2018-07-04 10:30:30,耗时:0s======================
2018-07-04 10:30:30,488 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:30,489 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:43,960 - ===========进入拦截器==============
2018-07-04 10:30:43,960 - http://localhost:8081/role.html
2018-07-04 10:30:43,966 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:30:43,966 - ===========请求时间:2018-07-04 10:30:43==========================
2018-07-04 10:30:43,966 - url=http://localhost:8081/role.html
2018-07-04 10:30:43,966 - method=GET
2018-07-04 10:30:43,966 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:43,966 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:30:43,966 - args:
2018-07-04 10:30:43,967 - =============结束请求时间:2018-07-04 10:30:43,耗时:0s======================
2018-07-04 10:30:43,967 - response=/role
2018-07-04 10:30:43,967 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:30:44,052 - ===========进入拦截器==============
2018-07-04 10:30:44,052 - http://localhost:8081/role/findAllRole
2018-07-04 10:30:44,060 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:30:44,060 - ===========请求时间:2018-07-04 10:30:44==========================
2018-07-04 10:30:44,060 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:30:44,060 - method=GET
2018-07-04 10:30:44,060 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:30:44,060 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:30:44,060 - args:roleName=,
2018-07-04 10:30:44,070 - =============结束请求时间:2018-07-04 10:30:44,耗时:0s======================
2018-07-04 10:30:44,070 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:30:44,071 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:21,560 - ===========进入拦截器==============
2018-07-04 10:31:21,561 - http://localhost:8081/home
2018-07-04 10:31:21,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:31:21,565 - ===========请求时间:2018-07-04 10:31:21==========================
2018-07-04 10:31:21,566 - url=http://localhost:8081/home
2018-07-04 10:31:21,566 - method=GET
2018-07-04 10:31:21,566 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:21,566 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:31:21,566 - args:
2018-07-04 10:31:21,566 - =============结束请求时间:2018-07-04 10:31:21,耗时:0s======================
2018-07-04 10:31:21,566 - response=/home
2018-07-04 10:31:21,566 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:21,660 - ===========进入拦截器==============
2018-07-04 10:31:21,660 - http://localhost:8081/welcome
2018-07-04 10:31:21,666 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:31:21,666 - ===========请求时间:2018-07-04 10:31:21==========================
2018-07-04 10:31:21,666 - url=http://localhost:8081/welcome
2018-07-04 10:31:21,666 - method=GET
2018-07-04 10:31:21,666 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:21,666 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:31:21,666 - args:
2018-07-04 10:31:21,666 - =============结束请求时间:2018-07-04 10:31:21,耗时:0s======================
2018-07-04 10:31:21,666 - response=/welcome
2018-07-04 10:31:21,667 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:21,691 - ===========进入拦截器==============
2018-07-04 10:31:21,691 - http://localhost:8081/common/top
2018-07-04 10:31:21,692 - ===========进入拦截器==============
2018-07-04 10:31:21,693 - http://localhost:8081/common/left
2018-07-04 10:31:21,694 - ===========进入拦截器==============
2018-07-04 10:31:21,695 - http://localhost:8081/common/footer
2018-07-04 10:31:21,696 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:31:21,696 - ===========请求时间:2018-07-04 10:31:21==========================
2018-07-04 10:31:21,696 - url=http://localhost:8081/common/top
2018-07-04 10:31:21,696 - method=GET
2018-07-04 10:31:21,696 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:21,696 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:31:21,696 - args:
2018-07-04 10:31:21,696 - =============结束请求时间:2018-07-04 10:31:21,耗时:0s======================
2018-07-04 10:31:21,696 - response=/common/top
2018-07-04 10:31:21,696 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:21,701 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:31:21,702 - ===========请求时间:2018-07-04 10:31:21==========================
2018-07-04 10:31:21,702 - url=http://localhost:8081/common/footer
2018-07-04 10:31:21,702 - method=GET
2018-07-04 10:31:21,702 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:21,702 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:31:21,702 - args:
2018-07-04 10:31:21,702 - =============结束请求时间:2018-07-04 10:31:21,耗时:0s======================
2018-07-04 10:31:21,702 - response=/common/footer
2018-07-04 10:31:21,702 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:21,703 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:31:21,703 - ===========请求时间:2018-07-04 10:31:21==========================
2018-07-04 10:31:21,703 - url=http://localhost:8081/common/left
2018-07-04 10:31:21,703 - method=GET
2018-07-04 10:31:21,703 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:21,703 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:31:21,703 - args:
2018-07-04 10:31:21,704 - =============结束请求时间:2018-07-04 10:31:21,耗时:0s======================
2018-07-04 10:31:21,704 - response=/common/left
2018-07-04 10:31:21,704 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:23,568 - ===========进入拦截器==============
2018-07-04 10:31:23,568 - http://localhost:8081/role.html
2018-07-04 10:31:23,573 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:31:23,573 - ===========请求时间:2018-07-04 10:31:23==========================
2018-07-04 10:31:23,573 - url=http://localhost:8081/role.html
2018-07-04 10:31:23,573 - method=GET
2018-07-04 10:31:23,573 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:23,573 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:31:23,573 - args:
2018-07-04 10:31:23,573 - =============结束请求时间:2018-07-04 10:31:23,耗时:0s======================
2018-07-04 10:31:23,573 - response=/role
2018-07-04 10:31:23,574 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:31:23,675 - ===========进入拦截器==============
2018-07-04 10:31:23,675 - http://localhost:8081/role/findAllRole
2018-07-04 10:31:23,692 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:31:23,692 - ===========请求时间:2018-07-04 10:31:23==========================
2018-07-04 10:31:23,692 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:31:23,692 - method=GET
2018-07-04 10:31:23,692 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:31:23,692 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:31:23,692 - args:roleName=,
2018-07-04 10:31:23,700 - =============结束请求时间:2018-07-04 10:31:23,耗时:0s======================
2018-07-04 10:31:23,700 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:31:23,700 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:35:54,098 - ===========进入拦截器==============
2018-07-04 10:35:54,098 - http://localhost:8081/menu.html
2018-07-04 10:35:54,126 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:35:54,126 - ===========请求时间:2018-07-04 10:35:54==========================
2018-07-04 10:35:54,126 - url=http://localhost:8081/menu.html
2018-07-04 10:35:54,126 - method=GET
2018-07-04 10:35:54,126 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:35:54,126 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:35:54,127 - args:
2018-07-04 10:35:54,127 - =============结束请求时间:2018-07-04 10:35:54,耗时:0s======================
2018-07-04 10:35:54,127 - response=/menu
2018-07-04 10:35:54,127 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:35:54,252 - ===========进入拦截器==============
2018-07-04 10:35:54,252 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:35:54,256 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:35:54,256 - ===========请求时间:2018-07-04 10:35:54==========================
2018-07-04 10:35:54,256 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:35:54,256 - method=GET
2018-07-04 10:35:54,256 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:35:54,256 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:35:54,256 - args:
2018-07-04 10:35:54,265 - =============结束请求时间:2018-07-04 10:35:54,耗时:0s======================
2018-07-04 10:35:54,265 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:35:54,266 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:35:56,272 - ===========进入拦截器==============
2018-07-04 10:35:56,272 - http://localhost:8081/project/findAllProject
2018-07-04 10:35:56,276 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:35:56,277 - ===========请求时间:2018-07-04 10:35:56==========================
2018-07-04 10:35:56,277 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:35:56,277 - method=GET
2018-07-04 10:35:56,277 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:35:56,277 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:35:56,277 - args:
2018-07-04 10:35:56,280 - =============结束请求时间:2018-07-04 10:35:56,耗时:0s======================
2018-07-04 10:35:56,280 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:35:56,282 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:34,386 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 1320 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:41:34,389 - No active profile set, falling back to default profiles: default
2018-07-04 10:41:34,567 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:41:34,645 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19d93143: startup date [Wed Jul 04 10:41:34 CST 2018]; root of context hierarchy
2018-07-04 10:41:35,607 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:41:37,028 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:41:37,039 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:41:37,047 - Starting service [Tomcat]
2018-07-04 10:41:37,047 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:41:37,141 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:41:37,141 - Root WebApplicationContext: initialization completed in 2496 ms
2018-07-04 10:41:37,351 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:41:37,355 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:41:37,355 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:41:37,355 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:41:37,355 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:41:37,356 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:41:38,103 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19d93143: startup date [Wed Jul 04 10:41:34 CST 2018]; root of context hierarchy
2018-07-04 10:41:38,165 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:41:38,166 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:41:38,166 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:41:38,166 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:41:38,166 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:41:38,166 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:41:38,167 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:41:38,167 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:41:38,167 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:41:38,167 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:41:38,167 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:41:38,167 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:41:38,167 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:41:38,167 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:41:38,168 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:41:38,168 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:41:38,169 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:41:38,171 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:41:38,171 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:41:38,174 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:41:38,174 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:41:38,174 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:41:38,174 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:41:38,175 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:41:38,175 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:41:38,175 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:41:38,175 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:41:38,175 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:41:38,176 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:41:38,177 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:41:38,177 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:41:38,177 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:41:38,178 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:41:38,178 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:41:38,178 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:41:38,179 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:41:38,179 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:41:38,179 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:41:38,180 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:41:38,180 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:41:38,180 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:41:38,181 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:41:38,181 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:41:38,181 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:41:38,181 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:41:38,182 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:41:38,183 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:41:38,227 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:38,227 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:38,245 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:41:38,269 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:41:38,921 - LiveReload server is running on port 35729
2018-07-04 10:41:39,042 - Registering beans for JMX exposure on startup
2018-07-04 10:41:39,043 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:41:39,050 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:41:39,058 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:41:39,069 - Using a shared selector for servlet write/read
2018-07-04 10:41:39,081 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:41:39,085 - Started FqLtdWasBackstageApplication in 5.536 seconds (JVM running for 6.679)
2018-07-04 10:41:43,604 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:41:43,604 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:41:43,643 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 10:41:43,661 - ===========进入拦截器==============
2018-07-04 10:41:43,686 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:41:43,686 - ===========请求时间:2018-07-04 10:41:43==========================
2018-07-04 10:41:43,687 - url=http://localhost:8081/login
2018-07-04 10:41:43,687 - method=GET
2018-07-04 10:41:43,687 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:43,687 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:41:43,687 - args:
2018-07-04 10:41:43,691 - =============结束请求时间:2018-07-04 10:41:43,耗时:0s======================
2018-07-04 10:41:43,692 - response=/login
2018-07-04 10:41:43,723 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:41:43,763 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:41:43,764 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:41:43,764 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:41:43,764 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:41:43,766 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:41:43,767 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:41:48,295 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:41:48,295 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,295 - url=http://localhost:8081/signIn
2018-07-04 10:41:48,295 - method=POST
2018-07-04 10:41:48,295 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,295 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:41:48,295 - args:userName=admin,password=123456,
2018-07-04 10:41:48,351 - {dataSource-1} inited
2018-07-04 10:41:48,686 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,687 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:41:48, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:41:48,757 - ===========进入拦截器==============
2018-07-04 10:41:48,758 - http://localhost:8081/home
2018-07-04 10:41:48,767 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:41:48,767 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,767 - url=http://localhost:8081/home
2018-07-04 10:41:48,767 - method=GET
2018-07-04 10:41:48,767 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,767 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:41:48,767 - args:
2018-07-04 10:41:48,768 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,768 - response=/home
2018-07-04 10:41:48,768 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:48,887 - ===========进入拦截器==============
2018-07-04 10:41:48,887 - http://localhost:8081/welcome
2018-07-04 10:41:48,892 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:41:48,892 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,892 - url=http://localhost:8081/welcome
2018-07-04 10:41:48,892 - method=GET
2018-07-04 10:41:48,892 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,892 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:41:48,892 - args:
2018-07-04 10:41:48,893 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,893 - response=/welcome
2018-07-04 10:41:48,893 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:48,932 - ===========进入拦截器==============
2018-07-04 10:41:48,933 - http://localhost:8081/common/top
2018-07-04 10:41:48,933 - ===========进入拦截器==============
2018-07-04 10:41:48,933 - http://localhost:8081/common/left
2018-07-04 10:41:48,935 - ===========进入拦截器==============
2018-07-04 10:41:48,935 - http://localhost:8081/common/footer
2018-07-04 10:41:48,937 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:41:48,937 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,937 - url=http://localhost:8081/common/top
2018-07-04 10:41:48,937 - method=GET
2018-07-04 10:41:48,937 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,937 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:41:48,937 - args:
2018-07-04 10:41:48,937 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,937 - response=/common/top
2018-07-04 10:41:48,937 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:48,957 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:41:48,958 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,958 - url=http://localhost:8081/common/left
2018-07-04 10:41:48,958 - method=GET
2018-07-04 10:41:48,958 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,958 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:41:48,958 - args:
2018-07-04 10:41:48,958 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,959 - response=/common/left
2018-07-04 10:41:48,960 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:48,962 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:41:48,962 - ===========请求时间:2018-07-04 10:41:48==========================
2018-07-04 10:41:48,962 - url=http://localhost:8081/common/footer
2018-07-04 10:41:48,962 - method=GET
2018-07-04 10:41:48,962 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:48,962 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:41:48,962 - args:
2018-07-04 10:41:48,963 - =============结束请求时间:2018-07-04 10:41:48,耗时:0s======================
2018-07-04 10:41:48,963 - response=/common/footer
2018-07-04 10:41:48,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:50,599 - ===========进入拦截器==============
2018-07-04 10:41:50,599 - http://localhost:8081/role.html
2018-07-04 10:41:50,608 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:41:50,608 - ===========请求时间:2018-07-04 10:41:50==========================
2018-07-04 10:41:50,608 - url=http://localhost:8081/role.html
2018-07-04 10:41:50,608 - method=GET
2018-07-04 10:41:50,608 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:50,608 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:41:50,608 - args:
2018-07-04 10:41:50,608 - =============结束请求时间:2018-07-04 10:41:50,耗时:0s======================
2018-07-04 10:41:50,608 - response=/role
2018-07-04 10:41:50,608 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:50,721 - ===========进入拦截器==============
2018-07-04 10:41:50,721 - http://localhost:8081/role/findAllRole
2018-07-04 10:41:50,728 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:41:50,728 - ===========请求时间:2018-07-04 10:41:50==========================
2018-07-04 10:41:50,728 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:41:50,728 - method=GET
2018-07-04 10:41:50,728 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:50,729 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:41:50,729 - args:roleName=,
2018-07-04 10:41:50,746 - =============结束请求时间:2018-07-04 10:41:50,耗时:0s======================
2018-07-04 10:41:50,746 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:41:50,754 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:41:53,958 - ===========进入拦截器==============
2018-07-04 10:41:53,958 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:41:53,962 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:41:53,962 - ===========请求时间:2018-07-04 10:41:53==========================
2018-07-04 10:41:53,962 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:41:53,962 - method=GET
2018-07-04 10:41:53,962 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:41:53,963 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:41:53,963 - args:
2018-07-04 10:41:53,984 - =============结束请求时间:2018-07-04 10:41:53,耗时:0s======================
2018-07-04 10:41:53,985 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:41:53,988 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:02,284 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14420 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:43:02,286 - No active profile set, falling back to default profiles: default
2018-07-04 10:43:02,479 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:43:02,570 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b11ba1: startup date [Wed Jul 04 10:43:02 CST 2018]; root of context hierarchy
2018-07-04 10:43:03,736 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:43:04,674 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:43:04,685 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:43:04,693 - Starting service [Tomcat]
2018-07-04 10:43:04,693 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:43:04,788 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:43:04,788 - Root WebApplicationContext: initialization completed in 2218 ms
2018-07-04 10:43:04,986 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:43:04,991 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:43:04,991 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:43:04,991 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:43:04,991 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:43:04,991 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:43:05,741 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42b11ba1: startup date [Wed Jul 04 10:43:02 CST 2018]; root of context hierarchy
2018-07-04 10:43:05,800 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:43:05,801 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:43:05,802 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:43:05,802 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:43:05,802 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:43:05,802 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:43:05,802 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:43:05,802 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:43:05,802 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:43:05,802 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:43:05,803 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:43:05,803 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:43:05,803 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:43:05,803 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:43:05,803 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:43:05,803 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:43:05,803 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:43:05,806 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:43:05,806 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:43:05,808 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:43:05,808 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:43:05,808 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:43:05,808 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:43:05,808 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:43:05,808 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:43:05,809 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:43:05,809 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:43:05,809 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:43:05,810 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:43:05,810 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:43:05,810 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:43:05,810 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:43:05,813 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:43:05,813 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:43:05,813 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:43:05,813 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:43:05,813 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:43:05,814 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:43:05,815 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:43:05,816 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:43:05,816 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:43:05,816 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:43:05,816 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:43:05,816 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:43:05,816 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:43:05,817 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:43:05,818 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:43:05,861 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:43:05,861 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:43:05,880 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:43:05,905 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:43:06,466 - LiveReload server is running on port 35729
2018-07-04 10:43:06,588 - Registering beans for JMX exposure on startup
2018-07-04 10:43:06,589 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:43:06,593 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:43:06,602 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:43:06,613 - Using a shared selector for servlet write/read
2018-07-04 10:43:06,626 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:43:06,630 - Started FqLtdWasBackstageApplication in 4.876 seconds (JVM running for 5.866)
2018-07-04 10:43:13,594 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:43:13,594 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:43:13,631 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 10:43:13,647 - ===========进入拦截器==============
2018-07-04 10:43:13,667 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:43:13,668 - ===========请求时间:2018-07-04 10:43:13==========================
2018-07-04 10:43:13,668 - url=http://localhost:8081/login
2018-07-04 10:43:13,668 - method=GET
2018-07-04 10:43:13,668 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:13,668 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:43:13,668 - args:
2018-07-04 10:43:13,671 - =============结束请求时间:2018-07-04 10:43:13,耗时:0s======================
2018-07-04 10:43:13,671 - response=/login
2018-07-04 10:43:13,700 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:43:13,737 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:43:13,737 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:43:13,737 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:43:13,737 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:43:13,740 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:43:13,741 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:43:17,912 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:43:17,913 - ===========请求时间:2018-07-04 10:43:17==========================
2018-07-04 10:43:17,913 - url=http://localhost:8081/signIn
2018-07-04 10:43:17,913 - method=POST
2018-07-04 10:43:17,913 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:17,913 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:43:17,913 - args:userName=admin,password=123456,
2018-07-04 10:43:17,969 - {dataSource-1} inited
2018-07-04 10:43:18,308 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,308 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:43:18, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:43:18,400 - ===========进入拦截器==============
2018-07-04 10:43:18,400 - http://localhost:8081/home
2018-07-04 10:43:18,406 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:43:18,406 - ===========请求时间:2018-07-04 10:43:18==========================
2018-07-04 10:43:18,406 - url=http://localhost:8081/home
2018-07-04 10:43:18,406 - method=GET
2018-07-04 10:43:18,406 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:18,406 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:43:18,406 - args:
2018-07-04 10:43:18,406 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,406 - response=/home
2018-07-04 10:43:18,406 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:18,504 - ===========进入拦截器==============
2018-07-04 10:43:18,504 - http://localhost:8081/welcome
2018-07-04 10:43:18,517 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:43:18,517 - ===========请求时间:2018-07-04 10:43:18==========================
2018-07-04 10:43:18,517 - url=http://localhost:8081/welcome
2018-07-04 10:43:18,517 - method=GET
2018-07-04 10:43:18,518 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:18,518 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:43:18,518 - args:
2018-07-04 10:43:18,518 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,518 - response=/welcome
2018-07-04 10:43:18,518 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:18,542 - ===========进入拦截器==============
2018-07-04 10:43:18,542 - http://localhost:8081/common/top
2018-07-04 10:43:18,543 - ===========进入拦截器==============
2018-07-04 10:43:18,544 - http://localhost:8081/common/left
2018-07-04 10:43:18,544 - ===========进入拦截器==============
2018-07-04 10:43:18,544 - http://localhost:8081/common/footer
2018-07-04 10:43:18,547 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:43:18,547 - ===========请求时间:2018-07-04 10:43:18==========================
2018-07-04 10:43:18,547 - url=http://localhost:8081/common/top
2018-07-04 10:43:18,547 - method=GET
2018-07-04 10:43:18,547 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:18,547 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:43:18,547 - args:
2018-07-04 10:43:18,547 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,547 - response=/common/top
2018-07-04 10:43:18,547 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:18,553 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:43:18,553 - ===========请求时间:2018-07-04 10:43:18==========================
2018-07-04 10:43:18,553 - url=http://localhost:8081/common/left
2018-07-04 10:43:18,553 - method=GET
2018-07-04 10:43:18,553 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:18,553 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:43:18,553 - args:
2018-07-04 10:43:18,553 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,554 - response=/common/left
2018-07-04 10:43:18,554 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:18,567 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:43:18,567 - ===========请求时间:2018-07-04 10:43:18==========================
2018-07-04 10:43:18,567 - url=http://localhost:8081/common/footer
2018-07-04 10:43:18,567 - method=GET
2018-07-04 10:43:18,567 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:18,567 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:43:18,567 - args:
2018-07-04 10:43:18,567 - =============结束请求时间:2018-07-04 10:43:18,耗时:0s======================
2018-07-04 10:43:18,567 - response=/common/footer
2018-07-04 10:43:18,568 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:21,015 - ===========进入拦截器==============
2018-07-04 10:43:21,016 - http://localhost:8081/role.html
2018-07-04 10:43:21,024 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:43:21,024 - ===========请求时间:2018-07-04 10:43:21==========================
2018-07-04 10:43:21,024 - url=http://localhost:8081/role.html
2018-07-04 10:43:21,024 - method=GET
2018-07-04 10:43:21,024 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:21,024 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:43:21,024 - args:
2018-07-04 10:43:21,024 - =============结束请求时间:2018-07-04 10:43:21,耗时:0s======================
2018-07-04 10:43:21,024 - response=/role
2018-07-04 10:43:21,025 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:21,149 - ===========进入拦截器==============
2018-07-04 10:43:21,150 - http://localhost:8081/role/findAllRole
2018-07-04 10:43:21,159 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:43:21,159 - ===========请求时间:2018-07-04 10:43:21==========================
2018-07-04 10:43:21,159 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:43:21,159 - method=GET
2018-07-04 10:43:21,159 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:21,159 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:43:21,159 - args:roleName=,
2018-07-04 10:43:21,178 - =============结束请求时间:2018-07-04 10:43:21,耗时:0s======================
2018-07-04 10:43:21,179 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:43:21,186 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:43:22,148 - ===========进入拦截器==============
2018-07-04 10:43:22,148 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:43:22,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:43:22,158 - ===========请求时间:2018-07-04 10:43:22==========================
2018-07-04 10:43:22,158 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:43:22,158 - method=GET
2018-07-04 10:43:22,158 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:43:22,158 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:43:22,158 - args:
2018-07-04 10:43:22,172 - =============结束请求时间:2018-07-04 10:43:22,耗时:0s======================
2018-07-04 10:43:22,172 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:43:22,175 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:33,839 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5252 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:45:33,841 - No active profile set, falling back to default profiles: default
2018-07-04 10:45:33,988 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:45:34,044 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2af8dbe9: startup date [Wed Jul 04 10:45:34 CST 2018]; root of context hierarchy
2018-07-04 10:45:35,064 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:45:36,458 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:45:36,468 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:45:36,480 - Starting service [Tomcat]
2018-07-04 10:45:36,480 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:45:36,580 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:45:36,580 - Root WebApplicationContext: initialization completed in 2537 ms
2018-07-04 10:45:36,772 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:45:36,776 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:45:36,776 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:45:36,776 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:45:36,776 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:45:36,776 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:45:37,524 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2af8dbe9: startup date [Wed Jul 04 10:45:34 CST 2018]; root of context hierarchy
2018-07-04 10:45:37,584 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:45:37,585 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:45:37,585 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:45:37,585 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:45:37,585 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:45:37,585 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:45:37,586 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:45:37,586 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:45:37,586 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:45:37,586 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:45:37,586 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:45:37,586 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:45:37,586 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:45:37,587 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:45:37,587 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:45:37,587 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:45:37,587 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:45:37,589 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:45:37,590 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:45:37,591 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:45:37,592 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:45:37,592 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:45:37,592 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:45:37,592 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:45:37,592 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:45:37,592 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:45:37,593 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:45:37,593 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:45:37,594 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:45:37,594 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:45:37,594 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:45:37,594 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:45:37,595 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:45:37,595 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:45:37,596 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:45:37,596 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:45:37,596 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:45:37,596 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:45:37,597 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:45:37,597 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:45:37,598 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:45:37,598 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:45:37,599 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:45:37,599 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:45:37,599 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:45:37,600 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:45:37,601 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:45:37,644 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:37,644 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:37,662 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:45:37,687 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:45:38,277 - LiveReload server is running on port 35729
2018-07-04 10:45:38,407 - Registering beans for JMX exposure on startup
2018-07-04 10:45:38,408 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:45:38,413 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:45:38,423 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:45:38,432 - Using a shared selector for servlet write/read
2018-07-04 10:45:38,444 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:45:38,449 - Started FqLtdWasBackstageApplication in 5.609 seconds (JVM running for 6.787)
2018-07-04 10:45:44,005 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:45:44,006 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:45:44,058 - FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2018-07-04 10:45:44,079 - ===========进入拦截器==============
2018-07-04 10:45:44,105 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:45:44,105 - ===========请求时间:2018-07-04 10:45:44==========================
2018-07-04 10:45:44,107 - url=http://localhost:8081/login
2018-07-04 10:45:44,107 - method=GET
2018-07-04 10:45:44,107 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:44,107 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:45:44,108 - args:
2018-07-04 10:45:44,111 - =============结束请求时间:2018-07-04 10:45:44,耗时:0s======================
2018-07-04 10:45:44,112 - response=/login
2018-07-04 10:45:44,147 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:45:44,193 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:45:44,193 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:45:44,193 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:45:44,193 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:45:44,196 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:45:44,196 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:45:48,535 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:45:48,535 - ===========请求时间:2018-07-04 10:45:48==========================
2018-07-04 10:45:48,535 - url=http://localhost:8081/signIn
2018-07-04 10:45:48,535 - method=POST
2018-07-04 10:45:48,535 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:48,535 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:45:48,535 - args:userName=admin,password=123456,
2018-07-04 10:45:48,615 - {dataSource-1} inited
2018-07-04 10:45:49,060 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,060 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:45:49, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:45:49,151 - ===========进入拦截器==============
2018-07-04 10:45:49,152 - http://localhost:8081/home
2018-07-04 10:45:49,165 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:45:49,165 - ===========请求时间:2018-07-04 10:45:49==========================
2018-07-04 10:45:49,165 - url=http://localhost:8081/home
2018-07-04 10:45:49,165 - method=GET
2018-07-04 10:45:49,165 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:49,165 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:45:49,165 - args:
2018-07-04 10:45:49,165 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,165 - response=/home
2018-07-04 10:45:49,165 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:49,280 - ===========进入拦截器==============
2018-07-04 10:45:49,280 - http://localhost:8081/welcome
2018-07-04 10:45:49,285 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:45:49,285 - ===========请求时间:2018-07-04 10:45:49==========================
2018-07-04 10:45:49,285 - url=http://localhost:8081/welcome
2018-07-04 10:45:49,285 - method=GET
2018-07-04 10:45:49,285 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:49,285 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:45:49,285 - args:
2018-07-04 10:45:49,286 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,286 - response=/welcome
2018-07-04 10:45:49,286 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:49,322 - ===========进入拦截器==============
2018-07-04 10:45:49,322 - http://localhost:8081/common/top
2018-07-04 10:45:49,327 - ===========进入拦截器==============
2018-07-04 10:45:49,327 - http://localhost:8081/common/left
2018-07-04 10:45:49,328 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:45:49,328 - ===========请求时间:2018-07-04 10:45:49==========================
2018-07-04 10:45:49,328 - url=http://localhost:8081/common/top
2018-07-04 10:45:49,328 - method=GET
2018-07-04 10:45:49,328 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:49,328 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:45:49,328 - args:
2018-07-04 10:45:49,328 - ===========进入拦截器==============
2018-07-04 10:45:49,328 - http://localhost:8081/common/footer
2018-07-04 10:45:49,328 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,328 - response=/common/top
2018-07-04 10:45:49,329 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:49,337 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:45:49,337 - ===========请求时间:2018-07-04 10:45:49==========================
2018-07-04 10:45:49,337 - url=http://localhost:8081/common/left
2018-07-04 10:45:49,337 - method=GET
2018-07-04 10:45:49,337 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:49,337 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:45:49,337 - args:
2018-07-04 10:45:49,337 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,338 - response=/common/left
2018-07-04 10:45:49,338 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:49,342 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:45:49,342 - ===========请求时间:2018-07-04 10:45:49==========================
2018-07-04 10:45:49,342 - url=http://localhost:8081/common/footer
2018-07-04 10:45:49,342 - method=GET
2018-07-04 10:45:49,342 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:49,342 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:45:49,342 - args:
2018-07-04 10:45:49,342 - =============结束请求时间:2018-07-04 10:45:49,耗时:0s======================
2018-07-04 10:45:49,342 - response=/common/footer
2018-07-04 10:45:49,342 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:53,119 - ===========进入拦截器==============
2018-07-04 10:45:53,120 - http://localhost:8081/role.html
2018-07-04 10:45:53,130 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:45:53,130 - ===========请求时间:2018-07-04 10:45:53==========================
2018-07-04 10:45:53,130 - url=http://localhost:8081/role.html
2018-07-04 10:45:53,130 - method=GET
2018-07-04 10:45:53,130 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:53,130 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:45:53,130 - args:
2018-07-04 10:45:53,130 - =============结束请求时间:2018-07-04 10:45:53,耗时:0s======================
2018-07-04 10:45:53,130 - response=/role
2018-07-04 10:45:53,130 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:53,249 - ===========进入拦截器==============
2018-07-04 10:45:53,249 - http://localhost:8081/role/findAllRole
2018-07-04 10:45:53,255 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:45:53,256 - ===========请求时间:2018-07-04 10:45:53==========================
2018-07-04 10:45:53,256 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:45:53,256 - method=GET
2018-07-04 10:45:53,256 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:53,256 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:45:53,256 - args:roleName=,
2018-07-04 10:45:53,274 - =============结束请求时间:2018-07-04 10:45:53,耗时:0s======================
2018-07-04 10:45:53,274 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:45:53,287 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:45:53,303 - ===========进入拦截器==============
2018-07-04 10:45:53,303 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:45:53,308 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:45:53,308 - ===========请求时间:2018-07-04 10:45:53==========================
2018-07-04 10:45:53,308 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:45:53,308 - method=GET
2018-07-04 10:45:53,308 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:45:53,308 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:45:53,308 - args:
2018-07-04 10:45:53,326 - =============结束请求时间:2018-07-04 10:45:53,耗时:0s======================
2018-07-04 10:45:53,326 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:45:53,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:47:53,798 - ===========进入拦截器==============
2018-07-04 10:47:53,798 - http://localhost:8081/role.html
2018-07-04 10:47:53,827 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:47:53,827 - ===========请求时间:2018-07-04 10:47:53==========================
2018-07-04 10:47:53,827 - url=http://localhost:8081/role.html
2018-07-04 10:47:53,827 - method=GET
2018-07-04 10:47:53,827 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:47:53,827 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:47:53,827 - args:
2018-07-04 10:47:53,827 - =============结束请求时间:2018-07-04 10:47:53,耗时:0s======================
2018-07-04 10:47:53,828 - response=/role
2018-07-04 10:47:53,828 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:47:53,950 - ===========进入拦截器==============
2018-07-04 10:47:53,950 - http://localhost:8081/role/findAllRole
2018-07-04 10:47:53,955 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:47:53,956 - ===========请求时间:2018-07-04 10:47:53==========================
2018-07-04 10:47:53,956 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:47:53,956 - method=GET
2018-07-04 10:47:53,956 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:47:53,956 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:47:53,957 - args:roleName=,
2018-07-04 10:47:53,962 - =============结束请求时间:2018-07-04 10:47:53,耗时:0s======================
2018-07-04 10:47:53,962 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:47:53,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:47:53,979 - ===========进入拦截器==============
2018-07-04 10:47:53,980 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:47:53,983 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:47:53,983 - ===========请求时间:2018-07-04 10:47:53==========================
2018-07-04 10:47:53,983 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:47:53,983 - method=GET
2018-07-04 10:47:53,983 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:47:53,983 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:47:53,983 - args:
2018-07-04 10:47:53,994 - =============结束请求时间:2018-07-04 10:47:53,耗时:0s======================
2018-07-04 10:47:53,995 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:47:53,998 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:00,999 - ===========进入拦截器==============
2018-07-04 10:48:00,999 - http://localhost:8081/menu.html
2018-07-04 10:48:01,003 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:48:01,003 - ===========请求时间:2018-07-04 10:48:01==========================
2018-07-04 10:48:01,003 - url=http://localhost:8081/menu.html
2018-07-04 10:48:01,003 - method=GET
2018-07-04 10:48:01,003 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:01,003 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:48:01,003 - args:
2018-07-04 10:48:01,003 - =============结束请求时间:2018-07-04 10:48:01,耗时:0s======================
2018-07-04 10:48:01,003 - response=/menu
2018-07-04 10:48:01,003 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:01,126 - ===========进入拦截器==============
2018-07-04 10:48:01,126 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:01,131 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:48:01,131 - ===========请求时间:2018-07-04 10:48:01==========================
2018-07-04 10:48:01,131 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:01,131 - method=GET
2018-07-04 10:48:01,131 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:01,131 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:48:01,131 - args:
2018-07-04 10:48:01,137 - =============结束请求时间:2018-07-04 10:48:01,耗时:0s======================
2018-07-04 10:48:01,137 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:01,139 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:05,144 - ===========进入拦截器==============
2018-07-04 10:48:05,144 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:48:05,152 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:48:05,152 - ===========请求时间:2018-07-04 10:48:05==========================
2018-07-04 10:48:05,152 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:48:05,152 - method=GET
2018-07-04 10:48:05,152 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:05,153 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:48:05,153 - args:parentCode=7,
2018-07-04 10:48:05,164 - =============结束请求时间:2018-07-04 10:48:05,耗时:0s======================
2018-07-04 10:48:05,164 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:48:05,165 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:09,446 - ===========进入拦截器==============
2018-07-04 10:48:09,446 - http://localhost:8081/project/findAllProject
2018-07-04 10:48:09,453 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:48:09,453 - ===========请求时间:2018-07-04 10:48:09==========================
2018-07-04 10:48:09,453 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:48:09,453 - method=GET
2018-07-04 10:48:09,453 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:09,453 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:48:09,453 - args:
2018-07-04 10:48:09,467 - =============结束请求时间:2018-07-04 10:48:09,耗时:0s======================
2018-07-04 10:48:09,467 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:09,469 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:30,611 - ===========进入拦截器==============
2018-07-04 10:48:30,611 - http://localhost:8081/menu/findIconList
2018-07-04 10:48:30,616 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:48:30,616 - ===========请求时间:2018-07-04 10:48:30==========================
2018-07-04 10:48:30,616 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:48:30,616 - method=GET
2018-07-04 10:48:30,616 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:30,616 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:48:30,616 - args:
2018-07-04 10:48:30,635 - =============结束请求时间:2018-07-04 10:48:30,耗时:0s======================
2018-07-04 10:48:30,635 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:30,637 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:34,742 - ===========进入拦截器==============
2018-07-04 10:48:34,742 - http://localhost:8081/menu/addMenu
2018-07-04 10:48:34,755 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:48:34,755 - ===========请求时间:2018-07-04 10:48:34==========================
2018-07-04 10:48:34,756 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:48:34,756 - method=GET
2018-07-04 10:48:34,756 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:34,756 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:48:34,756 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 10:48:34,803 - =============结束请求时间:2018-07-04 10:48:34,耗时:0s======================
2018-07-04 10:48:34,803 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:48:34,803 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:37,025 - ===========进入拦截器==============
2018-07-04 10:48:37,025 - http://localhost:8081/menu.html
2018-07-04 10:48:37,040 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:48:37,040 - ===========请求时间:2018-07-04 10:48:37==========================
2018-07-04 10:48:37,040 - url=http://localhost:8081/menu.html
2018-07-04 10:48:37,040 - method=GET
2018-07-04 10:48:37,040 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:37,040 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:48:37,040 - args:
2018-07-04 10:48:37,040 - =============结束请求时间:2018-07-04 10:48:37,耗时:0s======================
2018-07-04 10:48:37,040 - response=/menu
2018-07-04 10:48:37,040 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:37,131 - ===========进入拦截器==============
2018-07-04 10:48:37,131 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:37,137 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:48:37,137 - ===========请求时间:2018-07-04 10:48:37==========================
2018-07-04 10:48:37,137 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:37,137 - method=GET
2018-07-04 10:48:37,137 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:37,137 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:48:37,137 - args:
2018-07-04 10:48:37,147 - =============结束请求时间:2018-07-04 10:48:37,耗时:0s======================
2018-07-04 10:48:37,148 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:37,149 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:38,528 - ===========进入拦截器==============
2018-07-04 10:48:38,529 - http://localhost:8081/home
2018-07-04 10:48:38,537 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:48:38,538 - ===========请求时间:2018-07-04 10:48:38==========================
2018-07-04 10:48:38,538 - url=http://localhost:8081/home
2018-07-04 10:48:38,538 - method=GET
2018-07-04 10:48:38,538 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:38,538 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:48:38,539 - args:
2018-07-04 10:48:38,539 - =============结束请求时间:2018-07-04 10:48:38,耗时:0s======================
2018-07-04 10:48:38,539 - response=/home
2018-07-04 10:48:38,540 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:38,617 - ===========进入拦截器==============
2018-07-04 10:48:38,618 - http://localhost:8081/welcome
2018-07-04 10:48:38,623 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:48:38,624 - ===========请求时间:2018-07-04 10:48:38==========================
2018-07-04 10:48:38,624 - url=http://localhost:8081/welcome
2018-07-04 10:48:38,624 - method=GET
2018-07-04 10:48:38,624 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:38,624 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:48:38,624 - args:
2018-07-04 10:48:38,624 - =============结束请求时间:2018-07-04 10:48:38,耗时:0s======================
2018-07-04 10:48:38,624 - response=/welcome
2018-07-04 10:48:38,624 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:38,635 - ===========进入拦截器==============
2018-07-04 10:48:38,635 - http://localhost:8081/common/top
2018-07-04 10:48:38,636 - ===========进入拦截器==============
2018-07-04 10:48:38,636 - http://localhost:8081/common/left
2018-07-04 10:48:38,637 - ===========进入拦截器==============
2018-07-04 10:48:38,637 - http://localhost:8081/common/footer
2018-07-04 10:48:38,639 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:48:38,639 - ===========请求时间:2018-07-04 10:48:38==========================
2018-07-04 10:48:38,639 - url=http://localhost:8081/common/top
2018-07-04 10:48:38,639 - method=GET
2018-07-04 10:48:38,639 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:38,639 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:48:38,639 - args:
2018-07-04 10:48:38,639 - =============结束请求时间:2018-07-04 10:48:38,耗时:0s======================
2018-07-04 10:48:38,639 - response=/common/top
2018-07-04 10:48:38,640 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:38,645 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:48:38,645 - ===========请求时间:2018-07-04 10:48:38==========================
2018-07-04 10:48:38,645 - url=http://localhost:8081/common/footer
2018-07-04 10:48:38,645 - method=GET
2018-07-04 10:48:38,645 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:38,645 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:48:38,645 - args:
2018-07-04 10:48:38,645 - =============结束请求时间:2018-07-04 10:48:38,耗时:0s======================
2018-07-04 10:48:38,645 - response=/common/footer
2018-07-04 10:48:38,646 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:38,648 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:48:38,648 - ===========请求时间:2018-07-04 10:48:38==========================
2018-07-04 10:48:38,648 - url=http://localhost:8081/common/left
2018-07-04 10:48:38,648 - method=GET
2018-07-04 10:48:38,648 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:38,648 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:48:38,648 - args:
2018-07-04 10:48:38,648 - =============结束请求时间:2018-07-04 10:48:38,耗时:0s======================
2018-07-04 10:48:38,648 - response=/common/left
2018-07-04 10:48:38,648 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:48,553 - ===========进入拦截器==============
2018-07-04 10:48:48,553 - http://localhost:8081/role.html
2018-07-04 10:48:48,560 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:48:48,560 - ===========请求时间:2018-07-04 10:48:48==========================
2018-07-04 10:48:48,560 - url=http://localhost:8081/role.html
2018-07-04 10:48:48,560 - method=GET
2018-07-04 10:48:48,560 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:48,560 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:48:48,560 - args:
2018-07-04 10:48:48,560 - =============结束请求时间:2018-07-04 10:48:48,耗时:0s======================
2018-07-04 10:48:48,560 - response=/role
2018-07-04 10:48:48,561 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:48,639 - ===========进入拦截器==============
2018-07-04 10:48:48,639 - http://localhost:8081/role/findAllRole
2018-07-04 10:48:48,646 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:48:48,647 - ===========请求时间:2018-07-04 10:48:48==========================
2018-07-04 10:48:48,647 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:48:48,647 - method=GET
2018-07-04 10:48:48,647 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:48,647 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:48:48,647 - args:roleName=,
2018-07-04 10:48:48,652 - =============结束请求时间:2018-07-04 10:48:48,耗时:0s======================
2018-07-04 10:48:48,652 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:48,654 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:48,665 - ===========进入拦截器==============
2018-07-04 10:48:48,665 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:48,669 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:48:48,670 - ===========请求时间:2018-07-04 10:48:48==========================
2018-07-04 10:48:48,670 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:48,670 - method=GET
2018-07-04 10:48:48,670 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:48,670 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:48:48,670 - args:
2018-07-04 10:48:48,679 - =============结束请求时间:2018-07-04 10:48:48,耗时:0s======================
2018-07-04 10:48:48,679 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:48,681 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,014 - ===========进入拦截器==============
2018-07-04 10:48:55,014 - http://localhost:8081/home
2018-07-04 10:48:55,018 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:48:55,018 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,018 - url=http://localhost:8081/home
2018-07-04 10:48:55,018 - method=GET
2018-07-04 10:48:55,018 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,018 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:48:55,018 - args:
2018-07-04 10:48:55,019 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,019 - response=/home
2018-07-04 10:48:55,019 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,079 - ===========进入拦截器==============
2018-07-04 10:48:55,079 - http://localhost:8081/welcome
2018-07-04 10:48:55,086 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:48:55,086 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,086 - url=http://localhost:8081/welcome
2018-07-04 10:48:55,086 - method=GET
2018-07-04 10:48:55,086 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,086 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:48:55,087 - args:
2018-07-04 10:48:55,087 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,087 - response=/welcome
2018-07-04 10:48:55,087 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,097 - ===========进入拦截器==============
2018-07-04 10:48:55,097 - http://localhost:8081/common/top
2018-07-04 10:48:55,098 - ===========进入拦截器==============
2018-07-04 10:48:55,098 - http://localhost:8081/common/left
2018-07-04 10:48:55,098 - ===========进入拦截器==============
2018-07-04 10:48:55,098 - http://localhost:8081/common/footer
2018-07-04 10:48:55,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:48:55,101 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,101 - url=http://localhost:8081/common/top
2018-07-04 10:48:55,101 - method=GET
2018-07-04 10:48:55,101 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,101 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:48:55,101 - args:
2018-07-04 10:48:55,101 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,101 - response=/common/top
2018-07-04 10:48:55,101 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,102 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:48:55,102 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,102 - url=http://localhost:8081/common/left
2018-07-04 10:48:55,102 - method=GET
2018-07-04 10:48:55,102 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,102 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:48:55,102 - args:
2018-07-04 10:48:55,102 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,102 - response=/common/left
2018-07-04 10:48:55,102 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:48:55,103 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,103 - url=http://localhost:8081/common/footer
2018-07-04 10:48:55,103 - method=GET
2018-07-04 10:48:55,103 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,103 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:48:55,103 - args:
2018-07-04 10:48:55,103 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,103 - response=/common/footer
2018-07-04 10:48:55,103 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,179 - ===========进入拦截器==============
2018-07-04 10:48:55,179 - http://localhost:8081/home
2018-07-04 10:48:55,183 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:48:55,183 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,183 - url=http://localhost:8081/home
2018-07-04 10:48:55,183 - method=GET
2018-07-04 10:48:55,183 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,183 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:48:55,183 - args:
2018-07-04 10:48:55,183 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,183 - response=/home
2018-07-04 10:48:55,183 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,248 - ===========进入拦截器==============
2018-07-04 10:48:55,248 - http://localhost:8081/welcome
2018-07-04 10:48:55,253 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:48:55,253 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,253 - url=http://localhost:8081/welcome
2018-07-04 10:48:55,253 - method=GET
2018-07-04 10:48:55,253 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,253 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:48:55,253 - args:
2018-07-04 10:48:55,253 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,253 - response=/welcome
2018-07-04 10:48:55,254 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,267 - ===========进入拦截器==============
2018-07-04 10:48:55,267 - http://localhost:8081/common/top
2018-07-04 10:48:55,269 - ===========进入拦截器==============
2018-07-04 10:48:55,269 - http://localhost:8081/common/left
2018-07-04 10:48:55,269 - ===========进入拦截器==============
2018-07-04 10:48:55,269 - http://localhost:8081/common/footer
2018-07-04 10:48:55,272 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:48:55,272 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,272 - url=http://localhost:8081/common/top
2018-07-04 10:48:55,272 - method=GET
2018-07-04 10:48:55,272 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,272 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:48:55,272 - args:
2018-07-04 10:48:55,272 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,272 - response=/common/top
2018-07-04 10:48:55,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,277 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:48:55,278 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,278 - url=http://localhost:8081/common/footer
2018-07-04 10:48:55,278 - method=GET
2018-07-04 10:48:55,278 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,278 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:48:55,278 - args:
2018-07-04 10:48:55,278 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,278 - response=/common/footer
2018-07-04 10:48:55,279 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,284 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:48:55,285 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,285 - url=http://localhost:8081/common/left
2018-07-04 10:48:55,285 - method=GET
2018-07-04 10:48:55,285 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,285 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:48:55,285 - args:
2018-07-04 10:48:55,285 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,285 - response=/common/left
2018-07-04 10:48:55,285 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,338 - ===========进入拦截器==============
2018-07-04 10:48:55,338 - http://localhost:8081/home
2018-07-04 10:48:55,358 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:48:55,358 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,358 - url=http://localhost:8081/home
2018-07-04 10:48:55,358 - method=GET
2018-07-04 10:48:55,358 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,358 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:48:55,358 - args:
2018-07-04 10:48:55,358 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,358 - response=/home
2018-07-04 10:48:55,358 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,425 - ===========进入拦截器==============
2018-07-04 10:48:55,425 - http://localhost:8081/welcome
2018-07-04 10:48:55,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:48:55,429 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,429 - url=http://localhost:8081/welcome
2018-07-04 10:48:55,429 - method=GET
2018-07-04 10:48:55,429 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,429 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:48:55,429 - args:
2018-07-04 10:48:55,430 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,430 - response=/welcome
2018-07-04 10:48:55,430 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,442 - ===========进入拦截器==============
2018-07-04 10:48:55,443 - http://localhost:8081/common/top
2018-07-04 10:48:55,443 - ===========进入拦截器==============
2018-07-04 10:48:55,444 - ===========进入拦截器==============
2018-07-04 10:48:55,444 - http://localhost:8081/common/left
2018-07-04 10:48:55,444 - http://localhost:8081/common/footer
2018-07-04 10:48:55,447 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:48:55,448 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,448 - url=http://localhost:8081/common/top
2018-07-04 10:48:55,448 - method=GET
2018-07-04 10:48:55,448 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,448 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:48:55,448 - args:
2018-07-04 10:48:55,448 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,448 - response=/common/top
2018-07-04 10:48:55,448 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:48:55,448 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:48:55,448 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,448 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,448 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,448 - url=http://localhost:8081/common/left
2018-07-04 10:48:55,448 - url=http://localhost:8081/common/footer
2018-07-04 10:48:55,448 - method=GET
2018-07-04 10:48:55,448 - method=GET
2018-07-04 10:48:55,448 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,448 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,448 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:48:55,448 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:48:55,448 - args:
2018-07-04 10:48:55,448 - args:
2018-07-04 10:48:55,448 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,448 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,448 - response=/common/left
2018-07-04 10:48:55,448 - response=/common/footer
2018-07-04 10:48:55,448 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,448 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,486 - ===========进入拦截器==============
2018-07-04 10:48:55,486 - http://localhost:8081/home
2018-07-04 10:48:55,490 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:48:55,491 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,491 - url=http://localhost:8081/home
2018-07-04 10:48:55,491 - method=GET
2018-07-04 10:48:55,491 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,491 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:48:55,491 - args:
2018-07-04 10:48:55,491 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,491 - response=/home
2018-07-04 10:48:55,491 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,569 - ===========进入拦截器==============
2018-07-04 10:48:55,569 - http://localhost:8081/welcome
2018-07-04 10:48:55,573 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:48:55,573 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,573 - url=http://localhost:8081/welcome
2018-07-04 10:48:55,573 - method=GET
2018-07-04 10:48:55,574 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:48:55,574 - args:
2018-07-04 10:48:55,574 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,574 - response=/welcome
2018-07-04 10:48:55,574 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,585 - ===========进入拦截器==============
2018-07-04 10:48:55,585 - http://localhost:8081/common/top
2018-07-04 10:48:55,586 - ===========进入拦截器==============
2018-07-04 10:48:55,586 - http://localhost:8081/common/left
2018-07-04 10:48:55,586 - ===========进入拦截器==============
2018-07-04 10:48:55,586 - http://localhost:8081/common/footer
2018-07-04 10:48:55,590 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:48:55,590 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,590 - url=http://localhost:8081/common/top
2018-07-04 10:48:55,590 - method=GET
2018-07-04 10:48:55,590 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,590 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:48:55,590 - args:
2018-07-04 10:48:55,590 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,590 - response=/common/top
2018-07-04 10:48:55,590 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,590 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:48:55,590 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,590 - url=http://localhost:8081/common/footer
2018-07-04 10:48:55,590 - method=GET
2018-07-04 10:48:55,591 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,591 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:48:55,591 - args:
2018-07-04 10:48:55,591 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,591 - response=/common/footer
2018-07-04 10:48:55,591 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:55,591 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:48:55,591 - ===========请求时间:2018-07-04 10:48:55==========================
2018-07-04 10:48:55,592 - url=http://localhost:8081/common/left
2018-07-04 10:48:55,592 - method=GET
2018-07-04 10:48:55,592 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:55,592 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:48:55,592 - args:
2018-07-04 10:48:55,592 - =============结束请求时间:2018-07-04 10:48:55,耗时:0s======================
2018-07-04 10:48:55,592 - response=/common/left
2018-07-04 10:48:55,592 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:56,829 - ===========进入拦截器==============
2018-07-04 10:48:56,830 - http://localhost:8081/role.html
2018-07-04 10:48:56,833 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:48:56,834 - ===========请求时间:2018-07-04 10:48:56==========================
2018-07-04 10:48:56,834 - url=http://localhost:8081/role.html
2018-07-04 10:48:56,834 - method=GET
2018-07-04 10:48:56,834 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:56,834 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:48:56,834 - args:
2018-07-04 10:48:56,834 - =============结束请求时间:2018-07-04 10:48:56,耗时:0s======================
2018-07-04 10:48:56,834 - response=/role
2018-07-04 10:48:56,834 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:56,903 - ===========进入拦截器==============
2018-07-04 10:48:56,903 - http://localhost:8081/role/findAllRole
2018-07-04 10:48:56,909 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:48:56,909 - ===========请求时间:2018-07-04 10:48:56==========================
2018-07-04 10:48:56,909 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:48:56,909 - method=GET
2018-07-04 10:48:56,909 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:56,909 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:48:56,909 - args:roleName=,
2018-07-04 10:48:56,917 - =============结束请求时间:2018-07-04 10:48:56,耗时:0s======================
2018-07-04 10:48:56,918 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:56,920 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:48:56,939 - ===========进入拦截器==============
2018-07-04 10:48:56,939 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:56,944 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:48:56,944 - ===========请求时间:2018-07-04 10:48:56==========================
2018-07-04 10:48:56,944 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:48:56,944 - method=GET
2018-07-04 10:48:56,944 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:48:56,944 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:48:56,944 - args:
2018-07-04 10:48:56,959 - =============结束请求时间:2018-07-04 10:48:56,耗时:0s======================
2018-07-04 10:48:56,960 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:48:56,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:22,756 - ===========进入拦截器==============
2018-07-04 10:51:22,756 - http://localhost:8081/home
2018-07-04 10:51:22,779 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:51:22,779 - ===========请求时间:2018-07-04 10:51:22==========================
2018-07-04 10:51:22,779 - url=http://localhost:8081/home
2018-07-04 10:51:22,779 - method=GET
2018-07-04 10:51:22,779 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:22,779 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:51:22,779 - args:
2018-07-04 10:51:22,779 - =============结束请求时间:2018-07-04 10:51:22,耗时:0s======================
2018-07-04 10:51:22,779 - response=/home
2018-07-04 10:51:22,779 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:22,846 - ===========进入拦截器==============
2018-07-04 10:51:22,846 - http://localhost:8081/welcome
2018-07-04 10:51:22,850 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:51:22,850 - ===========请求时间:2018-07-04 10:51:22==========================
2018-07-04 10:51:22,850 - url=http://localhost:8081/welcome
2018-07-04 10:51:22,850 - method=GET
2018-07-04 10:51:22,850 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:22,850 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:51:22,850 - args:
2018-07-04 10:51:22,850 - =============结束请求时间:2018-07-04 10:51:22,耗时:0s======================
2018-07-04 10:51:22,850 - response=/welcome
2018-07-04 10:51:22,850 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:22,864 - ===========进入拦截器==============
2018-07-04 10:51:22,864 - http://localhost:8081/common/top
2018-07-04 10:51:22,864 - ===========进入拦截器==============
2018-07-04 10:51:22,864 - http://localhost:8081/common/footer
2018-07-04 10:51:22,864 - ===========进入拦截器==============
2018-07-04 10:51:22,864 - http://localhost:8081/common/left
2018-07-04 10:51:22,868 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:51:22,868 - ===========请求时间:2018-07-04 10:51:22==========================
2018-07-04 10:51:22,868 - url=http://localhost:8081/common/top
2018-07-04 10:51:22,869 - method=GET
2018-07-04 10:51:22,869 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:22,869 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:51:22,869 - args:
2018-07-04 10:51:22,869 - =============结束请求时间:2018-07-04 10:51:22,耗时:0s======================
2018-07-04 10:51:22,869 - response=/common/top
2018-07-04 10:51:22,869 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:22,888 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:51:22,888 - ===========请求时间:2018-07-04 10:51:22==========================
2018-07-04 10:51:22,888 - url=http://localhost:8081/common/left
2018-07-04 10:51:22,888 - method=GET
2018-07-04 10:51:22,888 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:22,888 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:51:22,888 - args:
2018-07-04 10:51:22,888 - =============结束请求时间:2018-07-04 10:51:22,耗时:0s======================
2018-07-04 10:51:22,888 - response=/common/left
2018-07-04 10:51:22,888 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:22,889 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:51:22,889 - ===========请求时间:2018-07-04 10:51:22==========================
2018-07-04 10:51:22,889 - url=http://localhost:8081/common/footer
2018-07-04 10:51:22,889 - method=GET
2018-07-04 10:51:22,889 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:22,889 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:51:22,889 - args:
2018-07-04 10:51:22,889 - =============结束请求时间:2018-07-04 10:51:22,耗时:0s======================
2018-07-04 10:51:22,889 - response=/common/footer
2018-07-04 10:51:22,889 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:25,014 - ===========进入拦截器==============
2018-07-04 10:51:25,014 - http://localhost:8081/menu.html
2018-07-04 10:51:25,018 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:51:25,018 - ===========请求时间:2018-07-04 10:51:25==========================
2018-07-04 10:51:25,018 - url=http://localhost:8081/menu.html
2018-07-04 10:51:25,018 - method=GET
2018-07-04 10:51:25,018 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:25,018 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:51:25,018 - args:
2018-07-04 10:51:25,018 - =============结束请求时间:2018-07-04 10:51:25,耗时:0s======================
2018-07-04 10:51:25,018 - response=/menu
2018-07-04 10:51:25,018 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:25,090 - ===========进入拦截器==============
2018-07-04 10:51:25,090 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:51:25,095 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:51:25,095 - ===========请求时间:2018-07-04 10:51:25==========================
2018-07-04 10:51:25,095 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:51:25,095 - method=GET
2018-07-04 10:51:25,095 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:25,095 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:51:25,095 - args:
2018-07-04 10:51:25,107 - =============结束请求时间:2018-07-04 10:51:25,耗时:0s======================
2018-07-04 10:51:25,107 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=2, menuType=0, icon=, menuName=数字货币管理, url=number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:07:11.0, updateTime=2018-07-04 10:07:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:51:25,109 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:28,973 - ===========进入拦截器==============
2018-07-04 10:51:28,973 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:28,980 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:51:28,980 - ===========请求时间:2018-07-04 10:51:28==========================
2018-07-04 10:51:28,980 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:28,980 - method=GET
2018-07-04 10:51:28,980 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:28,980 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:51:28,980 - args:parentCode=7,
2018-07-04 10:51:28,985 - =============结束请求时间:2018-07-04 10:51:28,耗时:0s======================
2018-07-04 10:51:28,985 - response=Result(code=200, msg=成功, data=[Menu(gid=18, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:48:34.0, updateTime=2018-07-04 10:48:34.0, status=0)], page=null, totalCount=null)
2018-07-04 10:51:28,985 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:31,484 - ===========进入拦截器==============
2018-07-04 10:51:31,484 - http://localhost:8081/menu/delMenu
2018-07-04 10:51:31,491 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 10:51:31,491 - ===========请求时间:2018-07-04 10:51:31==========================
2018-07-04 10:51:31,491 - url=http://localhost:8081/menu/delMenu
2018-07-04 10:51:31,491 - method=GET
2018-07-04 10:51:31,491 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:31,491 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 10:51:31,491 - args:gid=18,
2018-07-04 10:51:31,649 - =============结束请求时间:2018-07-04 10:51:31,耗时:0s======================
2018-07-04 10:51:31,649 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:51:31,650 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:33,862 - ===========进入拦截器==============
2018-07-04 10:51:33,862 - http://localhost:8081/menu.html
2018-07-04 10:51:33,866 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:51:33,866 - ===========请求时间:2018-07-04 10:51:33==========================
2018-07-04 10:51:33,866 - url=http://localhost:8081/menu.html
2018-07-04 10:51:33,866 - method=GET
2018-07-04 10:51:33,866 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:33,866 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:51:33,866 - args:
2018-07-04 10:51:33,866 - =============结束请求时间:2018-07-04 10:51:33,耗时:0s======================
2018-07-04 10:51:33,866 - response=/menu
2018-07-04 10:51:33,866 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:33,936 - ===========进入拦截器==============
2018-07-04 10:51:33,937 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:51:33,941 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:51:33,941 - ===========请求时间:2018-07-04 10:51:33==========================
2018-07-04 10:51:33,941 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:51:33,941 - method=GET
2018-07-04 10:51:33,941 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:33,941 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:51:33,941 - args:
2018-07-04 10:51:33,949 - =============结束请求时间:2018-07-04 10:51:33,耗时:0s======================
2018-07-04 10:51:33,949 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:51:33,950 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:34,612 - ===========进入拦截器==============
2018-07-04 10:51:34,612 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:34,616 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:51:34,616 - ===========请求时间:2018-07-04 10:51:34==========================
2018-07-04 10:51:34,616 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:34,616 - method=GET
2018-07-04 10:51:34,616 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:34,616 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:51:34,616 - args:parentCode=7,
2018-07-04 10:51:34,621 - =============结束请求时间:2018-07-04 10:51:34,耗时:0s======================
2018-07-04 10:51:34,621 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:51:34,621 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:39,623 - ===========进入拦截器==============
2018-07-04 10:51:39,623 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:39,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:51:39,633 - ===========请求时间:2018-07-04 10:51:39==========================
2018-07-04 10:51:39,633 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:51:39,633 - method=GET
2018-07-04 10:51:39,633 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:39,633 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:51:39,633 - args:parentCode=7,
2018-07-04 10:51:39,638 - =============结束请求时间:2018-07-04 10:51:39,耗时:0s======================
2018-07-04 10:51:39,638 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:51:39,639 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:41,604 - ===========进入拦截器==============
2018-07-04 10:51:41,604 - http://localhost:8081/project/findAllProject
2018-07-04 10:51:41,611 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:51:41,611 - ===========请求时间:2018-07-04 10:51:41==========================
2018-07-04 10:51:41,611 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:51:41,611 - method=GET
2018-07-04 10:51:41,611 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:41,611 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:51:41,611 - args:
2018-07-04 10:51:41,614 - =============结束请求时间:2018-07-04 10:51:41,耗时:0s======================
2018-07-04 10:51:41,614 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:51:41,615 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:50,316 - ===========进入拦截器==============
2018-07-04 10:51:50,316 - http://localhost:8081/menu/findIconList
2018-07-04 10:51:50,321 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:51:50,321 - ===========请求时间:2018-07-04 10:51:50==========================
2018-07-04 10:51:50,321 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:51:50,321 - method=GET
2018-07-04 10:51:50,321 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:50,321 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:51:50,321 - args:
2018-07-04 10:51:50,334 - =============结束请求时间:2018-07-04 10:51:50,耗时:0s======================
2018-07-04 10:51:50,334 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:51:50,334 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:51:53,164 - ===========进入拦截器==============
2018-07-04 10:51:53,164 - http://localhost:8081/menu/addMenu
2018-07-04 10:51:53,168 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:51:53,168 - ===========请求时间:2018-07-04 10:51:53==========================
2018-07-04 10:51:53,168 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:51:53,169 - method=GET
2018-07-04 10:51:53,169 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:51:53,169 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:51:53,169 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 10:54:10,099 - =============结束请求时间:2018-07-04 10:54:10,耗时:136s======================
2018-07-04 10:54:10,099 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:54:10,099 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:54:12,388 - ===========进入拦截器==============
2018-07-04 10:54:12,389 - http://localhost:8081/menu.html
2018-07-04 10:54:12,402 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:54:12,402 - ===========请求时间:2018-07-04 10:54:12==========================
2018-07-04 10:54:12,402 - url=http://localhost:8081/menu.html
2018-07-04 10:54:12,402 - method=GET
2018-07-04 10:54:12,402 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:54:12,402 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:54:12,402 - args:
2018-07-04 10:54:12,402 - =============结束请求时间:2018-07-04 10:54:12,耗时:0s======================
2018-07-04 10:54:12,402 - response=/menu
2018-07-04 10:54:12,403 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:54:12,668 - ===========进入拦截器==============
2018-07-04 10:54:12,668 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:54:12,672 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:54:12,672 - ===========请求时间:2018-07-04 10:54:12==========================
2018-07-04 10:54:12,672 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:54:12,672 - method=GET
2018-07-04 10:54:12,672 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:54:12,672 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:54:12,672 - args:
2018-07-04 10:54:12,681 - =============结束请求时间:2018-07-04 10:54:12,耗时:0s======================
2018-07-04 10:54:12,681 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:54:12,682 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:01,507 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11664 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:57:01,511 - No active profile set, falling back to default profiles: default
2018-07-04 10:57:01,723 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:57:01,779 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d9930: startup date [Wed Jul 04 10:57:01 CST 2018]; root of context hierarchy
2018-07-04 10:57:02,965 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:57:04,214 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:57:04,227 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:57:04,236 - Starting service [Tomcat]
2018-07-04 10:57:04,236 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:57:04,345 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:57:04,345 - Root WebApplicationContext: initialization completed in 2566 ms
2018-07-04 10:57:04,589 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:57:04,594 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:57:04,594 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:57:04,594 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:57:04,595 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:57:04,595 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:57:05,392 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@106d9930: startup date [Wed Jul 04 10:57:01 CST 2018]; root of context hierarchy
2018-07-04 10:57:05,458 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:57:05,459 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:57:05,459 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:57:05,460 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:57:05,460 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:57:05,460 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:57:05,460 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:57:05,460 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:57:05,460 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:57:05,460 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:57:05,460 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:57:05,460 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:57:05,461 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:57:05,461 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:57:05,461 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:57:05,461 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:57:05,461 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:57:05,464 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:57:05,464 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:57:05,466 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:57:05,466 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:57:05,466 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:57:05,466 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:57:05,466 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:57:05,466 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:57:05,467 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:57:05,467 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:57:05,467 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:57:05,468 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:57:05,468 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:57:05,468 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:57:05,468 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:57:05,469 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:57:05,470 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:57:05,470 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:57:05,470 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:57:05,470 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:57:05,470 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:57:05,472 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:57:05,473 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:57:05,473 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:57:05,474 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:57:05,474 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:57:05,475 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:57:05,475 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:57:05,476 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:57:05,477 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:57:05,522 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:57:05,523 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:57:05,542 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:57:05,570 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:57:06,185 - LiveReload server is running on port 35729
2018-07-04 10:57:06,311 - Registering beans for JMX exposure on startup
2018-07-04 10:57:06,313 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:57:06,318 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:57:06,328 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:57:06,340 - Using a shared selector for servlet write/read
2018-07-04 10:57:06,354 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:57:06,359 - Started FqLtdWasBackstageApplication in 5.549 seconds (JVM running for 6.693)
2018-07-04 10:57:15,966 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:57:15,967 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:57:16,002 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 10:57:16,022 - ===========进入拦截器==============
2018-07-04 10:57:16,043 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:57:16,043 - ===========请求时间:2018-07-04 10:57:16==========================
2018-07-04 10:57:16,043 - url=http://localhost:8081/login
2018-07-04 10:57:16,044 - method=GET
2018-07-04 10:57:16,044 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:16,044 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:57:16,044 - args:
2018-07-04 10:57:16,047 - =============结束请求时间:2018-07-04 10:57:16,耗时:0s======================
2018-07-04 10:57:16,047 - response=/login
2018-07-04 10:57:16,075 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:57:16,109 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:57:16,109 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:57:16,110 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:57:16,110 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:57:16,113 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:57:16,113 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:57:20,691 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:57:20,692 - ===========请求时间:2018-07-04 10:57:20==========================
2018-07-04 10:57:20,692 - url=http://localhost:8081/signIn
2018-07-04 10:57:20,692 - method=POST
2018-07-04 10:57:20,692 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:20,692 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:57:20,692 - args:userName=admin,password=123456,
2018-07-04 10:57:20,748 - {dataSource-1} inited
2018-07-04 10:57:21,100 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,100 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:57:21, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:57:21,165 - ===========进入拦截器==============
2018-07-04 10:57:21,165 - http://localhost:8081/home
2018-07-04 10:57:21,171 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:57:21,171 - ===========请求时间:2018-07-04 10:57:21==========================
2018-07-04 10:57:21,171 - url=http://localhost:8081/home
2018-07-04 10:57:21,171 - method=GET
2018-07-04 10:57:21,171 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:21,171 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:57:21,171 - args:
2018-07-04 10:57:21,171 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,172 - response=/home
2018-07-04 10:57:21,172 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:21,248 - ===========进入拦截器==============
2018-07-04 10:57:21,248 - http://localhost:8081/welcome
2018-07-04 10:57:21,255 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:57:21,255 - ===========请求时间:2018-07-04 10:57:21==========================
2018-07-04 10:57:21,255 - url=http://localhost:8081/welcome
2018-07-04 10:57:21,255 - method=GET
2018-07-04 10:57:21,255 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:21,255 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:57:21,255 - args:
2018-07-04 10:57:21,255 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,255 - response=/welcome
2018-07-04 10:57:21,256 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:21,265 - ===========进入拦截器==============
2018-07-04 10:57:21,265 - http://localhost:8081/common/top
2018-07-04 10:57:21,268 - ===========进入拦截器==============
2018-07-04 10:57:21,268 - http://localhost:8081/common/left
2018-07-04 10:57:21,269 - ===========进入拦截器==============
2018-07-04 10:57:21,269 - http://localhost:8081/common/footer
2018-07-04 10:57:21,270 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:57:21,270 - ===========请求时间:2018-07-04 10:57:21==========================
2018-07-04 10:57:21,270 - url=http://localhost:8081/common/top
2018-07-04 10:57:21,270 - method=GET
2018-07-04 10:57:21,270 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:21,270 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:57:21,270 - args:
2018-07-04 10:57:21,270 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,270 - response=/common/top
2018-07-04 10:57:21,271 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:21,274 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:57:21,274 - ===========请求时间:2018-07-04 10:57:21==========================
2018-07-04 10:57:21,274 - url=http://localhost:8081/common/left
2018-07-04 10:57:21,274 - method=GET
2018-07-04 10:57:21,274 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:21,274 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:57:21,274 - args:
2018-07-04 10:57:21,274 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,274 - response=/common/left
2018-07-04 10:57:21,275 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:21,278 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:57:21,278 - ===========请求时间:2018-07-04 10:57:21==========================
2018-07-04 10:57:21,278 - url=http://localhost:8081/common/footer
2018-07-04 10:57:21,278 - method=GET
2018-07-04 10:57:21,278 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:21,278 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:57:21,278 - args:
2018-07-04 10:57:21,278 - =============结束请求时间:2018-07-04 10:57:21,耗时:0s======================
2018-07-04 10:57:21,279 - response=/common/footer
2018-07-04 10:57:21,279 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:23,031 - ===========进入拦截器==============
2018-07-04 10:57:23,031 - http://localhost:8081/menu.html
2018-07-04 10:57:23,039 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:57:23,040 - ===========请求时间:2018-07-04 10:57:23==========================
2018-07-04 10:57:23,040 - url=http://localhost:8081/menu.html
2018-07-04 10:57:23,040 - method=GET
2018-07-04 10:57:23,040 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:23,040 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:57:23,040 - args:
2018-07-04 10:57:23,040 - =============结束请求时间:2018-07-04 10:57:23,耗时:0s======================
2018-07-04 10:57:23,040 - response=/menu
2018-07-04 10:57:23,040 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:23,139 - ===========进入拦截器==============
2018-07-04 10:57:23,139 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:23,146 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:57:23,146 - ===========请求时间:2018-07-04 10:57:23==========================
2018-07-04 10:57:23,146 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:23,146 - method=GET
2018-07-04 10:57:23,146 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:23,146 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:57:23,147 - args:
2018-07-04 10:57:23,174 - =============结束请求时间:2018-07-04 10:57:23,耗时:0s======================
2018-07-04 10:57:23,175 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:23,187 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:25,204 - ===========进入拦截器==============
2018-07-04 10:57:25,204 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:57:25,211 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:57:25,211 - ===========请求时间:2018-07-04 10:57:25==========================
2018-07-04 10:57:25,211 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:57:25,211 - method=GET
2018-07-04 10:57:25,211 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:25,211 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:57:25,211 - args:parentCode=7,
2018-07-04 10:57:25,216 - =============结束请求时间:2018-07-04 10:57:25,耗时:0s======================
2018-07-04 10:57:25,216 - response=Result(code=200, msg=成功, data=[Menu(gid=19, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:54:10.0, updateTime=2018-07-04 10:54:10.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:25,217 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:27,380 - ===========进入拦截器==============
2018-07-04 10:57:27,380 - http://localhost:8081/menu/delMenu
2018-07-04 10:57:27,390 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 10:57:27,390 - ===========请求时间:2018-07-04 10:57:27==========================
2018-07-04 10:57:27,390 - url=http://localhost:8081/menu/delMenu
2018-07-04 10:57:27,390 - method=GET
2018-07-04 10:57:27,390 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:27,390 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 10:57:27,391 - args:gid=19,
2018-07-04 10:57:27,516 - =============结束请求时间:2018-07-04 10:57:27,耗时:0s======================
2018-07-04 10:57:27,517 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:57:27,525 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:29,744 - ===========进入拦截器==============
2018-07-04 10:57:29,744 - http://localhost:8081/menu.html
2018-07-04 10:57:29,748 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:57:29,749 - ===========请求时间:2018-07-04 10:57:29==========================
2018-07-04 10:57:29,749 - url=http://localhost:8081/menu.html
2018-07-04 10:57:29,749 - method=GET
2018-07-04 10:57:29,749 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:29,749 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:57:29,749 - args:
2018-07-04 10:57:29,749 - =============结束请求时间:2018-07-04 10:57:29,耗时:0s======================
2018-07-04 10:57:29,749 - response=/menu
2018-07-04 10:57:29,749 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:29,835 - ===========进入拦截器==============
2018-07-04 10:57:29,835 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:29,861 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:57:29,862 - ===========请求时间:2018-07-04 10:57:29==========================
2018-07-04 10:57:29,862 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:29,862 - method=GET
2018-07-04 10:57:29,862 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:29,862 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:57:29,863 - args:
2018-07-04 10:57:29,893 - =============结束请求时间:2018-07-04 10:57:29,耗时:0s======================
2018-07-04 10:57:29,894 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:29,901 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:30,553 - ===========进入拦截器==============
2018-07-04 10:57:30,553 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:57:30,557 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:57:30,557 - ===========请求时间:2018-07-04 10:57:30==========================
2018-07-04 10:57:30,557 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:57:30,557 - method=GET
2018-07-04 10:57:30,557 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:30,557 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:57:30,557 - args:parentCode=7,
2018-07-04 10:57:30,563 - =============结束请求时间:2018-07-04 10:57:30,耗时:0s======================
2018-07-04 10:57:30,563 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:57:30,564 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:31,453 - ===========进入拦截器==============
2018-07-04 10:57:31,453 - http://localhost:8081/project/findAllProject
2018-07-04 10:57:31,458 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:57:31,458 - ===========请求时间:2018-07-04 10:57:31==========================
2018-07-04 10:57:31,458 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:57:31,458 - method=GET
2018-07-04 10:57:31,458 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:31,458 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:57:31,458 - args:
2018-07-04 10:57:31,468 - =============结束请求时间:2018-07-04 10:57:31,耗时:0s======================
2018-07-04 10:57:31,468 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:31,470 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:39,339 - ===========进入拦截器==============
2018-07-04 10:57:39,339 - http://localhost:8081/menu/findIconList
2018-07-04 10:57:39,356 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:57:39,356 - ===========请求时间:2018-07-04 10:57:39==========================
2018-07-04 10:57:39,356 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:57:39,356 - method=GET
2018-07-04 10:57:39,356 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:39,356 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:57:39,356 - args:
2018-07-04 10:57:39,370 - =============结束请求时间:2018-07-04 10:57:39,耗时:0s======================
2018-07-04 10:57:39,370 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:39,373 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:42,340 - ===========进入拦截器==============
2018-07-04 10:57:42,340 - http://localhost:8081/menu/addMenu
2018-07-04 10:57:42,353 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:57:42,354 - ===========请求时间:2018-07-04 10:57:42==========================
2018-07-04 10:57:42,354 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:57:42,354 - method=GET
2018-07-04 10:57:42,354 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:42,354 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:57:42,354 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 10:57:42,422 - =============结束请求时间:2018-07-04 10:57:42,耗时:0s======================
2018-07-04 10:57:42,422 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:57:42,423 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:44,632 - ===========进入拦截器==============
2018-07-04 10:57:44,632 - http://localhost:8081/menu.html
2018-07-04 10:57:44,636 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:57:44,636 - ===========请求时间:2018-07-04 10:57:44==========================
2018-07-04 10:57:44,636 - url=http://localhost:8081/menu.html
2018-07-04 10:57:44,636 - method=GET
2018-07-04 10:57:44,636 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:44,636 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:57:44,636 - args:
2018-07-04 10:57:44,637 - =============结束请求时间:2018-07-04 10:57:44,耗时:0s======================
2018-07-04 10:57:44,637 - response=/menu
2018-07-04 10:57:44,637 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:57:44,719 - ===========进入拦截器==============
2018-07-04 10:57:44,719 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:44,729 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:57:44,729 - ===========请求时间:2018-07-04 10:57:44==========================
2018-07-04 10:57:44,729 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:57:44,729 - method=GET
2018-07-04 10:57:44,729 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:57:44,729 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:57:44,729 - args:
2018-07-04 10:57:44,785 - =============结束请求时间:2018-07-04 10:57:44,耗时:0s======================
2018-07-04 10:57:44,786 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:57:44,786 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:21,142 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16156 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 10:59:21,144 - No active profile set, falling back to default profiles: default
2018-07-04 10:59:21,350 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 10:59:21,490 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386cb58b: startup date [Wed Jul 04 10:59:21 CST 2018]; root of context hierarchy
2018-07-04 10:59:22,640 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 10:59:23,998 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 10:59:24,010 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 10:59:24,019 - Starting service [Tomcat]
2018-07-04 10:59:24,019 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 10:59:24,127 - Initializing Spring embedded WebApplicationContext
2018-07-04 10:59:24,127 - Root WebApplicationContext: initialization completed in 2637 ms
2018-07-04 10:59:24,332 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 10:59:24,336 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 10:59:24,337 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 10:59:24,337 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 10:59:24,337 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 10:59:24,337 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 10:59:25,192 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@386cb58b: startup date [Wed Jul 04 10:59:21 CST 2018]; root of context hierarchy
2018-07-04 10:59:25,257 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 10:59:25,258 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 10:59:25,258 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 10:59:25,258 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 10:59:25,258 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 10:59:25,259 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 10:59:25,259 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 10:59:25,259 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 10:59:25,259 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 10:59:25,259 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 10:59:25,259 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 10:59:25,259 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 10:59:25,259 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 10:59:25,260 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 10:59:25,260 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 10:59:25,260 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 10:59:25,260 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 10:59:25,262 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 10:59:25,263 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 10:59:25,266 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 10:59:25,266 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 10:59:25,266 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:59:25,267 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 10:59:25,267 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 10:59:25,267 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 10:59:25,267 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 10:59:25,267 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 10:59:25,267 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 10:59:25,268 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 10:59:25,268 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 10:59:25,269 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 10:59:25,269 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 10:59:25,270 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 10:59:25,270 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 10:59:25,270 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 10:59:25,270 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 10:59:25,271 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 10:59:25,271 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 10:59:25,273 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:59:25,273 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 10:59:25,273 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 10:59:25,273 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:59:25,273 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 10:59:25,273 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 10:59:25,274 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 10:59:25,275 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 10:59:25,275 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 10:59:25,330 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:25,330 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:25,349 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 10:59:25,376 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 10:59:26,006 - LiveReload server is running on port 35729
2018-07-04 10:59:26,137 - Registering beans for JMX exposure on startup
2018-07-04 10:59:26,138 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 10:59:26,144 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 10:59:26,154 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 10:59:26,165 - Using a shared selector for servlet write/read
2018-07-04 10:59:26,181 - Tomcat started on port(s): 8081 (http)
2018-07-04 10:59:26,186 - Started FqLtdWasBackstageApplication in 5.775 seconds (JVM running for 7.053)
2018-07-04 10:59:29,067 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 10:59:29,067 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 10:59:29,105 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 10:59:29,120 - ===========进入拦截器==============
2018-07-04 10:59:29,142 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 10:59:29,142 - ===========请求时间:2018-07-04 10:59:29==========================
2018-07-04 10:59:29,142 - url=http://localhost:8081/login
2018-07-04 10:59:29,142 - method=GET
2018-07-04 10:59:29,142 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:29,142 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 10:59:29,142 - args:
2018-07-04 10:59:29,145 - =============结束请求时间:2018-07-04 10:59:29,耗时:0s======================
2018-07-04 10:59:29,145 - response=/login
2018-07-04 10:59:29,174 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 10:59:29,210 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 10:59:29,210 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 10:59:29,210 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 10:59:29,210 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 10:59:29,213 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 10:59:29,213 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 10:59:33,698 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 10:59:33,698 - ===========请求时间:2018-07-04 10:59:33==========================
2018-07-04 10:59:33,698 - url=http://localhost:8081/signIn
2018-07-04 10:59:33,698 - method=POST
2018-07-04 10:59:33,698 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:33,699 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 10:59:33,699 - args:userName=admin,password=123456,
2018-07-04 10:59:33,755 - {dataSource-1} inited
2018-07-04 10:59:34,118 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,119 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 10:59:34, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 10:59:34,181 - ===========进入拦截器==============
2018-07-04 10:59:34,182 - http://localhost:8081/home
2018-07-04 10:59:34,187 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 10:59:34,187 - ===========请求时间:2018-07-04 10:59:34==========================
2018-07-04 10:59:34,187 - url=http://localhost:8081/home
2018-07-04 10:59:34,187 - method=GET
2018-07-04 10:59:34,187 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:34,187 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 10:59:34,187 - args:
2018-07-04 10:59:34,188 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,188 - response=/home
2018-07-04 10:59:34,188 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:34,263 - ===========进入拦截器==============
2018-07-04 10:59:34,263 - http://localhost:8081/welcome
2018-07-04 10:59:34,273 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 10:59:34,273 - ===========请求时间:2018-07-04 10:59:34==========================
2018-07-04 10:59:34,273 - url=http://localhost:8081/welcome
2018-07-04 10:59:34,273 - method=GET
2018-07-04 10:59:34,273 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:34,273 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 10:59:34,273 - args:
2018-07-04 10:59:34,274 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,274 - response=/welcome
2018-07-04 10:59:34,274 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:34,280 - ===========进入拦截器==============
2018-07-04 10:59:34,280 - http://localhost:8081/common/top
2018-07-04 10:59:34,281 - ===========进入拦截器==============
2018-07-04 10:59:34,282 - http://localhost:8081/common/left
2018-07-04 10:59:34,284 - ===========进入拦截器==============
2018-07-04 10:59:34,284 - http://localhost:8081/common/footer
2018-07-04 10:59:34,286 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 10:59:34,286 - ===========请求时间:2018-07-04 10:59:34==========================
2018-07-04 10:59:34,286 - url=http://localhost:8081/common/top
2018-07-04 10:59:34,286 - method=GET
2018-07-04 10:59:34,286 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:34,286 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 10:59:34,286 - args:
2018-07-04 10:59:34,287 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,287 - response=/common/top
2018-07-04 10:59:34,287 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:34,293 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 10:59:34,293 - ===========请求时间:2018-07-04 10:59:34==========================
2018-07-04 10:59:34,293 - url=http://localhost:8081/common/left
2018-07-04 10:59:34,294 - method=GET
2018-07-04 10:59:34,294 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:34,294 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 10:59:34,294 - args:
2018-07-04 10:59:34,294 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,294 - response=/common/left
2018-07-04 10:59:34,294 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:34,307 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 10:59:34,308 - ===========请求时间:2018-07-04 10:59:34==========================
2018-07-04 10:59:34,308 - url=http://localhost:8081/common/footer
2018-07-04 10:59:34,308 - method=GET
2018-07-04 10:59:34,308 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:34,308 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 10:59:34,308 - args:
2018-07-04 10:59:34,308 - =============结束请求时间:2018-07-04 10:59:34,耗时:0s======================
2018-07-04 10:59:34,308 - response=/common/footer
2018-07-04 10:59:34,308 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:36,085 - ===========进入拦截器==============
2018-07-04 10:59:36,085 - http://localhost:8081/role.html
2018-07-04 10:59:36,097 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 10:59:36,097 - ===========请求时间:2018-07-04 10:59:36==========================
2018-07-04 10:59:36,097 - url=http://localhost:8081/role.html
2018-07-04 10:59:36,097 - method=GET
2018-07-04 10:59:36,097 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:36,097 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 10:59:36,097 - args:
2018-07-04 10:59:36,097 - =============结束请求时间:2018-07-04 10:59:36,耗时:0s======================
2018-07-04 10:59:36,097 - response=/role
2018-07-04 10:59:36,097 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:36,192 - ===========进入拦截器==============
2018-07-04 10:59:36,192 - http://localhost:8081/role/findAllRole
2018-07-04 10:59:36,205 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 10:59:36,206 - ===========请求时间:2018-07-04 10:59:36==========================
2018-07-04 10:59:36,206 - url=http://localhost:8081/role/findAllRole
2018-07-04 10:59:36,207 - method=GET
2018-07-04 10:59:36,207 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:36,207 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 10:59:36,207 - args:roleName=,
2018-07-04 10:59:36,222 - =============结束请求时间:2018-07-04 10:59:36,耗时:0s======================
2018-07-04 10:59:36,222 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:36,228 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:36,235 - ===========进入拦截器==============
2018-07-04 10:59:36,235 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:36,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:59:36,240 - ===========请求时间:2018-07-04 10:59:36==========================
2018-07-04 10:59:36,240 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:36,240 - method=GET
2018-07-04 10:59:36,240 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:36,240 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:59:36,240 - args:
2018-07-04 10:59:36,266 - =============结束请求时间:2018-07-04 10:59:36,耗时:0s======================
2018-07-04 10:59:36,266 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:36,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:36,814 - ===========进入拦截器==============
2018-07-04 10:59:36,814 - http://localhost:8081/menu.html
2018-07-04 10:59:36,819 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:59:36,819 - ===========请求时间:2018-07-04 10:59:36==========================
2018-07-04 10:59:36,819 - url=http://localhost:8081/menu.html
2018-07-04 10:59:36,819 - method=GET
2018-07-04 10:59:36,819 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:36,819 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:59:36,819 - args:
2018-07-04 10:59:36,820 - =============结束请求时间:2018-07-04 10:59:36,耗时:0s======================
2018-07-04 10:59:36,820 - response=/menu
2018-07-04 10:59:36,820 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:36,924 - ===========进入拦截器==============
2018-07-04 10:59:36,925 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:36,932 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:59:36,933 - ===========请求时间:2018-07-04 10:59:36==========================
2018-07-04 10:59:36,933 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:36,933 - method=GET
2018-07-04 10:59:36,933 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:36,933 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:59:36,933 - args:
2018-07-04 10:59:36,944 - =============结束请求时间:2018-07-04 10:59:36,耗时:0s======================
2018-07-04 10:59:36,944 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:36,949 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:38,524 - ===========进入拦截器==============
2018-07-04 10:59:38,525 - http://localhost:8081/menu/findChildMenu
2018-07-04 10:59:38,535 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 10:59:38,535 - ===========请求时间:2018-07-04 10:59:38==========================
2018-07-04 10:59:38,535 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 10:59:38,535 - method=GET
2018-07-04 10:59:38,535 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:38,535 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 10:59:38,535 - args:parentCode=7,
2018-07-04 10:59:38,540 - =============结束请求时间:2018-07-04 10:59:38,耗时:0s======================
2018-07-04 10:59:38,541 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 10:59:38,541 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:39,467 - ===========进入拦截器==============
2018-07-04 10:59:39,467 - http://localhost:8081/project/findAllProject
2018-07-04 10:59:39,478 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 10:59:39,478 - ===========请求时间:2018-07-04 10:59:39==========================
2018-07-04 10:59:39,478 - url=http://localhost:8081/project/findAllProject
2018-07-04 10:59:39,478 - method=GET
2018-07-04 10:59:39,478 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:39,478 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 10:59:39,478 - args:
2018-07-04 10:59:39,490 - =============结束请求时间:2018-07-04 10:59:39,耗时:0s======================
2018-07-04 10:59:39,490 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:39,492 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:45,971 - ===========进入拦截器==============
2018-07-04 10:59:45,971 - http://localhost:8081/menu/findIconList
2018-07-04 10:59:45,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 10:59:45,975 - ===========请求时间:2018-07-04 10:59:45==========================
2018-07-04 10:59:45,975 - url=http://localhost:8081/menu/findIconList
2018-07-04 10:59:45,975 - method=GET
2018-07-04 10:59:45,975 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:45,975 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 10:59:45,975 - args:
2018-07-04 10:59:45,988 - =============结束请求时间:2018-07-04 10:59:45,耗时:0s======================
2018-07-04 10:59:45,988 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:45,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:50,756 - ===========进入拦截器==============
2018-07-04 10:59:50,756 - http://localhost:8081/menu/addMenu
2018-07-04 10:59:50,770 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 10:59:50,770 - ===========请求时间:2018-07-04 10:59:50==========================
2018-07-04 10:59:50,770 - url=http://localhost:8081/menu/addMenu
2018-07-04 10:59:50,770 - method=GET
2018-07-04 10:59:50,770 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:50,770 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 10:59:50,771 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 10:59:50,818 - =============结束请求时间:2018-07-04 10:59:50,耗时:0s======================
2018-07-04 10:59:50,819 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 10:59:50,820 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:53,029 - ===========进入拦截器==============
2018-07-04 10:59:53,029 - http://localhost:8081/menu.html
2018-07-04 10:59:53,033 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 10:59:53,033 - ===========请求时间:2018-07-04 10:59:53==========================
2018-07-04 10:59:53,033 - url=http://localhost:8081/menu.html
2018-07-04 10:59:53,033 - method=GET
2018-07-04 10:59:53,033 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:53,033 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 10:59:53,033 - args:
2018-07-04 10:59:53,033 - =============结束请求时间:2018-07-04 10:59:53,耗时:0s======================
2018-07-04 10:59:53,033 - response=/menu
2018-07-04 10:59:53,033 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 10:59:53,128 - ===========进入拦截器==============
2018-07-04 10:59:53,128 - http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:53,132 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 10:59:53,132 - ===========请求时间:2018-07-04 10:59:53==========================
2018-07-04 10:59:53,132 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 10:59:53,132 - method=GET
2018-07-04 10:59:53,132 - ip=0:0:0:0:0:0:0:1
2018-07-04 10:59:53,132 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 10:59:53,133 - args:
2018-07-04 10:59:53,146 - =============结束请求时间:2018-07-04 10:59:53,耗时:0s======================
2018-07-04 10:59:53,146 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 10:59:53,148 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:06,304 - ===========进入拦截器==============
2018-07-04 11:03:06,304 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:03:06,343 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:03:06,343 - ===========请求时间:2018-07-04 11:03:06==========================
2018-07-04 11:03:06,343 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:03:06,343 - method=GET
2018-07-04 11:03:06,343 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:06,343 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:03:06,343 - args:parentCode=7,
2018-07-04 11:03:06,348 - =============结束请求时间:2018-07-04 11:03:06,耗时:0s======================
2018-07-04 11:03:06,348 - response=Result(code=200, msg=成功, data=[Menu(gid=21, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:59:50.0, updateTime=2018-07-04 10:59:50.0, status=0)], page=null, totalCount=null)
2018-07-04 11:03:06,349 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:10,581 - ===========进入拦截器==============
2018-07-04 11:03:10,581 - http://localhost:8081/menu/delMenu
2018-07-04 11:03:10,591 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 11:03:10,591 - ===========请求时间:2018-07-04 11:03:10==========================
2018-07-04 11:03:10,591 - url=http://localhost:8081/menu/delMenu
2018-07-04 11:03:10,591 - method=GET
2018-07-04 11:03:10,591 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:10,591 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 11:03:10,591 - args:gid=21,
2018-07-04 11:03:10,724 - =============结束请求时间:2018-07-04 11:03:10,耗时:0s======================
2018-07-04 11:03:10,724 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:03:10,725 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:12,947 - ===========进入拦截器==============
2018-07-04 11:03:12,948 - http://localhost:8081/menu.html
2018-07-04 11:03:12,953 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:03:12,953 - ===========请求时间:2018-07-04 11:03:12==========================
2018-07-04 11:03:12,954 - url=http://localhost:8081/menu.html
2018-07-04 11:03:12,954 - method=GET
2018-07-04 11:03:12,954 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:12,954 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:03:12,954 - args:
2018-07-04 11:03:12,954 - =============结束请求时间:2018-07-04 11:03:12,耗时:0s======================
2018-07-04 11:03:12,954 - response=/menu
2018-07-04 11:03:12,955 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:13,053 - ===========进入拦截器==============
2018-07-04 11:03:13,054 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:03:13,058 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:03:13,058 - ===========请求时间:2018-07-04 11:03:13==========================
2018-07-04 11:03:13,058 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:03:13,058 - method=GET
2018-07-04 11:03:13,058 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:13,058 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:03:13,058 - args:
2018-07-04 11:03:13,065 - =============结束请求时间:2018-07-04 11:03:13,耗时:0s======================
2018-07-04 11:03:13,065 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:03:13,066 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:14,484 - ===========进入拦截器==============
2018-07-04 11:03:14,484 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:03:14,489 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:03:14,489 - ===========请求时间:2018-07-04 11:03:14==========================
2018-07-04 11:03:14,489 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:03:14,489 - method=GET
2018-07-04 11:03:14,489 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:14,489 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:03:14,489 - args:parentCode=7,
2018-07-04 11:03:14,494 - =============结束请求时间:2018-07-04 11:03:14,耗时:0s======================
2018-07-04 11:03:14,494 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:03:14,494 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:15,516 - ===========进入拦截器==============
2018-07-04 11:03:15,516 - http://localhost:8081/project/findAllProject
2018-07-04 11:03:15,521 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 11:03:15,521 - ===========请求时间:2018-07-04 11:03:15==========================
2018-07-04 11:03:15,521 - url=http://localhost:8081/project/findAllProject
2018-07-04 11:03:15,521 - method=GET
2018-07-04 11:03:15,521 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:15,521 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 11:03:15,521 - args:
2018-07-04 11:03:15,525 - =============结束请求时间:2018-07-04 11:03:15,耗时:0s======================
2018-07-04 11:03:15,525 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:03:15,526 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:22,251 - ===========进入拦截器==============
2018-07-04 11:03:22,252 - http://localhost:8081/menu/findIconList
2018-07-04 11:03:22,261 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 11:03:22,261 - ===========请求时间:2018-07-04 11:03:22==========================
2018-07-04 11:03:22,261 - url=http://localhost:8081/menu/findIconList
2018-07-04 11:03:22,261 - method=GET
2018-07-04 11:03:22,261 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:22,261 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 11:03:22,261 - args:
2018-07-04 11:03:22,267 - =============结束请求时间:2018-07-04 11:03:22,耗时:0s======================
2018-07-04 11:03:22,268 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 11:03:22,268 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:03:25,499 - ===========进入拦截器==============
2018-07-04 11:03:25,499 - http://localhost:8081/menu/addMenu
2018-07-04 11:03:25,504 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 11:03:25,504 - ===========请求时间:2018-07-04 11:03:25==========================
2018-07-04 11:03:25,504 - url=http://localhost:8081/menu/addMenu
2018-07-04 11:03:25,504 - method=GET
2018-07-04 11:03:25,504 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:03:25,504 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 11:03:25,504 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 11:06:15,540 - =============结束请求时间:2018-07-04 11:06:15,耗时:170s======================
2018-07-04 11:06:15,540 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:06:15,542 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:06:17,772 - ===========进入拦截器==============
2018-07-04 11:06:17,772 - http://localhost:8081/menu.html
2018-07-04 11:06:17,780 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:06:17,780 - ===========请求时间:2018-07-04 11:06:17==========================
2018-07-04 11:06:17,780 - url=http://localhost:8081/menu.html
2018-07-04 11:06:17,780 - method=GET
2018-07-04 11:06:17,780 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:06:17,780 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:06:17,781 - args:
2018-07-04 11:06:17,781 - =============结束请求时间:2018-07-04 11:06:17,耗时:0s======================
2018-07-04 11:06:17,781 - response=/menu
2018-07-04 11:06:17,781 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:06:17,869 - ===========进入拦截器==============
2018-07-04 11:06:17,869 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:06:17,887 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:06:17,888 - ===========请求时间:2018-07-04 11:06:17==========================
2018-07-04 11:06:17,888 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:06:17,888 - method=GET
2018-07-04 11:06:17,888 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:06:17,888 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:06:17,888 - args:
2018-07-04 11:06:17,902 - =============结束请求时间:2018-07-04 11:06:17,耗时:0s======================
2018-07-04 11:06:17,902 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:06:17,905 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:00,247 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10072 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:08:00,251 - No active profile set, falling back to default profiles: default
2018-07-04 11:08:00,480 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:08:00,560 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6a863b: startup date [Wed Jul 04 11:08:00 CST 2018]; root of context hierarchy
2018-07-04 11:08:01,557 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:08:03,112 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:08:03,123 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:08:03,132 - Starting service [Tomcat]
2018-07-04 11:08:03,132 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:08:03,237 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:08:03,237 - Root WebApplicationContext: initialization completed in 2677 ms
2018-07-04 11:08:03,452 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:08:03,457 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:08:03,457 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:08:03,458 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:08:03,458 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:08:03,458 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:08:04,286 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6a863b: startup date [Wed Jul 04 11:08:00 CST 2018]; root of context hierarchy
2018-07-04 11:08:04,352 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:08:04,353 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:08:04,353 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:08:04,353 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:08:04,353 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:08:04,353 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:08:04,353 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:08:04,353 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:08:04,353 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:08:04,354 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:08:04,354 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:08:04,354 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:08:04,354 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:08:04,354 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:08:04,354 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:08:04,354 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:08:04,354 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:08:04,357 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:08:04,358 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:08:04,359 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:08:04,360 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:08:04,360 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:08:04,360 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:08:04,360 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:08:04,360 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:08:04,360 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:08:04,360 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:08:04,361 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:08:04,361 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:08:04,362 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:08:04,362 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:08:04,362 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:08:04,363 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:08:04,363 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:08:04,363 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:08:04,363 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:08:04,364 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:08:04,364 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:08:04,365 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:08:04,365 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:08:04,365 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:08:04,365 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:08:04,366 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:08:04,366 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:08:04,366 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:08:04,367 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:08:04,368 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:08:04,411 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:08:04,411 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:08:04,430 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:08:04,456 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:08:05,113 - LiveReload server is running on port 35729
2018-07-04 11:08:05,238 - Registering beans for JMX exposure on startup
2018-07-04 11:08:05,239 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:08:05,244 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:08:05,254 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:08:05,267 - Using a shared selector for servlet write/read
2018-07-04 11:08:05,281 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:08:05,286 - Started FqLtdWasBackstageApplication in 6.084 seconds (JVM running for 7.372)
2018-07-04 11:08:08,058 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:08:08,058 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:08:08,095 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 11:08:08,109 - ===========进入拦截器==============
2018-07-04 11:08:08,130 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:08:08,130 - ===========请求时间:2018-07-04 11:08:08==========================
2018-07-04 11:08:08,130 - url=http://localhost:8081/login
2018-07-04 11:08:08,130 - method=GET
2018-07-04 11:08:08,130 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:08,130 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:08:08,130 - args:
2018-07-04 11:08:08,133 - =============结束请求时间:2018-07-04 11:08:08,耗时:0s======================
2018-07-04 11:08:08,133 - response=/login
2018-07-04 11:08:08,163 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:08:08,200 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:08:08,200 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:08:08,201 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:08:08,201 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:08:08,206 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:08:08,206 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:08:13,626 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:08:13,626 - ===========请求时间:2018-07-04 11:08:13==========================
2018-07-04 11:08:13,626 - url=http://localhost:8081/signIn
2018-07-04 11:08:13,626 - method=POST
2018-07-04 11:08:13,626 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:13,626 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:08:13,626 - args:userName=admin,password=123456,
2018-07-04 11:08:13,681 - {dataSource-1} inited
2018-07-04 11:08:14,018 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,018 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:08:13, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:08:14,089 - ===========进入拦截器==============
2018-07-04 11:08:14,090 - http://localhost:8081/home
2018-07-04 11:08:14,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:08:14,101 - ===========请求时间:2018-07-04 11:08:14==========================
2018-07-04 11:08:14,101 - url=http://localhost:8081/home
2018-07-04 11:08:14,101 - method=GET
2018-07-04 11:08:14,102 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:14,102 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:08:14,102 - args:
2018-07-04 11:08:14,102 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,102 - response=/home
2018-07-04 11:08:14,102 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:14,176 - ===========进入拦截器==============
2018-07-04 11:08:14,176 - http://localhost:8081/welcome
2018-07-04 11:08:14,181 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:08:14,181 - ===========请求时间:2018-07-04 11:08:14==========================
2018-07-04 11:08:14,181 - url=http://localhost:8081/welcome
2018-07-04 11:08:14,181 - method=GET
2018-07-04 11:08:14,181 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:14,181 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:08:14,181 - args:
2018-07-04 11:08:14,181 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,181 - response=/welcome
2018-07-04 11:08:14,181 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:14,197 - ===========进入拦截器==============
2018-07-04 11:08:14,197 - http://localhost:8081/common/top
2018-07-04 11:08:14,202 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:08:14,202 - ===========进入拦截器==============
2018-07-04 11:08:14,203 - ===========请求时间:2018-07-04 11:08:14==========================
2018-07-04 11:08:14,203 - http://localhost:8081/common/footer
2018-07-04 11:08:14,203 - url=http://localhost:8081/common/top
2018-07-04 11:08:14,203 - method=GET
2018-07-04 11:08:14,203 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:14,203 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:08:14,203 - args:
2018-07-04 11:08:14,203 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,203 - response=/common/top
2018-07-04 11:08:14,203 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:14,207 - ===========进入拦截器==============
2018-07-04 11:08:14,207 - http://localhost:8081/common/left
2018-07-04 11:08:14,207 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:08:14,207 - ===========请求时间:2018-07-04 11:08:14==========================
2018-07-04 11:08:14,207 - url=http://localhost:8081/common/footer
2018-07-04 11:08:14,207 - method=GET
2018-07-04 11:08:14,207 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:14,207 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:08:14,207 - args:
2018-07-04 11:08:14,208 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,208 - response=/common/footer
2018-07-04 11:08:14,208 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:14,211 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:08:14,212 - ===========请求时间:2018-07-04 11:08:14==========================
2018-07-04 11:08:14,212 - url=http://localhost:8081/common/left
2018-07-04 11:08:14,212 - method=GET
2018-07-04 11:08:14,212 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:14,212 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:08:14,212 - args:
2018-07-04 11:08:14,212 - =============结束请求时间:2018-07-04 11:08:14,耗时:0s======================
2018-07-04 11:08:14,212 - response=/common/left
2018-07-04 11:08:14,212 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:16,509 - ===========进入拦截器==============
2018-07-04 11:08:16,509 - http://localhost:8081/menu.html
2018-07-04 11:08:16,529 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:08:16,529 - ===========请求时间:2018-07-04 11:08:16==========================
2018-07-04 11:08:16,529 - url=http://localhost:8081/menu.html
2018-07-04 11:08:16,529 - method=GET
2018-07-04 11:08:16,529 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:16,529 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:08:16,529 - args:
2018-07-04 11:08:16,529 - =============结束请求时间:2018-07-04 11:08:16,耗时:0s======================
2018-07-04 11:08:16,529 - response=/menu
2018-07-04 11:08:16,529 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:16,628 - ===========进入拦截器==============
2018-07-04 11:08:16,628 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:16,633 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:08:16,634 - ===========请求时间:2018-07-04 11:08:16==========================
2018-07-04 11:08:16,634 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:16,634 - method=GET
2018-07-04 11:08:16,634 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:16,634 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:08:16,634 - args:
2018-07-04 11:08:16,655 - =============结束请求时间:2018-07-04 11:08:16,耗时:0s======================
2018-07-04 11:08:16,656 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:16,664 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:18,462 - ===========进入拦截器==============
2018-07-04 11:08:18,462 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:08:18,468 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:08:18,468 - ===========请求时间:2018-07-04 11:08:18==========================
2018-07-04 11:08:18,468 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:08:18,468 - method=GET
2018-07-04 11:08:18,468 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:18,468 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:08:18,468 - args:parentCode=7,
2018-07-04 11:08:18,474 - =============结束请求时间:2018-07-04 11:08:18,耗时:0s======================
2018-07-04 11:08:18,475 - response=Result(code=200, msg=成功, data=[Menu(gid=22, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=7, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:06:15.0, updateTime=2018-07-04 11:06:15.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:18,476 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:22,211 - ===========进入拦截器==============
2018-07-04 11:08:22,211 - http://localhost:8081/menu/delMenu
2018-07-04 11:08:22,219 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.delMenu============
2018-07-04 11:08:22,219 - ===========请求时间:2018-07-04 11:08:22==========================
2018-07-04 11:08:22,219 - url=http://localhost:8081/menu/delMenu
2018-07-04 11:08:22,219 - method=GET
2018-07-04 11:08:22,219 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:22,219 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.delMenu
2018-07-04 11:08:22,219 - args:gid=22,
2018-07-04 11:08:22,336 - =============结束请求时间:2018-07-04 11:08:22,耗时:0s======================
2018-07-04 11:08:22,336 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:08:22,337 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:23,140 - ===========进入拦截器==============
2018-07-04 11:08:23,140 - http://localhost:8081/project/findAllProject
2018-07-04 11:08:23,145 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 11:08:23,145 - ===========请求时间:2018-07-04 11:08:23==========================
2018-07-04 11:08:23,145 - url=http://localhost:8081/project/findAllProject
2018-07-04 11:08:23,145 - method=GET
2018-07-04 11:08:23,145 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:23,145 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 11:08:23,145 - args:
2018-07-04 11:08:23,155 - =============结束请求时间:2018-07-04 11:08:23,耗时:0s======================
2018-07-04 11:08:23,155 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:23,157 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:24,549 - ===========进入拦截器==============
2018-07-04 11:08:24,549 - http://localhost:8081/menu.html
2018-07-04 11:08:24,555 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:08:24,555 - ===========请求时间:2018-07-04 11:08:24==========================
2018-07-04 11:08:24,555 - url=http://localhost:8081/menu.html
2018-07-04 11:08:24,555 - method=GET
2018-07-04 11:08:24,555 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:24,555 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:08:24,555 - args:
2018-07-04 11:08:24,555 - =============结束请求时间:2018-07-04 11:08:24,耗时:0s======================
2018-07-04 11:08:24,555 - response=/menu
2018-07-04 11:08:24,556 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:24,652 - ===========进入拦截器==============
2018-07-04 11:08:24,652 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:24,657 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:08:24,657 - ===========请求时间:2018-07-04 11:08:24==========================
2018-07-04 11:08:24,657 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:24,658 - method=GET
2018-07-04 11:08:24,658 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:24,658 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:08:24,658 - args:
2018-07-04 11:08:24,667 - =============结束请求时间:2018-07-04 11:08:24,耗时:0s======================
2018-07-04 11:08:24,667 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:24,670 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:27,835 - ===========进入拦截器==============
2018-07-04 11:08:27,835 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:08:27,840 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:08:27,840 - ===========请求时间:2018-07-04 11:08:27==========================
2018-07-04 11:08:27,840 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:08:27,841 - method=GET
2018-07-04 11:08:27,841 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:27,841 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:08:27,841 - args:parentCode=7,
2018-07-04 11:08:27,845 - =============结束请求时间:2018-07-04 11:08:27,耗时:0s======================
2018-07-04 11:08:27,845 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:08:27,846 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:28,946 - ===========进入拦截器==============
2018-07-04 11:08:28,946 - http://localhost:8081/project/findAllProject
2018-07-04 11:08:28,953 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 11:08:28,954 - ===========请求时间:2018-07-04 11:08:28==========================
2018-07-04 11:08:28,954 - url=http://localhost:8081/project/findAllProject
2018-07-04 11:08:28,954 - method=GET
2018-07-04 11:08:28,954 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:28,954 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 11:08:28,954 - args:
2018-07-04 11:08:28,961 - =============结束请求时间:2018-07-04 11:08:28,耗时:0s======================
2018-07-04 11:08:28,962 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:28,962 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:35,818 - ===========进入拦截器==============
2018-07-04 11:08:35,818 - http://localhost:8081/menu/findIconList
2018-07-04 11:08:35,822 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 11:08:35,822 - ===========请求时间:2018-07-04 11:08:35==========================
2018-07-04 11:08:35,822 - url=http://localhost:8081/menu/findIconList
2018-07-04 11:08:35,822 - method=GET
2018-07-04 11:08:35,822 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:35,822 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 11:08:35,822 - args:
2018-07-04 11:08:35,831 - =============结束请求时间:2018-07-04 11:08:35,耗时:0s======================
2018-07-04 11:08:35,832 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:35,834 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:38,628 - ===========进入拦截器==============
2018-07-04 11:08:38,628 - http://localhost:8081/menu/addMenu
2018-07-04 11:08:38,641 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 11:08:38,641 - ===========请求时间:2018-07-04 11:08:38==========================
2018-07-04 11:08:38,641 - url=http://localhost:8081/menu/addMenu
2018-07-04 11:08:38,641 - method=GET
2018-07-04 11:08:38,641 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:38,641 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 11:08:38,641 - args:menuName=平台提币管理,url=/withdraw-coin.html,belong=1,icon=,parentCode=7,menuType=0,
2018-07-04 11:08:38,684 - =============结束请求时间:2018-07-04 11:08:38,耗时:0s======================
2018-07-04 11:08:38,684 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:08:38,685 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:40,895 - ===========进入拦截器==============
2018-07-04 11:08:40,895 - http://localhost:8081/menu.html
2018-07-04 11:08:40,899 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:08:40,899 - ===========请求时间:2018-07-04 11:08:40==========================
2018-07-04 11:08:40,899 - url=http://localhost:8081/menu.html
2018-07-04 11:08:40,899 - method=GET
2018-07-04 11:08:40,899 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:40,899 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:08:40,899 - args:
2018-07-04 11:08:40,899 - =============结束请求时间:2018-07-04 11:08:40,耗时:0s======================
2018-07-04 11:08:40,900 - response=/menu
2018-07-04 11:08:40,900 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:40,994 - ===========进入拦截器==============
2018-07-04 11:08:40,994 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:40,998 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:08:40,998 - ===========请求时间:2018-07-04 11:08:40==========================
2018-07-04 11:08:40,998 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:40,998 - method=GET
2018-07-04 11:08:40,998 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:40,998 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:08:40,998 - args:
2018-07-04 11:08:41,004 - =============结束请求时间:2018-07-04 11:08:41,耗时:0s======================
2018-07-04 11:08:41,005 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:41,006 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:53,533 - ===========进入拦截器==============
2018-07-04 11:08:53,533 - http://localhost:8081/role.html
2018-07-04 11:08:53,538 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:08:53,539 - ===========请求时间:2018-07-04 11:08:53==========================
2018-07-04 11:08:53,539 - url=http://localhost:8081/role.html
2018-07-04 11:08:53,539 - method=GET
2018-07-04 11:08:53,539 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:53,539 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:08:53,539 - args:
2018-07-04 11:08:53,539 - =============结束请求时间:2018-07-04 11:08:53,耗时:0s======================
2018-07-04 11:08:53,539 - response=/role
2018-07-04 11:08:53,539 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:53,624 - ===========进入拦截器==============
2018-07-04 11:08:53,624 - http://localhost:8081/role/findAllRole
2018-07-04 11:08:53,628 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:08:53,629 - ===========请求时间:2018-07-04 11:08:53==========================
2018-07-04 11:08:53,629 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:08:53,629 - method=GET
2018-07-04 11:08:53,629 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:53,629 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:08:53,629 - args:roleName=,
2018-07-04 11:08:53,638 - =============结束请求时间:2018-07-04 11:08:53,耗时:0s======================
2018-07-04 11:08:53,638 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:53,639 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:08:53,646 - ===========进入拦截器==============
2018-07-04 11:08:53,646 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:53,651 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:08:53,651 - ===========请求时间:2018-07-04 11:08:53==========================
2018-07-04 11:08:53,651 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:08:53,651 - method=GET
2018-07-04 11:08:53,651 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:08:53,651 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:08:53,651 - args:
2018-07-04 11:08:53,658 - =============结束请求时间:2018-07-04 11:08:53,耗时:0s======================
2018-07-04 11:08:53,658 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:08:53,659 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:04,229 - ===========进入拦截器==============
2018-07-04 11:10:04,229 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:04,257 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:10:04,258 - ===========请求时间:2018-07-04 11:10:04==========================
2018-07-04 11:10:04,258 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:04,258 - method=GET
2018-07-04 11:10:04,258 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:04,258 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:10:04,258 - args:parentCode=5,
2018-07-04 11:10:04,263 - =============结束请求时间:2018-07-04 11:10:04,耗时:0s======================
2018-07-04 11:10:04,263 - response=Result(code=200, msg=成功, data=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], page=null, totalCount=null)
2018-07-04 11:10:04,264 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:13,230 - ===========进入拦截器==============
2018-07-04 11:10:13,230 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:13,235 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:10:13,235 - ===========请求时间:2018-07-04 11:10:13==========================
2018-07-04 11:10:13,235 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:13,235 - method=GET
2018-07-04 11:10:13,235 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:13,235 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:10:13,235 - args:parentCode=5,
2018-07-04 11:10:13,244 - =============结束请求时间:2018-07-04 11:10:13,耗时:0s======================
2018-07-04 11:10:13,244 - response=Result(code=200, msg=成功, data=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], page=null, totalCount=null)
2018-07-04 11:10:13,245 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:18,357 - ===========进入拦截器==============
2018-07-04 11:10:18,358 - http://localhost:8081/menu.html
2018-07-04 11:10:18,362 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:10:18,362 - ===========请求时间:2018-07-04 11:10:18==========================
2018-07-04 11:10:18,362 - url=http://localhost:8081/menu.html
2018-07-04 11:10:18,362 - method=GET
2018-07-04 11:10:18,362 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:18,362 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:10:18,362 - args:
2018-07-04 11:10:18,362 - =============结束请求时间:2018-07-04 11:10:18,耗时:0s======================
2018-07-04 11:10:18,362 - response=/menu
2018-07-04 11:10:18,362 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:18,442 - ===========进入拦截器==============
2018-07-04 11:10:18,442 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:10:18,446 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:10:18,446 - ===========请求时间:2018-07-04 11:10:18==========================
2018-07-04 11:10:18,446 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:10:18,446 - method=GET
2018-07-04 11:10:18,446 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:18,446 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:10:18,446 - args:
2018-07-04 11:10:18,459 - =============结束请求时间:2018-07-04 11:10:18,耗时:0s======================
2018-07-04 11:10:18,459 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:10:18,462 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:20,643 - ===========进入拦截器==============
2018-07-04 11:10:20,643 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:20,646 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:10:20,647 - ===========请求时间:2018-07-04 11:10:20==========================
2018-07-04 11:10:20,647 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:20,647 - method=GET
2018-07-04 11:10:20,647 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:20,647 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:10:20,647 - args:parentCode=5,
2018-07-04 11:10:20,652 - =============结束请求时间:2018-07-04 11:10:20,耗时:0s======================
2018-07-04 11:10:20,652 - response=Result(code=200, msg=成功, data=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], page=null, totalCount=null)
2018-07-04 11:10:20,653 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:10:57,880 - ===========进入拦截器==============
2018-07-04 11:10:57,880 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:57,885 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:10:57,885 - ===========请求时间:2018-07-04 11:10:57==========================
2018-07-04 11:10:57,885 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:10:57,885 - method=GET
2018-07-04 11:10:57,885 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:10:57,885 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:10:57,885 - args:parentCode=7,
2018-07-04 11:10:57,889 - =============结束请求时间:2018-07-04 11:10:57,耗时:0s======================
2018-07-04 11:10:57,889 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:10:57,890 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:11:03,661 - ===========进入拦截器==============
2018-07-04 11:11:03,661 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:03,669 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:11:03,669 - ===========请求时间:2018-07-04 11:11:03==========================
2018-07-04 11:11:03,669 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:03,669 - method=GET
2018-07-04 11:11:03,669 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:11:03,669 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:11:03,669 - args:parentCode=8,
2018-07-04 11:11:03,675 - =============结束请求时间:2018-07-04 11:11:03,耗时:0s======================
2018-07-04 11:11:03,675 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:11:03,675 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:11:07,885 - ===========进入拦截器==============
2018-07-04 11:11:07,885 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:07,889 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:11:07,889 - ===========请求时间:2018-07-04 11:11:07==========================
2018-07-04 11:11:07,889 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:07,889 - method=GET
2018-07-04 11:11:07,889 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:11:07,889 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:11:07,889 - args:parentCode=5,
2018-07-04 11:11:07,893 - =============结束请求时间:2018-07-04 11:11:07,耗时:0s======================
2018-07-04 11:11:07,893 - response=Result(code=200, msg=成功, data=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], page=null, totalCount=null)
2018-07-04 11:11:07,894 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:11:10,430 - ===========进入拦截器==============
2018-07-04 11:11:10,430 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:10,437 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:11:10,437 - ===========请求时间:2018-07-04 11:11:10==========================
2018-07-04 11:11:10,437 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:11:10,437 - method=GET
2018-07-04 11:11:10,437 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:11:10,437 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:11:10,437 - args:parentCode=1,
2018-07-04 11:11:10,445 - =============结束请求时间:2018-07-04 11:11:10,耗时:0s======================
2018-07-04 11:11:10,445 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:11:10,446 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:31,583 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14708 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:13:31,587 - No active profile set, falling back to default profiles: default
2018-07-04 11:13:31,757 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:13:31,854 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17833ab0: startup date [Wed Jul 04 11:13:31 CST 2018]; root of context hierarchy
2018-07-04 11:13:32,798 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:13:34,152 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:13:34,163 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:13:34,173 - Starting service [Tomcat]
2018-07-04 11:13:34,173 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:13:34,270 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:13:34,270 - Root WebApplicationContext: initialization completed in 2416 ms
2018-07-04 11:13:34,466 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:13:34,470 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:13:34,471 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:13:34,471 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:13:34,471 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:13:34,471 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:13:35,234 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17833ab0: startup date [Wed Jul 04 11:13:31 CST 2018]; root of context hierarchy
2018-07-04 11:13:35,294 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:13:35,295 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:13:35,295 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:13:35,295 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:13:35,295 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:13:35,295 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:13:35,295 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:13:35,295 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:13:35,296 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:13:35,296 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:13:35,296 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:13:35,297 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:13:35,297 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:13:35,297 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:13:35,297 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:13:35,297 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:13:35,297 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:13:35,300 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:13:35,300 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:13:35,302 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:13:35,302 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:13:35,302 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:13:35,302 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:13:35,302 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:13:35,302 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:13:35,302 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:13:35,303 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:13:35,303 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:13:35,304 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:13:35,304 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:13:35,304 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:13:35,304 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:13:35,305 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:13:35,305 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:13:35,306 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:13:35,306 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:13:35,306 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:13:35,306 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:13:35,307 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:13:35,307 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:13:35,308 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:13:35,308 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:13:35,308 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:13:35,308 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:13:35,309 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:13:35,311 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:13:35,311 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:13:35,355 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:13:35,355 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:13:35,372 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:13:35,397 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:13:36,035 - LiveReload server is running on port 35729
2018-07-04 11:13:36,167 - Registering beans for JMX exposure on startup
2018-07-04 11:13:36,169 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:13:36,173 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:13:36,182 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:13:36,194 - Using a shared selector for servlet write/read
2018-07-04 11:13:36,207 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:13:36,211 - Started FqLtdWasBackstageApplication in 5.383 seconds (JVM running for 6.422)
2018-07-04 11:13:39,758 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:13:39,759 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:13:39,796 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 11:13:39,810 - ===========进入拦截器==============
2018-07-04 11:13:39,832 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:13:39,832 - ===========请求时间:2018-07-04 11:13:39==========================
2018-07-04 11:13:39,832 - url=http://localhost:8081/login
2018-07-04 11:13:39,832 - method=GET
2018-07-04 11:13:39,832 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:39,832 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:13:39,832 - args:
2018-07-04 11:13:39,835 - =============结束请求时间:2018-07-04 11:13:39,耗时:0s======================
2018-07-04 11:13:39,835 - response=/login
2018-07-04 11:13:39,866 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:13:39,902 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:13:39,902 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:13:39,902 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:13:39,902 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:13:39,905 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:13:39,905 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:13:45,795 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:13:45,795 - ===========请求时间:2018-07-04 11:13:45==========================
2018-07-04 11:13:45,795 - url=http://localhost:8081/signIn
2018-07-04 11:13:45,795 - method=POST
2018-07-04 11:13:45,795 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:45,795 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:13:45,795 - args:userName=admin,password=123456,
2018-07-04 11:13:45,849 - {dataSource-1} inited
2018-07-04 11:13:46,192 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,192 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:13:46, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:13:46,255 - ===========进入拦截器==============
2018-07-04 11:13:46,255 - http://localhost:8081/home
2018-07-04 11:13:46,261 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:13:46,261 - ===========请求时间:2018-07-04 11:13:46==========================
2018-07-04 11:13:46,261 - url=http://localhost:8081/home
2018-07-04 11:13:46,261 - method=GET
2018-07-04 11:13:46,261 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:46,262 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:13:46,262 - args:
2018-07-04 11:13:46,262 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,262 - response=/home
2018-07-04 11:13:46,262 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:46,334 - ===========进入拦截器==============
2018-07-04 11:13:46,334 - http://localhost:8081/welcome
2018-07-04 11:13:46,339 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:13:46,340 - ===========请求时间:2018-07-04 11:13:46==========================
2018-07-04 11:13:46,340 - url=http://localhost:8081/welcome
2018-07-04 11:13:46,340 - method=GET
2018-07-04 11:13:46,340 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:46,340 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:13:46,340 - args:
2018-07-04 11:13:46,340 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,340 - response=/welcome
2018-07-04 11:13:46,341 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:46,353 - ===========进入拦截器==============
2018-07-04 11:13:46,353 - http://localhost:8081/common/top
2018-07-04 11:13:46,355 - ===========进入拦截器==============
2018-07-04 11:13:46,358 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:13:46,358 - ===========请求时间:2018-07-04 11:13:46==========================
2018-07-04 11:13:46,358 - url=http://localhost:8081/common/top
2018-07-04 11:13:46,358 - method=GET
2018-07-04 11:13:46,358 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:46,358 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:13:46,355 - http://localhost:8081/common/left
2018-07-04 11:13:46,358 - args:
2018-07-04 11:13:46,359 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,359 - response=/common/top
2018-07-04 11:13:46,359 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:46,359 - ===========进入拦截器==============
2018-07-04 11:13:46,360 - http://localhost:8081/common/footer
2018-07-04 11:13:46,363 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:13:46,363 - ===========请求时间:2018-07-04 11:13:46==========================
2018-07-04 11:13:46,363 - url=http://localhost:8081/common/left
2018-07-04 11:13:46,363 - method=GET
2018-07-04 11:13:46,363 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:46,363 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:13:46,364 - args:
2018-07-04 11:13:46,364 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,364 - response=/common/left
2018-07-04 11:13:46,364 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:46,371 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:13:46,371 - ===========请求时间:2018-07-04 11:13:46==========================
2018-07-04 11:13:46,371 - url=http://localhost:8081/common/footer
2018-07-04 11:13:46,371 - method=GET
2018-07-04 11:13:46,371 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:46,371 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:13:46,371 - args:
2018-07-04 11:13:46,372 - =============结束请求时间:2018-07-04 11:13:46,耗时:0s======================
2018-07-04 11:13:46,372 - response=/common/footer
2018-07-04 11:13:46,372 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:48,422 - ===========进入拦截器==============
2018-07-04 11:13:48,422 - http://localhost:8081/menu.html
2018-07-04 11:13:48,427 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:13:48,427 - ===========请求时间:2018-07-04 11:13:48==========================
2018-07-04 11:13:48,427 - url=http://localhost:8081/menu.html
2018-07-04 11:13:48,427 - method=GET
2018-07-04 11:13:48,427 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:48,427 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:13:48,427 - args:
2018-07-04 11:13:48,427 - =============结束请求时间:2018-07-04 11:13:48,耗时:0s======================
2018-07-04 11:13:48,428 - response=/menu
2018-07-04 11:13:48,428 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:48,524 - ===========进入拦截器==============
2018-07-04 11:13:48,524 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:13:48,534 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:13:48,534 - ===========请求时间:2018-07-04 11:13:48==========================
2018-07-04 11:13:48,534 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:13:48,534 - method=GET
2018-07-04 11:13:48,534 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:48,534 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:13:48,535 - args:
2018-07-04 11:13:48,557 - =============结束请求时间:2018-07-04 11:13:48,耗时:0s======================
2018-07-04 11:13:48,557 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:13:48,566 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:50,077 - ===========进入拦截器==============
2018-07-04 11:13:50,077 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:13:50,084 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:13:50,085 - ===========请求时间:2018-07-04 11:13:50==========================
2018-07-04 11:13:50,085 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:13:50,085 - method=GET
2018-07-04 11:13:50,085 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:50,085 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:13:50,085 - args:parentCode=8,
2018-07-04 11:13:50,098 - =============结束请求时间:2018-07-04 11:13:50,耗时:0s======================
2018-07-04 11:13:50,098 - response=Result(code=200, msg=成功, data=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], page=null, totalCount=null)
2018-07-04 11:13:50,101 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:54,017 - ===========进入拦截器==============
2018-07-04 11:13:54,017 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:13:54,022 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:13:54,022 - ===========请求时间:2018-07-04 11:13:54==========================
2018-07-04 11:13:54,022 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:13:54,022 - method=GET
2018-07-04 11:13:54,022 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:54,022 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:13:54,023 - args:parentCode=5,
2018-07-04 11:13:54,043 - =============结束请求时间:2018-07-04 11:13:54,耗时:0s======================
2018-07-04 11:13:54,043 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:13:54,044 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:13:55,218 - ===========进入拦截器==============
2018-07-04 11:13:55,218 - http://localhost:8081/project/findAllProject
2018-07-04 11:13:55,224 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 11:13:55,224 - ===========请求时间:2018-07-04 11:13:55==========================
2018-07-04 11:13:55,224 - url=http://localhost:8081/project/findAllProject
2018-07-04 11:13:55,224 - method=GET
2018-07-04 11:13:55,224 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:13:55,224 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 11:13:55,224 - args:
2018-07-04 11:13:55,233 - =============结束请求时间:2018-07-04 11:13:55,耗时:0s======================
2018-07-04 11:13:55,234 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:13:55,235 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:00,273 - ===========进入拦截器==============
2018-07-04 11:14:00,274 - http://localhost:8081/menu/findIconList
2018-07-04 11:14:00,281 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 11:14:00,281 - ===========请求时间:2018-07-04 11:14:00==========================
2018-07-04 11:14:00,281 - url=http://localhost:8081/menu/findIconList
2018-07-04 11:14:00,281 - method=GET
2018-07-04 11:14:00,281 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:00,281 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 11:14:00,281 - args:
2018-07-04 11:14:00,300 - =============结束请求时间:2018-07-04 11:14:00,耗时:0s======================
2018-07-04 11:14:00,300 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:00,303 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:13,709 - ===========进入拦截器==============
2018-07-04 11:14:13,709 - http://localhost:8081/menu/addMenu
2018-07-04 11:14:13,724 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 11:14:13,724 - ===========请求时间:2018-07-04 11:14:13==========================
2018-07-04 11:14:13,724 - url=http://localhost:8081/menu/addMenu
2018-07-04 11:14:13,724 - method=GET
2018-07-04 11:14:13,724 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:13,724 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 11:14:13,724 - args:menuName=地址池管理,url=/address-pool.html,belong=1,icon=,parentCode=5,menuType=0,
2018-07-04 11:14:13,779 - =============结束请求时间:2018-07-04 11:14:13,耗时:0s======================
2018-07-04 11:14:13,779 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:14:13,780 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:15,997 - ===========进入拦截器==============
2018-07-04 11:14:15,998 - http://localhost:8081/menu.html
2018-07-04 11:14:16,006 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:14:16,007 - ===========请求时间:2018-07-04 11:14:16==========================
2018-07-04 11:14:16,007 - url=http://localhost:8081/menu.html
2018-07-04 11:14:16,007 - method=GET
2018-07-04 11:14:16,007 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:16,007 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:14:16,007 - args:
2018-07-04 11:14:16,008 - =============结束请求时间:2018-07-04 11:14:16,耗时:0s======================
2018-07-04 11:14:16,008 - response=/menu
2018-07-04 11:14:16,008 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:16,108 - ===========进入拦截器==============
2018-07-04 11:14:16,108 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:14:16,114 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:14:16,114 - ===========请求时间:2018-07-04 11:14:16==========================
2018-07-04 11:14:16,114 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:14:16,114 - method=GET
2018-07-04 11:14:16,114 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:16,114 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:14:16,114 - args:
2018-07-04 11:14:16,121 - =============结束请求时间:2018-07-04 11:14:16,耗时:0s======================
2018-07-04 11:14:16,122 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:16,123 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:17,876 - ===========进入拦截器==============
2018-07-04 11:14:17,876 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:14:17,880 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:14:17,880 - ===========请求时间:2018-07-04 11:14:17==========================
2018-07-04 11:14:17,880 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:14:17,880 - method=GET
2018-07-04 11:14:17,880 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:17,880 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:14:17,880 - args:parentCode=5,
2018-07-04 11:14:17,894 - =============结束请求时间:2018-07-04 11:14:17,耗时:0s======================
2018-07-04 11:14:17,894 - response=Result(code=200, msg=成功, data=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:17,895 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:20,301 - ===========进入拦截器==============
2018-07-04 11:14:20,301 - http://localhost:8081/role.html
2018-07-04 11:14:20,313 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:14:20,313 - ===========请求时间:2018-07-04 11:14:20==========================
2018-07-04 11:14:20,313 - url=http://localhost:8081/role.html
2018-07-04 11:14:20,313 - method=GET
2018-07-04 11:14:20,313 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:20,313 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:14:20,313 - args:
2018-07-04 11:14:20,313 - =============结束请求时间:2018-07-04 11:14:20,耗时:0s======================
2018-07-04 11:14:20,313 - response=/role
2018-07-04 11:14:20,314 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:20,397 - ===========进入拦截器==============
2018-07-04 11:14:20,397 - http://localhost:8081/role/findAllRole
2018-07-04 11:14:20,402 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:14:20,402 - ===========请求时间:2018-07-04 11:14:20==========================
2018-07-04 11:14:20,402 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:14:20,402 - method=GET
2018-07-04 11:14:20,402 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:20,402 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:14:20,402 - args:roleName=,
2018-07-04 11:14:20,410 - =============结束请求时间:2018-07-04 11:14:20,耗时:0s======================
2018-07-04 11:14:20,410 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:20,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:20,417 - ===========进入拦截器==============
2018-07-04 11:14:20,417 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:14:20,422 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:14:20,422 - ===========请求时间:2018-07-04 11:14:20==========================
2018-07-04 11:14:20,422 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:14:20,422 - method=GET
2018-07-04 11:14:20,422 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:20,422 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:14:20,422 - args:
2018-07-04 11:14:20,429 - =============结束请求时间:2018-07-04 11:14:20,耗时:0s======================
2018-07-04 11:14:20,429 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:20,430 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:31,967 - ===========进入拦截器==============
2018-07-04 11:14:31,967 - http://localhost:8081/menu/findChildMenu
2018-07-04 11:14:31,972 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-04 11:14:31,973 - ===========请求时间:2018-07-04 11:14:31==========================
2018-07-04 11:14:31,973 - url=http://localhost:8081/menu/findChildMenu
2018-07-04 11:14:31,973 - method=GET
2018-07-04 11:14:31,973 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:31,973 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-04 11:14:31,973 - args:parentCode=1,
2018-07-04 11:14:31,982 - =============结束请求时间:2018-07-04 11:14:31,耗时:0s======================
2018-07-04 11:14:31,983 - response=Result(code=200, msg=成功, data=[], page=null, totalCount=null)
2018-07-04 11:14:31,983 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:14:59,914 - ===========进入拦截器==============
2018-07-04 11:14:59,914 - http://localhost:8081/project/findAllProject
2018-07-04 11:14:59,921 - ===========开始请求com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject============
2018-07-04 11:14:59,921 - ===========请求时间:2018-07-04 11:14:59==========================
2018-07-04 11:14:59,921 - url=http://localhost:8081/project/findAllProject
2018-07-04 11:14:59,921 - method=GET
2018-07-04 11:14:59,921 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:14:59,921 - class_method=com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject
2018-07-04 11:14:59,921 - args:
2018-07-04 11:14:59,925 - =============结束请求时间:2018-07-04 11:14:59,耗时:0s======================
2018-07-04 11:14:59,925 - response=Result(code=200, msg=成功, data=[Project(gid=1, projectName=WAS后台接口管理, nameEn=WAS-API, version=1, createTime=2018-07-04 09:37:08.0, updateTime=2018-07-04 09:37:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:14:59,927 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:08,433 - ===========进入拦截器==============
2018-07-04 11:15:08,433 - http://localhost:8081/menu/findIconList
2018-07-04 11:15:08,443 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-04 11:15:08,443 - ===========请求时间:2018-07-04 11:15:08==========================
2018-07-04 11:15:08,443 - url=http://localhost:8081/menu/findIconList
2018-07-04 11:15:08,443 - method=GET
2018-07-04 11:15:08,443 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:08,443 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-04 11:15:08,443 - args:
2018-07-04 11:15:08,450 - =============结束请求时间:2018-07-04 11:15:08,耗时:0s======================
2018-07-04 11:15:08,450 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-04 11:15:08,451 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:11,212 - ===========进入拦截器==============
2018-07-04 11:15:11,212 - http://localhost:8081/menu/addMenu
2018-07-04 11:15:11,216 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.addMenu============
2018-07-04 11:15:11,216 - ===========请求时间:2018-07-04 11:15:11==========================
2018-07-04 11:15:11,216 - url=http://localhost:8081/menu/addMenu
2018-07-04 11:15:11,216 - method=GET
2018-07-04 11:15:11,216 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:11,216 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.addMenu
2018-07-04 11:15:11,217 - args:menuName=数字货币管理,url=/number-coin.html,belong=1,icon=,parentCode=1,menuType=0,
2018-07-04 11:15:11,270 - =============结束请求时间:2018-07-04 11:15:11,耗时:0s======================
2018-07-04 11:15:11,271 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-04 11:15:11,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:13,504 - ===========进入拦截器==============
2018-07-04 11:15:13,504 - http://localhost:8081/menu.html
2018-07-04 11:15:13,513 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-04 11:15:13,513 - ===========请求时间:2018-07-04 11:15:13==========================
2018-07-04 11:15:13,513 - url=http://localhost:8081/menu.html
2018-07-04 11:15:13,513 - method=GET
2018-07-04 11:15:13,513 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:13,513 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-04 11:15:13,513 - args:
2018-07-04 11:15:13,513 - =============结束请求时间:2018-07-04 11:15:13,耗时:0s======================
2018-07-04 11:15:13,513 - response=/menu
2018-07-04 11:15:13,514 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:13,601 - ===========进入拦截器==============
2018-07-04 11:15:13,601 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:15:13,627 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:15:13,627 - ===========请求时间:2018-07-04 11:15:13==========================
2018-07-04 11:15:13,627 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:15:13,628 - method=GET
2018-07-04 11:15:13,628 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:13,628 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:15:13,628 - args:
2018-07-04 11:15:13,643 - =============结束请求时间:2018-07-04 11:15:13,耗时:0s======================
2018-07-04 11:15:13,644 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:15:13,650 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:19,484 - ===========进入拦截器==============
2018-07-04 11:15:19,485 - http://localhost:8081/home
2018-07-04 11:15:19,489 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:15:19,489 - ===========请求时间:2018-07-04 11:15:19==========================
2018-07-04 11:15:19,489 - url=http://localhost:8081/home
2018-07-04 11:15:19,489 - method=GET
2018-07-04 11:15:19,489 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:19,489 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:15:19,489 - args:
2018-07-04 11:15:19,489 - =============结束请求时间:2018-07-04 11:15:19,耗时:0s======================
2018-07-04 11:15:19,489 - response=/home
2018-07-04 11:15:19,489 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:19,551 - ===========进入拦截器==============
2018-07-04 11:15:19,551 - http://localhost:8081/welcome
2018-07-04 11:15:19,556 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:15:19,556 - ===========请求时间:2018-07-04 11:15:19==========================
2018-07-04 11:15:19,556 - url=http://localhost:8081/welcome
2018-07-04 11:15:19,556 - method=GET
2018-07-04 11:15:19,556 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:19,556 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:15:19,556 - args:
2018-07-04 11:15:19,556 - =============结束请求时间:2018-07-04 11:15:19,耗时:0s======================
2018-07-04 11:15:19,556 - response=/welcome
2018-07-04 11:15:19,556 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:19,570 - ===========进入拦截器==============
2018-07-04 11:15:19,570 - ===========进入拦截器==============
2018-07-04 11:15:19,570 - ===========进入拦截器==============
2018-07-04 11:15:19,570 - http://localhost:8081/common/left
2018-07-04 11:15:19,570 - http://localhost:8081/common/footer
2018-07-04 11:15:19,570 - http://localhost:8081/common/top
2018-07-04 11:15:19,574 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:15:19,574 - ===========请求时间:2018-07-04 11:15:19==========================
2018-07-04 11:15:19,574 - url=http://localhost:8081/common/footer
2018-07-04 11:15:19,574 - method=GET
2018-07-04 11:15:19,574 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:19,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:15:19,574 - args:
2018-07-04 11:15:19,574 - =============结束请求时间:2018-07-04 11:15:19,耗时:0s======================
2018-07-04 11:15:19,574 - response=/common/footer
2018-07-04 11:15:19,575 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:19,579 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:15:19,579 - ===========请求时间:2018-07-04 11:15:19==========================
2018-07-04 11:15:19,579 - url=http://localhost:8081/common/left
2018-07-04 11:15:19,579 - method=GET
2018-07-04 11:15:19,579 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:19,579 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:15:19,579 - args:
2018-07-04 11:15:19,579 - =============结束请求时间:2018-07-04 11:15:19,耗时:0s======================
2018-07-04 11:15:19,579 - response=/common/left
2018-07-04 11:15:19,579 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:19,582 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:15:19,582 - ===========请求时间:2018-07-04 11:15:19==========================
2018-07-04 11:15:19,582 - url=http://localhost:8081/common/top
2018-07-04 11:15:19,582 - method=GET
2018-07-04 11:15:19,582 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:19,582 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:15:19,582 - args:
2018-07-04 11:15:19,582 - =============结束请求时间:2018-07-04 11:15:19,耗时:0s======================
2018-07-04 11:15:19,582 - response=/common/top
2018-07-04 11:15:19,582 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:21,373 - ===========进入拦截器==============
2018-07-04 11:15:21,373 - http://localhost:8081/role.html
2018-07-04 11:15:21,379 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:15:21,379 - ===========请求时间:2018-07-04 11:15:21==========================
2018-07-04 11:15:21,379 - url=http://localhost:8081/role.html
2018-07-04 11:15:21,379 - method=GET
2018-07-04 11:15:21,379 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:21,379 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:15:21,379 - args:
2018-07-04 11:15:21,379 - =============结束请求时间:2018-07-04 11:15:21,耗时:0s======================
2018-07-04 11:15:21,379 - response=/role
2018-07-04 11:15:21,379 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:21,453 - ===========进入拦截器==============
2018-07-04 11:15:21,453 - http://localhost:8081/role/findAllRole
2018-07-04 11:15:21,459 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:15:21,459 - ===========请求时间:2018-07-04 11:15:21==========================
2018-07-04 11:15:21,459 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:15:21,459 - method=GET
2018-07-04 11:15:21,459 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:21,459 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:15:21,459 - args:roleName=,
2018-07-04 11:15:21,471 - =============结束请求时间:2018-07-04 11:15:21,耗时:0s======================
2018-07-04 11:15:21,471 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:15:21,473 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:15:21,484 - ===========进入拦截器==============
2018-07-04 11:15:21,484 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:15:21,521 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:15:21,521 - ===========请求时间:2018-07-04 11:15:21==========================
2018-07-04 11:15:21,521 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:15:21,521 - method=GET
2018-07-04 11:15:21,521 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:15:21,521 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:15:21,521 - args:
2018-07-04 11:15:21,532 - =============结束请求时间:2018-07-04 11:15:21,耗时:0s======================
2018-07-04 11:15:21,534 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:15:21,537 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:10,326 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14464 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:17:10,329 - No active profile set, falling back to default profiles: default
2018-07-04 11:17:10,508 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:17:10,547 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Wed Jul 04 11:17:10 CST 2018]; root of context hierarchy
2018-07-04 11:17:11,370 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:17:12,527 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:17:12,538 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:17:12,547 - Starting service [Tomcat]
2018-07-04 11:17:12,547 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:17:12,649 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:17:12,650 - Root WebApplicationContext: initialization completed in 2102 ms
2018-07-04 11:17:12,871 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:17:12,877 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:17:12,877 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:17:12,878 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:17:12,878 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:17:12,878 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:17:13,660 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Wed Jul 04 11:17:10 CST 2018]; root of context hierarchy
2018-07-04 11:17:13,724 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:17:13,725 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:17:13,725 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:17:13,725 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:17:13,725 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:17:13,726 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:17:13,726 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:17:13,726 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:17:13,726 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:17:13,726 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:17:13,726 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:17:13,727 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:17:13,727 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:17:13,727 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:17:13,727 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:17:13,727 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:17:13,727 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:17:13,730 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:17:13,730 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:17:13,732 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:17:13,732 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:17:13,733 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:17:13,734 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:17:13,734 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:17:13,734 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:17:13,734 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:17:13,735 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:17:13,735 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:17:13,736 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:17:13,736 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:17:13,736 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:17:13,737 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:17:13,739 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:17:13,739 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:17:13,740 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:17:13,740 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:17:13,740 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:17:13,740 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:17:13,741 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:17:13,741 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:17:13,741 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:17:13,741 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:17:13,742 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:17:13,742 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:17:13,742 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:17:13,743 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:17:13,744 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:17:13,789 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:17:13,789 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:17:13,808 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:17:13,834 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:17:14,480 - LiveReload server is running on port 35729
2018-07-04 11:17:14,616 - Registering beans for JMX exposure on startup
2018-07-04 11:17:14,617 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:17:14,621 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:17:14,630 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:17:14,641 - Using a shared selector for servlet write/read
2018-07-04 11:17:14,652 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:17:14,657 - Started FqLtdWasBackstageApplication in 5.048 seconds (JVM running for 6.329)
2018-07-04 11:17:17,841 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:17:17,841 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:17:17,880 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 11:17:17,895 - ===========进入拦截器==============
2018-07-04 11:17:17,917 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:17:17,917 - ===========请求时间:2018-07-04 11:17:17==========================
2018-07-04 11:17:17,917 - url=http://localhost:8081/login
2018-07-04 11:17:17,917 - method=GET
2018-07-04 11:17:17,917 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:17,917 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:17:17,917 - args:
2018-07-04 11:17:17,923 - =============结束请求时间:2018-07-04 11:17:17,耗时:0s======================
2018-07-04 11:17:17,923 - response=/login
2018-07-04 11:17:17,959 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:17:17,994 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:17:17,994 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:17:17,994 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:17:17,994 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:17:17,997 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:17:17,997 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:17:22,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:17:22,565 - ===========请求时间:2018-07-04 11:17:22==========================
2018-07-04 11:17:22,565 - url=http://localhost:8081/signIn
2018-07-04 11:17:22,565 - method=POST
2018-07-04 11:17:22,565 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:22,566 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:17:22,566 - args:userName=admin,password=123456,
2018-07-04 11:17:22,621 - {dataSource-1} inited
2018-07-04 11:17:22,958 - =============结束请求时间:2018-07-04 11:17:22,耗时:0s======================
2018-07-04 11:17:22,958 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:17:22, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:17:23,023 - ===========进入拦截器==============
2018-07-04 11:17:23,023 - http://localhost:8081/home
2018-07-04 11:17:23,031 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:17:23,031 - ===========请求时间:2018-07-04 11:17:23==========================
2018-07-04 11:17:23,031 - url=http://localhost:8081/home
2018-07-04 11:17:23,031 - method=GET
2018-07-04 11:17:23,031 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:23,031 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:17:23,031 - args:
2018-07-04 11:17:23,032 - =============结束请求时间:2018-07-04 11:17:23,耗时:0s======================
2018-07-04 11:17:23,032 - response=/home
2018-07-04 11:17:23,032 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:23,126 - ===========进入拦截器==============
2018-07-04 11:17:23,126 - http://localhost:8081/welcome
2018-07-04 11:17:23,131 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:17:23,131 - ===========请求时间:2018-07-04 11:17:23==========================
2018-07-04 11:17:23,131 - url=http://localhost:8081/welcome
2018-07-04 11:17:23,131 - method=GET
2018-07-04 11:17:23,131 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:23,131 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:17:23,131 - args:
2018-07-04 11:17:23,132 - =============结束请求时间:2018-07-04 11:17:23,耗时:0s======================
2018-07-04 11:17:23,132 - response=/welcome
2018-07-04 11:17:23,132 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:23,160 - ===========进入拦截器==============
2018-07-04 11:17:23,160 - http://localhost:8081/common/top
2018-07-04 11:17:23,162 - ===========进入拦截器==============
2018-07-04 11:17:23,162 - http://localhost:8081/common/footer
2018-07-04 11:17:23,163 - ===========进入拦截器==============
2018-07-04 11:17:23,163 - http://localhost:8081/common/left
2018-07-04 11:17:23,166 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:17:23,166 - ===========请求时间:2018-07-04 11:17:23==========================
2018-07-04 11:17:23,166 - url=http://localhost:8081/common/top
2018-07-04 11:17:23,166 - method=GET
2018-07-04 11:17:23,166 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:23,166 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:17:23,166 - args:
2018-07-04 11:17:23,167 - =============结束请求时间:2018-07-04 11:17:23,耗时:0s======================
2018-07-04 11:17:23,167 - response=/common/top
2018-07-04 11:17:23,167 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:23,180 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:17:23,180 - ===========请求时间:2018-07-04 11:17:23==========================
2018-07-04 11:17:23,180 - url=http://localhost:8081/common/footer
2018-07-04 11:17:23,180 - method=GET
2018-07-04 11:17:23,180 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:23,180 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:17:23,180 - args:
2018-07-04 11:17:23,180 - =============结束请求时间:2018-07-04 11:17:23,耗时:0s======================
2018-07-04 11:17:23,180 - response=/common/footer
2018-07-04 11:17:23,181 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:23,187 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:17:23,187 - ===========请求时间:2018-07-04 11:17:23==========================
2018-07-04 11:17:23,187 - url=http://localhost:8081/common/left
2018-07-04 11:17:23,187 - method=GET
2018-07-04 11:17:23,187 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:23,187 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:17:23,187 - args:
2018-07-04 11:17:23,188 - =============结束请求时间:2018-07-04 11:17:23,耗时:0s======================
2018-07-04 11:17:23,188 - response=/common/left
2018-07-04 11:17:23,188 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:24,566 - ===========进入拦截器==============
2018-07-04 11:17:24,566 - http://localhost:8081/role.html
2018-07-04 11:17:24,578 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:17:24,578 - ===========请求时间:2018-07-04 11:17:24==========================
2018-07-04 11:17:24,578 - url=http://localhost:8081/role.html
2018-07-04 11:17:24,578 - method=GET
2018-07-04 11:17:24,578 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:24,578 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:17:24,578 - args:
2018-07-04 11:17:24,578 - =============结束请求时间:2018-07-04 11:17:24,耗时:0s======================
2018-07-04 11:17:24,578 - response=/role
2018-07-04 11:17:24,578 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:24,701 - ===========进入拦截器==============
2018-07-04 11:17:24,702 - http://localhost:8081/role/findAllRole
2018-07-04 11:17:24,707 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:17:24,707 - ===========请求时间:2018-07-04 11:17:24==========================
2018-07-04 11:17:24,707 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:17:24,707 - method=GET
2018-07-04 11:17:24,707 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:24,707 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:17:24,707 - args:roleName=,
2018-07-04 11:17:24,715 - =============结束请求时间:2018-07-04 11:17:24,耗时:0s======================
2018-07-04 11:17:24,715 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:17:24,720 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:17:24,730 - ===========进入拦截器==============
2018-07-04 11:17:24,730 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:17:24,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:17:24,736 - ===========请求时间:2018-07-04 11:17:24==========================
2018-07-04 11:17:24,736 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:17:24,736 - method=GET
2018-07-04 11:17:24,736 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:17:24,736 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:17:24,736 - args:
2018-07-04 11:17:24,763 - =============结束请求时间:2018-07-04 11:17:24,耗时:0s======================
2018-07-04 11:17:24,764 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:17:24,774 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:33,929 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7448 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:18:33,932 - No active profile set, falling back to default profiles: default
2018-07-04 11:18:34,069 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:18:34,123 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ef51b11: startup date [Wed Jul 04 11:18:34 CST 2018]; root of context hierarchy
2018-07-04 11:18:34,834 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:18:35,745 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:18:35,761 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:18:35,770 - Starting service [Tomcat]
2018-07-04 11:18:35,770 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:18:35,895 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:18:35,895 - Root WebApplicationContext: initialization completed in 1772 ms
2018-07-04 11:18:36,099 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:18:36,103 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:18:36,104 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:18:36,104 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:18:36,104 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:18:36,104 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:18:36,835 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1ef51b11: startup date [Wed Jul 04 11:18:34 CST 2018]; root of context hierarchy
2018-07-04 11:18:36,897 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:18:36,898 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:18:36,898 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:18:36,898 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:18:36,898 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:18:36,898 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:18:36,899 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:18:36,899 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:18:36,899 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:18:36,899 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:18:36,899 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:18:36,899 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:18:36,899 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:18:36,899 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:18:36,900 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:18:36,900 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:18:36,900 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:18:36,902 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:18:36,903 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:18:36,905 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:18:36,905 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:18:36,905 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:18:36,905 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:18:36,906 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:18:36,906 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:18:36,906 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:18:36,906 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:18:36,906 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:18:36,907 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:18:36,907 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:18:36,907 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:18:36,908 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:18:36,909 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:18:36,909 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:18:36,909 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:18:36,909 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:18:36,909 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:18:36,910 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:18:36,911 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:18:36,911 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:18:36,911 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:18:36,911 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:18:36,911 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:18:36,912 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:18:36,912 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:18:36,913 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:18:36,914 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:18:36,963 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:18:36,963 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:18:36,983 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:18:37,008 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:18:37,577 - LiveReload server is running on port 35729
2018-07-04 11:18:37,699 - Registering beans for JMX exposure on startup
2018-07-04 11:18:37,700 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:18:37,706 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:18:37,715 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:18:37,726 - Using a shared selector for servlet write/read
2018-07-04 11:18:37,741 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:18:37,745 - Started FqLtdWasBackstageApplication in 4.542 seconds (JVM running for 5.553)
2018-07-04 11:18:44,354 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:18:44,355 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:18:44,393 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 11:18:44,406 - ===========进入拦截器==============
2018-07-04 11:18:44,426 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:18:44,426 - ===========请求时间:2018-07-04 11:18:44==========================
2018-07-04 11:18:44,427 - url=http://localhost:8081/login
2018-07-04 11:18:44,427 - method=GET
2018-07-04 11:18:44,427 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:44,427 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:18:44,427 - args:
2018-07-04 11:18:44,430 - =============结束请求时间:2018-07-04 11:18:44,耗时:0s======================
2018-07-04 11:18:44,430 - response=/login
2018-07-04 11:18:44,455 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:18:44,491 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:18:44,491 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:18:44,491 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:18:44,491 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:18:44,494 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:18:44,494 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:18:51,292 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:18:51,292 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,292 - url=http://localhost:8081/signIn
2018-07-04 11:18:51,292 - method=POST
2018-07-04 11:18:51,292 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,292 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:18:51,292 - args:userName=admin,password=123456,
2018-07-04 11:18:51,346 - {dataSource-1} inited
2018-07-04 11:18:51,710 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,711 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:18:51, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:18:51,778 - ===========进入拦截器==============
2018-07-04 11:18:51,779 - http://localhost:8081/home
2018-07-04 11:18:51,787 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:18:51,787 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,787 - url=http://localhost:8081/home
2018-07-04 11:18:51,787 - method=GET
2018-07-04 11:18:51,787 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,787 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:18:51,787 - args:
2018-07-04 11:18:51,788 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,788 - response=/home
2018-07-04 11:18:51,788 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:51,890 - ===========进入拦截器==============
2018-07-04 11:18:51,891 - http://localhost:8081/welcome
2018-07-04 11:18:51,896 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:18:51,896 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,896 - url=http://localhost:8081/welcome
2018-07-04 11:18:51,896 - method=GET
2018-07-04 11:18:51,896 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,896 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:18:51,896 - args:
2018-07-04 11:18:51,897 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,897 - response=/welcome
2018-07-04 11:18:51,897 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:51,932 - ===========进入拦截器==============
2018-07-04 11:18:51,932 - http://localhost:8081/common/top
2018-07-04 11:18:51,933 - ===========进入拦截器==============
2018-07-04 11:18:51,933 - http://localhost:8081/common/left
2018-07-04 11:18:51,934 - ===========进入拦截器==============
2018-07-04 11:18:51,934 - http://localhost:8081/common/footer
2018-07-04 11:18:51,937 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:18:51,937 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,937 - url=http://localhost:8081/common/top
2018-07-04 11:18:51,937 - method=GET
2018-07-04 11:18:51,937 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,937 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:18:51,937 - args:
2018-07-04 11:18:51,937 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,937 - response=/common/top
2018-07-04 11:18:51,938 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:51,942 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:18:51,942 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,943 - url=http://localhost:8081/common/left
2018-07-04 11:18:51,943 - method=GET
2018-07-04 11:18:51,943 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,943 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:18:51,943 - args:
2018-07-04 11:18:51,943 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,943 - response=/common/left
2018-07-04 11:18:51,943 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:51,946 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:18:51,946 - ===========请求时间:2018-07-04 11:18:51==========================
2018-07-04 11:18:51,946 - url=http://localhost:8081/common/footer
2018-07-04 11:18:51,946 - method=GET
2018-07-04 11:18:51,946 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:51,947 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:18:51,947 - args:
2018-07-04 11:18:51,947 - =============结束请求时间:2018-07-04 11:18:51,耗时:0s======================
2018-07-04 11:18:51,947 - response=/common/footer
2018-07-04 11:18:51,947 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:53,525 - ===========进入拦截器==============
2018-07-04 11:18:53,525 - http://localhost:8081/role.html
2018-07-04 11:18:53,532 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:18:53,532 - ===========请求时间:2018-07-04 11:18:53==========================
2018-07-04 11:18:53,532 - url=http://localhost:8081/role.html
2018-07-04 11:18:53,532 - method=GET
2018-07-04 11:18:53,532 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:53,532 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:18:53,532 - args:
2018-07-04 11:18:53,532 - =============结束请求时间:2018-07-04 11:18:53,耗时:0s======================
2018-07-04 11:18:53,532 - response=/role
2018-07-04 11:18:53,532 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:53,647 - ===========进入拦截器==============
2018-07-04 11:18:53,647 - http://localhost:8081/role/findAllRole
2018-07-04 11:18:53,651 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:18:53,651 - ===========请求时间:2018-07-04 11:18:53==========================
2018-07-04 11:18:53,651 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:18:53,651 - method=GET
2018-07-04 11:18:53,651 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:53,651 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:18:53,651 - args:roleName=,
2018-07-04 11:18:53,663 - =============结束请求时间:2018-07-04 11:18:53,耗时:0s======================
2018-07-04 11:18:53,663 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:18:53,667 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:18:53,679 - ===========进入拦截器==============
2018-07-04 11:18:53,679 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:18:53,684 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:18:53,685 - ===========请求时间:2018-07-04 11:18:53==========================
2018-07-04 11:18:53,685 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:18:53,685 - method=GET
2018-07-04 11:18:53,685 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:18:53,685 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:18:53,685 - args:
2018-07-04 11:18:53,699 - =============结束请求时间:2018-07-04 11:18:53,耗时:0s======================
2018-07-04 11:18:53,700 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:18:53,704 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:35,125 - ===========进入拦截器==============
2018-07-04 11:22:35,126 - http://localhost:8081/home
2018-07-04 11:22:35,142 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:22:35,142 - ===========请求时间:2018-07-04 11:22:35==========================
2018-07-04 11:22:35,143 - url=http://localhost:8081/home
2018-07-04 11:22:35,143 - method=GET
2018-07-04 11:22:35,143 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:35,143 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:22:35,143 - args:
2018-07-04 11:22:35,143 - =============结束请求时间:2018-07-04 11:22:35,耗时:0s======================
2018-07-04 11:22:35,143 - response=/home
2018-07-04 11:22:35,143 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:35,250 - ===========进入拦截器==============
2018-07-04 11:22:35,250 - http://localhost:8081/welcome
2018-07-04 11:22:35,264 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:22:35,265 - ===========请求时间:2018-07-04 11:22:35==========================
2018-07-04 11:22:35,265 - url=http://localhost:8081/welcome
2018-07-04 11:22:35,265 - method=GET
2018-07-04 11:22:35,265 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:35,265 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:22:35,265 - args:
2018-07-04 11:22:35,265 - =============结束请求时间:2018-07-04 11:22:35,耗时:0s======================
2018-07-04 11:22:35,265 - response=/welcome
2018-07-04 11:22:35,265 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:35,284 - ===========进入拦截器==============
2018-07-04 11:22:35,284 - http://localhost:8081/common/top
2018-07-04 11:22:35,286 - ===========进入拦截器==============
2018-07-04 11:22:35,286 - http://localhost:8081/common/left
2018-07-04 11:22:35,287 - ===========进入拦截器==============
2018-07-04 11:22:35,287 - http://localhost:8081/common/footer
2018-07-04 11:22:35,289 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:22:35,289 - ===========请求时间:2018-07-04 11:22:35==========================
2018-07-04 11:22:35,289 - url=http://localhost:8081/common/top
2018-07-04 11:22:35,289 - method=GET
2018-07-04 11:22:35,289 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:35,289 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:22:35,289 - args:
2018-07-04 11:22:35,289 - =============结束请求时间:2018-07-04 11:22:35,耗时:0s======================
2018-07-04 11:22:35,289 - response=/common/top
2018-07-04 11:22:35,290 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:35,298 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:22:35,298 - ===========请求时间:2018-07-04 11:22:35==========================
2018-07-04 11:22:35,298 - url=http://localhost:8081/common/footer
2018-07-04 11:22:35,298 - method=GET
2018-07-04 11:22:35,298 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:35,298 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:22:35,298 - args:
2018-07-04 11:22:35,298 - =============结束请求时间:2018-07-04 11:22:35,耗时:0s======================
2018-07-04 11:22:35,298 - response=/common/footer
2018-07-04 11:22:35,298 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:35,300 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:22:35,300 - ===========请求时间:2018-07-04 11:22:35==========================
2018-07-04 11:22:35,300 - url=http://localhost:8081/common/left
2018-07-04 11:22:35,300 - method=GET
2018-07-04 11:22:35,300 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:35,300 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:22:35,300 - args:
2018-07-04 11:22:35,300 - =============结束请求时间:2018-07-04 11:22:35,耗时:0s======================
2018-07-04 11:22:35,300 - response=/common/left
2018-07-04 11:22:35,301 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:36,354 - ===========进入拦截器==============
2018-07-04 11:22:36,354 - http://localhost:8081/home
2018-07-04 11:22:36,364 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:22:36,364 - ===========请求时间:2018-07-04 11:22:36==========================
2018-07-04 11:22:36,364 - url=http://localhost:8081/home
2018-07-04 11:22:36,364 - method=GET
2018-07-04 11:22:36,364 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:36,364 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:22:36,365 - args:
2018-07-04 11:22:36,366 - =============结束请求时间:2018-07-04 11:22:36,耗时:0s======================
2018-07-04 11:22:36,366 - response=/home
2018-07-04 11:22:36,367 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:36,465 - ===========进入拦截器==============
2018-07-04 11:22:36,465 - http://localhost:8081/welcome
2018-07-04 11:22:36,470 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:22:36,470 - ===========请求时间:2018-07-04 11:22:36==========================
2018-07-04 11:22:36,470 - url=http://localhost:8081/welcome
2018-07-04 11:22:36,470 - method=GET
2018-07-04 11:22:36,470 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:36,470 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:22:36,470 - args:
2018-07-04 11:22:36,470 - =============结束请求时间:2018-07-04 11:22:36,耗时:0s======================
2018-07-04 11:22:36,470 - response=/welcome
2018-07-04 11:22:36,470 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:36,500 - ===========进入拦截器==============
2018-07-04 11:22:36,500 - http://localhost:8081/common/top
2018-07-04 11:22:36,500 - ===========进入拦截器==============
2018-07-04 11:22:36,500 - ===========进入拦截器==============
2018-07-04 11:22:36,500 - http://localhost:8081/common/left
2018-07-04 11:22:36,500 - http://localhost:8081/common/footer
2018-07-04 11:22:36,507 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:22:36,508 - ===========请求时间:2018-07-04 11:22:36==========================
2018-07-04 11:22:36,508 - url=http://localhost:8081/common/top
2018-07-04 11:22:36,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:22:36,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:22:36,508 - method=GET
2018-07-04 11:22:36,508 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:36,508 - ===========请求时间:2018-07-04 11:22:36==========================
2018-07-04 11:22:36,508 - ===========请求时间:2018-07-04 11:22:36==========================
2018-07-04 11:22:36,508 - url=http://localhost:8081/common/left
2018-07-04 11:22:36,508 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:22:36,508 - url=http://localhost:8081/common/footer
2018-07-04 11:22:36,508 - method=GET
2018-07-04 11:22:36,508 - method=GET
2018-07-04 11:22:36,508 - args:
2018-07-04 11:22:36,508 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:36,508 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:36,508 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:22:36,508 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:22:36,508 - args:
2018-07-04 11:22:36,508 - =============结束请求时间:2018-07-04 11:22:36,耗时:0s======================
2018-07-04 11:22:36,508 - args:
2018-07-04 11:22:36,508 - response=/common/top
2018-07-04 11:22:36,508 - =============结束请求时间:2018-07-04 11:22:36,耗时:0s======================
2018-07-04 11:22:36,508 - response=/common/left
2018-07-04 11:22:36,508 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:36,508 - =============结束请求时间:2018-07-04 11:22:36,耗时:0s======================
2018-07-04 11:22:36,508 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:36,508 - response=/common/footer
2018-07-04 11:22:36,509 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:44,976 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16184 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:22:44,979 - No active profile set, falling back to default profiles: default
2018-07-04 11:22:45,170 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:22:45,230 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@715d8f9c: startup date [Wed Jul 04 11:22:45 CST 2018]; root of context hierarchy
2018-07-04 11:22:45,988 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:22:47,000 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:22:47,012 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:22:47,020 - Starting service [Tomcat]
2018-07-04 11:22:47,020 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:22:47,117 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:22:47,117 - Root WebApplicationContext: initialization completed in 1887 ms
2018-07-04 11:22:47,321 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:22:47,327 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:22:47,328 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:22:47,328 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:22:47,328 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:22:47,328 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:22:48,129 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@715d8f9c: startup date [Wed Jul 04 11:22:45 CST 2018]; root of context hierarchy
2018-07-04 11:22:48,191 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:22:48,192 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:22:48,193 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:22:48,193 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:22:48,193 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:22:48,193 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:22:48,193 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:22:48,193 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:22:48,193 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:22:48,193 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:22:48,193 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:22:48,194 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:22:48,194 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:22:48,194 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:22:48,194 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:22:48,194 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:22:48,195 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:22:48,197 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:22:48,198 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:22:48,200 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:22:48,200 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:22:48,201 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:22:48,201 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:22:48,201 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:22:48,201 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:22:48,201 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:22:48,202 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:22:48,202 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:22:48,203 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:22:48,204 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:22:48,204 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:22:48,204 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:22:48,206 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:22:48,206 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:22:48,206 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:22:48,206 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:22:48,206 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:22:48,207 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:22:48,208 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:22:48,208 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:22:48,208 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:22:48,208 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:22:48,208 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:22:48,209 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:22:48,209 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:22:48,210 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:22:48,210 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:22:48,254 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:22:48,254 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:22:48,273 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:22:48,299 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:22:48,909 - LiveReload server is running on port 35729
2018-07-04 11:22:49,035 - Registering beans for JMX exposure on startup
2018-07-04 11:22:49,037 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:22:49,042 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:22:49,051 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:22:49,061 - Using a shared selector for servlet write/read
2018-07-04 11:22:49,073 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:22:49,078 - Started FqLtdWasBackstageApplication in 4.848 seconds (JVM running for 5.891)
2018-07-04 11:22:53,364 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:22:53,364 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:22:53,402 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 11:22:53,418 - ===========进入拦截器==============
2018-07-04 11:22:53,441 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:22:53,441 - ===========请求时间:2018-07-04 11:22:53==========================
2018-07-04 11:22:53,441 - url=http://localhost:8081/login
2018-07-04 11:22:53,441 - method=GET
2018-07-04 11:22:53,441 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:53,441 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:22:53,441 - args:
2018-07-04 11:22:53,444 - =============结束请求时间:2018-07-04 11:22:53,耗时:0s======================
2018-07-04 11:22:53,444 - response=/login
2018-07-04 11:22:53,474 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:22:53,521 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:22:53,522 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:22:53,522 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:22:53,522 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:22:53,527 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:22:53,527 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:22:58,012 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:22:58,012 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,012 - url=http://localhost:8081/signIn
2018-07-04 11:22:58,012 - method=POST
2018-07-04 11:22:58,012 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,012 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:22:58,012 - args:userName=admin,password=123456,
2018-07-04 11:22:58,064 - {dataSource-1} inited
2018-07-04 11:22:58,396 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,397 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:22:58, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:22:58,463 - ===========进入拦截器==============
2018-07-04 11:22:58,463 - http://localhost:8081/home
2018-07-04 11:22:58,475 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:22:58,475 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,475 - url=http://localhost:8081/home
2018-07-04 11:22:58,475 - method=GET
2018-07-04 11:22:58,475 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,475 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:22:58,475 - args:
2018-07-04 11:22:58,475 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,475 - response=/home
2018-07-04 11:22:58,475 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:58,575 - ===========进入拦截器==============
2018-07-04 11:22:58,575 - http://localhost:8081/welcome
2018-07-04 11:22:58,582 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:22:58,582 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,582 - url=http://localhost:8081/welcome
2018-07-04 11:22:58,582 - method=GET
2018-07-04 11:22:58,582 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,582 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:22:58,582 - args:
2018-07-04 11:22:58,582 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,582 - response=/welcome
2018-07-04 11:22:58,583 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:58,617 - ===========进入拦截器==============
2018-07-04 11:22:58,617 - http://localhost:8081/common/top
2018-07-04 11:22:58,618 - ===========进入拦截器==============
2018-07-04 11:22:58,618 - http://localhost:8081/common/left
2018-07-04 11:22:58,621 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:22:58,621 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,621 - url=http://localhost:8081/common/top
2018-07-04 11:22:58,621 - method=GET
2018-07-04 11:22:58,622 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,622 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:22:58,622 - args:
2018-07-04 11:22:58,622 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,622 - response=/common/top
2018-07-04 11:22:58,622 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:58,623 - ===========进入拦截器==============
2018-07-04 11:22:58,623 - http://localhost:8081/common/footer
2018-07-04 11:22:58,627 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:22:58,628 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,628 - url=http://localhost:8081/common/left
2018-07-04 11:22:58,628 - method=GET
2018-07-04 11:22:58,628 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,628 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:22:58,628 - args:
2018-07-04 11:22:58,628 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,628 - response=/common/left
2018-07-04 11:22:58,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:22:58,637 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:22:58,637 - ===========请求时间:2018-07-04 11:22:58==========================
2018-07-04 11:22:58,637 - url=http://localhost:8081/common/footer
2018-07-04 11:22:58,637 - method=GET
2018-07-04 11:22:58,637 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:22:58,638 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:22:58,638 - args:
2018-07-04 11:22:58,638 - =============结束请求时间:2018-07-04 11:22:58,耗时:0s======================
2018-07-04 11:22:58,638 - response=/common/footer
2018-07-04 11:22:58,638 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:00,469 - ===========进入拦截器==============
2018-07-04 11:23:00,469 - http://localhost:8081/role.html
2018-07-04 11:23:00,475 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:23:00,475 - ===========请求时间:2018-07-04 11:23:00==========================
2018-07-04 11:23:00,475 - url=http://localhost:8081/role.html
2018-07-04 11:23:00,475 - method=GET
2018-07-04 11:23:00,475 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:00,476 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:23:00,476 - args:
2018-07-04 11:23:00,476 - =============结束请求时间:2018-07-04 11:23:00,耗时:0s======================
2018-07-04 11:23:00,476 - response=/role
2018-07-04 11:23:00,476 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:00,600 - ===========进入拦截器==============
2018-07-04 11:23:00,600 - http://localhost:8081/role/findAllRole
2018-07-04 11:23:00,609 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:23:00,610 - ===========请求时间:2018-07-04 11:23:00==========================
2018-07-04 11:23:00,610 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:23:00,611 - method=GET
2018-07-04 11:23:00,611 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:00,611 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:23:00,611 - args:roleName=,
2018-07-04 11:23:00,626 - =============结束请求时间:2018-07-04 11:23:00,耗时:0s======================
2018-07-04 11:23:00,626 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:23:00,633 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:00,645 - ===========进入拦截器==============
2018-07-04 11:23:00,646 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:23:00,651 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:23:00,652 - ===========请求时间:2018-07-04 11:23:00==========================
2018-07-04 11:23:00,652 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:23:00,652 - method=GET
2018-07-04 11:23:00,652 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:00,652 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:23:00,652 - args:
2018-07-04 11:23:00,669 - =============结束请求时间:2018-07-04 11:23:00,耗时:0s======================
2018-07-04 11:23:00,670 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:23:00,674 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:33,892 - ===========进入拦截器==============
2018-07-04 11:23:33,892 - http://localhost:8081/home
2018-07-04 11:23:33,897 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:23:33,897 - ===========请求时间:2018-07-04 11:23:33==========================
2018-07-04 11:23:33,897 - url=http://localhost:8081/home
2018-07-04 11:23:33,897 - method=GET
2018-07-04 11:23:33,897 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:33,897 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:23:33,897 - args:
2018-07-04 11:23:33,897 - =============结束请求时间:2018-07-04 11:23:33,耗时:0s======================
2018-07-04 11:23:33,897 - response=/home
2018-07-04 11:23:33,897 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:33,998 - ===========进入拦截器==============
2018-07-04 11:23:33,998 - http://localhost:8081/welcome
2018-07-04 11:23:34,004 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:23:34,004 - ===========请求时间:2018-07-04 11:23:34==========================
2018-07-04 11:23:34,004 - url=http://localhost:8081/welcome
2018-07-04 11:23:34,004 - method=GET
2018-07-04 11:23:34,004 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:34,004 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:23:34,004 - args:
2018-07-04 11:23:34,004 - =============结束请求时间:2018-07-04 11:23:34,耗时:0s======================
2018-07-04 11:23:34,005 - response=/welcome
2018-07-04 11:23:34,005 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:34,036 - ===========进入拦截器==============
2018-07-04 11:23:34,037 - http://localhost:8081/common/top
2018-07-04 11:23:34,037 - ===========进入拦截器==============
2018-07-04 11:23:34,037 - http://localhost:8081/common/left
2018-07-04 11:23:34,039 - ===========进入拦截器==============
2018-07-04 11:23:34,039 - http://localhost:8081/common/footer
2018-07-04 11:23:34,045 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:23:34,045 - ===========请求时间:2018-07-04 11:23:34==========================
2018-07-04 11:23:34,045 - url=http://localhost:8081/common/left
2018-07-04 11:23:34,045 - method=GET
2018-07-04 11:23:34,045 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:34,045 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:23:34,045 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:23:34,045 - args:
2018-07-04 11:23:34,046 - =============结束请求时间:2018-07-04 11:23:34,耗时:0s======================
2018-07-04 11:23:34,046 - ===========请求时间:2018-07-04 11:23:34==========================
2018-07-04 11:23:34,046 - response=/common/left
2018-07-04 11:23:34,046 - url=http://localhost:8081/common/top
2018-07-04 11:23:34,046 - method=GET
2018-07-04 11:23:34,046 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:34,046 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:23:34,046 - args:
2018-07-04 11:23:34,046 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:34,046 - =============结束请求时间:2018-07-04 11:23:34,耗时:0s======================
2018-07-04 11:23:34,046 - response=/common/top
2018-07-04 11:23:34,046 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:34,051 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:23:34,052 - ===========请求时间:2018-07-04 11:23:34==========================
2018-07-04 11:23:34,052 - url=http://localhost:8081/common/footer
2018-07-04 11:23:34,052 - method=GET
2018-07-04 11:23:34,052 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:34,052 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:23:34,052 - args:
2018-07-04 11:23:34,052 - =============结束请求时间:2018-07-04 11:23:34,耗时:0s======================
2018-07-04 11:23:34,052 - response=/common/footer
2018-07-04 11:23:34,052 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:35,699 - ===========进入拦截器==============
2018-07-04 11:23:35,700 - http://localhost:8081/role.html
2018-07-04 11:23:35,719 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:23:35,719 - ===========请求时间:2018-07-04 11:23:35==========================
2018-07-04 11:23:35,719 - url=http://localhost:8081/role.html
2018-07-04 11:23:35,719 - method=GET
2018-07-04 11:23:35,719 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:35,719 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:23:35,719 - args:
2018-07-04 11:23:35,720 - =============结束请求时间:2018-07-04 11:23:35,耗时:0s======================
2018-07-04 11:23:35,720 - response=/role
2018-07-04 11:23:35,720 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:35,842 - ===========进入拦截器==============
2018-07-04 11:23:35,842 - http://localhost:8081/role/findAllRole
2018-07-04 11:23:35,846 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:23:35,846 - ===========请求时间:2018-07-04 11:23:35==========================
2018-07-04 11:23:35,847 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:23:35,847 - method=GET
2018-07-04 11:23:35,847 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:35,847 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:23:35,847 - args:roleName=,
2018-07-04 11:23:35,853 - =============结束请求时间:2018-07-04 11:23:35,耗时:0s======================
2018-07-04 11:23:35,853 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:23:35,854 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:23:35,864 - ===========进入拦截器==============
2018-07-04 11:23:35,864 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:23:35,868 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:23:35,868 - ===========请求时间:2018-07-04 11:23:35==========================
2018-07-04 11:23:35,868 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:23:35,868 - method=GET
2018-07-04 11:23:35,868 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:23:35,868 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:23:35,868 - args:
2018-07-04 11:23:35,878 - =============结束请求时间:2018-07-04 11:23:35,耗时:0s======================
2018-07-04 11:23:35,878 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:23:35,881 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:19,418 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 920 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:25:19,421 - No active profile set, falling back to default profiles: default
2018-07-04 11:25:19,652 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:25:19,713 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f853d3: startup date [Wed Jul 04 11:25:19 CST 2018]; root of context hierarchy
2018-07-04 11:25:20,504 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:25:21,459 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:25:21,473 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:25:21,485 - Starting service [Tomcat]
2018-07-04 11:25:21,485 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:25:21,607 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:25:21,608 - Root WebApplicationContext: initialization completed in 1895 ms
2018-07-04 11:25:21,844 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:25:21,849 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:25:21,850 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:25:21,850 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:25:21,850 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:25:21,850 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:25:22,617 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f853d3: startup date [Wed Jul 04 11:25:19 CST 2018]; root of context hierarchy
2018-07-04 11:25:22,679 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:25:22,680 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:25:22,680 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:25:22,680 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:25:22,680 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:25:22,680 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:25:22,680 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:25:22,681 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:25:22,681 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:25:22,681 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:25:22,681 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:25:22,681 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:25:22,681 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:25:22,681 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:25:22,682 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:25:22,682 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:25:22,682 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:25:22,684 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:25:22,684 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:25:22,686 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:25:22,686 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:25:22,686 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:25:22,686 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:25:22,687 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:25:22,687 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:25:22,687 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:25:22,687 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:25:22,687 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:25:22,688 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:25:22,688 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:25:22,688 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:25:22,689 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:25:22,690 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:25:22,690 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:25:22,690 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:25:22,690 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:25:22,690 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:25:22,691 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:25:22,692 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:25:22,693 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:25:22,693 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:25:22,693 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:25:22,693 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:25:22,693 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:25:22,693 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:25:22,695 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:25:22,695 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:25:22,737 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:25:22,737 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:25:22,755 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:25:22,780 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:25:23,380 - LiveReload server is running on port 35729
2018-07-04 11:25:23,501 - Registering beans for JMX exposure on startup
2018-07-04 11:25:23,502 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:25:23,507 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:25:23,515 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:25:23,526 - Using a shared selector for servlet write/read
2018-07-04 11:25:23,538 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:25:23,542 - Started FqLtdWasBackstageApplication in 4.927 seconds (JVM running for 5.926)
2018-07-04 11:25:26,626 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:25:26,626 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:25:26,664 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 11:25:26,680 - ===========进入拦截器==============
2018-07-04 11:25:26,700 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:25:26,700 - ===========请求时间:2018-07-04 11:25:26==========================
2018-07-04 11:25:26,701 - url=http://localhost:8081/login
2018-07-04 11:25:26,701 - method=GET
2018-07-04 11:25:26,701 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:26,701 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:25:26,701 - args:
2018-07-04 11:25:26,704 - =============结束请求时间:2018-07-04 11:25:26,耗时:0s======================
2018-07-04 11:25:26,704 - response=/login
2018-07-04 11:25:26,732 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:25:26,766 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:25:26,766 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:25:26,766 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:25:26,766 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:25:26,770 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:25:26,770 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:25:26,983 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:25:26,983 - ===========请求时间:2018-07-04 11:25:26==========================
2018-07-04 11:25:26,983 - url=http://localhost:8081/login
2018-07-04 11:25:26,983 - method=GET
2018-07-04 11:25:26,983 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:26,983 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:25:26,983 - args:
2018-07-04 11:25:26,983 - =============结束请求时间:2018-07-04 11:25:26,耗时:0s======================
2018-07-04 11:25:26,983 - response=/login
2018-07-04 11:25:31,199 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:25:31,200 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,200 - url=http://localhost:8081/signIn
2018-07-04 11:25:31,200 - method=POST
2018-07-04 11:25:31,200 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,200 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:25:31,200 - args:userName=admin,password=123456,
2018-07-04 11:25:31,258 - {dataSource-1} inited
2018-07-04 11:25:31,620 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,620 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:25:31, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:25:31,689 - ===========进入拦截器==============
2018-07-04 11:25:31,690 - http://localhost:8081/home
2018-07-04 11:25:31,698 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:25:31,698 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,698 - url=http://localhost:8081/home
2018-07-04 11:25:31,698 - method=GET
2018-07-04 11:25:31,698 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,699 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:25:31,699 - args:
2018-07-04 11:25:31,699 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,699 - response=/home
2018-07-04 11:25:31,699 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:31,797 - ===========进入拦截器==============
2018-07-04 11:25:31,797 - http://localhost:8081/welcome
2018-07-04 11:25:31,802 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:25:31,803 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,803 - url=http://localhost:8081/welcome
2018-07-04 11:25:31,803 - method=GET
2018-07-04 11:25:31,803 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,803 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:25:31,803 - args:
2018-07-04 11:25:31,803 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,803 - response=/welcome
2018-07-04 11:25:31,803 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:31,835 - ===========进入拦截器==============
2018-07-04 11:25:31,835 - http://localhost:8081/common/top
2018-07-04 11:25:31,836 - ===========进入拦截器==============
2018-07-04 11:25:31,837 - http://localhost:8081/common/left
2018-07-04 11:25:31,839 - ===========进入拦截器==============
2018-07-04 11:25:31,839 - http://localhost:8081/common/footer
2018-07-04 11:25:31,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:25:31,841 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,841 - url=http://localhost:8081/common/top
2018-07-04 11:25:31,841 - method=GET
2018-07-04 11:25:31,842 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,842 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:25:31,842 - args:
2018-07-04 11:25:31,842 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,842 - response=/common/top
2018-07-04 11:25:31,842 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:31,847 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:25:31,847 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,847 - url=http://localhost:8081/common/left
2018-07-04 11:25:31,847 - method=GET
2018-07-04 11:25:31,847 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,847 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:25:31,847 - args:
2018-07-04 11:25:31,847 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,847 - response=/common/left
2018-07-04 11:25:31,848 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:31,859 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:25:31,859 - ===========请求时间:2018-07-04 11:25:31==========================
2018-07-04 11:25:31,859 - url=http://localhost:8081/common/footer
2018-07-04 11:25:31,859 - method=GET
2018-07-04 11:25:31,859 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:31,859 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:25:31,859 - args:
2018-07-04 11:25:31,860 - =============结束请求时间:2018-07-04 11:25:31,耗时:0s======================
2018-07-04 11:25:31,860 - response=/common/footer
2018-07-04 11:25:31,860 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:33,669 - ===========进入拦截器==============
2018-07-04 11:25:33,669 - http://localhost:8081/role.html
2018-07-04 11:25:33,676 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:25:33,676 - ===========请求时间:2018-07-04 11:25:33==========================
2018-07-04 11:25:33,676 - url=http://localhost:8081/role.html
2018-07-04 11:25:33,676 - method=GET
2018-07-04 11:25:33,676 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:33,676 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:25:33,676 - args:
2018-07-04 11:25:33,676 - =============结束请求时间:2018-07-04 11:25:33,耗时:0s======================
2018-07-04 11:25:33,676 - response=/role
2018-07-04 11:25:33,676 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:33,794 - ===========进入拦截器==============
2018-07-04 11:25:33,794 - http://localhost:8081/role/findAllRole
2018-07-04 11:25:33,803 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:25:33,803 - ===========请求时间:2018-07-04 11:25:33==========================
2018-07-04 11:25:33,803 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:25:33,803 - method=GET
2018-07-04 11:25:33,803 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:33,803 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:25:33,803 - args:roleName=,
2018-07-04 11:25:33,818 - =============结束请求时间:2018-07-04 11:25:33,耗时:0s======================
2018-07-04 11:25:33,819 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:25:33,826 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:25:33,839 - ===========进入拦截器==============
2018-07-04 11:25:33,839 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:25:33,843 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:25:33,843 - ===========请求时间:2018-07-04 11:25:33==========================
2018-07-04 11:25:33,843 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:25:33,843 - method=GET
2018-07-04 11:25:33,843 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:25:33,843 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:25:33,843 - args:
2018-07-04 11:25:33,859 - =============结束请求时间:2018-07-04 11:25:33,耗时:0s======================
2018-07-04 11:25:33,860 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:25:33,863 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:24,475 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11276 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:26:24,479 - No active profile set, falling back to default profiles: default
2018-07-04 11:26:24,690 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:26:24,736 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b47a7: startup date [Wed Jul 04 11:26:24 CST 2018]; root of context hierarchy
2018-07-04 11:26:25,568 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:26:26,702 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:26:26,713 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:26:26,724 - Starting service [Tomcat]
2018-07-04 11:26:26,724 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:26:26,828 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:26:26,828 - Root WebApplicationContext: initialization completed in 2092 ms
2018-07-04 11:26:27,041 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:26:27,047 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:26:27,048 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:26:27,048 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:26:27,048 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:26:27,048 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:26:27,796 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b47a7: startup date [Wed Jul 04 11:26:24 CST 2018]; root of context hierarchy
2018-07-04 11:26:27,856 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:26:27,857 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:26:27,857 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:26:27,857 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:26:27,857 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:26:27,857 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:26:27,857 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:26:27,858 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:26:27,858 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:26:27,858 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:26:27,858 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:26:27,858 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:26:27,858 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:26:27,858 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:26:27,858 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:26:27,859 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:26:27,859 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:26:27,862 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:26:27,862 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:26:27,864 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:26:27,864 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:26:27,864 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:26:27,864 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:26:27,864 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:26:27,864 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:26:27,865 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:26:27,865 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:26:27,865 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:26:27,866 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:26:27,866 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:26:27,866 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:26:27,866 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:26:27,867 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:26:27,868 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:26:27,868 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:26:27,868 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:26:27,868 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:26:27,868 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:26:27,870 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:27,870 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:26:27,870 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:27,870 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:26:27,870 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:26:27,870 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:27,871 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:26:27,873 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:26:27,873 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:26:27,916 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:27,916 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:27,934 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:26:27,959 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:28,552 - LiveReload server is running on port 35729
2018-07-04 11:26:28,674 - Registering beans for JMX exposure on startup
2018-07-04 11:26:28,675 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:26:28,679 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:26:28,689 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:26:28,700 - Using a shared selector for servlet write/read
2018-07-04 11:26:28,713 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:26:28,718 - Started FqLtdWasBackstageApplication in 5.694 seconds (JVM running for 6.957)
2018-07-04 11:26:32,082 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:26:32,082 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:26:32,120 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 11:26:32,135 - ===========进入拦截器==============
2018-07-04 11:26:32,155 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:26:32,156 - ===========请求时间:2018-07-04 11:26:32==========================
2018-07-04 11:26:32,156 - url=http://localhost:8081/login
2018-07-04 11:26:32,156 - method=GET
2018-07-04 11:26:32,156 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:32,156 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:26:32,156 - args:
2018-07-04 11:26:32,159 - =============结束请求时间:2018-07-04 11:26:32,耗时:0s======================
2018-07-04 11:26:32,159 - response=/login
2018-07-04 11:26:32,187 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:26:32,219 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:26:32,219 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:26:32,219 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:26:32,219 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:26:32,223 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:26:32,223 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:26:36,331 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:26:36,331 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,331 - url=http://localhost:8081/signIn
2018-07-04 11:26:36,331 - method=POST
2018-07-04 11:26:36,331 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,331 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:26:36,331 - args:userName=admin,password=123456,
2018-07-04 11:26:36,387 - {dataSource-1} inited
2018-07-04 11:26:36,745 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,745 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:26:36, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:26:36,810 - ===========进入拦截器==============
2018-07-04 11:26:36,810 - http://localhost:8081/home
2018-07-04 11:26:36,818 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:26:36,818 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,818 - url=http://localhost:8081/home
2018-07-04 11:26:36,818 - method=GET
2018-07-04 11:26:36,818 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,818 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:26:36,818 - args:
2018-07-04 11:26:36,818 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,818 - response=/home
2018-07-04 11:26:36,818 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:36,915 - ===========进入拦截器==============
2018-07-04 11:26:36,915 - http://localhost:8081/welcome
2018-07-04 11:26:36,924 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:26:36,924 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,924 - url=http://localhost:8081/welcome
2018-07-04 11:26:36,924 - method=GET
2018-07-04 11:26:36,924 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,924 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:26:36,924 - args:
2018-07-04 11:26:36,925 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,925 - response=/welcome
2018-07-04 11:26:36,925 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:36,950 - ===========进入拦截器==============
2018-07-04 11:26:36,950 - http://localhost:8081/common/top
2018-07-04 11:26:36,951 - ===========进入拦截器==============
2018-07-04 11:26:36,952 - http://localhost:8081/common/left
2018-07-04 11:26:36,954 - ===========进入拦截器==============
2018-07-04 11:26:36,954 - http://localhost:8081/common/footer
2018-07-04 11:26:36,956 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:26:36,956 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,957 - url=http://localhost:8081/common/top
2018-07-04 11:26:36,957 - method=GET
2018-07-04 11:26:36,957 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,957 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:26:36,957 - args:
2018-07-04 11:26:36,957 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,957 - response=/common/top
2018-07-04 11:26:36,958 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:36,962 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:26:36,962 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,962 - url=http://localhost:8081/common/left
2018-07-04 11:26:36,962 - method=GET
2018-07-04 11:26:36,962 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,962 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:26:36,962 - args:
2018-07-04 11:26:36,963 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,963 - response=/common/left
2018-07-04 11:26:36,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:36,968 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:26:36,968 - ===========请求时间:2018-07-04 11:26:36==========================
2018-07-04 11:26:36,968 - url=http://localhost:8081/common/footer
2018-07-04 11:26:36,968 - method=GET
2018-07-04 11:26:36,968 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:36,968 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:26:36,969 - args:
2018-07-04 11:26:36,969 - =============结束请求时间:2018-07-04 11:26:36,耗时:0s======================
2018-07-04 11:26:36,969 - response=/common/footer
2018-07-04 11:26:36,969 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:41,581 - ===========进入拦截器==============
2018-07-04 11:26:41,581 - http://localhost:8081/role.html
2018-07-04 11:26:41,587 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:26:41,587 - ===========请求时间:2018-07-04 11:26:41==========================
2018-07-04 11:26:41,588 - url=http://localhost:8081/role.html
2018-07-04 11:26:41,588 - method=GET
2018-07-04 11:26:41,588 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:41,588 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:26:41,588 - args:
2018-07-04 11:26:41,588 - =============结束请求时间:2018-07-04 11:26:41,耗时:0s======================
2018-07-04 11:26:41,588 - response=/role
2018-07-04 11:26:41,588 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:41,716 - ===========进入拦截器==============
2018-07-04 11:26:41,716 - http://localhost:8081/role/findAllRole
2018-07-04 11:26:41,723 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:26:41,723 - ===========请求时间:2018-07-04 11:26:41==========================
2018-07-04 11:26:41,723 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:26:41,723 - method=GET
2018-07-04 11:26:41,723 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:41,723 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:26:41,723 - args:roleName=,
2018-07-04 11:26:41,731 - =============结束请求时间:2018-07-04 11:26:41,耗时:0s======================
2018-07-04 11:26:41,732 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:26:41,737 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:41,747 - ===========进入拦截器==============
2018-07-04 11:26:41,748 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:26:41,752 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:26:41,752 - ===========请求时间:2018-07-04 11:26:41==========================
2018-07-04 11:26:41,752 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:26:41,752 - method=GET
2018-07-04 11:26:41,752 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:26:41,752 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:26:41,752 - args:
2018-07-04 11:26:41,774 - =============结束请求时间:2018-07-04 11:26:41,耗时:0s======================
2018-07-04 11:26:41,775 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:26:41,781 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:26:55,018 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10064 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 11:26:55,020 - No active profile set, falling back to default profiles: default
2018-07-04 11:26:55,160 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 11:26:55,215 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Wed Jul 04 11:26:55 CST 2018]; root of context hierarchy
2018-07-04 11:26:55,919 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 11:26:56,897 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 11:26:56,909 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 11:26:56,918 - Starting service [Tomcat]
2018-07-04 11:26:56,918 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 11:26:57,020 - Initializing Spring embedded WebApplicationContext
2018-07-04 11:26:57,020 - Root WebApplicationContext: initialization completed in 1806 ms
2018-07-04 11:26:57,220 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 11:26:57,224 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 11:26:57,225 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 11:26:57,225 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 11:26:57,225 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 11:26:57,225 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 11:26:57,975 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Wed Jul 04 11:26:55 CST 2018]; root of context hierarchy
2018-07-04 11:26:58,045 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 11:26:58,045 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 11:26:58,046 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 11:26:58,046 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 11:26:58,046 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 11:26:58,046 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 11:26:58,047 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 11:26:58,047 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 11:26:58,047 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 11:26:58,047 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 11:26:58,047 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 11:26:58,047 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 11:26:58,047 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 11:26:58,048 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 11:26:58,048 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 11:26:58,048 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 11:26:58,048 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 11:26:58,050 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 11:26:58,051 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 11:26:58,052 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 11:26:58,052 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 11:26:58,053 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:26:58,053 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 11:26:58,053 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 11:26:58,053 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 11:26:58,053 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 11:26:58,053 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 11:26:58,053 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 11:26:58,054 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 11:26:58,054 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 11:26:58,055 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 11:26:58,055 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 11:26:58,056 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 11:26:58,056 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 11:26:58,056 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 11:26:58,056 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 11:26:58,057 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 11:26:58,057 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 11:26:58,058 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:58,058 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 11:26:58,059 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 11:26:58,059 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:58,059 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 11:26:58,059 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 11:26:58,059 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 11:26:58,061 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 11:26:58,061 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 11:26:58,104 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:58,104 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:58,124 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 11:26:58,149 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 11:26:58,753 - LiveReload server is running on port 35729
2018-07-04 11:26:58,890 - Registering beans for JMX exposure on startup
2018-07-04 11:26:58,890 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 11:26:58,895 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 11:26:58,903 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 11:26:58,915 - Using a shared selector for servlet write/read
2018-07-04 11:26:58,930 - Tomcat started on port(s): 8081 (http)
2018-07-04 11:26:58,934 - Started FqLtdWasBackstageApplication in 4.54 seconds (JVM running for 5.686)
2018-07-04 11:27:01,769 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 11:27:01,769 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 11:27:01,808 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-04 11:27:01,822 - ===========进入拦截器==============
2018-07-04 11:27:01,843 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:27:01,843 - ===========请求时间:2018-07-04 11:27:01==========================
2018-07-04 11:27:01,843 - url=http://localhost:8081/login
2018-07-04 11:27:01,844 - method=GET
2018-07-04 11:27:01,844 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:01,844 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:27:01,844 - args:
2018-07-04 11:27:01,847 - =============结束请求时间:2018-07-04 11:27:01,耗时:0s======================
2018-07-04 11:27:01,847 - response=/login
2018-07-04 11:27:01,874 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 11:27:01,909 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 11:27:01,909 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 11:27:01,909 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 11:27:01,909 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 11:27:01,912 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 11:27:01,912 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 11:27:06,035 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:27:06,035 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,035 - url=http://localhost:8081/signIn
2018-07-04 11:27:06,035 - method=POST
2018-07-04 11:27:06,035 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,035 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:27:06,035 - args:userName=admin,password=123456,
2018-07-04 11:27:06,088 - {dataSource-1} inited
2018-07-04 11:27:06,435 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,435 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:27:06, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:27:06,500 - ===========进入拦截器==============
2018-07-04 11:27:06,501 - http://localhost:8081/home
2018-07-04 11:27:06,506 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:27:06,506 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,507 - url=http://localhost:8081/home
2018-07-04 11:27:06,507 - method=GET
2018-07-04 11:27:06,507 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,507 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:27:06,507 - args:
2018-07-04 11:27:06,507 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,507 - response=/home
2018-07-04 11:27:06,507 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:06,616 - ===========进入拦截器==============
2018-07-04 11:27:06,617 - http://localhost:8081/welcome
2018-07-04 11:27:06,623 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:27:06,623 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,623 - url=http://localhost:8081/welcome
2018-07-04 11:27:06,623 - method=GET
2018-07-04 11:27:06,623 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,623 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:27:06,623 - args:
2018-07-04 11:27:06,623 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,623 - response=/welcome
2018-07-04 11:27:06,624 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:06,649 - ===========进入拦截器==============
2018-07-04 11:27:06,649 - http://localhost:8081/common/top
2018-07-04 11:27:06,651 - ===========进入拦截器==============
2018-07-04 11:27:06,651 - http://localhost:8081/common/left
2018-07-04 11:27:06,653 - ===========进入拦截器==============
2018-07-04 11:27:06,654 - http://localhost:8081/common/footer
2018-07-04 11:27:06,656 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:27:06,656 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,656 - url=http://localhost:8081/common/top
2018-07-04 11:27:06,656 - method=GET
2018-07-04 11:27:06,656 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:27:06,656 - args:
2018-07-04 11:27:06,656 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,656 - response=/common/top
2018-07-04 11:27:06,657 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:06,662 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:27:06,662 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,662 - url=http://localhost:8081/common/left
2018-07-04 11:27:06,662 - method=GET
2018-07-04 11:27:06,662 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,662 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:27:06,662 - args:
2018-07-04 11:27:06,662 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,662 - response=/common/left
2018-07-04 11:27:06,662 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:06,673 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:27:06,673 - ===========请求时间:2018-07-04 11:27:06==========================
2018-07-04 11:27:06,673 - url=http://localhost:8081/common/footer
2018-07-04 11:27:06,673 - method=GET
2018-07-04 11:27:06,673 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:06,673 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:27:06,673 - args:
2018-07-04 11:27:06,673 - =============结束请求时间:2018-07-04 11:27:06,耗时:0s======================
2018-07-04 11:27:06,673 - response=/common/footer
2018-07-04 11:27:06,674 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:08,404 - ===========进入拦截器==============
2018-07-04 11:27:08,404 - http://localhost:8081/role.html
2018-07-04 11:27:08,412 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:27:08,412 - ===========请求时间:2018-07-04 11:27:08==========================
2018-07-04 11:27:08,412 - url=http://localhost:8081/role.html
2018-07-04 11:27:08,412 - method=GET
2018-07-04 11:27:08,412 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:08,412 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:27:08,412 - args:
2018-07-04 11:27:08,412 - =============结束请求时间:2018-07-04 11:27:08,耗时:0s======================
2018-07-04 11:27:08,412 - response=/role
2018-07-04 11:27:08,412 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:08,528 - ===========进入拦截器==============
2018-07-04 11:27:08,528 - http://localhost:8081/role/findAllRole
2018-07-04 11:27:08,534 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:27:08,534 - ===========请求时间:2018-07-04 11:27:08==========================
2018-07-04 11:27:08,534 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:27:08,534 - method=GET
2018-07-04 11:27:08,534 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:08,534 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:27:08,534 - args:roleName=,
2018-07-04 11:27:08,543 - =============结束请求时间:2018-07-04 11:27:08,耗时:0s======================
2018-07-04 11:27:08,543 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:27:08,548 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:08,558 - ===========进入拦截器==============
2018-07-04 11:27:08,558 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:27:08,562 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:27:08,562 - ===========请求时间:2018-07-04 11:27:08==========================
2018-07-04 11:27:08,562 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:27:08,562 - method=GET
2018-07-04 11:27:08,562 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:08,562 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:27:08,562 - args:
2018-07-04 11:27:08,579 - =============结束请求时间:2018-07-04 11:27:08,耗时:0s======================
2018-07-04 11:27:08,580 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:27:08,583 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:26,019 - ===========进入拦截器==============
2018-07-04 11:27:26,022 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 11:27:26,023 - ===========请求时间:2018-07-04 11:27:26==========================
2018-07-04 11:27:26,023 - url=http://localhost:8081/login
2018-07-04 11:27:26,023 - method=GET
2018-07-04 11:27:26,023 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:26,023 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 11:27:26,023 - args:
2018-07-04 11:27:26,023 - =============结束请求时间:2018-07-04 11:27:26,耗时:0s======================
2018-07-04 11:27:26,023 - response=/login
2018-07-04 11:27:30,338 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 11:27:30,338 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,339 - url=http://localhost:8081/signIn
2018-07-04 11:27:30,339 - method=POST
2018-07-04 11:27:30,339 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,339 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 11:27:30,339 - args:userName=admin,password=123456,
2018-07-04 11:27:30,359 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,359 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 11:27:30, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 11:27:30,375 - ===========进入拦截器==============
2018-07-04 11:27:30,375 - http://localhost:8081/home
2018-07-04 11:27:30,379 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:27:30,379 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,379 - url=http://localhost:8081/home
2018-07-04 11:27:30,379 - method=GET
2018-07-04 11:27:30,379 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,380 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:27:30,380 - args:
2018-07-04 11:27:30,380 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,380 - response=/home
2018-07-04 11:27:30,380 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:30,467 - ===========进入拦截器==============
2018-07-04 11:27:30,467 - http://localhost:8081/welcome
2018-07-04 11:27:30,471 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:27:30,471 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,471 - url=http://localhost:8081/welcome
2018-07-04 11:27:30,471 - method=GET
2018-07-04 11:27:30,471 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,471 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:27:30,471 - args:
2018-07-04 11:27:30,471 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,471 - response=/welcome
2018-07-04 11:27:30,472 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:30,498 - ===========进入拦截器==============
2018-07-04 11:27:30,498 - http://localhost:8081/common/top
2018-07-04 11:27:30,499 - ===========进入拦截器==============
2018-07-04 11:27:30,499 - http://localhost:8081/common/left
2018-07-04 11:27:30,502 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:27:30,502 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,502 - ===========进入拦截器==============
2018-07-04 11:27:30,502 - url=http://localhost:8081/common/top
2018-07-04 11:27:30,502 - method=GET
2018-07-04 11:27:30,502 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,502 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:27:30,502 - args:
2018-07-04 11:27:30,502 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,502 - response=/common/top
2018-07-04 11:27:30,503 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:30,503 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:27:30,503 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,503 - url=http://localhost:8081/common/left
2018-07-04 11:27:30,504 - method=GET
2018-07-04 11:27:30,504 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,504 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:27:30,504 - args:
2018-07-04 11:27:30,504 - http://localhost:8081/common/footer
2018-07-04 11:27:30,504 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,504 - response=/common/left
2018-07-04 11:27:30,504 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:30,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:27:30,508 - ===========请求时间:2018-07-04 11:27:30==========================
2018-07-04 11:27:30,508 - url=http://localhost:8081/common/footer
2018-07-04 11:27:30,508 - method=GET
2018-07-04 11:27:30,508 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:30,508 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:27:30,508 - args:
2018-07-04 11:27:30,508 - =============结束请求时间:2018-07-04 11:27:30,耗时:0s======================
2018-07-04 11:27:30,509 - response=/common/footer
2018-07-04 11:27:30,509 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:33,154 - ===========进入拦截器==============
2018-07-04 11:27:33,155 - http://localhost:8081/role.html
2018-07-04 11:27:33,163 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:27:33,163 - ===========请求时间:2018-07-04 11:27:33==========================
2018-07-04 11:27:33,163 - url=http://localhost:8081/role.html
2018-07-04 11:27:33,163 - method=GET
2018-07-04 11:27:33,163 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:33,163 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:27:33,163 - args:
2018-07-04 11:27:33,163 - =============结束请求时间:2018-07-04 11:27:33,耗时:0s======================
2018-07-04 11:27:33,163 - response=/role
2018-07-04 11:27:33,163 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:33,285 - ===========进入拦截器==============
2018-07-04 11:27:33,285 - http://localhost:8081/role/findAllRole
2018-07-04 11:27:33,290 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:27:33,290 - ===========请求时间:2018-07-04 11:27:33==========================
2018-07-04 11:27:33,290 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:27:33,290 - method=GET
2018-07-04 11:27:33,290 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:33,290 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:27:33,290 - args:roleName=,
2018-07-04 11:27:33,294 - =============结束请求时间:2018-07-04 11:27:33,耗时:0s======================
2018-07-04 11:27:33,294 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:27:33,294 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:27:33,303 - ===========进入拦截器==============
2018-07-04 11:27:33,303 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:27:33,307 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:27:33,308 - ===========请求时间:2018-07-04 11:27:33==========================
2018-07-04 11:27:33,308 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:27:33,308 - method=GET
2018-07-04 11:27:33,308 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:27:33,308 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:27:33,308 - args:
2018-07-04 11:27:33,317 - =============结束请求时间:2018-07-04 11:27:33,耗时:0s======================
2018-07-04 11:27:33,317 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:27:33,320 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:39,422 - ===========进入拦截器==============
2018-07-04 11:28:39,423 - http://localhost:8081/home
2018-07-04 11:28:39,482 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 11:28:39,483 - ===========请求时间:2018-07-04 11:28:39==========================
2018-07-04 11:28:39,483 - url=http://localhost:8081/home
2018-07-04 11:28:39,483 - method=GET
2018-07-04 11:28:39,483 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:39,483 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 11:28:39,483 - args:
2018-07-04 11:28:39,483 - =============结束请求时间:2018-07-04 11:28:39,耗时:0s======================
2018-07-04 11:28:39,483 - response=/home
2018-07-04 11:28:39,483 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:39,579 - ===========进入拦截器==============
2018-07-04 11:28:39,579 - http://localhost:8081/welcome
2018-07-04 11:28:39,585 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 11:28:39,585 - ===========请求时间:2018-07-04 11:28:39==========================
2018-07-04 11:28:39,585 - url=http://localhost:8081/welcome
2018-07-04 11:28:39,585 - method=GET
2018-07-04 11:28:39,585 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:39,585 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 11:28:39,585 - args:
2018-07-04 11:28:39,586 - =============结束请求时间:2018-07-04 11:28:39,耗时:0s======================
2018-07-04 11:28:39,586 - response=/welcome
2018-07-04 11:28:39,586 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:39,621 - ===========进入拦截器==============
2018-07-04 11:28:39,621 - http://localhost:8081/common/top
2018-07-04 11:28:39,625 - ===========进入拦截器==============
2018-07-04 11:28:39,625 - http://localhost:8081/common/left
2018-07-04 11:28:39,627 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 11:28:39,627 - ===========请求时间:2018-07-04 11:28:39==========================
2018-07-04 11:28:39,627 - url=http://localhost:8081/common/top
2018-07-04 11:28:39,627 - method=GET
2018-07-04 11:28:39,627 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:39,627 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 11:28:39,627 - args:
2018-07-04 11:28:39,627 - =============结束请求时间:2018-07-04 11:28:39,耗时:0s======================
2018-07-04 11:28:39,627 - response=/common/top
2018-07-04 11:28:39,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:39,628 - ===========进入拦截器==============
2018-07-04 11:28:39,628 - http://localhost:8081/common/footer
2018-07-04 11:28:39,636 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 11:28:39,637 - ===========请求时间:2018-07-04 11:28:39==========================
2018-07-04 11:28:39,637 - url=http://localhost:8081/common/footer
2018-07-04 11:28:39,637 - method=GET
2018-07-04 11:28:39,637 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:39,637 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 11:28:39,637 - args:
2018-07-04 11:28:39,637 - =============结束请求时间:2018-07-04 11:28:39,耗时:0s======================
2018-07-04 11:28:39,637 - response=/common/footer
2018-07-04 11:28:39,637 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:39,638 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 11:28:39,638 - ===========请求时间:2018-07-04 11:28:39==========================
2018-07-04 11:28:39,638 - url=http://localhost:8081/common/left
2018-07-04 11:28:39,638 - method=GET
2018-07-04 11:28:39,638 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:39,638 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 11:28:39,638 - args:
2018-07-04 11:28:39,638 - =============结束请求时间:2018-07-04 11:28:39,耗时:0s======================
2018-07-04 11:28:39,638 - response=/common/left
2018-07-04 11:28:39,638 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:41,141 - ===========进入拦截器==============
2018-07-04 11:28:41,141 - http://localhost:8081/role.html
2018-07-04 11:28:41,165 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-04 11:28:41,165 - ===========请求时间:2018-07-04 11:28:41==========================
2018-07-04 11:28:41,165 - url=http://localhost:8081/role.html
2018-07-04 11:28:41,165 - method=GET
2018-07-04 11:28:41,165 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:41,165 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-04 11:28:41,165 - args:
2018-07-04 11:28:41,166 - =============结束请求时间:2018-07-04 11:28:41,耗时:0s======================
2018-07-04 11:28:41,166 - response=/role
2018-07-04 11:28:41,166 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:41,301 - ===========进入拦截器==============
2018-07-04 11:28:41,301 - http://localhost:8081/role/findAllRole
2018-07-04 11:28:41,307 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-04 11:28:41,307 - ===========请求时间:2018-07-04 11:28:41==========================
2018-07-04 11:28:41,307 - url=http://localhost:8081/role/findAllRole
2018-07-04 11:28:41,307 - method=GET
2018-07-04 11:28:41,307 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:41,307 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-04 11:28:41,307 - args:roleName=,
2018-07-04 11:28:41,313 - =============结束请求时间:2018-07-04 11:28:41,耗时:0s======================
2018-07-04 11:28:41,313 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=3, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0)], page=null, totalCount=null)
2018-07-04 11:28:41,314 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 11:28:41,326 - ===========进入拦截器==============
2018-07-04 11:28:41,326 - http://localhost:8081/menu/findAllMenu
2018-07-04 11:28:41,330 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-04 11:28:41,330 - ===========请求时间:2018-07-04 11:28:41==========================
2018-07-04 11:28:41,330 - url=http://localhost:8081/menu/findAllMenu
2018-07-04 11:28:41,330 - method=GET
2018-07-04 11:28:41,330 - ip=0:0:0:0:0:0:0:1
2018-07-04 11:28:41,330 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-04 11:28:41,330 - args:
2018-07-04 11:28:41,337 - =============结束请求时间:2018-07-04 11:28:41,耗时:0s======================
2018-07-04 11:28:41,337 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 10:15:31.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-04 11:28:41,338 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:13,062 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2420 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:35:13,069 - No active profile set, falling back to default profiles: default
2018-07-04 13:35:13,387 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:35:13,539 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@415c3c43: startup date [Wed Jul 04 13:35:13 CST 2018]; root of context hierarchy
2018-07-04 13:35:14,478 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:35:15,950 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:35:15,962 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:35:15,999 - Starting service [Tomcat]
2018-07-04 13:35:15,999 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:35:16,169 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:35:16,169 - Root WebApplicationContext: initialization completed in 2630 ms
2018-07-04 13:35:16,412 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:35:16,416 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:35:16,417 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:35:16,417 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:35:16,417 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:35:16,417 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:35:17,338 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@415c3c43: startup date [Wed Jul 04 13:35:13 CST 2018]; root of context hierarchy
2018-07-04 13:35:17,405 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:35:17,406 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:35:17,406 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:35:17,406 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:35:17,406 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:35:17,406 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:35:17,406 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:35:17,406 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:35:17,406 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:35:17,407 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:35:17,407 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:35:17,407 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:35:17,407 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:35:17,407 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:35:17,407 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:35:17,407 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:35:17,407 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:35:17,408 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:35:17,410 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:35:17,411 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:35:17,412 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:35:17,413 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:35:17,413 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:35:17,413 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:35:17,413 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:35:17,413 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:35:17,413 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:35:17,413 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:35:17,414 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:35:17,415 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:35:17,415 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:35:17,415 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:35:17,415 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:35:17,417 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:35:17,417 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:35:17,417 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:35:17,417 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:35:17,417 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:35:17,417 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:35:17,418 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:35:17,418 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:35:17,419 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:35:17,419 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:35:17,420 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:35:17,420 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:35:17,420 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:35:17,420 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:35:17,420 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:35:17,422 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:35:17,423 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:35:17,466 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:35:17,466 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:35:17,487 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:35:17,513 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:35:18,212 - LiveReload server is running on port 35729
2018-07-04 13:35:18,340 - Registering beans for JMX exposure on startup
2018-07-04 13:35:18,341 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:35:18,346 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:35:18,355 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:35:18,367 - Using a shared selector for servlet write/read
2018-07-04 13:35:18,388 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:35:18,394 - Started FqLtdWasBackstageApplication in 6.286 seconds (JVM running for 7.776)
2018-07-04 13:35:22,678 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:35:22,678 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:35:22,718 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-04 13:35:22,734 - ===========进入拦截器==============
2018-07-04 13:35:22,759 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:35:22,759 - ===========请求时间:2018-07-04 13:35:22==========================
2018-07-04 13:35:22,760 - url=http://localhost:8081/login
2018-07-04 13:35:22,760 - method=GET
2018-07-04 13:35:22,760 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:22,760 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:35:22,760 - args:
2018-07-04 13:35:22,763 - =============结束请求时间:2018-07-04 13:35:22,耗时:0s======================
2018-07-04 13:35:22,763 - response=/login
2018-07-04 13:35:22,794 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:35:22,830 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:35:22,830 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:35:22,830 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:35:22,830 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:35:22,833 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:35:22,833 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:35:28,205 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:35:28,205 - ===========请求时间:2018-07-04 13:35:28==========================
2018-07-04 13:35:28,206 - url=http://localhost:8081/signIn
2018-07-04 13:35:28,206 - method=POST
2018-07-04 13:35:28,206 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:28,206 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:35:28,206 - args:userName=admin,password=123456,
2018-07-04 13:35:28,318 - {dataSource-1} inited
2018-07-04 13:35:28,737 - =============结束请求时间:2018-07-04 13:35:28,耗时:0s======================
2018-07-04 13:35:28,737 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:35:28, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:35:28,831 - ===========进入拦截器==============
2018-07-04 13:35:28,831 - http://localhost:8081/home
2018-07-04 13:35:28,835 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:35:28,836 - ===========请求时间:2018-07-04 13:35:28==========================
2018-07-04 13:35:28,836 - url=http://localhost:8081/home
2018-07-04 13:35:28,836 - method=GET
2018-07-04 13:35:28,836 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:28,836 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:35:28,836 - args:
2018-07-04 13:35:28,836 - =============结束请求时间:2018-07-04 13:35:28,耗时:0s======================
2018-07-04 13:35:28,837 - response=/home
2018-07-04 13:35:28,837 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:28,933 - ===========进入拦截器==============
2018-07-04 13:35:28,933 - http://localhost:8081/welcome
2018-07-04 13:35:28,939 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:35:28,940 - ===========请求时间:2018-07-04 13:35:28==========================
2018-07-04 13:35:28,940 - url=http://localhost:8081/welcome
2018-07-04 13:35:28,940 - method=GET
2018-07-04 13:35:28,940 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:28,940 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:35:28,940 - args:
2018-07-04 13:35:28,940 - =============结束请求时间:2018-07-04 13:35:28,耗时:0s======================
2018-07-04 13:35:28,940 - response=/welcome
2018-07-04 13:35:28,940 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:28,981 - ===========进入拦截器==============
2018-07-04 13:35:28,981 - http://localhost:8081/common/top
2018-07-04 13:35:28,982 - ===========进入拦截器==============
2018-07-04 13:35:28,982 - http://localhost:8081/common/footer
2018-07-04 13:35:28,984 - ===========进入拦截器==============
2018-07-04 13:35:28,984 - http://localhost:8081/common/left
2018-07-04 13:35:28,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:35:28,991 - ===========请求时间:2018-07-04 13:35:28==========================
2018-07-04 13:35:28,991 - url=http://localhost:8081/common/top
2018-07-04 13:35:28,991 - method=GET
2018-07-04 13:35:28,991 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:28,991 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:35:28,991 - args:
2018-07-04 13:35:28,991 - =============结束请求时间:2018-07-04 13:35:28,耗时:0s======================
2018-07-04 13:35:28,991 - response=/common/top
2018-07-04 13:35:28,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:28,995 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:35:28,996 - ===========请求时间:2018-07-04 13:35:28==========================
2018-07-04 13:35:28,996 - url=http://localhost:8081/common/footer
2018-07-04 13:35:28,996 - method=GET
2018-07-04 13:35:28,996 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:28,996 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:35:28,996 - args:
2018-07-04 13:35:28,996 - =============结束请求时间:2018-07-04 13:35:28,耗时:0s======================
2018-07-04 13:35:28,996 - response=/common/footer
2018-07-04 13:35:28,996 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:29,003 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:35:29,004 - ===========请求时间:2018-07-04 13:35:29==========================
2018-07-04 13:35:29,004 - url=http://localhost:8081/common/left
2018-07-04 13:35:29,004 - method=GET
2018-07-04 13:35:29,004 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:29,004 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:35:29,004 - args:
2018-07-04 13:35:29,004 - =============结束请求时间:2018-07-04 13:35:29,耗时:0s======================
2018-07-04 13:35:29,004 - response=/common/left
2018-07-04 13:35:29,004 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:31,031 - ===========进入拦截器==============
2018-07-04 13:35:31,031 - http://localhost:8081/generator.html
2018-07-04 13:35:31,036 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:35:31,037 - ===========请求时间:2018-07-04 13:35:31==========================
2018-07-04 13:35:31,037 - url=http://localhost:8081/generator.html
2018-07-04 13:35:31,037 - method=GET
2018-07-04 13:35:31,037 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:31,037 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:35:31,037 - args:
2018-07-04 13:35:31,037 - =============结束请求时间:2018-07-04 13:35:31,耗时:0s======================
2018-07-04 13:35:31,037 - response=/generator
2018-07-04 13:35:31,037 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:35:31,232 - ===========进入拦截器==============
2018-07-04 13:35:31,232 - http://localhost:8081/sys/generator/list
2018-07-04 13:35:31,240 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:35:31,240 - ===========请求时间:2018-07-04 13:35:31==========================
2018-07-04 13:35:31,240 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:35:31,240 - method=GET
2018-07-04 13:35:31,240 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:35:31,240 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:35:31,240 - args:_search=false,nd=1530682531226,limit=10,page=1,sidx=,order=asc,_=1530682531129,
2018-07-04 13:35:31,252 - =============结束请求时间:2018-07-04 13:35:31,耗时:0s======================
2018-07-04 13:35:31,294 - ===========进入拦截器==============
2018-07-04 13:35:31,300 - http://localhost:8081/error
2018-07-04 13:35:31,314 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:37,147 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 696 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:39:37,150 - No active profile set, falling back to default profiles: default
2018-07-04 13:39:37,318 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:39:37,412 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@401ba106: startup date [Wed Jul 04 13:39:37 CST 2018]; root of context hierarchy
2018-07-04 13:39:38,170 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:39:39,115 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:39:39,126 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:39:39,135 - Starting service [Tomcat]
2018-07-04 13:39:39,135 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:39:39,238 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:39:39,239 - Root WebApplicationContext: initialization completed in 1827 ms
2018-07-04 13:39:39,441 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:39:39,445 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:39:39,446 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:39:39,446 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:39:39,446 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:39:39,446 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:39:40,217 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@401ba106: startup date [Wed Jul 04 13:39:37 CST 2018]; root of context hierarchy
2018-07-04 13:39:40,281 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:39:40,282 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:39:40,283 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:39:40,283 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:39:40,283 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:39:40,283 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:39:40,283 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:39:40,283 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:39:40,284 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:39:40,284 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:39:40,284 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:39:40,284 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:39:40,284 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:39:40,284 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:39:40,284 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:39:40,284 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:39:40,285 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:39:40,285 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:39:40,287 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:39:40,288 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:39:40,289 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:39:40,290 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:39:40,290 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:39:40,290 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:39:40,290 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:39:40,290 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:39:40,290 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:39:40,291 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:39:40,291 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:39:40,291 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:39:40,292 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:39:40,292 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:39:40,292 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:39:40,294 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:39:40,294 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:39:40,294 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:39:40,295 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:39:40,295 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:39:40,295 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:39:40,296 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:39:40,296 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:39:40,298 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:39:40,298 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:39:40,299 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:39:40,299 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:39:40,299 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:39:40,299 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:39:40,299 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:39:40,302 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:39:40,302 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:39:40,356 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:39:40,356 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:39:40,379 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:39:40,407 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:39:41,047 - LiveReload server is running on port 35729
2018-07-04 13:39:41,172 - Registering beans for JMX exposure on startup
2018-07-04 13:39:41,173 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:39:41,177 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:39:41,186 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:39:41,196 - Using a shared selector for servlet write/read
2018-07-04 13:39:41,209 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:39:41,213 - Started FqLtdWasBackstageApplication in 4.963 seconds (JVM running for 6.035)
2018-07-04 13:39:48,000 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:39:48,000 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:39:48,037 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 13:39:48,051 - ===========进入拦截器==============
2018-07-04 13:39:48,071 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:39:48,071 - ===========请求时间:2018-07-04 13:39:48==========================
2018-07-04 13:39:48,071 - url=http://localhost:8081/login
2018-07-04 13:39:48,071 - method=GET
2018-07-04 13:39:48,071 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:48,071 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:39:48,071 - args:
2018-07-04 13:39:48,074 - =============结束请求时间:2018-07-04 13:39:48,耗时:0s======================
2018-07-04 13:39:48,075 - response=/login
2018-07-04 13:39:48,103 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:39:48,137 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:39:48,137 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:39:48,137 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:39:48,138 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:39:48,141 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:39:48,141 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:39:52,713 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:39:52,713 - ===========请求时间:2018-07-04 13:39:52==========================
2018-07-04 13:39:52,713 - url=http://localhost:8081/signIn
2018-07-04 13:39:52,713 - method=POST
2018-07-04 13:39:52,713 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:52,713 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:39:52,713 - args:userName=admin,password=123456,
2018-07-04 13:39:52,769 - {dataSource-1} inited
2018-07-04 13:39:53,081 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,081 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:39:53, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:39:53,147 - ===========进入拦截器==============
2018-07-04 13:39:53,147 - http://localhost:8081/home
2018-07-04 13:39:53,152 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:39:53,152 - ===========请求时间:2018-07-04 13:39:53==========================
2018-07-04 13:39:53,152 - url=http://localhost:8081/home
2018-07-04 13:39:53,152 - method=GET
2018-07-04 13:39:53,152 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:53,153 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:39:53,153 - args:
2018-07-04 13:39:53,153 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,153 - response=/home
2018-07-04 13:39:53,153 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:53,242 - ===========进入拦截器==============
2018-07-04 13:39:53,242 - http://localhost:8081/welcome
2018-07-04 13:39:53,246 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:39:53,246 - ===========请求时间:2018-07-04 13:39:53==========================
2018-07-04 13:39:53,246 - url=http://localhost:8081/welcome
2018-07-04 13:39:53,247 - method=GET
2018-07-04 13:39:53,247 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:53,247 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:39:53,247 - args:
2018-07-04 13:39:53,247 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,247 - response=/welcome
2018-07-04 13:39:53,247 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:53,265 - ===========进入拦截器==============
2018-07-04 13:39:53,265 - http://localhost:8081/common/top
2018-07-04 13:39:53,265 - ===========进入拦截器==============
2018-07-04 13:39:53,266 - http://localhost:8081/common/left
2018-07-04 13:39:53,266 - ===========进入拦截器==============
2018-07-04 13:39:53,266 - http://localhost:8081/common/footer
2018-07-04 13:39:53,268 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:39:53,268 - ===========请求时间:2018-07-04 13:39:53==========================
2018-07-04 13:39:53,268 - url=http://localhost:8081/common/top
2018-07-04 13:39:53,268 - method=GET
2018-07-04 13:39:53,268 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:53,269 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:39:53,269 - args:
2018-07-04 13:39:53,269 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,269 - response=/common/top
2018-07-04 13:39:53,269 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:53,272 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:39:53,272 - ===========请求时间:2018-07-04 13:39:53==========================
2018-07-04 13:39:53,273 - url=http://localhost:8081/common/left
2018-07-04 13:39:53,273 - method=GET
2018-07-04 13:39:53,273 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:53,273 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:39:53,273 - args:
2018-07-04 13:39:53,273 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,273 - response=/common/left
2018-07-04 13:39:53,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:53,287 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:39:53,288 - ===========请求时间:2018-07-04 13:39:53==========================
2018-07-04 13:39:53,288 - url=http://localhost:8081/common/footer
2018-07-04 13:39:53,288 - method=GET
2018-07-04 13:39:53,288 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:53,288 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:39:53,288 - args:
2018-07-04 13:39:53,288 - =============结束请求时间:2018-07-04 13:39:53,耗时:0s======================
2018-07-04 13:39:53,288 - response=/common/footer
2018-07-04 13:39:53,288 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:55,251 - ===========进入拦截器==============
2018-07-04 13:39:55,251 - http://localhost:8081/generator.html
2018-07-04 13:39:55,261 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:39:55,261 - ===========请求时间:2018-07-04 13:39:55==========================
2018-07-04 13:39:55,261 - url=http://localhost:8081/generator.html
2018-07-04 13:39:55,261 - method=GET
2018-07-04 13:39:55,261 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:55,261 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:39:55,261 - args:
2018-07-04 13:39:55,261 - =============结束请求时间:2018-07-04 13:39:55,耗时:0s======================
2018-07-04 13:39:55,261 - response=/generator
2018-07-04 13:39:55,262 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:39:55,414 - ===========进入拦截器==============
2018-07-04 13:39:55,414 - http://localhost:8081/sys/generator/list
2018-07-04 13:39:55,423 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:39:55,424 - ===========请求时间:2018-07-04 13:39:55==========================
2018-07-04 13:39:55,424 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:39:55,424 - method=GET
2018-07-04 13:39:55,424 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:39:55,424 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:39:55,424 - args:_search=false,nd=1530682795409,limit=10,page=1,sidx=,order=asc,_=1530682795330,
2018-07-04 13:39:55,429 - =============结束请求时间:2018-07-04 13:39:55,耗时:0s======================
2018-07-04 13:42:02,796 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7648 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:42:02,798 - No active profile set, falling back to default profiles: default
2018-07-04 13:42:02,989 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:42:03,113 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51e25f1f: startup date [Wed Jul 04 13:42:03 CST 2018]; root of context hierarchy
2018-07-04 13:42:04,381 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:42:04,381 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:42:04,381 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:42:04,381 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:42:04,381 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:42:04,381 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:42:04,382 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:42:05,477 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:42:05,489 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:42:05,497 - Starting service [Tomcat]
2018-07-04 13:42:05,497 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:42:05,600 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:42:05,601 - Root WebApplicationContext: initialization completed in 2489 ms
2018-07-04 13:42:05,816 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:42:05,820 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:42:05,820 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:42:05,820 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:42:05,820 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:42:05,820 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:42:06,662 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@51e25f1f: startup date [Wed Jul 04 13:42:03 CST 2018]; root of context hierarchy
2018-07-04 13:42:06,723 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:42:06,724 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:42:06,724 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:42:06,724 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:42:06,724 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:42:06,725 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:42:06,725 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:42:06,725 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:42:06,725 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:42:06,725 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:42:06,725 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:42:06,725 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:42:06,726 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:42:06,726 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:42:06,726 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:42:06,726 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:42:06,726 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:42:06,726 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:42:06,729 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:42:06,729 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:42:06,731 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:42:06,731 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:42:06,731 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:42:06,731 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:42:06,731 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:42:06,731 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:42:06,732 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:42:06,732 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:42:06,733 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:42:06,733 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:42:06,733 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:42:06,734 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:42:06,734 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:42:06,735 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:42:06,735 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:42:06,735 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:42:06,735 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:42:06,736 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:42:06,736 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:42:06,736 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:42:06,736 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:42:06,738 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:42:06,738 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:42:06,738 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:42:06,738 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:42:06,738 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:42:06,738 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:42:06,738 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:42:06,740 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:42:06,740 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:42:06,783 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:42:06,783 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:42:06,801 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:42:06,828 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:42:07,467 - LiveReload server is running on port 35729
2018-07-04 13:42:07,593 - Registering beans for JMX exposure on startup
2018-07-04 13:42:07,595 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:42:07,600 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:42:07,609 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:42:07,621 - Using a shared selector for servlet write/read
2018-07-04 13:42:07,634 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:42:07,639 - Started FqLtdWasBackstageApplication in 5.471 seconds (JVM running for 6.879)
2018-07-04 13:42:11,342 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:42:11,342 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:42:11,380 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 13:42:11,395 - ===========进入拦截器==============
2018-07-04 13:42:11,415 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:42:11,415 - ===========请求时间:2018-07-04 13:42:11==========================
2018-07-04 13:42:11,416 - url=http://localhost:8081/login
2018-07-04 13:42:11,416 - method=GET
2018-07-04 13:42:11,416 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:11,416 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:42:11,416 - args:
2018-07-04 13:42:11,419 - =============结束请求时间:2018-07-04 13:42:11,耗时:0s======================
2018-07-04 13:42:11,420 - response=/login
2018-07-04 13:42:11,449 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:42:11,485 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:42:11,485 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:42:11,485 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:42:11,485 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:42:11,488 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:42:11,488 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:42:16,098 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:42:16,098 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,098 - url=http://localhost:8081/signIn
2018-07-04 13:42:16,098 - method=POST
2018-07-04 13:42:16,098 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,099 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:42:16,099 - args:userName=admin,password=123456,
2018-07-04 13:42:16,154 - {dataSource-1} inited
2018-07-04 13:42:16,487 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,487 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:42:16, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:42:16,550 - ===========进入拦截器==============
2018-07-04 13:42:16,551 - http://localhost:8081/home
2018-07-04 13:42:16,556 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:42:16,556 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,556 - url=http://localhost:8081/home
2018-07-04 13:42:16,556 - method=GET
2018-07-04 13:42:16,556 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,556 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:42:16,556 - args:
2018-07-04 13:42:16,556 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,557 - response=/home
2018-07-04 13:42:16,557 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:16,643 - ===========进入拦截器==============
2018-07-04 13:42:16,643 - http://localhost:8081/welcome
2018-07-04 13:42:16,647 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:42:16,647 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,647 - url=http://localhost:8081/welcome
2018-07-04 13:42:16,647 - method=GET
2018-07-04 13:42:16,647 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,648 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:42:16,648 - args:
2018-07-04 13:42:16,648 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,648 - response=/welcome
2018-07-04 13:42:16,648 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:16,660 - ===========进入拦截器==============
2018-07-04 13:42:16,661 - http://localhost:8081/common/top
2018-07-04 13:42:16,665 - ===========进入拦截器==============
2018-07-04 13:42:16,665 - ===========进入拦截器==============
2018-07-04 13:42:16,665 - http://localhost:8081/common/left
2018-07-04 13:42:16,665 - http://localhost:8081/common/footer
2018-07-04 13:42:16,668 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:42:16,668 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,668 - url=http://localhost:8081/common/top
2018-07-04 13:42:16,668 - method=GET
2018-07-04 13:42:16,668 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,668 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:42:16,668 - args:
2018-07-04 13:42:16,668 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,668 - response=/common/top
2018-07-04 13:42:16,668 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:16,673 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:42:16,673 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,673 - url=http://localhost:8081/common/left
2018-07-04 13:42:16,673 - method=GET
2018-07-04 13:42:16,673 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,673 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:42:16,674 - args:
2018-07-04 13:42:16,674 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,674 - response=/common/left
2018-07-04 13:42:16,674 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:16,677 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:42:16,677 - ===========请求时间:2018-07-04 13:42:16==========================
2018-07-04 13:42:16,677 - url=http://localhost:8081/common/footer
2018-07-04 13:42:16,677 - method=GET
2018-07-04 13:42:16,677 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:16,677 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:42:16,677 - args:
2018-07-04 13:42:16,677 - =============结束请求时间:2018-07-04 13:42:16,耗时:0s======================
2018-07-04 13:42:16,677 - response=/common/footer
2018-07-04 13:42:16,678 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:18,540 - ===========进入拦截器==============
2018-07-04 13:42:18,540 - http://localhost:8081/generator.html
2018-07-04 13:42:18,545 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:42:18,545 - ===========请求时间:2018-07-04 13:42:18==========================
2018-07-04 13:42:18,545 - url=http://localhost:8081/generator.html
2018-07-04 13:42:18,545 - method=GET
2018-07-04 13:42:18,545 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:18,545 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:42:18,545 - args:
2018-07-04 13:42:18,546 - =============结束请求时间:2018-07-04 13:42:18,耗时:0s======================
2018-07-04 13:42:18,546 - response=/generator
2018-07-04 13:42:18,546 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:42:18,699 - ===========进入拦截器==============
2018-07-04 13:42:18,699 - http://localhost:8081/sys/generator/list
2018-07-04 13:42:18,703 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:42:18,703 - ===========请求时间:2018-07-04 13:42:18==========================
2018-07-04 13:42:18,703 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:42:18,703 - method=GET
2018-07-04 13:42:18,703 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:42:18,703 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:42:18,704 - args:_search=false,nd=1530682938693,limit=10,page=1,sidx=,order=asc,_=1530682938615,
2018-07-04 13:42:18,709 - =============结束请求时间:2018-07-04 13:42:18,耗时:0s======================
2018-07-04 13:46:22,100 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5396 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:46:22,102 - No active profile set, falling back to default profiles: default
2018-07-04 13:46:22,277 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:46:22,358 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@368fb329: startup date [Wed Jul 04 13:46:22 CST 2018]; root of context hierarchy
2018-07-04 13:46:23,591 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:46:23,592 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:46:23,592 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:46:23,593 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:46:23,593 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:46:23,593 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:46:23,593 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:46:24,957 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:46:24,968 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:46:24,979 - Starting service [Tomcat]
2018-07-04 13:46:24,979 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:46:25,091 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:46:25,091 - Root WebApplicationContext: initialization completed in 2733 ms
2018-07-04 13:46:25,296 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:46:25,300 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:46:25,301 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:46:25,301 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:46:25,301 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:46:25,301 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:46:26,087 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@368fb329: startup date [Wed Jul 04 13:46:22 CST 2018]; root of context hierarchy
2018-07-04 13:46:26,171 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:46:26,172 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:46:26,173 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:46:26,173 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:46:26,173 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:46:26,173 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:46:26,173 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:46:26,173 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:46:26,173 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:46:26,174 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:46:26,174 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:46:26,174 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:46:26,174 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:46:26,174 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:46:26,175 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:46:26,175 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:46:26,175 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:46:26,175 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:46:26,178 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:46:26,178 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:46:26,180 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:46:26,181 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:46:26,181 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:46:26,181 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:46:26,181 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:46:26,181 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:46:26,182 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:46:26,182 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:46:26,182 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:46:26,183 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:46:26,183 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:46:26,183 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:46:26,184 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:46:26,185 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:46:26,186 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:46:26,186 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:46:26,186 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:46:26,186 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:46:26,186 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:46:26,187 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:46:26,187 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:46:26,190 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:46:26,190 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:46:26,190 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:46:26,190 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:46:26,191 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:46:26,191 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:46:26,191 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:46:26,192 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:46:26,193 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:46:26,235 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:46:26,235 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:46:26,254 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:46:26,282 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:46:26,915 - LiveReload server is running on port 35729
2018-07-04 13:46:27,049 - Registering beans for JMX exposure on startup
2018-07-04 13:46:27,050 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:46:27,055 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:46:27,064 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:46:27,075 - Using a shared selector for servlet write/read
2018-07-04 13:46:27,093 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:46:27,099 - Started FqLtdWasBackstageApplication in 5.81 seconds (JVM running for 6.965)
2018-07-04 13:46:49,140 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:46:49,141 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:46:49,177 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 13:46:49,193 - ===========进入拦截器==============
2018-07-04 13:46:49,214 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:46:49,214 - ===========请求时间:2018-07-04 13:46:49==========================
2018-07-04 13:46:49,214 - url=http://localhost:8081/login
2018-07-04 13:46:49,215 - method=GET
2018-07-04 13:46:49,215 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:49,215 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:46:49,215 - args:
2018-07-04 13:46:49,217 - =============结束请求时间:2018-07-04 13:46:49,耗时:0s======================
2018-07-04 13:46:49,217 - response=/login
2018-07-04 13:46:49,247 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:46:49,285 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:46:49,286 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:46:49,286 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:46:49,286 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:46:49,288 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:46:49,289 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:46:53,674 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:46:53,674 - ===========请求时间:2018-07-04 13:46:53==========================
2018-07-04 13:46:53,674 - url=http://localhost:8081/signIn
2018-07-04 13:46:53,674 - method=POST
2018-07-04 13:46:53,674 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:53,674 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:46:53,674 - args:userName=admin,password=123456,
2018-07-04 13:46:53,730 - {dataSource-1} inited
2018-07-04 13:46:54,053 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,053 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:46:54, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:46:54,117 - ===========进入拦截器==============
2018-07-04 13:46:54,117 - http://localhost:8081/home
2018-07-04 13:46:54,122 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:46:54,122 - ===========请求时间:2018-07-04 13:46:54==========================
2018-07-04 13:46:54,122 - url=http://localhost:8081/home
2018-07-04 13:46:54,122 - method=GET
2018-07-04 13:46:54,122 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:54,122 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:46:54,123 - args:
2018-07-04 13:46:54,123 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,123 - response=/home
2018-07-04 13:46:54,123 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:54,199 - ===========进入拦截器==============
2018-07-04 13:46:54,199 - http://localhost:8081/welcome
2018-07-04 13:46:54,212 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:46:54,212 - ===========请求时间:2018-07-04 13:46:54==========================
2018-07-04 13:46:54,212 - url=http://localhost:8081/welcome
2018-07-04 13:46:54,212 - method=GET
2018-07-04 13:46:54,212 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:54,212 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:46:54,212 - args:
2018-07-04 13:46:54,212 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,212 - response=/welcome
2018-07-04 13:46:54,213 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:54,218 - ===========进入拦截器==============
2018-07-04 13:46:54,218 - http://localhost:8081/common/top
2018-07-04 13:46:54,220 - ===========进入拦截器==============
2018-07-04 13:46:54,220 - http://localhost:8081/common/left
2018-07-04 13:46:54,222 - ===========进入拦截器==============
2018-07-04 13:46:54,222 - http://localhost:8081/common/footer
2018-07-04 13:46:54,223 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:46:54,223 - ===========请求时间:2018-07-04 13:46:54==========================
2018-07-04 13:46:54,223 - url=http://localhost:8081/common/top
2018-07-04 13:46:54,223 - method=GET
2018-07-04 13:46:54,223 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:54,223 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:46:54,223 - args:
2018-07-04 13:46:54,223 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,223 - response=/common/top
2018-07-04 13:46:54,224 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:54,230 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:46:54,230 - ===========请求时间:2018-07-04 13:46:54==========================
2018-07-04 13:46:54,230 - url=http://localhost:8081/common/footer
2018-07-04 13:46:54,230 - method=GET
2018-07-04 13:46:54,230 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:54,230 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:46:54,230 - args:
2018-07-04 13:46:54,230 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,230 - response=/common/footer
2018-07-04 13:46:54,231 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:54,235 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:46:54,235 - ===========请求时间:2018-07-04 13:46:54==========================
2018-07-04 13:46:54,236 - url=http://localhost:8081/common/left
2018-07-04 13:46:54,236 - method=GET
2018-07-04 13:46:54,236 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:54,236 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:46:54,236 - args:
2018-07-04 13:46:54,236 - =============结束请求时间:2018-07-04 13:46:54,耗时:0s======================
2018-07-04 13:46:54,236 - response=/common/left
2018-07-04 13:46:54,236 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:55,795 - ===========进入拦截器==============
2018-07-04 13:46:55,795 - http://localhost:8081/generator.html
2018-07-04 13:46:55,802 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:46:55,803 - ===========请求时间:2018-07-04 13:46:55==========================
2018-07-04 13:46:55,803 - url=http://localhost:8081/generator.html
2018-07-04 13:46:55,803 - method=GET
2018-07-04 13:46:55,803 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:55,803 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:46:55,803 - args:
2018-07-04 13:46:55,803 - =============结束请求时间:2018-07-04 13:46:55,耗时:0s======================
2018-07-04 13:46:55,803 - response=/generator
2018-07-04 13:46:55,803 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:46:55,948 - ===========进入拦截器==============
2018-07-04 13:46:55,948 - http://localhost:8081/sys/generator/list
2018-07-04 13:46:55,954 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:46:55,954 - ===========请求时间:2018-07-04 13:46:55==========================
2018-07-04 13:46:55,954 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:46:55,954 - method=GET
2018-07-04 13:46:55,954 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:46:55,954 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:46:55,954 - args:_search=false,nd=1530683215943,limit=10,page=1,sidx=,order=asc,_=1530683215869,
2018-07-04 13:46:55,960 - =============结束请求时间:2018-07-04 13:46:55,耗时:0s======================
2018-07-04 13:49:01,783 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10612 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:49:01,786 - No active profile set, falling back to default profiles: default
2018-07-04 13:49:02,052 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:49:02,139 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cb0cb45: startup date [Wed Jul 04 13:49:02 CST 2018]; root of context hierarchy
2018-07-04 13:49:03,433 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:49:03,434 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:49:03,434 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:49:03,434 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:49:03,434 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:49:03,434 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:49:03,435 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:49:04,589 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:49:04,600 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:49:04,608 - Starting service [Tomcat]
2018-07-04 13:49:04,609 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:49:04,708 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:49:04,708 - Root WebApplicationContext: initialization completed in 2569 ms
2018-07-04 13:49:04,992 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:49:04,999 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:49:05,000 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:49:05,000 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:49:05,000 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:49:05,000 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:49:05,798 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@cb0cb45: startup date [Wed Jul 04 13:49:02 CST 2018]; root of context hierarchy
2018-07-04 13:49:05,858 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:49:05,858 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:49:05,859 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:49:05,859 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:49:05,859 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:49:05,859 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:49:05,859 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:49:05,859 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:49:05,860 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:49:05,860 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:49:05,860 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:49:05,860 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:49:05,860 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:49:05,860 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:49:05,860 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:49:05,861 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:49:05,861 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:49:05,861 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:49:05,864 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:49:05,864 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:49:05,866 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:49:05,866 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:49:05,866 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:49:05,867 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:49:05,867 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:49:05,867 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:49:05,867 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:49:05,867 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:49:05,867 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:49:05,868 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:49:05,868 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:49:05,868 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:49:05,868 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:49:05,869 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:49:05,870 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:49:05,870 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:49:05,870 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:49:05,870 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:49:05,870 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:49:05,871 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:49:05,871 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:49:05,872 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:49:05,872 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:49:05,872 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:49:05,872 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:49:05,873 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:49:05,873 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:49:05,873 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:49:05,874 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:49:05,875 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:49:05,919 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:49:05,919 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:49:05,939 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:49:05,965 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:49:06,603 - LiveReload server is running on port 35729
2018-07-04 13:49:06,737 - Registering beans for JMX exposure on startup
2018-07-04 13:49:06,738 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:49:06,743 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:49:06,752 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:49:06,764 - Using a shared selector for servlet write/read
2018-07-04 13:49:06,778 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:49:06,782 - Started FqLtdWasBackstageApplication in 5.406 seconds (JVM running for 6.513)
2018-07-04 13:49:45,452 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:49:45,453 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:49:45,489 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 13:49:45,503 - ===========进入拦截器==============
2018-07-04 13:49:45,525 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:49:45,525 - ===========请求时间:2018-07-04 13:49:45==========================
2018-07-04 13:49:45,525 - url=http://localhost:8081/login
2018-07-04 13:49:45,525 - method=GET
2018-07-04 13:49:45,525 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:45,525 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:49:45,525 - args:
2018-07-04 13:49:45,528 - =============结束请求时间:2018-07-04 13:49:45,耗时:0s======================
2018-07-04 13:49:45,528 - response=/login
2018-07-04 13:49:45,562 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:49:45,598 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:49:45,598 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:49:45,598 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:49:45,598 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:49:45,601 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:49:45,601 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:49:49,761 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:49:49,761 - ===========请求时间:2018-07-04 13:49:49==========================
2018-07-04 13:49:49,761 - url=http://localhost:8081/signIn
2018-07-04 13:49:49,761 - method=POST
2018-07-04 13:49:49,761 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:49,761 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:49:49,761 - args:userName=admin,password=123456,
2018-07-04 13:49:49,816 - {dataSource-1} inited
2018-07-04 13:49:50,148 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,148 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:49:50, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:49:50,213 - ===========进入拦截器==============
2018-07-04 13:49:50,214 - http://localhost:8081/home
2018-07-04 13:49:50,233 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:49:50,234 - ===========请求时间:2018-07-04 13:49:50==========================
2018-07-04 13:49:50,234 - url=http://localhost:8081/home
2018-07-04 13:49:50,234 - method=GET
2018-07-04 13:49:50,234 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:50,234 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:49:50,234 - args:
2018-07-04 13:49:50,234 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,234 - response=/home
2018-07-04 13:49:50,234 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:50,307 - ===========进入拦截器==============
2018-07-04 13:49:50,307 - http://localhost:8081/welcome
2018-07-04 13:49:50,311 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:49:50,312 - ===========请求时间:2018-07-04 13:49:50==========================
2018-07-04 13:49:50,312 - url=http://localhost:8081/welcome
2018-07-04 13:49:50,312 - method=GET
2018-07-04 13:49:50,312 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:50,312 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:49:50,312 - args:
2018-07-04 13:49:50,312 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,312 - response=/welcome
2018-07-04 13:49:50,312 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:50,321 - ===========进入拦截器==============
2018-07-04 13:49:50,321 - http://localhost:8081/common/top
2018-07-04 13:49:50,322 - ===========进入拦截器==============
2018-07-04 13:49:50,322 - http://localhost:8081/common/left
2018-07-04 13:49:50,328 - ===========进入拦截器==============
2018-07-04 13:49:50,329 - http://localhost:8081/common/footer
2018-07-04 13:49:50,329 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:49:50,330 - ===========请求时间:2018-07-04 13:49:50==========================
2018-07-04 13:49:50,330 - url=http://localhost:8081/common/top
2018-07-04 13:49:50,330 - method=GET
2018-07-04 13:49:50,330 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:50,330 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:49:50,330 - args:
2018-07-04 13:49:50,330 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,330 - response=/common/top
2018-07-04 13:49:50,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:50,333 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:49:50,333 - ===========请求时间:2018-07-04 13:49:50==========================
2018-07-04 13:49:50,333 - url=http://localhost:8081/common/left
2018-07-04 13:49:50,333 - method=GET
2018-07-04 13:49:50,334 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:50,334 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:49:50,334 - args:
2018-07-04 13:49:50,334 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,334 - response=/common/left
2018-07-04 13:49:50,334 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:50,348 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:49:50,348 - ===========请求时间:2018-07-04 13:49:50==========================
2018-07-04 13:49:50,348 - url=http://localhost:8081/common/footer
2018-07-04 13:49:50,348 - method=GET
2018-07-04 13:49:50,348 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:50,348 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:49:50,348 - args:
2018-07-04 13:49:50,349 - =============结束请求时间:2018-07-04 13:49:50,耗时:0s======================
2018-07-04 13:49:50,349 - response=/common/footer
2018-07-04 13:49:50,349 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:51,714 - ===========进入拦截器==============
2018-07-04 13:49:51,714 - http://localhost:8081/generator.html
2018-07-04 13:49:51,721 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:49:51,721 - ===========请求时间:2018-07-04 13:49:51==========================
2018-07-04 13:49:51,721 - url=http://localhost:8081/generator.html
2018-07-04 13:49:51,721 - method=GET
2018-07-04 13:49:51,721 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:51,721 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:49:51,721 - args:
2018-07-04 13:49:51,721 - =============结束请求时间:2018-07-04 13:49:51,耗时:0s======================
2018-07-04 13:49:51,721 - response=/generator
2018-07-04 13:49:51,721 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:49:51,862 - ===========进入拦截器==============
2018-07-04 13:49:51,862 - http://localhost:8081/sys/generator/list
2018-07-04 13:49:51,868 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:49:51,868 - ===========请求时间:2018-07-04 13:49:51==========================
2018-07-04 13:49:51,868 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:49:51,868 - method=GET
2018-07-04 13:49:51,868 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:49:51,868 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:49:51,868 - args:_search=false,nd=1530683391855,limit=10,page=1,sidx=,order=asc,_=1530683391786,
2018-07-04 13:49:51,875 - =============结束请求时间:2018-07-04 13:49:51,耗时:0s======================
2018-07-04 13:50:10,378 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5360 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:50:10,381 - No active profile set, falling back to default profiles: default
2018-07-04 13:50:10,565 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:50:10,677 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a962df9: startup date [Wed Jul 04 13:50:10 CST 2018]; root of context hierarchy
2018-07-04 13:50:11,897 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:50:11,897 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:50:11,897 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:50:11,897 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:50:11,898 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:50:11,898 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:50:11,898 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:50:12,882 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:50:12,893 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:50:12,902 - Starting service [Tomcat]
2018-07-04 13:50:12,903 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:50:13,003 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:50:13,004 - Root WebApplicationContext: initialization completed in 2327 ms
2018-07-04 13:50:13,209 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:50:13,213 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:50:13,214 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:50:13,214 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:50:13,214 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:50:13,214 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:50:13,993 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5a962df9: startup date [Wed Jul 04 13:50:10 CST 2018]; root of context hierarchy
2018-07-04 13:50:14,053 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:50:14,054 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:50:14,055 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:50:14,055 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:50:14,055 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:50:14,055 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:50:14,055 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:50:14,055 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:50:14,055 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:50:14,056 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:50:14,056 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:50:14,056 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:50:14,056 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:50:14,056 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:50:14,056 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:50:14,056 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:50:14,057 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:50:14,057 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:50:14,059 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:50:14,060 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:50:14,061 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:50:14,062 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:50:14,062 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:50:14,062 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:50:14,062 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:50:14,062 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:50:14,062 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:50:14,063 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:50:14,063 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:50:14,063 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:50:14,064 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:50:14,064 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:50:14,064 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:50:14,065 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:50:14,065 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:50:14,065 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:50:14,065 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:50:14,066 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:50:14,066 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:50:14,066 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:50:14,067 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:50:14,068 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:50:14,068 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:50:14,068 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:50:14,068 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:50:14,068 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:50:14,068 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:50:14,069 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:50:14,070 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:50:14,070 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:50:14,115 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:50:14,115 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:50:14,134 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:50:14,161 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:50:14,759 - LiveReload server is running on port 35729
2018-07-04 13:50:14,911 - Registering beans for JMX exposure on startup
2018-07-04 13:50:14,912 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:50:14,917 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:50:14,929 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:50:14,943 - Using a shared selector for servlet write/read
2018-07-04 13:50:14,959 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:50:14,963 - Started FqLtdWasBackstageApplication in 5.022 seconds (JVM running for 6.199)
2018-07-04 13:50:20,734 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:50:20,734 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:50:20,769 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2018-07-04 13:50:20,783 - ===========进入拦截器==============
2018-07-04 13:50:20,804 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:50:20,805 - ===========请求时间:2018-07-04 13:50:20==========================
2018-07-04 13:50:20,805 - url=http://localhost:8081/login
2018-07-04 13:50:20,805 - method=GET
2018-07-04 13:50:20,805 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:20,805 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:50:20,805 - args:
2018-07-04 13:50:20,808 - =============结束请求时间:2018-07-04 13:50:20,耗时:0s======================
2018-07-04 13:50:20,808 - response=/login
2018-07-04 13:50:20,838 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:50:20,874 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:50:20,874 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:50:20,875 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:50:20,875 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:50:20,877 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:50:20,877 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:50:25,015 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:50:25,015 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,015 - url=http://localhost:8081/signIn
2018-07-04 13:50:25,015 - method=POST
2018-07-04 13:50:25,015 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,015 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:50:25,015 - args:userName=admin,password=123456,
2018-07-04 13:50:25,071 - {dataSource-1} inited
2018-07-04 13:50:25,410 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,410 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:50:25, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:50:25,470 - ===========进入拦截器==============
2018-07-04 13:50:25,471 - http://localhost:8081/home
2018-07-04 13:50:25,475 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:50:25,476 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,476 - url=http://localhost:8081/home
2018-07-04 13:50:25,476 - method=GET
2018-07-04 13:50:25,476 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,476 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:50:25,476 - args:
2018-07-04 13:50:25,476 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,476 - response=/home
2018-07-04 13:50:25,476 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:25,551 - ===========进入拦截器==============
2018-07-04 13:50:25,551 - http://localhost:8081/welcome
2018-07-04 13:50:25,562 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:50:25,562 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,562 - url=http://localhost:8081/welcome
2018-07-04 13:50:25,562 - method=GET
2018-07-04 13:50:25,562 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,562 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:50:25,562 - args:
2018-07-04 13:50:25,563 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,563 - response=/welcome
2018-07-04 13:50:25,563 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:25,566 - ===========进入拦截器==============
2018-07-04 13:50:25,566 - http://localhost:8081/common/top
2018-07-04 13:50:25,568 - ===========进入拦截器==============
2018-07-04 13:50:25,568 - http://localhost:8081/common/left
2018-07-04 13:50:25,570 - ===========进入拦截器==============
2018-07-04 13:50:25,570 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:50:25,570 - http://localhost:8081/common/footer
2018-07-04 13:50:25,570 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,570 - url=http://localhost:8081/common/top
2018-07-04 13:50:25,570 - method=GET
2018-07-04 13:50:25,570 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,570 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:50:25,570 - args:
2018-07-04 13:50:25,570 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,571 - response=/common/top
2018-07-04 13:50:25,571 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:25,574 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:50:25,574 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,575 - url=http://localhost:8081/common/footer
2018-07-04 13:50:25,575 - method=GET
2018-07-04 13:50:25,575 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,575 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:50:25,575 - args:
2018-07-04 13:50:25,575 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,575 - response=/common/footer
2018-07-04 13:50:25,575 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:25,584 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:50:25,584 - ===========请求时间:2018-07-04 13:50:25==========================
2018-07-04 13:50:25,584 - url=http://localhost:8081/common/left
2018-07-04 13:50:25,584 - method=GET
2018-07-04 13:50:25,584 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:25,584 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:50:25,584 - args:
2018-07-04 13:50:25,585 - =============结束请求时间:2018-07-04 13:50:25,耗时:0s======================
2018-07-04 13:50:25,585 - response=/common/left
2018-07-04 13:50:25,585 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:27,306 - ===========进入拦截器==============
2018-07-04 13:50:27,306 - http://localhost:8081/generator.html
2018-07-04 13:50:27,312 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:50:27,312 - ===========请求时间:2018-07-04 13:50:27==========================
2018-07-04 13:50:27,312 - url=http://localhost:8081/generator.html
2018-07-04 13:50:27,312 - method=GET
2018-07-04 13:50:27,312 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:27,312 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:50:27,312 - args:
2018-07-04 13:50:27,312 - =============结束请求时间:2018-07-04 13:50:27,耗时:0s======================
2018-07-04 13:50:27,313 - response=/generator
2018-07-04 13:50:27,313 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:50:27,451 - ===========进入拦截器==============
2018-07-04 13:50:27,451 - http://localhost:8081/sys/generator/list
2018-07-04 13:50:27,455 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:50:27,455 - ===========请求时间:2018-07-04 13:50:27==========================
2018-07-04 13:50:27,455 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:50:27,456 - method=GET
2018-07-04 13:50:27,456 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:50:27,456 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:50:27,456 - args:_search=false,nd=1530683427445,limit=10,page=1,sidx=,order=asc,_=1530683427373,
2018-07-04 13:50:27,461 - =============结束请求时间:2018-07-04 13:50:27,耗时:0s======================
2018-07-04 13:52:17,429 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9788 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:52:17,432 - No active profile set, falling back to default profiles: default
2018-07-04 13:52:17,621 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:52:17,681 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@475b0415: startup date [Wed Jul 04 13:52:17 CST 2018]; root of context hierarchy
2018-07-04 13:52:18,614 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:52:18,614 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:52:18,614 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:52:18,614 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:52:18,614 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:52:18,614 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:52:18,615 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:52:19,625 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:52:19,637 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:52:19,647 - Starting service [Tomcat]
2018-07-04 13:52:19,647 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:52:19,751 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:52:19,752 - Root WebApplicationContext: initialization completed in 2071 ms
2018-07-04 13:52:19,957 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:52:19,961 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:52:19,962 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:52:19,962 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:52:19,962 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:52:19,962 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:52:20,822 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@475b0415: startup date [Wed Jul 04 13:52:17 CST 2018]; root of context hierarchy
2018-07-04 13:52:20,883 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:52:20,884 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:52:20,885 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:52:20,885 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:52:20,885 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:52:20,885 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:52:20,885 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:52:20,885 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:52:20,885 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:52:20,886 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:52:20,886 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:52:20,886 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:52:20,886 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:52:20,886 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:52:20,886 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:52:20,886 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:52:20,887 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:52:20,887 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:52:20,890 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:52:20,890 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:52:20,892 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:52:20,893 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:52:20,893 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:52:20,893 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:52:20,893 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:52:20,893 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:52:20,893 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:52:20,893 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:52:20,893 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:52:20,894 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:52:20,894 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:52:20,894 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:52:20,895 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:52:20,896 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:52:20,896 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:52:20,896 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:52:20,896 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:52:20,896 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:52:20,896 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:52:20,897 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:52:20,897 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:52:20,898 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:52:20,899 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:52:20,899 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:52:20,899 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:52:20,899 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:52:20,899 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:52:20,899 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:52:20,901 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:52:20,901 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:52:20,944 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:52:20,945 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:52:20,966 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:52:20,993 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:52:21,584 - LiveReload server is running on port 35729
2018-07-04 13:52:21,710 - Registering beans for JMX exposure on startup
2018-07-04 13:52:21,711 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:52:21,716 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:52:21,725 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:52:21,736 - Using a shared selector for servlet write/read
2018-07-04 13:52:21,748 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:52:21,753 - Started FqLtdWasBackstageApplication in 5.23 seconds (JVM running for 6.377)
2018-07-04 13:54:45,225 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10072 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:54:45,227 - No active profile set, falling back to default profiles: default
2018-07-04 13:54:45,370 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:54:45,452 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@166a3962: startup date [Wed Jul 04 13:54:45 CST 2018]; root of context hierarchy
2018-07-04 13:54:46,538 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:54:46,538 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:54:46,538 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:54:46,538 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:54:46,538 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:54:46,539 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:54:46,539 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:54:48,018 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:54:48,030 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:54:48,040 - Starting service [Tomcat]
2018-07-04 13:54:48,040 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:54:48,152 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:54:48,152 - Root WebApplicationContext: initialization completed in 2700 ms
2018-07-04 13:54:48,364 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:54:48,367 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:54:48,368 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:54:48,368 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:54:48,368 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:54:48,368 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:54:49,147 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@166a3962: startup date [Wed Jul 04 13:54:45 CST 2018]; root of context hierarchy
2018-07-04 13:54:49,210 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:54:49,210 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:54:49,211 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:54:49,211 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:54:49,211 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:54:49,211 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:54:49,211 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:54:49,211 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:54:49,211 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:54:49,212 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:54:49,212 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:54:49,212 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:54:49,212 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:54:49,212 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:54:49,212 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:54:49,212 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:54:49,212 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:54:49,213 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:54:49,215 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:54:49,215 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:54:49,217 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:54:49,218 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:54:49,218 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:54:49,218 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:54:49,218 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:54:49,218 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:54:49,218 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:54:49,219 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:54:49,219 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:54:49,220 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:54:49,220 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:54:49,220 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:54:49,220 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:54:49,221 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:54:49,221 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:54:49,222 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:54:49,222 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:54:49,222 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:54:49,222 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:54:49,222 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:54:49,223 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:54:49,224 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:54:49,224 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:54:49,224 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:54:49,224 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:54:49,225 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:54:49,225 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:54:49,225 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:54:49,226 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:54:49,226 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:54:49,272 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:54:49,273 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:54:49,293 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:54:49,319 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:54:49,927 - LiveReload server is running on port 35729
2018-07-04 13:54:50,076 - Registering beans for JMX exposure on startup
2018-07-04 13:54:50,077 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:54:50,082 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:54:50,095 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:54:50,108 - Using a shared selector for servlet write/read
2018-07-04 13:54:50,124 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:54:50,129 - Started FqLtdWasBackstageApplication in 5.695 seconds (JVM running for 6.873)
2018-07-04 13:54:53,432 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 13:54:53,433 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 13:54:53,471 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-04 13:54:53,485 - ===========进入拦截器==============
2018-07-04 13:54:53,507 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 13:54:53,507 - ===========请求时间:2018-07-04 13:54:53==========================
2018-07-04 13:54:53,507 - url=http://localhost:8081/login
2018-07-04 13:54:53,507 - method=GET
2018-07-04 13:54:53,507 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:53,507 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 13:54:53,507 - args:
2018-07-04 13:54:53,510 - =============结束请求时间:2018-07-04 13:54:53,耗时:0s======================
2018-07-04 13:54:53,510 - response=/login
2018-07-04 13:54:53,539 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 13:54:53,573 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 13:54:53,573 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 13:54:53,573 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 13:54:53,573 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 13:54:53,576 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 13:54:53,576 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 13:54:57,826 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 13:54:57,827 - ===========请求时间:2018-07-04 13:54:57==========================
2018-07-04 13:54:57,827 - url=http://localhost:8081/signIn
2018-07-04 13:54:57,827 - method=POST
2018-07-04 13:54:57,827 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:57,827 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 13:54:57,827 - args:userName=admin,password=123456,
2018-07-04 13:54:57,882 - {dataSource-1} inited
2018-07-04 13:54:58,264 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,265 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 13:54:58, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 13:54:58,330 - ===========进入拦截器==============
2018-07-04 13:54:58,331 - http://localhost:8081/home
2018-07-04 13:54:58,337 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 13:54:58,337 - ===========请求时间:2018-07-04 13:54:58==========================
2018-07-04 13:54:58,337 - url=http://localhost:8081/home
2018-07-04 13:54:58,337 - method=GET
2018-07-04 13:54:58,337 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:58,338 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 13:54:58,338 - args:
2018-07-04 13:54:58,338 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,338 - response=/home
2018-07-04 13:54:58,338 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:54:58,417 - ===========进入拦截器==============
2018-07-04 13:54:58,417 - http://localhost:8081/welcome
2018-07-04 13:54:58,421 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 13:54:58,421 - ===========请求时间:2018-07-04 13:54:58==========================
2018-07-04 13:54:58,421 - url=http://localhost:8081/welcome
2018-07-04 13:54:58,421 - method=GET
2018-07-04 13:54:58,421 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:58,421 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 13:54:58,421 - args:
2018-07-04 13:54:58,422 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,422 - response=/welcome
2018-07-04 13:54:58,422 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:54:58,439 - ===========进入拦截器==============
2018-07-04 13:54:58,439 - http://localhost:8081/common/left
2018-07-04 13:54:58,440 - ===========进入拦截器==============
2018-07-04 13:54:58,440 - http://localhost:8081/common/footer
2018-07-04 13:54:58,440 - ===========进入拦截器==============
2018-07-04 13:54:58,440 - http://localhost:8081/common/top
2018-07-04 13:54:58,449 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 13:54:58,449 - ===========请求时间:2018-07-04 13:54:58==========================
2018-07-04 13:54:58,449 - url=http://localhost:8081/common/left
2018-07-04 13:54:58,449 - method=GET
2018-07-04 13:54:58,449 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:58,449 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 13:54:58,449 - args:
2018-07-04 13:54:58,450 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,450 - response=/common/left
2018-07-04 13:54:58,450 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:54:58,455 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 13:54:58,455 - ===========请求时间:2018-07-04 13:54:58==========================
2018-07-04 13:54:58,455 - url=http://localhost:8081/common/footer
2018-07-04 13:54:58,455 - method=GET
2018-07-04 13:54:58,455 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:58,455 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 13:54:58,455 - args:
2018-07-04 13:54:58,455 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,455 - response=/common/footer
2018-07-04 13:54:58,455 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:54:58,463 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 13:54:58,463 - ===========请求时间:2018-07-04 13:54:58==========================
2018-07-04 13:54:58,463 - url=http://localhost:8081/common/top
2018-07-04 13:54:58,463 - method=GET
2018-07-04 13:54:58,463 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:54:58,463 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 13:54:58,463 - args:
2018-07-04 13:54:58,463 - =============结束请求时间:2018-07-04 13:54:58,耗时:0s======================
2018-07-04 13:54:58,463 - response=/common/top
2018-07-04 13:54:58,463 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:55:00,017 - ===========进入拦截器==============
2018-07-04 13:55:00,018 - http://localhost:8081/generator.html
2018-07-04 13:55:00,025 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 13:55:00,025 - ===========请求时间:2018-07-04 13:55:00==========================
2018-07-04 13:55:00,025 - url=http://localhost:8081/generator.html
2018-07-04 13:55:00,025 - method=GET
2018-07-04 13:55:00,025 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:55:00,025 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 13:55:00,025 - args:
2018-07-04 13:55:00,025 - =============结束请求时间:2018-07-04 13:55:00,耗时:0s======================
2018-07-04 13:55:00,026 - response=/generator
2018-07-04 13:55:00,026 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 13:55:00,181 - ===========进入拦截器==============
2018-07-04 13:55:00,181 - http://localhost:8081/sys/generator/list
2018-07-04 13:55:00,188 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 13:55:00,188 - ===========请求时间:2018-07-04 13:55:00==========================
2018-07-04 13:55:00,188 - url=http://localhost:8081/sys/generator/list
2018-07-04 13:55:00,188 - method=GET
2018-07-04 13:55:00,188 - ip=0:0:0:0:0:0:0:1
2018-07-04 13:55:00,188 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 13:55:00,188 - args:_search=false,nd=1530683700176,limit=10,page=1,sidx=,order=asc,_=1530683700094,
2018-07-04 13:55:00,194 - =============结束请求时间:2018-07-04 13:55:00,耗时:0s======================
2018-07-04 13:56:35,337 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16332 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 13:56:35,339 - No active profile set, falling back to default profiles: default
2018-07-04 13:56:35,456 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 13:56:35,546 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f238b99: startup date [Wed Jul 04 13:56:35 CST 2018]; root of context hierarchy
2018-07-04 13:56:36,347 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:56:36,347 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:56:36,347 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:56:36,347 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:56:36,347 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 13:56:36,347 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 13:56:36,347 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 13:56:37,402 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 13:56:37,414 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 13:56:37,423 - Starting service [Tomcat]
2018-07-04 13:56:37,423 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 13:56:37,536 - Initializing Spring embedded WebApplicationContext
2018-07-04 13:56:37,536 - Root WebApplicationContext: initialization completed in 1991 ms
2018-07-04 13:56:37,741 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 13:56:37,745 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 13:56:37,746 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 13:56:37,747 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 13:56:37,747 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 13:56:37,747 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 13:56:38,544 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2f238b99: startup date [Wed Jul 04 13:56:35 CST 2018]; root of context hierarchy
2018-07-04 13:56:38,606 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 13:56:38,607 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 13:56:38,607 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 13:56:38,607 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 13:56:38,607 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 13:56:38,607 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 13:56:38,608 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 13:56:38,608 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 13:56:38,608 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 13:56:38,608 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 13:56:38,608 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 13:56:38,608 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 13:56:38,608 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 13:56:38,609 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 13:56:38,609 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 13:56:38,609 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 13:56:38,609 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 13:56:38,609 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 13:56:38,611 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 13:56:38,612 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 13:56:38,613 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 13:56:38,614 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 13:56:38,614 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:56:38,614 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 13:56:38,614 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 13:56:38,614 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 13:56:38,614 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 13:56:38,614 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 13:56:38,615 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 13:56:38,615 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 13:56:38,615 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 13:56:38,616 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 13:56:38,616 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 13:56:38,617 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 13:56:38,617 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 13:56:38,617 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 13:56:38,617 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 13:56:38,617 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 13:56:38,618 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 13:56:38,618 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 13:56:38,618 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 13:56:38,619 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:56:38,620 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 13:56:38,620 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:56:38,620 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 13:56:38,620 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 13:56:38,620 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 13:56:38,620 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 13:56:38,622 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 13:56:38,622 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 13:56:38,671 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:56:38,671 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:56:38,690 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 13:56:38,717 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 13:56:39,313 - LiveReload server is running on port 35729
2018-07-04 13:56:39,439 - Registering beans for JMX exposure on startup
2018-07-04 13:56:39,440 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 13:56:39,444 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 13:56:39,453 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 13:56:39,463 - Using a shared selector for servlet write/read
2018-07-04 13:56:39,476 - Tomcat started on port(s): 8081 (http)
2018-07-04 13:56:39,480 - Started FqLtdWasBackstageApplication in 4.925 seconds (JVM running for 6.135)
2018-07-04 14:01:17,292 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10040 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 14:01:17,294 - No active profile set, falling back to default profiles: default
2018-07-04 14:01:17,448 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 14:01:17,533 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Wed Jul 04 14:01:17 CST 2018]; root of context hierarchy
2018-07-04 14:01:18,320 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:01:18,321 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:01:18,321 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:01:18,321 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:01:18,321 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:01:18,321 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 14:01:18,321 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 14:01:19,291 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 14:01:19,305 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 14:01:19,313 - Starting service [Tomcat]
2018-07-04 14:01:19,314 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 14:01:19,420 - Initializing Spring embedded WebApplicationContext
2018-07-04 14:01:19,421 - Root WebApplicationContext: initialization completed in 1889 ms
2018-07-04 14:01:19,630 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 14:01:19,634 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 14:01:19,634 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 14:01:19,634 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 14:01:19,635 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 14:01:19,635 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 14:01:20,455 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Wed Jul 04 14:01:17 CST 2018]; root of context hierarchy
2018-07-04 14:01:20,515 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 14:01:20,516 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 14:01:20,517 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 14:01:20,517 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 14:01:20,517 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 14:01:20,517 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 14:01:20,517 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 14:01:20,517 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 14:01:20,517 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 14:01:20,518 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 14:01:20,518 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 14:01:20,518 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 14:01:20,518 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 14:01:20,518 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 14:01:20,518 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 14:01:20,518 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 14:01:20,519 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 14:01:20,519 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 14:01:20,521 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 14:01:20,521 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 14:01:20,523 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 14:01:20,523 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 14:01:20,523 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 14:01:20,523 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 14:01:20,524 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 14:01:20,524 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 14:01:20,524 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 14:01:20,524 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 14:01:20,524 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 14:01:20,525 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 14:01:20,526 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 14:01:20,526 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 14:01:20,526 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 14:01:20,527 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 14:01:20,528 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 14:01:20,528 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 14:01:20,528 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 14:01:20,528 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 14:01:20,528 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 14:01:20,529 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 14:01:20,529 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 14:01:20,531 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:01:20,531 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:01:20,531 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 14:01:20,531 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 14:01:20,531 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 14:01:20,531 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 14:01:20,531 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:01:20,533 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 14:01:20,533 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 14:01:20,582 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:01:20,582 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:01:20,601 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 14:01:20,627 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:01:21,265 - LiveReload server is running on port 35729
2018-07-04 14:01:21,399 - Registering beans for JMX exposure on startup
2018-07-04 14:01:21,401 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 14:01:21,405 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 14:01:21,414 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 14:01:21,425 - Using a shared selector for servlet write/read
2018-07-04 14:01:21,438 - Tomcat started on port(s): 8081 (http)
2018-07-04 14:01:21,443 - Started FqLtdWasBackstageApplication in 5.1 seconds (JVM running for 6.24)
2018-07-04 14:01:26,063 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 14:01:26,063 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 14:01:26,099 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2018-07-04 14:01:26,114 - ===========进入拦截器==============
2018-07-04 14:01:26,134 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 14:01:26,134 - ===========请求时间:2018-07-04 14:01:26==========================
2018-07-04 14:01:26,134 - url=http://localhost:8081/login
2018-07-04 14:01:26,134 - method=GET
2018-07-04 14:01:26,134 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:26,134 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 14:01:26,135 - args:
2018-07-04 14:01:26,137 - =============结束请求时间:2018-07-04 14:01:26,耗时:0s======================
2018-07-04 14:01:26,138 - response=/login
2018-07-04 14:01:26,166 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 14:01:26,201 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 14:01:26,201 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 14:01:26,201 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 14:01:26,201 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 14:01:26,204 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 14:01:26,204 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 14:01:30,453 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 14:01:30,453 - ===========请求时间:2018-07-04 14:01:30==========================
2018-07-04 14:01:30,453 - url=http://localhost:8081/signIn
2018-07-04 14:01:30,453 - method=POST
2018-07-04 14:01:30,453 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:30,453 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 14:01:30,453 - args:userName=admin,password=123456,
2018-07-04 14:01:30,518 - {dataSource-1} inited
2018-07-04 14:01:30,900 - =============结束请求时间:2018-07-04 14:01:30,耗时:0s======================
2018-07-04 14:01:30,900 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 14:01:30, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 14:01:30,964 - ===========进入拦截器==============
2018-07-04 14:01:30,965 - http://localhost:8081/home
2018-07-04 14:01:30,971 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 14:01:30,971 - ===========请求时间:2018-07-04 14:01:30==========================
2018-07-04 14:01:30,971 - url=http://localhost:8081/home
2018-07-04 14:01:30,971 - method=GET
2018-07-04 14:01:30,971 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:30,971 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 14:01:30,971 - args:
2018-07-04 14:01:30,971 - =============结束请求时间:2018-07-04 14:01:30,耗时:0s======================
2018-07-04 14:01:30,971 - response=/home
2018-07-04 14:01:30,971 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:31,044 - ===========进入拦截器==============
2018-07-04 14:01:31,045 - http://localhost:8081/welcome
2018-07-04 14:01:31,058 - ===========进入拦截器==============
2018-07-04 14:01:31,058 - http://localhost:8081/common/top
2018-07-04 14:01:31,058 - ===========进入拦截器==============
2018-07-04 14:01:31,058 - http://localhost:8081/common/left
2018-07-04 14:01:31,060 - ===========进入拦截器==============
2018-07-04 14:01:31,060 - http://localhost:8081/common/footer
2018-07-04 14:01:31,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 14:01:31,103 - ===========请求时间:2018-07-04 14:01:31==========================
2018-07-04 14:01:31,103 - url=http://localhost:8081/welcome
2018-07-04 14:01:31,103 - method=GET
2018-07-04 14:01:31,104 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:31,104 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 14:01:31,104 - args:
2018-07-04 14:01:31,104 - =============结束请求时间:2018-07-04 14:01:31,耗时:0s======================
2018-07-04 14:01:31,104 - response=/welcome
2018-07-04 14:01:31,104 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:31,130 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 14:01:31,130 - ===========请求时间:2018-07-04 14:01:31==========================
2018-07-04 14:01:31,130 - url=http://localhost:8081/common/top
2018-07-04 14:01:31,130 - method=GET
2018-07-04 14:01:31,130 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:31,130 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 14:01:31,130 - args:
2018-07-04 14:01:31,131 - =============结束请求时间:2018-07-04 14:01:31,耗时:0s======================
2018-07-04 14:01:31,131 - response=/common/top
2018-07-04 14:01:31,131 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:31,150 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 14:01:31,150 - ===========请求时间:2018-07-04 14:01:31==========================
2018-07-04 14:01:31,150 - url=http://localhost:8081/common/left
2018-07-04 14:01:31,150 - method=GET
2018-07-04 14:01:31,150 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:31,150 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 14:01:31,150 - args:
2018-07-04 14:01:31,150 - =============结束请求时间:2018-07-04 14:01:31,耗时:0s======================
2018-07-04 14:01:31,150 - response=/common/left
2018-07-04 14:01:31,151 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:31,208 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 14:01:31,209 - ===========请求时间:2018-07-04 14:01:31==========================
2018-07-04 14:01:31,209 - url=http://localhost:8081/common/footer
2018-07-04 14:01:31,209 - method=GET
2018-07-04 14:01:31,209 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:31,209 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 14:01:31,209 - args:
2018-07-04 14:01:31,209 - =============结束请求时间:2018-07-04 14:01:31,耗时:0s======================
2018-07-04 14:01:31,209 - response=/common/footer
2018-07-04 14:01:31,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:32,631 - ===========进入拦截器==============
2018-07-04 14:01:32,631 - http://localhost:8081/generator.html
2018-07-04 14:01:32,639 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 14:01:32,639 - ===========请求时间:2018-07-04 14:01:32==========================
2018-07-04 14:01:32,639 - url=http://localhost:8081/generator.html
2018-07-04 14:01:32,639 - method=GET
2018-07-04 14:01:32,639 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:32,639 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 14:01:32,639 - args:
2018-07-04 14:01:32,640 - =============结束请求时间:2018-07-04 14:01:32,耗时:0s======================
2018-07-04 14:01:32,640 - response=/generator
2018-07-04 14:01:32,640 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:01:32,780 - ===========进入拦截器==============
2018-07-04 14:01:32,780 - http://localhost:8081/sys/generator/list
2018-07-04 14:01:32,786 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 14:01:32,786 - ===========请求时间:2018-07-04 14:01:32==========================
2018-07-04 14:01:32,787 - url=http://localhost:8081/sys/generator/list
2018-07-04 14:01:32,787 - method=GET
2018-07-04 14:01:32,787 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:01:32,787 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 14:01:32,787 - args:_search=false,nd=1530684092774,limit=10,page=1,sidx=,order=asc,_=1530684092703,
2018-07-04 14:01:32,792 - =============结束请求时间:2018-07-04 14:01:32,耗时:0s======================
2018-07-04 14:02:53,906 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9644 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-04 14:02:53,908 - No active profile set, falling back to default profiles: default
2018-07-04 14:02:54,034 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-04 14:02:54,156 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b47a7: startup date [Wed Jul 04 14:02:54 CST 2018]; root of context hierarchy
2018-07-04 14:02:54,965 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:02:54,965 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:02:54,965 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:02:54,965 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:02:54,965 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-04 14:02:54,965 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-04 14:02:54,966 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-04 14:02:55,996 - Tomcat initialized with port(s): 8081 (http)
2018-07-04 14:02:56,007 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-04 14:02:56,016 - Starting service [Tomcat]
2018-07-04 14:02:56,016 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-04 14:02:56,114 - Initializing Spring embedded WebApplicationContext
2018-07-04 14:02:56,114 - Root WebApplicationContext: initialization completed in 1958 ms
2018-07-04 14:02:56,358 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-04 14:02:56,363 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-04 14:02:56,365 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-04 14:02:56,365 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-04 14:02:56,365 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-04 14:02:56,365 - Mapping filter: 'originFilter' to: [/*]
2018-07-04 14:02:57,203 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b47a7: startup date [Wed Jul 04 14:02:54 CST 2018]; root of context hierarchy
2018-07-04 14:02:57,269 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-04 14:02:57,270 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-04 14:02:57,270 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-04 14:02:57,270 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-04 14:02:57,270 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-04 14:02:57,270 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-04 14:02:57,270 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-04 14:02:57,271 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-04 14:02:57,271 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-04 14:02:57,272 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-04 14:02:57,273 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-04 14:02:57,273 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-04 14:02:57,273 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-04 14:02:57,274 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-04 14:02:57,274 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-04 14:02:57,274 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-04 14:02:57,274 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-04 14:02:57,274 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-04 14:02:57,277 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-04 14:02:57,277 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-04 14:02:57,280 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-04 14:02:57,280 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-04 14:02:57,280 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 14:02:57,280 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-04 14:02:57,281 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-04 14:02:57,281 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-04 14:02:57,281 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-04 14:02:57,281 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-04 14:02:57,281 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-04 14:02:57,282 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-04 14:02:57,282 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-04 14:02:57,282 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-04 14:02:57,282 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-04 14:02:57,283 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-04 14:02:57,284 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-04 14:02:57,284 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-04 14:02:57,284 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-04 14:02:57,284 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-04 14:02:57,284 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-04 14:02:57,285 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-04 14:02:57,286 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-04 14:02:57,289 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:02:57,289 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-04 14:02:57,289 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-04 14:02:57,289 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-04 14:02:57,290 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-04 14:02:57,290 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:02:57,290 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-04 14:02:57,291 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-04 14:02:57,292 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-04 14:02:57,337 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:02:57,338 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:02:57,357 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-04 14:02:57,384 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-04 14:02:57,996 - LiveReload server is running on port 35729
2018-07-04 14:02:58,156 - Registering beans for JMX exposure on startup
2018-07-04 14:02:58,157 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-04 14:02:58,164 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-04 14:02:58,176 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-04 14:02:58,190 - Using a shared selector for servlet write/read
2018-07-04 14:02:58,205 - Tomcat started on port(s): 8081 (http)
2018-07-04 14:02:58,210 - Started FqLtdWasBackstageApplication in 5.125 seconds (JVM running for 6.444)
2018-07-04 14:03:02,313 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-04 14:03:02,314 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-04 14:03:02,351 - FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2018-07-04 14:03:02,366 - ===========进入拦截器==============
2018-07-04 14:03:02,388 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-04 14:03:02,388 - ===========请求时间:2018-07-04 14:03:02==========================
2018-07-04 14:03:02,388 - url=http://localhost:8081/login
2018-07-04 14:03:02,388 - method=GET
2018-07-04 14:03:02,388 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:02,388 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-04 14:03:02,388 - args:
2018-07-04 14:03:02,391 - =============结束请求时间:2018-07-04 14:03:02,耗时:0s======================
2018-07-04 14:03:02,391 - response=/login
2018-07-04 14:03:02,420 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-04 14:03:02,458 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-04 14:03:02,458 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-04 14:03:02,458 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-04 14:03:02,458 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-04 14:03:02,461 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-04 14:03:02,462 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-04 14:03:06,643 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-04 14:03:06,643 - ===========请求时间:2018-07-04 14:03:06==========================
2018-07-04 14:03:06,643 - url=http://localhost:8081/signIn
2018-07-04 14:03:06,643 - method=POST
2018-07-04 14:03:06,643 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:06,643 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-04 14:03:06,643 - args:userName=admin,password=123456,
2018-07-04 14:03:06,701 - {dataSource-1} inited
2018-07-04 14:03:07,053 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,055 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-04 14:03:07, version=3, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 09:03:44.0, status=0)}, page=null, totalCount=null)
2018-07-04 14:03:07,134 - ===========进入拦截器==============
2018-07-04 14:03:07,135 - http://localhost:8081/home
2018-07-04 14:03:07,141 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-04 14:03:07,141 - ===========请求时间:2018-07-04 14:03:07==========================
2018-07-04 14:03:07,141 - url=http://localhost:8081/home
2018-07-04 14:03:07,141 - method=GET
2018-07-04 14:03:07,141 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:07,141 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-04 14:03:07,141 - args:
2018-07-04 14:03:07,141 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,141 - response=/home
2018-07-04 14:03:07,141 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:07,214 - ===========进入拦截器==============
2018-07-04 14:03:07,215 - http://localhost:8081/welcome
2018-07-04 14:03:07,230 - ===========进入拦截器==============
2018-07-04 14:03:07,230 - http://localhost:8081/common/top
2018-07-04 14:03:07,232 - ===========进入拦截器==============
2018-07-04 14:03:07,232 - http://localhost:8081/common/footer
2018-07-04 14:03:07,232 - ===========进入拦截器==============
2018-07-04 14:03:07,232 - http://localhost:8081/common/left
2018-07-04 14:03:07,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-04 14:03:07,239 - ===========请求时间:2018-07-04 14:03:07==========================
2018-07-04 14:03:07,240 - url=http://localhost:8081/welcome
2018-07-04 14:03:07,240 - method=GET
2018-07-04 14:03:07,240 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:07,240 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-04 14:03:07,240 - args:
2018-07-04 14:03:07,240 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,240 - response=/welcome
2018-07-04 14:03:07,240 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:07,263 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-04 14:03:07,264 - ===========请求时间:2018-07-04 14:03:07==========================
2018-07-04 14:03:07,264 - url=http://localhost:8081/common/top
2018-07-04 14:03:07,264 - method=GET
2018-07-04 14:03:07,264 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:07,264 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-04 14:03:07,264 - args:
2018-07-04 14:03:07,264 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,264 - response=/common/top
2018-07-04 14:03:07,265 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:07,272 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-04 14:03:07,272 - ===========请求时间:2018-07-04 14:03:07==========================
2018-07-04 14:03:07,272 - url=http://localhost:8081/common/footer
2018-07-04 14:03:07,273 - method=GET
2018-07-04 14:03:07,273 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:07,273 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-04 14:03:07,273 - args:
2018-07-04 14:03:07,273 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,273 - response=/common/footer
2018-07-04 14:03:07,273 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:07,278 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-04 14:03:07,279 - ===========请求时间:2018-07-04 14:03:07==========================
2018-07-04 14:03:07,279 - url=http://localhost:8081/common/left
2018-07-04 14:03:07,279 - method=GET
2018-07-04 14:03:07,279 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:07,279 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-04 14:03:07,279 - args:
2018-07-04 14:03:07,279 - =============结束请求时间:2018-07-04 14:03:07,耗时:0s======================
2018-07-04 14:03:07,279 - response=/common/left
2018-07-04 14:03:07,279 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:09,008 - ===========进入拦截器==============
2018-07-04 14:03:09,009 - http://localhost:8081/generator.html
2018-07-04 14:03:09,023 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 14:03:09,023 - ===========请求时间:2018-07-04 14:03:09==========================
2018-07-04 14:03:09,023 - url=http://localhost:8081/generator.html
2018-07-04 14:03:09,023 - method=GET
2018-07-04 14:03:09,023 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:09,023 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 14:03:09,023 - args:
2018-07-04 14:03:09,023 - =============结束请求时间:2018-07-04 14:03:09,耗时:0s======================
2018-07-04 14:03:09,023 - response=/generator
2018-07-04 14:03:09,024 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:09,190 - ===========进入拦截器==============
2018-07-04 14:03:09,191 - http://localhost:8081/sys/generator/list
2018-07-04 14:03:09,197 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 14:03:09,197 - ===========请求时间:2018-07-04 14:03:09==========================
2018-07-04 14:03:09,197 - url=http://localhost:8081/sys/generator/list
2018-07-04 14:03:09,197 - method=GET
2018-07-04 14:03:09,197 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:09,197 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 14:03:09,197 - args:_search=false,nd=1530684189185,limit=10,page=1,sidx=,order=asc,_=1530684189102,
2018-07-04 14:03:09,203 - =============结束请求时间:2018-07-04 14:03:09,耗时:0s======================
2018-07-04 14:03:52,878 - ===========进入拦截器==============
2018-07-04 14:03:52,878 - http://localhost:8081/generator.html
2018-07-04 14:03:52,883 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.generator============
2018-07-04 14:03:52,883 - ===========请求时间:2018-07-04 14:03:52==========================
2018-07-04 14:03:52,883 - url=http://localhost:8081/generator.html
2018-07-04 14:03:52,883 - method=GET
2018-07-04 14:03:52,883 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:52,883 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.generator
2018-07-04 14:03:52,883 - args:
2018-07-04 14:03:52,883 - =============结束请求时间:2018-07-04 14:03:52,耗时:0s======================
2018-07-04 14:03:52,883 - response=/generator
2018-07-04 14:03:52,883 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-04 14:03:53,010 - ===========进入拦截器==============
2018-07-04 14:03:53,010 - http://localhost:8081/sys/generator/list
2018-07-04 14:03:53,014 - ===========开始请求com.fq.fqltdwasbackstage.controller.SysGeneratorController.list============
2018-07-04 14:03:53,015 - ===========请求时间:2018-07-04 14:03:53==========================
2018-07-04 14:03:53,015 - url=http://localhost:8081/sys/generator/list
2018-07-04 14:03:53,015 - method=GET
2018-07-04 14:03:53,015 - ip=0:0:0:0:0:0:0:1
2018-07-04 14:03:53,015 - class_method=com.fq.fqltdwasbackstage.controller.SysGeneratorController.list
2018-07-04 14:03:53,015 - args:_search=false,nd=1530684233004,limit=10,page=1,sidx=,order=asc,_=1530684232947,
2018-07-04 14:04:59,847 - =============结束请求时间:2018-07-04 14:04:59,耗时:66s======================
