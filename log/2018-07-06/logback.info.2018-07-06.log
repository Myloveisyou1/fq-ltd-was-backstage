2018-07-06 09:02:55,514 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14472 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:02:55,517 - No active profile set, falling back to default profiles: default
2018-07-06 09:02:55,788 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:02:55,863 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b9c629d: startup date [Fri Jul 06 09:02:55 CST 2018]; root of context hierarchy
2018-07-06 09:02:57,048 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,050 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,050 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,051 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,051 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,051 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:02:57,051 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:02:57,051 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:02:58,451 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:02:58,462 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:02:58,472 - Starting service [Tomcat]
2018-07-06 09:02:58,472 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:02:58,588 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:02:58,588 - Root WebApplicationContext: initialization completed in 2725 ms
2018-07-06 09:02:58,828 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:02:58,832 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:02:58,833 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:02:58,833 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:02:58,833 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:02:58,833 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:03:00,324 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1b9c629d: startup date [Fri Jul 06 09:02:55 CST 2018]; root of context hierarchy
2018-07-06 09:03:00,415 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:03:00,428 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:03:00,428 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:03:00,428 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:03:00,428 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:03:00,428 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:03:00,428 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:03:00,429 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:03:00,429 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:03:00,429 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:03:00,429 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:03:00,429 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:03:00,430 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:03:00,430 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:03:00,430 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:03:00,430 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:03:00,430 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:03:00,430 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:03:00,430 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:03:00,430 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:03:00,430 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:03:00,431 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:03:00,431 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:03:00,432 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:03:00,433 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:03:00,435 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:03:00,435 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:03:00,435 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:03:00,435 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:03:00,435 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:03:00,436 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:03:00,436 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:03:00,436 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:03:00,436 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:03:00,437 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:03:00,437 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:03:00,437 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:03:00,437 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:03:00,438 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:03:00,438 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:03:00,439 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:03:00,439 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:03:00,439 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:03:00,439 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:03:00,439 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:03:00,440 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:03:00,441 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:03:00,441 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:03:00,441 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:03:00,441 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:03:00,441 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:03:00,441 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:03:00,441 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:03:00,442 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:03:00,442 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:03:00,442 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:03:00,443 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:03:00,443 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:03:00,443 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:03:00,443 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:03:00,444 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:03:00,445 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:03:00,496 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:03:00,496 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:03:00,521 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:03:00,562 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:03:01,400 - LiveReload server is running on port 35729
2018-07-06 09:03:01,527 - Registering beans for JMX exposure on startup
2018-07-06 09:03:01,529 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:03:01,535 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:03:01,547 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:03:01,581 - Using a shared selector for servlet write/read
2018-07-06 09:03:01,600 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:03:01,609 - Started FqLtdWasBackstageApplication in 6.829 seconds (JVM running for 8.059)
2018-07-06 09:03:06,260 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:03:06,260 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:03:06,304 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-06 09:03:06,338 - ===========进入拦截器==============
2018-07-06 09:03:06,374 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:03:06,374 - ===========请求时间:2018-07-06 09:03:06==========================
2018-07-06 09:03:06,375 - url=http://localhost:8081/login
2018-07-06 09:03:06,375 - method=GET
2018-07-06 09:03:06,375 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:06,375 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:03:06,375 - args:
2018-07-06 09:03:06,378 - =============结束请求时间:2018-07-06 09:03:06,耗时:0s======================
2018-07-06 09:03:06,379 - response=/login
2018-07-06 09:03:06,411 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:03:06,489 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:03:06,489 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:03:06,490 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:03:06,490 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:03:06,495 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:03:06,495 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:03:11,426 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:03:11,426 - ===========请求时间:2018-07-06 09:03:11==========================
2018-07-06 09:03:11,426 - url=http://localhost:8081/signIn
2018-07-06 09:03:11,426 - method=POST
2018-07-06 09:03:11,426 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:11,426 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:03:11,427 - args:userName=admin,password=123456,
2018-07-06 09:03:11,524 - {dataSource-1} inited
2018-07-06 09:03:12,012 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,012 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:03:11, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:03:12,117 - ===========进入拦截器==============
2018-07-06 09:03:12,117 - http://localhost:8081/home
2018-07-06 09:03:12,129 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:03:12,129 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,129 - url=http://localhost:8081/home
2018-07-06 09:03:12,129 - method=GET
2018-07-06 09:03:12,129 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,129 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:03:12,129 - args:
2018-07-06 09:03:12,129 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,129 - response=/home
2018-07-06 09:03:12,129 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:12,234 - ===========进入拦截器==============
2018-07-06 09:03:12,234 - http://localhost:8081/welcome
2018-07-06 09:03:12,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:03:12,239 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,239 - url=http://localhost:8081/welcome
2018-07-06 09:03:12,239 - method=GET
2018-07-06 09:03:12,239 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,239 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:03:12,239 - args:
2018-07-06 09:03:12,240 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,240 - response=/welcome
2018-07-06 09:03:12,240 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:12,299 - ===========进入拦截器==============
2018-07-06 09:03:12,300 - http://localhost:8081/common/top
2018-07-06 09:03:12,301 - ===========进入拦截器==============
2018-07-06 09:03:12,301 - http://localhost:8081/common/left
2018-07-06 09:03:12,302 - ===========进入拦截器==============
2018-07-06 09:03:12,302 - http://localhost:8081/common/footer
2018-07-06 09:03:12,309 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:03:12,309 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,309 - url=http://localhost:8081/common/top
2018-07-06 09:03:12,309 - method=GET
2018-07-06 09:03:12,309 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,309 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:03:12,309 - args:
2018-07-06 09:03:12,310 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,310 - response=/common/top
2018-07-06 09:03:12,310 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:12,329 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:03:12,329 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,329 - url=http://localhost:8081/common/left
2018-07-06 09:03:12,329 - method=GET
2018-07-06 09:03:12,329 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,329 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:03:12,329 - args:
2018-07-06 09:03:12,329 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,329 - response=/common/left
2018-07-06 09:03:12,329 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:12,333 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:03:12,334 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,334 - url=http://localhost:8081/common/footer
2018-07-06 09:03:12,334 - method=GET
2018-07-06 09:03:12,334 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,334 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:03:12,334 - args:
2018-07-06 09:03:12,334 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,334 - response=/common/footer
2018-07-06 09:03:12,334 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:12,390 - ===========进入拦截器==============
2018-07-06 09:03:12,390 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:03:12,399 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:03:12,399 - ===========请求时间:2018-07-06 09:03:12==========================
2018-07-06 09:03:12,399 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:03:12,399 - method=GET
2018-07-06 09:03:12,399 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:12,400 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:03:12,400 - args:roleId=1,
2018-07-06 09:03:12,433 - =============结束请求时间:2018-07-06 09:03:12,耗时:0s======================
2018-07-06 09:03:12,433 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:03:12,443 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:15,717 - ===========进入拦截器==============
2018-07-06 09:03:15,718 - http://localhost:8081/number-coin.html
2018-07-06 09:03:15,722 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:03:15,722 - ===========请求时间:2018-07-06 09:03:15==========================
2018-07-06 09:03:15,722 - url=http://localhost:8081/number-coin.html
2018-07-06 09:03:15,722 - method=GET
2018-07-06 09:03:15,722 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:15,722 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:03:15,722 - args:
2018-07-06 09:03:15,722 - =============结束请求时间:2018-07-06 09:03:15,耗时:0s======================
2018-07-06 09:03:15,722 - response=/number-coin
2018-07-06 09:03:15,723 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:15,914 - ===========进入拦截器==============
2018-07-06 09:03:15,914 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:03:15,950 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:03:15,950 - ===========请求时间:2018-07-06 09:03:15==========================
2018-07-06 09:03:15,951 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:03:15,951 - method=GET
2018-07-06 09:03:15,951 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:15,951 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:03:15,951 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:03:15,974 - =============结束请求时间:2018-07-06 09:03:15,耗时:0s======================
2018-07-06 09:03:15,974 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:03:15,981 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:18,973 - ===========进入拦截器==============
2018-07-06 09:03:18,974 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:03:18,984 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:03:18,985 - ===========请求时间:2018-07-06 09:03:18==========================
2018-07-06 09:03:18,985 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:03:18,985 - method=GET
2018-07-06 09:03:18,985 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:18,985 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:03:18,985 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:03:18,995 - =============结束请求时间:2018-07-06 09:03:18,耗时:0s======================
2018-07-06 09:03:18,995 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:03:18,996 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:03:22,997 - ===========进入拦截器==============
2018-07-06 09:03:22,997 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:03:23,002 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-06 09:03:23,002 - ===========请求时间:2018-07-06 09:03:23==========================
2018-07-06 09:03:23,002 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:03:23,002 - method=GET
2018-07-06 09:03:23,002 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:03:23,002 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-06 09:03:23,002 - args:wasType=BTC,
2018-07-06 09:03:24,077 - =============结束请求时间:2018-07-06 09:03:24,耗时:1s======================
2018-07-06 09:03:24,077 - response=Result(code=200, msg=成功, data={"err":0,"code":"200","msg":"处理成功","data":{"min_confirm":1,"block_number":547,"was_type":"BTC"},"count":1}, page=null, totalCount=null)
2018-07-06 09:03:24,079 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:16,642 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16288 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:09:16,645 - No active profile set, falling back to default profiles: default
2018-07-06 09:09:16,830 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:09:16,936 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ac260e2: startup date [Fri Jul 06 09:09:16 CST 2018]; root of context hierarchy
2018-07-06 09:09:18,601 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:09:18,602 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:09:18,604 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:09:19,688 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:09:19,699 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:09:19,708 - Starting service [Tomcat]
2018-07-06 09:09:19,708 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:09:19,820 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:09:19,820 - Root WebApplicationContext: initialization completed in 2885 ms
2018-07-06 09:09:20,102 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:09:20,106 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:09:20,107 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:09:20,107 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:09:20,107 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:09:20,107 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:09:21,594 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ac260e2: startup date [Fri Jul 06 09:09:16 CST 2018]; root of context hierarchy
2018-07-06 09:09:21,698 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:09:21,710 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:09:21,710 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:09:21,710 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:09:21,710 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:09:21,710 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:09:21,711 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:09:21,711 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:09:21,711 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:09:21,711 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:09:21,711 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:09:21,711 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:09:21,711 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:09:21,711 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:09:21,712 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:09:21,712 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:09:21,713 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:09:21,713 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:09:21,713 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:09:21,713 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:09:21,713 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:09:21,713 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:09:21,713 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:09:21,715 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:09:21,715 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:09:21,717 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:09:21,718 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:09:21,718 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:09:21,718 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:09:21,718 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:09:21,718 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:09:21,718 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:09:21,718 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:09:21,719 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:09:21,719 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:09:21,720 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:09:21,720 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:09:21,720 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:09:21,721 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:09:21,721 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:09:21,721 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:09:21,721 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:09:21,722 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:09:21,722 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:09:21,722 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:09:21,723 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:09:21,724 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:09:21,724 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:09:21,724 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:09:21,724 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:09:21,724 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:09:21,724 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:09:21,724 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:09:21,725 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:09:21,725 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:09:21,726 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:09:21,726 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:09:21,726 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:09:21,726 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:09:21,726 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:09:21,728 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:09:21,728 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:09:21,780 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:09:21,780 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:09:21,805 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:09:21,843 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:09:22,714 - LiveReload server is running on port 35729
2018-07-06 09:09:22,845 - Registering beans for JMX exposure on startup
2018-07-06 09:09:22,847 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:09:22,853 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:09:22,867 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:09:22,898 - Using a shared selector for servlet write/read
2018-07-06 09:09:22,923 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:09:22,937 - Started FqLtdWasBackstageApplication in 6.781 seconds (JVM running for 7.891)
2018-07-06 09:09:26,048 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:09:26,048 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:09:26,090 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-06 09:09:26,120 - ===========进入拦截器==============
2018-07-06 09:09:26,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:09:26,158 - ===========请求时间:2018-07-06 09:09:26==========================
2018-07-06 09:09:26,158 - url=http://localhost:8081/login
2018-07-06 09:09:26,158 - method=GET
2018-07-06 09:09:26,158 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:26,158 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:09:26,158 - args:
2018-07-06 09:09:26,162 - =============结束请求时间:2018-07-06 09:09:26,耗时:0s======================
2018-07-06 09:09:26,162 - response=/login
2018-07-06 09:09:26,196 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:09:26,270 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:09:26,270 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:09:26,270 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:09:26,271 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:09:26,277 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:09:26,277 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:09:30,471 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:09:30,471 - ===========请求时间:2018-07-06 09:09:30==========================
2018-07-06 09:09:30,471 - url=http://localhost:8081/signIn
2018-07-06 09:09:30,471 - method=POST
2018-07-06 09:09:30,471 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:30,471 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:09:30,471 - args:userName=admin,password=123456,
2018-07-06 09:09:30,568 - {dataSource-1} inited
2018-07-06 09:09:30,998 - =============结束请求时间:2018-07-06 09:09:30,耗时:0s======================
2018-07-06 09:09:30,998 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:09:30, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:09:31,098 - ===========进入拦截器==============
2018-07-06 09:09:31,099 - http://localhost:8081/home
2018-07-06 09:09:31,109 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:09:31,109 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,109 - url=http://localhost:8081/home
2018-07-06 09:09:31,109 - method=GET
2018-07-06 09:09:31,109 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,109 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:09:31,109 - args:
2018-07-06 09:09:31,109 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,109 - response=/home
2018-07-06 09:09:31,109 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:31,211 - ===========进入拦截器==============
2018-07-06 09:09:31,213 - http://localhost:8081/welcome
2018-07-06 09:09:31,219 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:09:31,219 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,219 - url=http://localhost:8081/welcome
2018-07-06 09:09:31,219 - method=GET
2018-07-06 09:09:31,219 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,219 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:09:31,219 - args:
2018-07-06 09:09:31,219 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,219 - response=/welcome
2018-07-06 09:09:31,219 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:31,279 - ===========进入拦截器==============
2018-07-06 09:09:31,279 - http://localhost:8081/common/top
2018-07-06 09:09:31,281 - ===========进入拦截器==============
2018-07-06 09:09:31,281 - http://localhost:8081/common/left
2018-07-06 09:09:31,282 - ===========进入拦截器==============
2018-07-06 09:09:31,282 - http://localhost:8081/common/footer
2018-07-06 09:09:31,285 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:09:31,285 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,285 - url=http://localhost:8081/common/top
2018-07-06 09:09:31,285 - method=GET
2018-07-06 09:09:31,285 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,285 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:09:31,285 - args:
2018-07-06 09:09:31,285 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,285 - response=/common/top
2018-07-06 09:09:31,286 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:31,291 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:09:31,292 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,292 - url=http://localhost:8081/common/left
2018-07-06 09:09:31,292 - method=GET
2018-07-06 09:09:31,292 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,292 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:09:31,292 - args:
2018-07-06 09:09:31,292 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,292 - response=/common/left
2018-07-06 09:09:31,293 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:31,300 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:09:31,301 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,301 - url=http://localhost:8081/common/footer
2018-07-06 09:09:31,301 - method=GET
2018-07-06 09:09:31,301 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,301 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:09:31,301 - args:
2018-07-06 09:09:31,301 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,301 - response=/common/footer
2018-07-06 09:09:31,301 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:31,338 - ===========进入拦截器==============
2018-07-06 09:09:31,338 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:09:31,351 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:09:31,351 - ===========请求时间:2018-07-06 09:09:31==========================
2018-07-06 09:09:31,351 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:09:31,352 - method=GET
2018-07-06 09:09:31,352 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:31,352 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:09:31,352 - args:roleId=1,
2018-07-06 09:09:31,398 - =============结束请求时间:2018-07-06 09:09:31,耗时:0s======================
2018-07-06 09:09:31,399 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:09:31,413 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:34,611 - ===========进入拦截器==============
2018-07-06 09:09:34,611 - http://localhost:8081/number-coin.html
2018-07-06 09:09:34,620 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:09:34,620 - ===========请求时间:2018-07-06 09:09:34==========================
2018-07-06 09:09:34,620 - url=http://localhost:8081/number-coin.html
2018-07-06 09:09:34,620 - method=GET
2018-07-06 09:09:34,620 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:34,620 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:09:34,620 - args:
2018-07-06 09:09:34,620 - =============结束请求时间:2018-07-06 09:09:34,耗时:0s======================
2018-07-06 09:09:34,620 - response=/number-coin
2018-07-06 09:09:34,620 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:34,797 - ===========进入拦截器==============
2018-07-06 09:09:34,797 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:09:34,821 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:09:34,821 - ===========请求时间:2018-07-06 09:09:34==========================
2018-07-06 09:09:34,821 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:09:34,821 - method=GET
2018-07-06 09:09:34,821 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:34,821 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:09:34,821 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:09:34,844 - =============结束请求时间:2018-07-06 09:09:34,耗时:0s======================
2018-07-06 09:09:34,845 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:09:34,850 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:38,679 - ===========进入拦截器==============
2018-07-06 09:09:38,680 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:09:38,700 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:09:38,700 - ===========请求时间:2018-07-06 09:09:38==========================
2018-07-06 09:09:38,700 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:09:38,700 - method=GET
2018-07-06 09:09:38,700 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:38,700 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:09:38,700 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:09:38,714 - =============结束请求时间:2018-07-06 09:09:38,耗时:0s======================
2018-07-06 09:09:38,714 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:09:38,715 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:09:42,094 - ===========进入拦截器==============
2018-07-06 09:09:42,094 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:09:42,100 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-06 09:09:42,100 - ===========请求时间:2018-07-06 09:09:42==========================
2018-07-06 09:09:42,100 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:09:42,100 - method=GET
2018-07-06 09:09:42,100 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:09:42,100 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-06 09:09:42,100 - args:wasType=BTC,
2018-07-06 09:09:43,207 - =============结束请求时间:2018-07-06 09:09:43,耗时:1s======================
2018-07-06 09:09:43,208 - response=Result(code=200, msg=成功, data={msg=处理成功, blockNumber=547}, page=null, totalCount=null)
2018-07-06 09:09:43,210 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:20,243 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8404 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:11:20,245 - No active profile set, falling back to default profiles: default
2018-07-06 09:11:20,393 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:11:20,459 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6590e518: startup date [Fri Jul 06 09:11:20 CST 2018]; root of context hierarchy
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,553 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:11:21,554 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:11:21,554 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:11:22,981 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:11:22,993 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:11:23,004 - Starting service [Tomcat]
2018-07-06 09:11:23,004 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:11:23,113 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:11:23,114 - Root WebApplicationContext: initialization completed in 2655 ms
2018-07-06 09:11:23,355 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:11:23,360 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:11:23,360 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:11:23,360 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:11:23,360 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:11:23,360 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:11:24,900 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6590e518: startup date [Fri Jul 06 09:11:20 CST 2018]; root of context hierarchy
2018-07-06 09:11:24,999 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:11:25,009 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:11:25,010 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:11:25,010 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:11:25,010 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:11:25,010 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:11:25,010 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:11:25,010 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:11:25,010 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:11:25,010 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:11:25,011 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:11:25,011 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:11:25,011 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:11:25,011 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:11:25,011 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:11:25,011 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:11:25,011 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:11:25,011 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:11:25,012 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:11:25,012 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:11:25,012 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:11:25,012 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:11:25,012 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:11:25,014 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:11:25,015 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:11:25,017 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:11:25,018 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:11:25,018 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:11:25,018 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:11:25,018 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:11:25,018 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:11:25,018 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:11:25,018 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:11:25,018 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:11:25,019 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:11:25,019 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:11:25,020 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:11:25,020 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:11:25,021 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:11:25,021 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:11:25,021 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:11:25,021 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:11:25,021 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:11:25,021 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:11:25,022 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:11:25,022 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:11:25,023 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:11:25,023 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:11:25,024 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:11:25,024 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:11:25,024 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:11:25,025 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:11:25,025 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:11:25,026 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:11:25,028 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:11:25,029 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:11:25,080 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:11:25,080 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:11:25,104 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:11:25,143 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:11:25,985 - LiveReload server is running on port 35729
2018-07-06 09:11:26,115 - Registering beans for JMX exposure on startup
2018-07-06 09:11:26,117 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:11:26,124 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:11:26,137 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:11:26,164 - Using a shared selector for servlet write/read
2018-07-06 09:11:26,183 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:11:26,191 - Started FqLtdWasBackstageApplication in 6.777 seconds (JVM running for 8.51)
2018-07-06 09:11:34,895 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:11:34,895 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:11:34,939 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-06 09:11:34,967 - ===========进入拦截器==============
2018-07-06 09:11:35,004 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:11:35,004 - ===========请求时间:2018-07-06 09:11:35==========================
2018-07-06 09:11:35,004 - url=http://localhost:8081/login
2018-07-06 09:11:35,005 - method=GET
2018-07-06 09:11:35,005 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:35,005 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:11:35,005 - args:
2018-07-06 09:11:35,008 - =============结束请求时间:2018-07-06 09:11:35,耗时:0s======================
2018-07-06 09:11:35,008 - response=/login
2018-07-06 09:11:35,047 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:11:35,126 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:11:35,126 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:11:35,126 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:11:35,126 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:11:35,131 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:11:35,131 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:11:40,149 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:11:40,149 - ===========请求时间:2018-07-06 09:11:40==========================
2018-07-06 09:11:40,149 - url=http://localhost:8081/signIn
2018-07-06 09:11:40,150 - method=POST
2018-07-06 09:11:40,150 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:40,150 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:11:40,150 - args:userName=admin,password=123456,
2018-07-06 09:11:40,237 - {dataSource-1} inited
2018-07-06 09:11:40,655 - =============结束请求时间:2018-07-06 09:11:40,耗时:0s======================
2018-07-06 09:11:40,655 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:11:40, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:11:40,755 - ===========进入拦截器==============
2018-07-06 09:11:40,755 - http://localhost:8081/home
2018-07-06 09:11:40,765 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:11:40,766 - ===========请求时间:2018-07-06 09:11:40==========================
2018-07-06 09:11:40,766 - url=http://localhost:8081/home
2018-07-06 09:11:40,766 - method=GET
2018-07-06 09:11:40,766 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:40,766 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:11:40,766 - args:
2018-07-06 09:11:40,766 - =============结束请求时间:2018-07-06 09:11:40,耗时:0s======================
2018-07-06 09:11:40,766 - response=/home
2018-07-06 09:11:40,766 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:40,869 - ===========进入拦截器==============
2018-07-06 09:11:40,869 - http://localhost:8081/welcome
2018-07-06 09:11:40,884 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:11:40,885 - ===========请求时间:2018-07-06 09:11:40==========================
2018-07-06 09:11:40,885 - url=http://localhost:8081/welcome
2018-07-06 09:11:40,885 - method=GET
2018-07-06 09:11:40,885 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:40,885 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:11:40,885 - args:
2018-07-06 09:11:40,885 - =============结束请求时间:2018-07-06 09:11:40,耗时:0s======================
2018-07-06 09:11:40,885 - response=/welcome
2018-07-06 09:11:40,885 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:40,935 - ===========进入拦截器==============
2018-07-06 09:11:40,935 - http://localhost:8081/common/top
2018-07-06 09:11:40,935 - ===========进入拦截器==============
2018-07-06 09:11:40,936 - http://localhost:8081/common/left
2018-07-06 09:11:40,940 - ===========进入拦截器==============
2018-07-06 09:11:40,940 - http://localhost:8081/common/footer
2018-07-06 09:11:40,954 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:11:40,954 - ===========请求时间:2018-07-06 09:11:40==========================
2018-07-06 09:11:40,955 - url=http://localhost:8081/common/top
2018-07-06 09:11:40,955 - method=GET
2018-07-06 09:11:40,955 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:40,955 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:11:40,955 - args:
2018-07-06 09:11:40,956 - =============结束请求时间:2018-07-06 09:11:40,耗时:0s======================
2018-07-06 09:11:40,956 - response=/common/top
2018-07-06 09:11:40,956 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:40,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:11:40,990 - ===========请求时间:2018-07-06 09:11:40==========================
2018-07-06 09:11:40,990 - url=http://localhost:8081/common/left
2018-07-06 09:11:40,990 - method=GET
2018-07-06 09:11:40,990 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:40,990 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:11:40,990 - args:
2018-07-06 09:11:40,990 - =============结束请求时间:2018-07-06 09:11:40,耗时:0s======================
2018-07-06 09:11:40,990 - response=/common/left
2018-07-06 09:11:40,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:41,044 - ===========进入拦截器==============
2018-07-06 09:11:41,044 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:11:41,157 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:11:41,157 - ===========请求时间:2018-07-06 09:11:41==========================
2018-07-06 09:11:41,157 - url=http://localhost:8081/common/footer
2018-07-06 09:11:41,157 - method=GET
2018-07-06 09:11:41,158 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:41,158 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:11:41,158 - args:
2018-07-06 09:11:41,158 - =============结束请求时间:2018-07-06 09:11:41,耗时:0s======================
2018-07-06 09:11:41,158 - response=/common/footer
2018-07-06 09:11:41,158 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:11:41,513 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:11:41,513 - ===========请求时间:2018-07-06 09:11:41==========================
2018-07-06 09:11:41,513 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:11:41,513 - method=GET
2018-07-06 09:11:41,513 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:11:41,513 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:11:41,513 - args:roleId=1,
2018-07-06 09:11:41,737 - =============结束请求时间:2018-07-06 09:11:41,耗时:0s======================
2018-07-06 09:11:41,737 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:11:41,751 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:12:02,012 - ===========进入拦截器==============
2018-07-06 09:12:02,012 - http://localhost:8081/number-coin.html
2018-07-06 09:12:02,019 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:12:02,019 - ===========请求时间:2018-07-06 09:12:02==========================
2018-07-06 09:12:02,019 - url=http://localhost:8081/number-coin.html
2018-07-06 09:12:02,019 - method=GET
2018-07-06 09:12:02,019 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:12:02,019 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:12:02,019 - args:
2018-07-06 09:12:02,019 - =============结束请求时间:2018-07-06 09:12:02,耗时:0s======================
2018-07-06 09:12:02,019 - response=/number-coin
2018-07-06 09:12:02,019 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:12:02,197 - ===========进入拦截器==============
2018-07-06 09:12:02,197 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:12:02,218 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:12:02,218 - ===========请求时间:2018-07-06 09:12:02==========================
2018-07-06 09:12:02,218 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:12:02,218 - method=GET
2018-07-06 09:12:02,218 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:12:02,218 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:12:02,218 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:12:02,245 - =============结束请求时间:2018-07-06 09:12:02,耗时:0s======================
2018-07-06 09:12:02,245 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:12:02,254 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:12:05,679 - ===========进入拦截器==============
2018-07-06 09:12:05,679 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:12:05,685 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:12:05,686 - ===========请求时间:2018-07-06 09:12:05==========================
2018-07-06 09:12:05,686 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:12:05,686 - method=GET
2018-07-06 09:12:05,686 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:12:05,686 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:12:05,686 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:12:05,695 - =============结束请求时间:2018-07-06 09:12:05,耗时:0s======================
2018-07-06 09:12:05,695 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:12:05,697 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:12:09,205 - ===========进入拦截器==============
2018-07-06 09:12:09,205 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:12:09,211 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-06 09:12:09,211 - ===========请求时间:2018-07-06 09:12:09==========================
2018-07-06 09:12:09,211 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:12:09,211 - method=GET
2018-07-06 09:12:09,211 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:12:09,212 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-06 09:12:09,212 - args:wasType=BTC,
2018-07-06 09:12:09,836 - =============结束请求时间:2018-07-06 09:12:09,耗时:0s======================
2018-07-06 09:12:09,837 - response=Result(code=200, msg=成功, data={msg=处理成功, blockNumber=547}, page=null, totalCount=null)
2018-07-06 09:12:09,840 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:42,579 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8912 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:13:42,582 - No active profile set, falling back to default profiles: default
2018-07-06 09:13:42,780 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:13:42,865 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41c799ac: startup date [Fri Jul 06 09:13:42 CST 2018]; root of context hierarchy
2018-07-06 09:13:44,181 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:13:44,182 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:13:44,183 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:13:45,314 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:13:45,325 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:13:45,334 - Starting service [Tomcat]
2018-07-06 09:13:45,335 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:13:45,444 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:13:45,445 - Root WebApplicationContext: initialization completed in 2580 ms
2018-07-06 09:13:45,696 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:13:45,700 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:13:45,700 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:13:45,700 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:13:45,700 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:13:45,700 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:13:47,218 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41c799ac: startup date [Fri Jul 06 09:13:42 CST 2018]; root of context hierarchy
2018-07-06 09:13:47,314 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:13:47,324 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:13:47,324 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:13:47,324 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:13:47,324 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:13:47,324 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:13:47,324 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:13:47,325 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:13:47,325 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:13:47,325 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:13:47,326 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:13:47,326 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:13:47,326 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:13:47,326 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:13:47,326 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:13:47,326 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:13:47,326 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:13:47,326 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:13:47,327 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:13:47,327 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:13:47,327 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:13:47,327 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:13:47,327 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:13:47,329 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:13:47,329 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:13:47,331 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:13:47,331 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:13:47,331 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:13:47,331 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:13:47,331 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:13:47,331 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:13:47,331 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:13:47,332 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:13:47,332 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:13:47,333 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:13:47,333 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:13:47,333 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:13:47,333 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:13:47,334 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:13:47,335 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:13:47,335 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:13:47,335 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:13:47,335 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:13:47,335 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:13:47,337 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:13:47,337 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:13:47,337 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:13:47,337 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:13:47,337 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:13:47,337 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:13:47,337 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:13:47,338 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:13:47,338 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:13:47,338 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:13:47,339 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:13:47,342 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:13:47,343 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:13:47,393 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:13:47,393 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:13:47,416 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:13:47,471 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:13:48,482 - LiveReload server is running on port 35729
2018-07-06 09:13:48,617 - Registering beans for JMX exposure on startup
2018-07-06 09:13:48,619 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:13:48,626 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:13:48,638 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:13:48,671 - Using a shared selector for servlet write/read
2018-07-06 09:13:48,691 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:13:48,700 - Started FqLtdWasBackstageApplication in 6.895 seconds (JVM running for 8.024)
2018-07-06 09:13:51,838 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:13:51,838 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:13:51,882 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-06 09:13:51,913 - ===========进入拦截器==============
2018-07-06 09:13:51,948 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:13:51,949 - ===========请求时间:2018-07-06 09:13:51==========================
2018-07-06 09:13:51,949 - url=http://localhost:8081/login
2018-07-06 09:13:51,949 - method=GET
2018-07-06 09:13:51,949 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:51,949 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:13:51,949 - args:
2018-07-06 09:13:51,953 - =============结束请求时间:2018-07-06 09:13:51,耗时:0s======================
2018-07-06 09:13:51,953 - response=/login
2018-07-06 09:13:51,986 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:13:52,058 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:13:52,058 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:13:52,058 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:13:52,058 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:13:52,066 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:13:52,066 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:13:56,256 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:13:56,257 - ===========请求时间:2018-07-06 09:13:56==========================
2018-07-06 09:13:56,257 - url=http://localhost:8081/signIn
2018-07-06 09:13:56,257 - method=POST
2018-07-06 09:13:56,257 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:56,257 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:13:56,257 - args:userName=admin,password=123456,
2018-07-06 09:13:56,354 - {dataSource-1} inited
2018-07-06 09:13:56,832 - =============结束请求时间:2018-07-06 09:13:56,耗时:0s======================
2018-07-06 09:13:56,832 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:13:56, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:13:56,941 - ===========进入拦截器==============
2018-07-06 09:13:56,941 - http://localhost:8081/home
2018-07-06 09:13:56,949 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:13:56,949 - ===========请求时间:2018-07-06 09:13:56==========================
2018-07-06 09:13:56,949 - url=http://localhost:8081/home
2018-07-06 09:13:56,949 - method=GET
2018-07-06 09:13:56,949 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:56,949 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:13:56,949 - args:
2018-07-06 09:13:56,950 - =============结束请求时间:2018-07-06 09:13:56,耗时:0s======================
2018-07-06 09:13:56,950 - response=/home
2018-07-06 09:13:56,950 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:57,074 - ===========进入拦截器==============
2018-07-06 09:13:57,074 - http://localhost:8081/welcome
2018-07-06 09:13:57,085 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:13:57,085 - ===========请求时间:2018-07-06 09:13:57==========================
2018-07-06 09:13:57,085 - url=http://localhost:8081/welcome
2018-07-06 09:13:57,085 - method=GET
2018-07-06 09:13:57,085 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:57,085 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:13:57,085 - args:
2018-07-06 09:13:57,085 - =============结束请求时间:2018-07-06 09:13:57,耗时:0s======================
2018-07-06 09:13:57,085 - response=/welcome
2018-07-06 09:13:57,086 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:57,150 - ===========进入拦截器==============
2018-07-06 09:13:57,152 - http://localhost:8081/common/top
2018-07-06 09:13:57,154 - ===========进入拦截器==============
2018-07-06 09:13:57,154 - http://localhost:8081/common/left
2018-07-06 09:13:57,155 - ===========进入拦截器==============
2018-07-06 09:13:57,155 - http://localhost:8081/common/footer
2018-07-06 09:13:57,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:13:57,158 - ===========请求时间:2018-07-06 09:13:57==========================
2018-07-06 09:13:57,158 - url=http://localhost:8081/common/top
2018-07-06 09:13:57,158 - method=GET
2018-07-06 09:13:57,158 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:57,158 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:13:57,158 - args:
2018-07-06 09:13:57,159 - =============结束请求时间:2018-07-06 09:13:57,耗时:0s======================
2018-07-06 09:13:57,159 - response=/common/top
2018-07-06 09:13:57,159 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:57,175 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:13:57,175 - ===========请求时间:2018-07-06 09:13:57==========================
2018-07-06 09:13:57,175 - url=http://localhost:8081/common/left
2018-07-06 09:13:57,176 - method=GET
2018-07-06 09:13:57,176 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:57,176 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:13:57,176 - args:
2018-07-06 09:13:57,176 - =============结束请求时间:2018-07-06 09:13:57,耗时:0s======================
2018-07-06 09:13:57,176 - response=/common/left
2018-07-06 09:13:57,176 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:57,179 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:13:57,179 - ===========请求时间:2018-07-06 09:13:57==========================
2018-07-06 09:13:57,179 - url=http://localhost:8081/common/footer
2018-07-06 09:13:57,179 - method=GET
2018-07-06 09:13:57,179 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:57,180 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:13:57,180 - args:
2018-07-06 09:13:57,180 - =============结束请求时间:2018-07-06 09:13:57,耗时:0s======================
2018-07-06 09:13:57,180 - response=/common/footer
2018-07-06 09:13:57,180 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:57,222 - ===========进入拦截器==============
2018-07-06 09:13:57,222 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:13:57,235 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:13:57,236 - ===========请求时间:2018-07-06 09:13:57==========================
2018-07-06 09:13:57,236 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:13:57,236 - method=GET
2018-07-06 09:13:57,237 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:57,237 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:13:57,237 - args:roleId=1,
2018-07-06 09:13:57,281 - =============结束请求时间:2018-07-06 09:13:57,耗时:0s======================
2018-07-06 09:13:57,281 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:13:57,296 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:59,244 - ===========进入拦截器==============
2018-07-06 09:13:59,244 - http://localhost:8081/number-coin.html
2018-07-06 09:13:59,252 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:13:59,253 - ===========请求时间:2018-07-06 09:13:59==========================
2018-07-06 09:13:59,253 - url=http://localhost:8081/number-coin.html
2018-07-06 09:13:59,253 - method=GET
2018-07-06 09:13:59,253 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:59,253 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:13:59,253 - args:
2018-07-06 09:13:59,253 - =============结束请求时间:2018-07-06 09:13:59,耗时:0s======================
2018-07-06 09:13:59,253 - response=/number-coin
2018-07-06 09:13:59,253 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:13:59,422 - ===========进入拦截器==============
2018-07-06 09:13:59,422 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:13:59,443 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:13:59,443 - ===========请求时间:2018-07-06 09:13:59==========================
2018-07-06 09:13:59,443 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:13:59,443 - method=GET
2018-07-06 09:13:59,443 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:13:59,443 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:13:59,443 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:13:59,511 - =============结束请求时间:2018-07-06 09:13:59,耗时:0s======================
2018-07-06 09:13:59,512 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:13:59,522 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:14:01,583 - ===========进入拦截器==============
2018-07-06 09:14:01,584 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:14:01,594 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:14:01,594 - ===========请求时间:2018-07-06 09:14:01==========================
2018-07-06 09:14:01,594 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:14:01,594 - method=GET
2018-07-06 09:14:01,594 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:14:01,594 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:14:01,594 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:14:01,622 - =============结束请求时间:2018-07-06 09:14:01,耗时:0s======================
2018-07-06 09:14:01,622 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:14:01,623 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:14:05,238 - ===========进入拦截器==============
2018-07-06 09:14:05,238 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:14:05,248 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-06 09:14:05,249 - ===========请求时间:2018-07-06 09:14:05==========================
2018-07-06 09:14:05,249 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:14:05,249 - method=GET
2018-07-06 09:14:05,249 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:14:05,249 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-06 09:14:05,249 - args:wasType=BTC,
2018-07-06 09:14:05,907 - =============结束请求时间:2018-07-06 09:14:05,耗时:0s======================
2018-07-06 09:14:05,907 - response=Result(code=200, msg=成功, data={msg=处理成功, blockNumber=547}, page=null, totalCount=null)
2018-07-06 09:14:05,909 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:20:22,592 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19152 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:20:22,595 - No active profile set, falling back to default profiles: default
2018-07-06 09:20:22,814 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:20:22,874 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109ab23d: startup date [Fri Jul 06 09:20:22 CST 2018]; root of context hierarchy
2018-07-06 09:20:24,443 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,443 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,444 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,444 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,444 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,444 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:20:24,444 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:20:24,444 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:20:25,887 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:20:25,898 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:20:25,909 - Starting service [Tomcat]
2018-07-06 09:20:25,909 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:20:26,022 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:20:26,023 - Root WebApplicationContext: initialization completed in 3150 ms
2018-07-06 09:20:26,262 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:20:26,266 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:20:26,266 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:20:26,266 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:20:26,266 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:20:26,266 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:20:27,879 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@109ab23d: startup date [Fri Jul 06 09:20:22 CST 2018]; root of context hierarchy
2018-07-06 09:20:27,980 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:20:27,991 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:20:27,991 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:20:27,991 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:20:27,991 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:20:27,991 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:20:27,991 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:20:27,991 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:20:27,992 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:20:27,992 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:20:27,992 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:20:27,992 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:20:27,992 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:20:27,992 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:20:27,992 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:20:27,993 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:20:27,993 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:20:27,993 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:20:27,993 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:20:27,993 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:20:27,993 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:20:27,993 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:20:27,993 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:20:27,995 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:20:27,995 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:20:27,996 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:20:27,997 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:20:27,997 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:20:27,997 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:20:27,997 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:20:27,997 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:20:27,997 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:20:27,997 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:20:27,998 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:20:27,998 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:20:27,999 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:20:27,999 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:20:27,999 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:20:28,002 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:20:28,002 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:20:28,002 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:20:28,003 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:20:28,003 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:20:28,003 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:20:28,004 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:20:28,004 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:20:28,005 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:20:28,006 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:20:28,006 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:20:28,006 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:20:28,006 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:20:28,006 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:20:28,006 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:20:28,007 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:20:28,007 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:20:28,007 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:20:28,007 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:20:28,008 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:20:28,008 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:20:28,008 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:20:28,009 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:20:28,010 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:20:28,062 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:20:28,062 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:20:28,092 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:20:28,153 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:20:29,072 - LiveReload server is running on port 35729
2018-07-06 09:20:29,211 - Registering beans for JMX exposure on startup
2018-07-06 09:20:29,213 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:20:29,219 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:20:29,232 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:20:29,263 - Using a shared selector for servlet write/read
2018-07-06 09:20:29,288 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:20:29,298 - Started FqLtdWasBackstageApplication in 7.555 seconds (JVM running for 9.143)
2018-07-06 09:20:59,125 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:20:59,125 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:20:59,169 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-06 09:20:59,197 - ===========进入拦截器==============
2018-07-06 09:20:59,235 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:20:59,235 - ===========请求时间:2018-07-06 09:20:59==========================
2018-07-06 09:20:59,235 - url=http://localhost:8081/login
2018-07-06 09:20:59,235 - method=GET
2018-07-06 09:20:59,235 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:20:59,235 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:20:59,235 - args:
2018-07-06 09:20:59,240 - =============结束请求时间:2018-07-06 09:20:59,耗时:0s======================
2018-07-06 09:20:59,240 - response=/login
2018-07-06 09:20:59,278 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:20:59,347 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:20:59,348 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:20:59,348 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:20:59,348 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:20:59,355 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:20:59,355 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:21:04,179 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:21:04,179 - ===========请求时间:2018-07-06 09:21:04==========================
2018-07-06 09:21:04,179 - url=http://localhost:8081/signIn
2018-07-06 09:21:04,179 - method=POST
2018-07-06 09:21:04,179 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:04,179 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:21:04,179 - args:userName=admin,password=123456,
2018-07-06 09:21:04,279 - {dataSource-1} inited
2018-07-06 09:21:05,026 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,026 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:21:04, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:21:05,133 - ===========进入拦截器==============
2018-07-06 09:21:05,133 - http://localhost:8081/home
2018-07-06 09:21:05,153 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:21:05,153 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,153 - url=http://localhost:8081/home
2018-07-06 09:21:05,153 - method=GET
2018-07-06 09:21:05,153 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,153 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:21:05,153 - args:
2018-07-06 09:21:05,154 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,154 - response=/home
2018-07-06 09:21:05,154 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:05,256 - ===========进入拦截器==============
2018-07-06 09:21:05,257 - http://localhost:8081/welcome
2018-07-06 09:21:05,262 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:21:05,262 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,262 - url=http://localhost:8081/welcome
2018-07-06 09:21:05,262 - method=GET
2018-07-06 09:21:05,262 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,262 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:21:05,262 - args:
2018-07-06 09:21:05,262 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,262 - response=/welcome
2018-07-06 09:21:05,262 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:05,312 - ===========进入拦截器==============
2018-07-06 09:21:05,313 - http://localhost:8081/common/top
2018-07-06 09:21:05,314 - ===========进入拦截器==============
2018-07-06 09:21:05,314 - ===========进入拦截器==============
2018-07-06 09:21:05,314 - http://localhost:8081/common/left
2018-07-06 09:21:05,314 - http://localhost:8081/common/footer
2018-07-06 09:21:05,319 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:21:05,319 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,319 - url=http://localhost:8081/common/top
2018-07-06 09:21:05,319 - method=GET
2018-07-06 09:21:05,319 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,320 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:21:05,320 - args:
2018-07-06 09:21:05,320 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,320 - response=/common/top
2018-07-06 09:21:05,320 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:05,324 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:21:05,325 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,325 - url=http://localhost:8081/common/footer
2018-07-06 09:21:05,325 - method=GET
2018-07-06 09:21:05,325 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,325 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:21:05,325 - args:
2018-07-06 09:21:05,325 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,325 - response=/common/footer
2018-07-06 09:21:05,325 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:05,329 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:21:05,330 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,330 - url=http://localhost:8081/common/left
2018-07-06 09:21:05,330 - method=GET
2018-07-06 09:21:05,330 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,330 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:21:05,330 - args:
2018-07-06 09:21:05,330 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,330 - response=/common/left
2018-07-06 09:21:05,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:05,370 - ===========进入拦截器==============
2018-07-06 09:21:05,370 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:21:05,388 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:21:05,388 - ===========请求时间:2018-07-06 09:21:05==========================
2018-07-06 09:21:05,388 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:21:05,388 - method=GET
2018-07-06 09:21:05,388 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:05,388 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:21:05,388 - args:roleId=1,
2018-07-06 09:21:05,427 - =============结束请求时间:2018-07-06 09:21:05,耗时:0s======================
2018-07-06 09:21:05,427 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:21:05,438 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:08,814 - ===========进入拦截器==============
2018-07-06 09:21:08,814 - http://localhost:8081/number-coin.html
2018-07-06 09:21:08,829 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:21:08,829 - ===========请求时间:2018-07-06 09:21:08==========================
2018-07-06 09:21:08,829 - url=http://localhost:8081/number-coin.html
2018-07-06 09:21:08,829 - method=GET
2018-07-06 09:21:08,829 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:08,829 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:21:08,829 - args:
2018-07-06 09:21:08,829 - =============结束请求时间:2018-07-06 09:21:08,耗时:0s======================
2018-07-06 09:21:08,829 - response=/number-coin
2018-07-06 09:21:08,829 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:09,004 - ===========进入拦截器==============
2018-07-06 09:21:09,004 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:09,066 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:21:09,066 - ===========请求时间:2018-07-06 09:21:09==========================
2018-07-06 09:21:09,066 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:09,066 - method=GET
2018-07-06 09:21:09,066 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:09,066 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:21:09,066 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:21:09,121 - =============结束请求时间:2018-07-06 09:21:09,耗时:0s======================
2018-07-06 09:21:09,124 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:21:09,146 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:12,047 - ===========进入拦截器==============
2018-07-06 09:21:12,047 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:12,068 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:21:12,068 - ===========请求时间:2018-07-06 09:21:12==========================
2018-07-06 09:21:12,068 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:12,068 - method=GET
2018-07-06 09:21:12,068 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:12,068 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:21:12,068 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:21:12,098 - =============结束请求时间:2018-07-06 09:21:12,耗时:0s======================
2018-07-06 09:21:12,098 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:21:12,099 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:19,206 - ===========进入拦截器==============
2018-07-06 09:21:19,206 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:21:19,236 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-06 09:21:19,236 - ===========请求时间:2018-07-06 09:21:19==========================
2018-07-06 09:21:19,236 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-06 09:21:19,236 - method=GET
2018-07-06 09:21:19,236 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:19,236 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-06 09:21:19,236 - args:wasType=BTC,
2018-07-06 09:21:19,982 - =============结束请求时间:2018-07-06 09:21:19,耗时:0s======================
2018-07-06 09:21:19,982 - response=Result(code=200, msg=成功, data={msg=处理成功, blockNumber=547}, page=null, totalCount=null)
2018-07-06 09:21:19,990 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:20,025 - ===========进入拦截器==============
2018-07-06 09:21:20,025 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:20,045 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:21:20,046 - ===========请求时间:2018-07-06 09:21:20==========================
2018-07-06 09:21:20,046 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:20,046 - method=GET
2018-07-06 09:21:20,046 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:20,046 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:21:20,046 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:21:20,082 - =============结束请求时间:2018-07-06 09:21:20,耗时:0s======================
2018-07-06 09:21:20,083 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=547, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:21:20,087 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:53,121 - ===========进入拦截器==============
2018-07-06 09:21:53,121 - http://localhost:8081/number-coin.html
2018-07-06 09:21:53,133 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:21:53,133 - ===========请求时间:2018-07-06 09:21:53==========================
2018-07-06 09:21:53,133 - url=http://localhost:8081/number-coin.html
2018-07-06 09:21:53,133 - method=GET
2018-07-06 09:21:53,133 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:53,133 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:21:53,133 - args:
2018-07-06 09:21:53,133 - =============结束请求时间:2018-07-06 09:21:53,耗时:0s======================
2018-07-06 09:21:53,133 - response=/number-coin
2018-07-06 09:21:53,133 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:53,315 - ===========进入拦截器==============
2018-07-06 09:21:53,315 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:53,327 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:21:53,327 - ===========请求时间:2018-07-06 09:21:53==========================
2018-07-06 09:21:53,327 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:53,327 - method=GET
2018-07-06 09:21:53,327 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:53,327 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:21:53,327 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:21:53,377 - =============结束请求时间:2018-07-06 09:21:53,耗时:0s======================
2018-07-06 09:21:53,377 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:21:53,392 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:21:55,922 - ===========进入拦截器==============
2018-07-06 09:21:55,922 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:55,940 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:21:55,940 - ===========请求时间:2018-07-06 09:21:55==========================
2018-07-06 09:21:55,940 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:21:55,940 - method=GET
2018-07-06 09:21:55,940 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:21:55,940 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:21:55,940 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:21:55,973 - =============结束请求时间:2018-07-06 09:21:55,耗时:0s======================
2018-07-06 09:21:55,974 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:21:55,975 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:36,733 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19276 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-06 09:22:36,735 - No active profile set, falling back to default profiles: default
2018-07-06 09:22:36,943 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-06 09:22:36,991 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e81626a: startup date [Fri Jul 06 09:22:36 CST 2018]; root of context hierarchy
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-06 09:22:38,281 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-06 09:22:38,282 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-06 09:22:39,640 - Tomcat initialized with port(s): 8081 (http)
2018-07-06 09:22:39,652 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-06 09:22:39,661 - Starting service [Tomcat]
2018-07-06 09:22:39,661 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-06 09:22:39,775 - Initializing Spring embedded WebApplicationContext
2018-07-06 09:22:39,775 - Root WebApplicationContext: initialization completed in 2784 ms
2018-07-06 09:22:40,016 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-06 09:22:40,022 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-06 09:22:40,022 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-06 09:22:40,022 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-06 09:22:40,022 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-06 09:22:40,023 - Mapping filter: 'originFilter' to: [/*]
2018-07-06 09:22:41,612 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e81626a: startup date [Fri Jul 06 09:22:36 CST 2018]; root of context hierarchy
2018-07-06 09:22:41,702 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-06 09:22:41,713 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-06 09:22:41,713 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-06 09:22:41,713 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-06 09:22:41,713 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-06 09:22:41,714 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-06 09:22:41,714 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-06 09:22:41,714 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-06 09:22:41,714 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-06 09:22:41,714 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-06 09:22:41,714 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-06 09:22:41,714 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-06 09:22:41,715 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-06 09:22:41,715 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-06 09:22:41,715 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-06 09:22:41,715 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-06 09:22:41,715 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-06 09:22:41,715 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-06 09:22:41,715 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-06 09:22:41,715 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-06 09:22:41,715 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-06 09:22:41,716 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-06 09:22:41,716 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-06 09:22:41,718 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-06 09:22:41,718 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-06 09:22:41,720 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-06 09:22:41,720 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:22:41,720 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-06 09:22:41,720 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-06 09:22:41,720 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-06 09:22:41,720 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-06 09:22:41,720 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-06 09:22:41,721 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-06 09:22:41,721 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-06 09:22:41,722 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-06 09:22:41,722 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-06 09:22:41,722 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-06 09:22:41,722 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-06 09:22:41,723 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-06 09:22:41,723 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-06 09:22:41,723 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-06 09:22:41,724 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-06 09:22:41,724 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-06 09:22:41,724 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-06 09:22:41,724 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-06 09:22:41,725 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-06 09:22:41,726 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-06 09:22:41,726 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:22:41,726 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-06 09:22:41,726 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-06 09:22:41,726 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-06 09:22:41,726 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:22:41,726 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-06 09:22:41,727 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-06 09:22:41,727 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-06 09:22:41,727 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-06 09:22:41,728 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-06 09:22:41,728 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-06 09:22:41,728 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-06 09:22:41,728 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-06 09:22:41,730 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-06 09:22:41,731 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-06 09:22:41,779 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:22:41,779 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:22:41,803 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-06 09:22:41,835 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-06 09:22:42,653 - LiveReload server is running on port 35729
2018-07-06 09:22:42,778 - Registering beans for JMX exposure on startup
2018-07-06 09:22:42,779 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-06 09:22:42,786 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-06 09:22:42,799 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-06 09:22:42,827 - Using a shared selector for servlet write/read
2018-07-06 09:22:42,847 - Tomcat started on port(s): 8081 (http)
2018-07-06 09:22:42,857 - Started FqLtdWasBackstageApplication in 7.034 seconds (JVM running for 8.293)
2018-07-06 09:22:50,185 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-06 09:22:50,185 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-06 09:22:50,230 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-06 09:22:50,260 - ===========进入拦截器==============
2018-07-06 09:22:50,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:22:50,296 - ===========请求时间:2018-07-06 09:22:50==========================
2018-07-06 09:22:50,296 - url=http://localhost:8081/login
2018-07-06 09:22:50,296 - method=GET
2018-07-06 09:22:50,296 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:50,296 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:22:50,296 - args:
2018-07-06 09:22:50,300 - =============结束请求时间:2018-07-06 09:22:50,耗时:0s======================
2018-07-06 09:22:50,300 - response=/login
2018-07-06 09:22:50,335 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-06 09:22:50,404 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-06 09:22:50,404 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-06 09:22:50,404 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-06 09:22:50,404 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-06 09:22:50,410 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-06 09:22:50,410 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-06 09:22:55,145 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:22:55,145 - ===========请求时间:2018-07-06 09:22:55==========================
2018-07-06 09:22:55,145 - url=http://localhost:8081/signIn
2018-07-06 09:22:55,145 - method=POST
2018-07-06 09:22:55,145 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:55,145 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:22:55,145 - args:userName=admin,password=123456,
2018-07-06 09:22:55,249 - {dataSource-1} inited
2018-07-06 09:22:56,047 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,047 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:22:55, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:22:56,169 - ===========进入拦截器==============
2018-07-06 09:22:56,169 - http://localhost:8081/home
2018-07-06 09:22:56,208 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:22:56,209 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,209 - url=http://localhost:8081/home
2018-07-06 09:22:56,209 - method=GET
2018-07-06 09:22:56,209 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,209 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:22:56,209 - args:
2018-07-06 09:22:56,210 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,210 - response=/home
2018-07-06 09:22:56,210 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:56,331 - ===========进入拦截器==============
2018-07-06 09:22:56,331 - http://localhost:8081/welcome
2018-07-06 09:22:56,345 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:22:56,346 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,346 - url=http://localhost:8081/welcome
2018-07-06 09:22:56,346 - method=GET
2018-07-06 09:22:56,346 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,346 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:22:56,346 - args:
2018-07-06 09:22:56,346 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,346 - response=/welcome
2018-07-06 09:22:56,346 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:56,392 - ===========进入拦截器==============
2018-07-06 09:22:56,392 - ===========进入拦截器==============
2018-07-06 09:22:56,392 - http://localhost:8081/common/left
2018-07-06 09:22:56,392 - http://localhost:8081/common/top
2018-07-06 09:22:56,392 - ===========进入拦截器==============
2018-07-06 09:22:56,392 - http://localhost:8081/common/footer
2018-07-06 09:22:56,410 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:22:56,410 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,410 - url=http://localhost:8081/common/left
2018-07-06 09:22:56,410 - method=GET
2018-07-06 09:22:56,410 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:22:56,410 - args:
2018-07-06 09:22:56,410 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,410 - response=/common/left
2018-07-06 09:22:56,410 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:56,450 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:22:56,451 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,451 - url=http://localhost:8081/common/top
2018-07-06 09:22:56,451 - method=GET
2018-07-06 09:22:56,451 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,451 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:22:56,451 - args:
2018-07-06 09:22:56,451 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,451 - response=/common/top
2018-07-06 09:22:56,451 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:56,455 - ===========进入拦截器==============
2018-07-06 09:22:56,455 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:22:56,459 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:22:56,459 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,459 - url=http://localhost:8081/common/footer
2018-07-06 09:22:56,459 - method=GET
2018-07-06 09:22:56,459 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,459 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:22:56,459 - args:
2018-07-06 09:22:56,459 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,459 - response=/common/footer
2018-07-06 09:22:56,459 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:22:56,477 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:22:56,478 - ===========请求时间:2018-07-06 09:22:56==========================
2018-07-06 09:22:56,478 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:22:56,478 - method=GET
2018-07-06 09:22:56,478 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:22:56,478 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:22:56,478 - args:roleId=1,
2018-07-06 09:22:56,576 - =============结束请求时间:2018-07-06 09:22:56,耗时:0s======================
2018-07-06 09:22:56,576 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:22:56,587 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:01,869 - ===========进入拦截器==============
2018-07-06 09:23:01,869 - http://localhost:8081/number-coin.html
2018-07-06 09:23:01,894 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-06 09:23:01,894 - ===========请求时间:2018-07-06 09:23:01==========================
2018-07-06 09:23:01,894 - url=http://localhost:8081/number-coin.html
2018-07-06 09:23:01,894 - method=GET
2018-07-06 09:23:01,894 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:01,894 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-06 09:23:01,894 - args:
2018-07-06 09:23:01,894 - =============结束请求时间:2018-07-06 09:23:01,耗时:0s======================
2018-07-06 09:23:01,894 - response=/number-coin
2018-07-06 09:23:01,895 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:02,083 - ===========进入拦截器==============
2018-07-06 09:23:02,084 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:02,125 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:02,125 - ===========请求时间:2018-07-06 09:23:02==========================
2018-07-06 09:23:02,125 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:02,125 - method=GET
2018-07-06 09:23:02,125 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:02,125 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:02,125 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:23:02,186 - =============结束请求时间:2018-07-06 09:23:02,耗时:0s======================
2018-07-06 09:23:02,187 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:23:02,201 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:06,016 - ===========进入拦截器==============
2018-07-06 09:23:06,016 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:06,031 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:06,031 - ===========请求时间:2018-07-06 09:23:06==========================
2018-07-06 09:23:06,031 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:06,031 - method=GET
2018-07-06 09:23:06,031 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:06,031 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:06,031 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:06,056 - =============结束请求时间:2018-07-06 09:23:06,耗时:0s======================
2018-07-06 09:23:06,056 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:06,057 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:09,365 - ===========进入拦截器==============
2018-07-06 09:23:09,365 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:09,376 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:09,376 - ===========请求时间:2018-07-06 09:23:09==========================
2018-07-06 09:23:09,376 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:09,376 - method=GET
2018-07-06 09:23:09,376 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:09,376 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:09,376 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:09,407 - =============结束请求时间:2018-07-06 09:23:09,耗时:0s======================
2018-07-06 09:23:09,408 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:09,408 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:10,446 - ===========进入拦截器==============
2018-07-06 09:23:10,446 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:10,462 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:10,462 - ===========请求时间:2018-07-06 09:23:10==========================
2018-07-06 09:23:10,462 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:10,462 - method=GET
2018-07-06 09:23:10,462 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:10,462 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:10,463 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:10,501 - =============结束请求时间:2018-07-06 09:23:10,耗时:0s======================
2018-07-06 09:23:10,501 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:10,502 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:11,100 - ===========进入拦截器==============
2018-07-06 09:23:11,100 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:11,114 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:11,114 - ===========请求时间:2018-07-06 09:23:11==========================
2018-07-06 09:23:11,114 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:11,114 - method=GET
2018-07-06 09:23:11,114 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:11,114 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:11,114 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:11,143 - =============结束请求时间:2018-07-06 09:23:11,耗时:0s======================
2018-07-06 09:23:11,143 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:11,144 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:11,659 - ===========进入拦截器==============
2018-07-06 09:23:11,660 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:11,671 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:11,671 - ===========请求时间:2018-07-06 09:23:11==========================
2018-07-06 09:23:11,671 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:11,671 - method=GET
2018-07-06 09:23:11,671 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:11,671 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:11,671 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:11,716 - =============结束请求时间:2018-07-06 09:23:11,耗时:0s======================
2018-07-06 09:23:11,717 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:11,719 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:12,084 - ===========进入拦截器==============
2018-07-06 09:23:12,084 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:12,095 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:23:12,095 - ===========请求时间:2018-07-06 09:23:12==========================
2018-07-06 09:23:12,095 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:23:12,095 - method=GET
2018-07-06 09:23:12,095 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:12,095 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:23:12,095 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-06 09:23:12,136 - =============结束请求时间:2018-07-06 09:23:12,耗时:0s======================
2018-07-06 09:23:12,137 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-06 09:23:12,148 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:23:17,529 - ===========进入拦截器==============
2018-07-06 09:23:17,530 - http://localhost:8081/excel/toExcel
2018-07-06 09:23:17,548 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-06 09:23:17,548 - ===========请求时间:2018-07-06 09:23:17==========================
2018-07-06 09:23:17,548 - url=http://localhost:8081/excel/toExcel
2018-07-06 09:23:17,548 - method=GET
2018-07-06 09:23:17,548 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:23:17,548 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-06 09:23:17,548 - args:wasId=1,wasType=,
2018-07-06 09:23:17,793 - =============结束请求时间:2018-07-06 09:23:17,耗时:0s======================
2018-07-06 09:23:17,793 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180706092300017.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-06 09:23:17,800 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:24:28,760 - ===========进入拦截器==============
2018-07-06 09:24:28,760 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:24:28,826 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:24:28,826 - ===========请求时间:2018-07-06 09:24:28==========================
2018-07-06 09:24:28,826 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:24:28,826 - method=GET
2018-07-06 09:24:28,826 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:24:28,826 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:24:28,826 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-06 09:24:28,874 - =============结束请求时间:2018-07-06 09:24:28,耗时:0s======================
2018-07-06 09:24:28,875 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:24:28,877 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:24:33,414 - ===========进入拦截器==============
2018-07-06 09:24:33,414 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:24:33,444 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-06 09:24:33,444 - ===========请求时间:2018-07-06 09:24:33==========================
2018-07-06 09:24:33,444 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-06 09:24:33,444 - method=GET
2018-07-06 09:24:33,444 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:24:33,444 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-06 09:24:33,444 - args:pageNumber=3,pageSize=10,wasId=,wasType=,
2018-07-06 09:24:33,493 - =============结束请求时间:2018-07-06 09:24:33,耗时:0s======================
2018-07-06 09:24:33,494 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=3, wasBaseCurrency=BTC, wasType=QTUM, wasBeginBlock=161306, wasBlockNum=100, wasGateWay=QTUM, wasTokenAddress=, wasMinConfirm=8, wasStatus=1, wasPrecision=38, wasZeroGasPrice=, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=24, wasBaseCurrency=ETH/token, wasType=REP, wasBeginBlock=300, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe94327d07fc17907b4db788e5adf2ed424addff6, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=11, wasBaseCurrency=BTC, wasType=SMTH, wasBeginBlock=0, wasBlockNum=100, wasGateWay=SMTH, wasTokenAddress=, wasMinConfirm=3, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=0, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=null, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:46 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), WasDataDictionary(wasId=25, wasBaseCurrency=ETH/token, wasType=WAN, wasBeginBlock=500, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x5fc6de61258e63706543bb57619b99cc0e5a5a1f, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=18, wasBaseCurrency=BASE_XMR_, wasType=XMR, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XMR, wasTokenAddress=null, wasMinConfirm=3, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=15, wasBaseCurrency=BASE_BTC_, wasType=XRP, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XRP, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=26, wasBaseCurrency=ETH/token, wasType=ZIL, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x05f4a42e251f2d52b8ed15e9fedaacfcef1fad27, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=27, wasBaseCurrency=ETH/token, wasType=ZRX, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe41d2489571d322189246dafa5ebde1f4699f498, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=10, wasBaseCurrency=ETH/token, wasType=ZZL, wasBeginBlock=3467375, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4cc8cb7a0839a14a92349dfd138d104fbcacc630, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=3, totalCount=30, totalPage=3), totalCount=30)
2018-07-06 09:24:33,502 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,828 - ===========进入拦截器==============
2018-07-06 09:25:06,828 - http://localhost:8081/control-waring.html
2018-07-06 09:25:06,849 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.controlWaring============
2018-07-06 09:25:06,849 - ===========请求时间:2018-07-06 09:25:06==========================
2018-07-06 09:25:06,849 - url=http://localhost:8081/control-waring.html
2018-07-06 09:25:06,849 - method=GET
2018-07-06 09:25:06,850 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:25:06,850 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.controlWaring
2018-07-06 09:25:06,850 - args:
2018-07-06 09:25:06,850 - =============结束请求时间:2018-07-06 09:25:06,耗时:0s======================
2018-07-06 09:25:06,850 - response=/control-waring
2018-07-06 09:25:06,850 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,901 - ===========进入拦截器==============
2018-07-06 09:25:06,901 - ===========进入拦截器==============
2018-07-06 09:25:06,902 - http://localhost:8081/error
2018-07-06 09:25:06,902 - http://localhost:8081/error
2018-07-06 09:25:06,929 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,929 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,961 - ===========进入拦截器==============
2018-07-06 09:25:06,961 - ===========进入拦截器==============
2018-07-06 09:25:06,961 - http://localhost:8081/error
2018-07-06 09:25:06,961 - http://localhost:8081/error
2018-07-06 09:25:06,982 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,982 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:06,987 - ===========进入拦截器==============
2018-07-06 09:25:06,988 - http://localhost:8081/error
2018-07-06 09:25:06,996 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:48,413 - ===========进入拦截器==============
2018-07-06 09:25:48,413 - http://localhost:8081/user-info.html
2018-07-06 09:25:48,442 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.userInfo============
2018-07-06 09:25:48,442 - ===========请求时间:2018-07-06 09:25:48==========================
2018-07-06 09:25:48,442 - url=http://localhost:8081/user-info.html
2018-07-06 09:25:48,442 - method=GET
2018-07-06 09:25:48,442 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:25:48,442 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.userInfo
2018-07-06 09:25:48,443 - args:
2018-07-06 09:25:48,443 - =============结束请求时间:2018-07-06 09:25:48,耗时:0s======================
2018-07-06 09:25:48,443 - response=/user-info
2018-07-06 09:25:48,443 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:48,564 - ===========进入拦截器==============
2018-07-06 09:25:48,564 - ===========进入拦截器==============
2018-07-06 09:25:48,564 - http://localhost:8081/role/findAllRole
2018-07-06 09:25:48,564 - http://localhost:8081/user/findUserByName
2018-07-06 09:25:48,579 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findUserByName============
2018-07-06 09:25:48,579 - ===========请求时间:2018-07-06 09:25:48==========================
2018-07-06 09:25:48,579 - url=http://localhost:8081/user/findUserByName
2018-07-06 09:25:48,579 - method=GET
2018-07-06 09:25:48,579 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:25:48,579 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findUserByName
2018-07-06 09:25:48,579 - args:userName=admin,
2018-07-06 09:25:48,597 - =============结束请求时间:2018-07-06 09:25:48,耗时:0s======================
2018-07-06 09:25:48,597 - response=Result(code=200, msg=成功, data=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:22:55.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0), page=null, totalCount=null)
2018-07-06 09:25:48,598 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-06 09:25:48,599 - ===========请求时间:2018-07-06 09:25:48==========================
2018-07-06 09:25:48,599 - url=http://localhost:8081/role/findAllRole
2018-07-06 09:25:48,599 - method=GET
2018-07-06 09:25:48,599 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:25:48,599 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-06 09:25:48,599 - args:
2018-07-06 09:25:48,611 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:25:48,648 - =============结束请求时间:2018-07-06 09:25:48,耗时:0s======================
2018-07-06 09:25:48,648 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-06 09:25:48,649 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:11,803 - ===========进入拦截器==============
2018-07-06 09:26:11,803 - http://localhost:8081/number-coin-add.html
2018-07-06 09:26:11,813 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-06 09:26:11,813 - ===========请求时间:2018-07-06 09:26:11==========================
2018-07-06 09:26:11,813 - url=http://localhost:8081/number-coin-add.html
2018-07-06 09:26:11,813 - method=GET
2018-07-06 09:26:11,813 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:11,813 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-06 09:26:11,813 - args:wasId=10,
2018-07-06 09:26:11,814 - =============结束请求时间:2018-07-06 09:26:11,耗时:0s======================
2018-07-06 09:26:11,814 - response=/number-coin-add
2018-07-06 09:26:11,814 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:11,910 - ===========进入拦截器==============
2018-07-06 09:26:11,910 - http://localhost:8081/generator/wasdatadictionary/info/10
2018-07-06 09:26:11,931 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-06 09:26:11,931 - ===========请求时间:2018-07-06 09:26:11==========================
2018-07-06 09:26:11,931 - url=http://localhost:8081/generator/wasdatadictionary/info/10
2018-07-06 09:26:11,931 - method=GET
2018-07-06 09:26:11,931 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:11,931 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-06 09:26:11,931 - args:
2018-07-06 09:26:11,943 - =============结束请求时间:2018-07-06 09:26:11,耗时:0s======================
2018-07-06 09:26:11,943 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=10, wasBaseCurrency=ETH/token, wasType=ZZL, wasBeginBlock=3467375, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4cc8cb7a0839a14a92349dfd138d104fbcacc630, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=50, wasTransferGasLimit=210000, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), page=null, totalCount=null)
2018-07-06 09:26:11,944 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:25,557 - ===========进入拦截器==============
2018-07-06 09:26:25,558 - http://localhost:8081/icon.html
2018-07-06 09:26:25,568 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-06 09:26:25,569 - ===========请求时间:2018-07-06 09:26:25==========================
2018-07-06 09:26:25,569 - url=http://localhost:8081/icon.html
2018-07-06 09:26:25,569 - method=GET
2018-07-06 09:26:25,569 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:25,569 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-06 09:26:25,569 - args:
2018-07-06 09:26:25,569 - =============结束请求时间:2018-07-06 09:26:25,耗时:0s======================
2018-07-06 09:26:25,569 - response=/icon
2018-07-06 09:26:25,569 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:25,673 - ===========进入拦截器==============
2018-07-06 09:26:25,673 - http://localhost:8081/menu/findIconList
2018-07-06 09:26:25,726 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-06 09:26:25,726 - ===========请求时间:2018-07-06 09:26:25==========================
2018-07-06 09:26:25,726 - url=http://localhost:8081/menu/findIconList
2018-07-06 09:26:25,726 - method=GET
2018-07-06 09:26:25,726 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:25,726 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-06 09:26:25,726 - args:
2018-07-06 09:26:25,828 - =============结束请求时间:2018-07-06 09:26:25,耗时:0s======================
2018-07-06 09:26:25,828 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-06 09:26:25,832 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:28,341 - ===========进入拦截器==============
2018-07-06 09:26:28,341 - http://localhost:8081/menu.html
2018-07-06 09:26:28,353 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-06 09:26:28,353 - ===========请求时间:2018-07-06 09:26:28==========================
2018-07-06 09:26:28,353 - url=http://localhost:8081/menu.html
2018-07-06 09:26:28,353 - method=GET
2018-07-06 09:26:28,353 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:28,353 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-06 09:26:28,353 - args:
2018-07-06 09:26:28,353 - =============结束请求时间:2018-07-06 09:26:28,耗时:0s======================
2018-07-06 09:26:28,353 - response=/menu
2018-07-06 09:26:28,353 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:28,460 - ===========进入拦截器==============
2018-07-06 09:26:28,460 - http://localhost:8081/menu/findAllMenu
2018-07-06 09:26:28,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-06 09:26:28,509 - ===========请求时间:2018-07-06 09:26:28==========================
2018-07-06 09:26:28,509 - url=http://localhost:8081/menu/findAllMenu
2018-07-06 09:26:28,509 - method=GET
2018-07-06 09:26:28,509 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:28,509 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-06 09:26:28,510 - args:
2018-07-06 09:26:28,537 - =============结束请求时间:2018-07-06 09:26:28,耗时:0s======================
2018-07-06 09:26:28,538 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-06 09:26:28,561 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:38,751 - ===========进入拦截器==============
2018-07-06 09:26:38,751 - http://localhost:8081/menu/findChildMenu
2018-07-06 09:26:38,768 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu============
2018-07-06 09:26:38,768 - ===========请求时间:2018-07-06 09:26:38==========================
2018-07-06 09:26:38,768 - url=http://localhost:8081/menu/findChildMenu
2018-07-06 09:26:38,768 - method=GET
2018-07-06 09:26:38,768 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:38,768 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu
2018-07-06 09:26:38,768 - args:parentCode=8,
2018-07-06 09:26:38,800 - =============结束请求时间:2018-07-06 09:26:38,耗时:0s======================
2018-07-06 09:26:38,800 - response=Result(code=200, msg=成功, data=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], page=null, totalCount=null)
2018-07-06 09:26:38,801 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:26:59,569 - ===========进入拦截器==============
2018-07-06 09:26:59,569 - http://localhost:8081/menu/findById
2018-07-06 09:26:59,587 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-06 09:26:59,587 - ===========请求时间:2018-07-06 09:26:59==========================
2018-07-06 09:26:59,587 - url=http://localhost:8081/menu/findById
2018-07-06 09:26:59,587 - method=GET
2018-07-06 09:26:59,587 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:26:59,587 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-06 09:26:59,587 - args:id=56,
2018-07-06 09:26:59,610 - =============结束请求时间:2018-07-06 09:26:59,耗时:0s======================
2018-07-06 09:26:59,610 - response=Result(code=200, msg=成功, data=Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-06 09:26:59,611 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:28:40,996 - ===========进入拦截器==============
2018-07-06 09:28:40,996 - http://localhost:8081/menu/findById
2018-07-06 09:28:41,058 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-06 09:28:41,058 - ===========请求时间:2018-07-06 09:28:41==========================
2018-07-06 09:28:41,058 - url=http://localhost:8081/menu/findById
2018-07-06 09:28:41,058 - method=GET
2018-07-06 09:28:41,058 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:28:41,058 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-06 09:28:41,058 - args:id=7,
2018-07-06 09:28:41,079 - =============结束请求时间:2018-07-06 09:28:41,耗时:0s======================
2018-07-06 09:28:41,079 - response=Result(code=200, msg=成功, data=Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-06 09:28:41,080 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:28:42,071 - ===========进入拦截器==============
2018-07-06 09:28:42,072 - http://localhost:8081/menu/findIconList
2018-07-06 09:28:42,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-06 09:28:42,101 - ===========请求时间:2018-07-06 09:28:42==========================
2018-07-06 09:28:42,101 - url=http://localhost:8081/menu/findIconList
2018-07-06 09:28:42,101 - method=GET
2018-07-06 09:28:42,101 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:28:42,101 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-06 09:28:42,101 - args:
2018-07-06 09:28:42,137 - =============结束请求时间:2018-07-06 09:28:42,耗时:0s======================
2018-07-06 09:28:42,137 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-06 09:28:42,138 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:28:44,631 - ===========进入拦截器==============
2018-07-06 09:28:44,631 - http://localhost:8081/menu/findIconList
2018-07-06 09:28:44,657 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-06 09:28:44,657 - ===========请求时间:2018-07-06 09:28:44==========================
2018-07-06 09:28:44,657 - url=http://localhost:8081/menu/findIconList
2018-07-06 09:28:44,657 - method=GET
2018-07-06 09:28:44,657 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:28:44,657 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-06 09:28:44,657 - args:
2018-07-06 09:28:44,678 - =============结束请求时间:2018-07-06 09:28:44,耗时:0s======================
2018-07-06 09:28:44,678 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-06 09:28:44,678 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:28:58,147 - ===========进入拦截器==============
2018-07-06 09:28:58,147 - http://localhost:8081/menu/editMenu
2018-07-06 09:28:58,202 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.editMenu============
2018-07-06 09:28:58,202 - ===========请求时间:2018-07-06 09:28:58==========================
2018-07-06 09:28:58,202 - url=http://localhost:8081/menu/editMenu
2018-07-06 09:28:58,202 - method=GET
2018-07-06 09:28:58,202 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:28:58,202 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.editMenu
2018-07-06 09:28:58,202 - args:menuName=平台提币管理,url=--,belong=,icon=,gid=7,
2018-07-06 09:28:58,254 - =============结束请求时间:2018-07-06 09:28:58,耗时:0s======================
2018-07-06 09:28:58,254 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-06 09:28:58,258 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:00,482 - ===========进入拦截器==============
2018-07-06 09:29:00,482 - http://localhost:8081/menu.html
2018-07-06 09:29:00,502 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-06 09:29:00,502 - ===========请求时间:2018-07-06 09:29:00==========================
2018-07-06 09:29:00,502 - url=http://localhost:8081/menu.html
2018-07-06 09:29:00,502 - method=GET
2018-07-06 09:29:00,502 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:00,502 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-06 09:29:00,502 - args:
2018-07-06 09:29:00,502 - =============结束请求时间:2018-07-06 09:29:00,耗时:0s======================
2018-07-06 09:29:00,502 - response=/menu
2018-07-06 09:29:00,502 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:00,600 - ===========进入拦截器==============
2018-07-06 09:29:00,600 - http://localhost:8081/menu/findAllMenu
2018-07-06 09:29:00,629 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-06 09:29:00,629 - ===========请求时间:2018-07-06 09:29:00==========================
2018-07-06 09:29:00,629 - url=http://localhost:8081/menu/findAllMenu
2018-07-06 09:29:00,629 - method=GET
2018-07-06 09:29:00,629 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:00,629 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-06 09:29:00,629 - args:
2018-07-06 09:29:00,646 - =============结束请求时间:2018-07-06 09:29:00,耗时:0s======================
2018-07-06 09:29:00,646 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=2, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-06 09:28:58.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-06 09:29:00,652 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:02,962 - ===========进入拦截器==============
2018-07-06 09:29:02,962 - http://localhost:8081/home
2018-07-06 09:29:02,984 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:29:02,985 - ===========请求时间:2018-07-06 09:29:02==========================
2018-07-06 09:29:02,985 - url=http://localhost:8081/home
2018-07-06 09:29:02,985 - method=GET
2018-07-06 09:29:02,985 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:02,985 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:29:02,985 - args:
2018-07-06 09:29:02,985 - =============结束请求时间:2018-07-06 09:29:02,耗时:0s======================
2018-07-06 09:29:02,985 - response=/home
2018-07-06 09:29:02,986 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,078 - ===========进入拦截器==============
2018-07-06 09:29:03,078 - http://localhost:8081/welcome
2018-07-06 09:29:03,088 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:29:03,088 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,088 - url=http://localhost:8081/welcome
2018-07-06 09:29:03,088 - method=GET
2018-07-06 09:29:03,088 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,088 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:29:03,088 - args:
2018-07-06 09:29:03,088 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,088 - response=/welcome
2018-07-06 09:29:03,088 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,105 - ===========进入拦截器==============
2018-07-06 09:29:03,105 - ===========进入拦截器==============
2018-07-06 09:29:03,105 - http://localhost:8081/common/left
2018-07-06 09:29:03,105 - ===========进入拦截器==============
2018-07-06 09:29:03,105 - http://localhost:8081/common/top
2018-07-06 09:29:03,105 - http://localhost:8081/common/footer
2018-07-06 09:29:03,139 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:29:03,139 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,139 - url=http://localhost:8081/common/top
2018-07-06 09:29:03,139 - method=GET
2018-07-06 09:29:03,139 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,139 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:29:03,139 - args:
2018-07-06 09:29:03,139 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,139 - response=/common/top
2018-07-06 09:29:03,139 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,154 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:29:03,154 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,154 - url=http://localhost:8081/common/left
2018-07-06 09:29:03,154 - method=GET
2018-07-06 09:29:03,154 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,154 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:29:03,154 - args:
2018-07-06 09:29:03,155 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,155 - response=/common/left
2018-07-06 09:29:03,155 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:29:03,158 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,158 - url=http://localhost:8081/common/footer
2018-07-06 09:29:03,158 - method=GET
2018-07-06 09:29:03,158 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,158 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:29:03,158 - args:
2018-07-06 09:29:03,158 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,158 - response=/common/footer
2018-07-06 09:29:03,159 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,193 - ===========进入拦截器==============
2018-07-06 09:29:03,193 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:03,206 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:29:03,206 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,206 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:03,206 - method=GET
2018-07-06 09:29:03,206 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,206 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:29:03,206 - args:roleId=1,
2018-07-06 09:29:03,225 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,225 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:29:03,226 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,816 - ===========进入拦截器==============
2018-07-06 09:29:03,816 - http://localhost:8081/home
2018-07-06 09:29:03,835 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:29:03,835 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,835 - url=http://localhost:8081/home
2018-07-06 09:29:03,835 - method=GET
2018-07-06 09:29:03,835 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,835 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:29:03,835 - args:
2018-07-06 09:29:03,835 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,835 - response=/home
2018-07-06 09:29:03,835 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,895 - ===========进入拦截器==============
2018-07-06 09:29:03,895 - http://localhost:8081/welcome
2018-07-06 09:29:03,915 - ===========进入拦截器==============
2018-07-06 09:29:03,915 - http://localhost:8081/common/top
2018-07-06 09:29:03,915 - ===========进入拦截器==============
2018-07-06 09:29:03,915 - http://localhost:8081/common/left
2018-07-06 09:29:03,916 - ===========进入拦截器==============
2018-07-06 09:29:03,917 - http://localhost:8081/common/footer
2018-07-06 09:29:03,926 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:29:03,927 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,927 - url=http://localhost:8081/welcome
2018-07-06 09:29:03,927 - method=GET
2018-07-06 09:29:03,927 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,927 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:29:03,927 - args:
2018-07-06 09:29:03,927 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,927 - response=/welcome
2018-07-06 09:29:03,927 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,970 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:29:03,970 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:29:03,970 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,970 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,970 - url=http://localhost:8081/common/top
2018-07-06 09:29:03,970 - url=http://localhost:8081/common/left
2018-07-06 09:29:03,970 - method=GET
2018-07-06 09:29:03,970 - method=GET
2018-07-06 09:29:03,970 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,970 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,970 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:29:03,970 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:29:03,970 - args:
2018-07-06 09:29:03,970 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,970 - response=/common/top
2018-07-06 09:29:03,970 - args:
2018-07-06 09:29:03,970 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,970 - response=/common/left
2018-07-06 09:29:03,970 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,970 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:29:03,970 - ===========请求时间:2018-07-06 09:29:03==========================
2018-07-06 09:29:03,970 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,970 - url=http://localhost:8081/common/footer
2018-07-06 09:29:03,970 - method=GET
2018-07-06 09:29:03,970 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:03,970 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:29:03,970 - args:
2018-07-06 09:29:03,970 - =============结束请求时间:2018-07-06 09:29:03,耗时:0s======================
2018-07-06 09:29:03,970 - response=/common/footer
2018-07-06 09:29:03,970 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:03,993 - ===========进入拦截器==============
2018-07-06 09:29:03,993 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:04,009 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:29:04,009 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,009 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:04,009 - method=GET
2018-07-06 09:29:04,009 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,009 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:29:04,009 - args:roleId=1,
2018-07-06 09:29:04,037 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,037 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:29:04,038 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,415 - ===========进入拦截器==============
2018-07-06 09:29:04,416 - http://localhost:8081/home
2018-07-06 09:29:04,432 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:29:04,433 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,433 - url=http://localhost:8081/home
2018-07-06 09:29:04,433 - method=GET
2018-07-06 09:29:04,433 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,433 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:29:04,433 - args:
2018-07-06 09:29:04,433 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,433 - response=/home
2018-07-06 09:29:04,433 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,489 - ===========进入拦截器==============
2018-07-06 09:29:04,489 - http://localhost:8081/welcome
2018-07-06 09:29:04,508 - ===========进入拦截器==============
2018-07-06 09:29:04,508 - http://localhost:8081/common/top
2018-07-06 09:29:04,510 - ===========进入拦截器==============
2018-07-06 09:29:04,510 - ===========进入拦截器==============
2018-07-06 09:29:04,510 - http://localhost:8081/common/footer
2018-07-06 09:29:04,510 - http://localhost:8081/common/left
2018-07-06 09:29:04,510 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:29:04,510 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,510 - url=http://localhost:8081/welcome
2018-07-06 09:29:04,510 - method=GET
2018-07-06 09:29:04,510 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,510 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:29:04,510 - args:
2018-07-06 09:29:04,510 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,510 - response=/welcome
2018-07-06 09:29:04,510 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,515 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:29:04,515 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,515 - url=http://localhost:8081/common/top
2018-07-06 09:29:04,515 - method=GET
2018-07-06 09:29:04,515 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,515 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:29:04,515 - args:
2018-07-06 09:29:04,515 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,515 - response=/common/top
2018-07-06 09:29:04,515 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,516 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:29:04,516 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,516 - url=http://localhost:8081/common/left
2018-07-06 09:29:04,516 - method=GET
2018-07-06 09:29:04,516 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,516 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:29:04,517 - args:
2018-07-06 09:29:04,517 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,517 - response=/common/left
2018-07-06 09:29:04,517 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,518 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:29:04,518 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,518 - url=http://localhost:8081/common/footer
2018-07-06 09:29:04,518 - method=GET
2018-07-06 09:29:04,518 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,518 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:29:04,518 - args:
2018-07-06 09:29:04,518 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,518 - response=/common/footer
2018-07-06 09:29:04,518 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:04,537 - ===========进入拦截器==============
2018-07-06 09:29:04,537 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:04,555 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:29:04,555 - ===========请求时间:2018-07-06 09:29:04==========================
2018-07-06 09:29:04,555 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:04,555 - method=GET
2018-07-06 09:29:04,555 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:04,555 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:29:04,555 - args:roleId=1,
2018-07-06 09:29:04,576 - =============结束请求时间:2018-07-06 09:29:04,耗时:0s======================
2018-07-06 09:29:04,577 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:29:04,578 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:08,204 - ===========进入拦截器==============
2018-07-06 09:29:08,205 - http://localhost:8081/login.html
2018-07-06 09:29:08,221 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-06 09:29:08,221 - ===========请求时间:2018-07-06 09:29:08==========================
2018-07-06 09:29:08,221 - url=http://localhost:8081/login.html
2018-07-06 09:29:08,221 - method=GET
2018-07-06 09:29:08,221 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:08,221 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-06 09:29:08,221 - args:
2018-07-06 09:29:08,221 - =============结束请求时间:2018-07-06 09:29:08,耗时:0s======================
2018-07-06 09:29:08,221 - response=/login
2018-07-06 09:29:08,221 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,520 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-06 09:29:12,520 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,520 - url=http://localhost:8081/signIn
2018-07-06 09:29:12,520 - method=POST
2018-07-06 09:29:12,520 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,520 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-06 09:29:12,520 - args:userName=admin,password=123456,
2018-07-06 09:29:12,577 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,578 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-06 09:29:12, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-06 09:29:12,590 - ===========进入拦截器==============
2018-07-06 09:29:12,591 - http://localhost:8081/home
2018-07-06 09:29:12,603 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:29:12,603 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,603 - url=http://localhost:8081/home
2018-07-06 09:29:12,603 - method=GET
2018-07-06 09:29:12,603 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,603 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:29:12,603 - args:
2018-07-06 09:29:12,603 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,603 - response=/home
2018-07-06 09:29:12,603 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,667 - ===========进入拦截器==============
2018-07-06 09:29:12,667 - http://localhost:8081/welcome
2018-07-06 09:29:12,682 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:29:12,682 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,682 - url=http://localhost:8081/welcome
2018-07-06 09:29:12,682 - method=GET
2018-07-06 09:29:12,682 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,682 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:29:12,682 - args:
2018-07-06 09:29:12,682 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,682 - response=/welcome
2018-07-06 09:29:12,683 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,686 - ===========进入拦截器==============
2018-07-06 09:29:12,686 - http://localhost:8081/common/top
2018-07-06 09:29:12,688 - ===========进入拦截器==============
2018-07-06 09:29:12,688 - http://localhost:8081/common/left
2018-07-06 09:29:12,690 - ===========进入拦截器==============
2018-07-06 09:29:12,690 - http://localhost:8081/common/footer
2018-07-06 09:29:12,697 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:29:12,697 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:29:12,697 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,697 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:29:12,697 - url=http://localhost:8081/common/footer
2018-07-06 09:29:12,697 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,697 - method=GET
2018-07-06 09:29:12,697 - url=http://localhost:8081/common/top
2018-07-06 09:29:12,697 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,697 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,697 - method=GET
2018-07-06 09:29:12,697 - url=http://localhost:8081/common/left
2018-07-06 09:29:12,697 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:29:12,697 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,697 - method=GET
2018-07-06 09:29:12,697 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:29:12,697 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,697 - args:
2018-07-06 09:29:12,697 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:29:12,697 - args:
2018-07-06 09:29:12,697 - args:
2018-07-06 09:29:12,697 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,697 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,697 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,697 - response=/common/left
2018-07-06 09:29:12,697 - response=/common/top
2018-07-06 09:29:12,697 - response=/common/footer
2018-07-06 09:29:12,697 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,697 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,697 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:12,723 - ===========进入拦截器==============
2018-07-06 09:29:12,723 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:12,744 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:29:12,744 - ===========请求时间:2018-07-06 09:29:12==========================
2018-07-06 09:29:12,744 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:29:12,744 - method=GET
2018-07-06 09:29:12,744 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:12,744 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:29:12,744 - args:roleId=1,
2018-07-06 09:29:12,760 - =============结束请求时间:2018-07-06 09:29:12,耗时:0s======================
2018-07-06 09:29:12,760 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:29:12,761 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,819 - ===========进入拦截器==============
2018-07-06 09:29:25,819 - http://localhost:8081/control-waring.html
2018-07-06 09:29:25,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.controlWaring============
2018-07-06 09:29:25,841 - ===========请求时间:2018-07-06 09:29:25==========================
2018-07-06 09:29:25,842 - url=http://localhost:8081/control-waring.html
2018-07-06 09:29:25,842 - method=GET
2018-07-06 09:29:25,842 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:29:25,842 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.controlWaring
2018-07-06 09:29:25,842 - args:
2018-07-06 09:29:25,842 - =============结束请求时间:2018-07-06 09:29:25,耗时:0s======================
2018-07-06 09:29:25,842 - response=/control-waring
2018-07-06 09:29:25,842 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,857 - ===========进入拦截器==============
2018-07-06 09:29:25,857 - http://localhost:8081/error
2018-07-06 09:29:25,858 - ===========进入拦截器==============
2018-07-06 09:29:25,858 - http://localhost:8081/error
2018-07-06 09:29:25,878 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,878 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,904 - ===========进入拦截器==============
2018-07-06 09:29:25,904 - ===========进入拦截器==============
2018-07-06 09:29:25,904 - http://localhost:8081/error
2018-07-06 09:29:25,904 - http://localhost:8081/error
2018-07-06 09:29:25,918 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,918 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:29:25,923 - ===========进入拦截器==============
2018-07-06 09:29:25,924 - http://localhost:8081/error
2018-07-06 09:29:25,946 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:30:29,410 - ===========进入拦截器==============
2018-07-06 09:30:29,410 - http://localhost:8081/address-pool.html
2018-07-06 09:30:29,460 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.addressPool============
2018-07-06 09:30:29,460 - ===========请求时间:2018-07-06 09:30:29==========================
2018-07-06 09:30:29,460 - url=http://localhost:8081/address-pool.html
2018-07-06 09:30:29,460 - method=GET
2018-07-06 09:30:29,460 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:30:29,460 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.addressPool
2018-07-06 09:30:29,460 - args:
2018-07-06 09:30:29,460 - =============结束请求时间:2018-07-06 09:30:29,耗时:0s======================
2018-07-06 09:30:29,460 - response=/address-pool
2018-07-06 09:30:29,461 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:30:29,474 - ===========进入拦截器==============
2018-07-06 09:30:29,474 - http://localhost:8081/error
2018-07-06 09:30:29,474 - ===========进入拦截器==============
2018-07-06 09:30:29,474 - http://localhost:8081/error
2018-07-06 09:30:29,490 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:30:29,522 - ===========进入拦截器==============
2018-07-06 09:30:29,522 - http://localhost:8081/error
2018-07-06 09:30:29,530 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:30:29,544 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,219 - ===========进入拦截器==============
2018-07-06 09:54:59,219 - http://localhost:8081/home
2018-07-06 09:54:59,246 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-06 09:54:59,246 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,246 - url=http://localhost:8081/home
2018-07-06 09:54:59,246 - method=GET
2018-07-06 09:54:59,246 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,246 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-06 09:54:59,246 - args:
2018-07-06 09:54:59,246 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,246 - response=/home
2018-07-06 09:54:59,247 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,361 - ===========进入拦截器==============
2018-07-06 09:54:59,361 - http://localhost:8081/welcome
2018-07-06 09:54:59,365 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-06 09:54:59,366 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,366 - url=http://localhost:8081/welcome
2018-07-06 09:54:59,366 - method=GET
2018-07-06 09:54:59,366 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,366 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-06 09:54:59,366 - args:
2018-07-06 09:54:59,366 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,366 - response=/welcome
2018-07-06 09:54:59,366 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,396 - ===========进入拦截器==============
2018-07-06 09:54:59,396 - http://localhost:8081/common/top
2018-07-06 09:54:59,397 - ===========进入拦截器==============
2018-07-06 09:54:59,397 - http://localhost:8081/common/left
2018-07-06 09:54:59,397 - ===========进入拦截器==============
2018-07-06 09:54:59,397 - http://localhost:8081/common/footer
2018-07-06 09:54:59,407 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-06 09:54:59,407 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,407 - url=http://localhost:8081/common/top
2018-07-06 09:54:59,407 - method=GET
2018-07-06 09:54:59,407 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,407 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-06 09:54:59,408 - args:
2018-07-06 09:54:59,408 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,408 - response=/common/top
2018-07-06 09:54:59,408 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,409 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-06 09:54:59,410 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,410 - url=http://localhost:8081/common/left
2018-07-06 09:54:59,410 - method=GET
2018-07-06 09:54:59,410 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-06 09:54:59,410 - args:
2018-07-06 09:54:59,410 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,410 - response=/common/left
2018-07-06 09:54:59,410 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,410 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-06 09:54:59,410 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,410 - url=http://localhost:8081/common/footer
2018-07-06 09:54:59,410 - method=GET
2018-07-06 09:54:59,410 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-06 09:54:59,410 - args:
2018-07-06 09:54:59,411 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,411 - response=/common/footer
2018-07-06 09:54:59,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:54:59,453 - ===========进入拦截器==============
2018-07-06 09:54:59,453 - http://localhost:8081/menu/findMenuByRole
2018-07-06 09:54:59,457 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-06 09:54:59,457 - ===========请求时间:2018-07-06 09:54:59==========================
2018-07-06 09:54:59,457 - url=http://localhost:8081/menu/findMenuByRole
2018-07-06 09:54:59,457 - method=GET
2018-07-06 09:54:59,457 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:54:59,457 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-06 09:54:59,457 - args:roleId=1,
2018-07-06 09:54:59,463 - =============结束请求时间:2018-07-06 09:54:59,耗时:0s======================
2018-07-06 09:54:59,464 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-06 09:54:59,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:55:01,288 - ===========进入拦截器==============
2018-07-06 09:55:01,288 - http://localhost:8081/icon.html
2018-07-06 09:55:01,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-06 09:55:01,296 - ===========请求时间:2018-07-06 09:55:01==========================
2018-07-06 09:55:01,296 - url=http://localhost:8081/icon.html
2018-07-06 09:55:01,296 - method=GET
2018-07-06 09:55:01,297 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:55:01,297 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-06 09:55:01,297 - args:
2018-07-06 09:55:01,297 - =============结束请求时间:2018-07-06 09:55:01,耗时:0s======================
2018-07-06 09:55:01,297 - response=/icon
2018-07-06 09:55:01,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:55:01,380 - ===========进入拦截器==============
2018-07-06 09:55:01,380 - http://localhost:8081/menu/findIconList
2018-07-06 09:55:01,393 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-06 09:55:01,393 - ===========请求时间:2018-07-06 09:55:01==========================
2018-07-06 09:55:01,393 - url=http://localhost:8081/menu/findIconList
2018-07-06 09:55:01,393 - method=GET
2018-07-06 09:55:01,393 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:55:01,393 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-06 09:55:01,393 - args:
2018-07-06 09:55:01,399 - =============结束请求时间:2018-07-06 09:55:01,耗时:0s======================
2018-07-06 09:55:01,399 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-06 09:55:01,400 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:55:04,889 - ===========进入拦截器==============
2018-07-06 09:55:04,889 - http://localhost:8081/menu.html
2018-07-06 09:55:04,895 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-06 09:55:04,895 - ===========请求时间:2018-07-06 09:55:04==========================
2018-07-06 09:55:04,895 - url=http://localhost:8081/menu.html
2018-07-06 09:55:04,895 - method=GET
2018-07-06 09:55:04,895 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:55:04,895 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-06 09:55:04,895 - args:
2018-07-06 09:55:04,895 - =============结束请求时间:2018-07-06 09:55:04,耗时:0s======================
2018-07-06 09:55:04,895 - response=/menu
2018-07-06 09:55:04,895 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:55:04,974 - ===========进入拦截器==============
2018-07-06 09:55:04,974 - http://localhost:8081/menu/findAllMenu
2018-07-06 09:55:04,997 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-06 09:55:04,997 - ===========请求时间:2018-07-06 09:55:04==========================
2018-07-06 09:55:04,997 - url=http://localhost:8081/menu/findAllMenu
2018-07-06 09:55:04,997 - method=GET
2018-07-06 09:55:04,997 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:55:04,997 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-06 09:55:04,997 - args:
2018-07-06 09:55:05,010 - =============结束请求时间:2018-07-06 09:55:05,耗时:0s======================
2018-07-06 09:55:05,011 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=2, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-06 09:28:58.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-06 09:55:05,012 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-06 09:55:07,755 - ===========进入拦截器==============
2018-07-06 09:55:07,755 - http://localhost:8081/menu/findById
2018-07-06 09:55:07,798 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findById============
2018-07-06 09:55:07,798 - ===========请求时间:2018-07-06 09:55:07==========================
2018-07-06 09:55:07,798 - url=http://localhost:8081/menu/findById
2018-07-06 09:55:07,798 - method=GET
2018-07-06 09:55:07,798 - ip=0:0:0:0:0:0:0:1
2018-07-06 09:55:07,798 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findById
2018-07-06 09:55:07,798 - args:id=8,
2018-07-06 09:55:07,832 - =============结束请求时间:2018-07-06 09:55:07,耗时:0s======================
2018-07-06 09:55:07,832 - response=Result(code=200, msg=成功, data=Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=null, menuList=null, version=1, createTime=null, updateTime=null, status=null), page=null, totalCount=null)
2018-07-06 09:55:07,832 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
