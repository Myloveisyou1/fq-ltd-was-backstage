2018-07-05 09:06:43,071 - ===========进入拦截器==============
2018-07-05 09:06:43,100 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 09:06:43,100 - ===========请求时间:2018-07-05 09:06:43==========================
2018-07-05 09:06:43,100 - url=http://localhost:8081/login
2018-07-05 09:06:43,100 - method=GET
2018-07-05 09:06:43,100 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:43,100 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 09:06:43,100 - args:
2018-07-05 09:06:43,101 - =============结束请求时间:2018-07-05 09:06:43,耗时:0s======================
2018-07-05 09:06:43,101 - response=/login
2018-07-05 09:06:50,068 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 09:06:50,068 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,068 - url=http://localhost:8081/signIn
2018-07-05 09:06:50,068 - method=POST
2018-07-05 09:06:50,068 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,068 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 09:06:50,068 - args:userName=admin,password=123456,
2018-07-05 09:06:50,270 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,271 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 09:06:50, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 09:06:50,294 - ===========进入拦截器==============
2018-07-05 09:06:50,294 - http://localhost:8081/home
2018-07-05 09:06:50,299 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 09:06:50,299 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,299 - url=http://localhost:8081/home
2018-07-05 09:06:50,299 - method=GET
2018-07-05 09:06:50,299 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,299 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 09:06:50,299 - args:
2018-07-05 09:06:50,299 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,299 - response=/home
2018-07-05 09:06:50,300 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:50,384 - ===========进入拦截器==============
2018-07-05 09:06:50,384 - http://localhost:8081/welcome
2018-07-05 09:06:50,393 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 09:06:50,393 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,393 - url=http://localhost:8081/welcome
2018-07-05 09:06:50,393 - method=GET
2018-07-05 09:06:50,393 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,394 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 09:06:50,394 - args:
2018-07-05 09:06:50,394 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,394 - response=/welcome
2018-07-05 09:06:50,394 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:50,399 - ===========进入拦截器==============
2018-07-05 09:06:50,400 - http://localhost:8081/common/top
2018-07-05 09:06:50,402 - ===========进入拦截器==============
2018-07-05 09:06:50,402 - http://localhost:8081/common/left
2018-07-05 09:06:50,404 - ===========进入拦截器==============
2018-07-05 09:06:50,404 - http://localhost:8081/common/footer
2018-07-05 09:06:50,406 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 09:06:50,407 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,407 - url=http://localhost:8081/common/top
2018-07-05 09:06:50,407 - method=GET
2018-07-05 09:06:50,407 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,407 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 09:06:50,407 - args:
2018-07-05 09:06:50,407 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,407 - response=/common/top
2018-07-05 09:06:50,407 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:50,411 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 09:06:50,412 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,412 - url=http://localhost:8081/common/left
2018-07-05 09:06:50,412 - method=GET
2018-07-05 09:06:50,412 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,412 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 09:06:50,412 - args:
2018-07-05 09:06:50,412 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,412 - response=/common/left
2018-07-05 09:06:50,412 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:50,425 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 09:06:50,425 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,425 - url=http://localhost:8081/common/footer
2018-07-05 09:06:50,425 - method=GET
2018-07-05 09:06:50,425 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,425 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 09:06:50,425 - args:
2018-07-05 09:06:50,425 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,425 - response=/common/footer
2018-07-05 09:06:50,426 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:50,455 - ===========进入拦截器==============
2018-07-05 09:06:50,455 - http://localhost:8081/menu/findMenuByRole
2018-07-05 09:06:50,468 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 09:06:50,468 - ===========请求时间:2018-07-05 09:06:50==========================
2018-07-05 09:06:50,468 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 09:06:50,468 - method=GET
2018-07-05 09:06:50,468 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:50,468 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 09:06:50,468 - args:roleId=1,
2018-07-05 09:06:50,489 - =============结束请求时间:2018-07-05 09:06:50,耗时:0s======================
2018-07-05 09:06:50,491 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 09:06:50,494 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,196 - ===========进入拦截器==============
2018-07-05 09:06:54,196 - http://localhost:8081/home
2018-07-05 09:06:54,208 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 09:06:54,208 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,208 - url=http://localhost:8081/home
2018-07-05 09:06:54,208 - method=GET
2018-07-05 09:06:54,208 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,208 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 09:06:54,208 - args:
2018-07-05 09:06:54,208 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,208 - response=/home
2018-07-05 09:06:54,208 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,290 - ===========进入拦截器==============
2018-07-05 09:06:54,290 - http://localhost:8081/welcome
2018-07-05 09:06:54,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 09:06:54,297 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,297 - url=http://localhost:8081/welcome
2018-07-05 09:06:54,297 - method=GET
2018-07-05 09:06:54,297 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,297 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 09:06:54,297 - args:
2018-07-05 09:06:54,297 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,297 - response=/welcome
2018-07-05 09:06:54,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,309 - ===========进入拦截器==============
2018-07-05 09:06:54,309 - http://localhost:8081/common/top
2018-07-05 09:06:54,311 - ===========进入拦截器==============
2018-07-05 09:06:54,312 - http://localhost:8081/common/left
2018-07-05 09:06:54,314 - ===========进入拦截器==============
2018-07-05 09:06:54,314 - http://localhost:8081/common/footer
2018-07-05 09:06:54,357 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 09:06:54,357 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,357 - url=http://localhost:8081/common/left
2018-07-05 09:06:54,357 - method=GET
2018-07-05 09:06:54,357 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,357 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 09:06:54,357 - args:
2018-07-05 09:06:54,357 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,357 - response=/common/left
2018-07-05 09:06:54,357 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,364 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 09:06:54,364 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,364 - url=http://localhost:8081/common/top
2018-07-05 09:06:54,364 - method=GET
2018-07-05 09:06:54,364 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,364 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 09:06:54,364 - args:
2018-07-05 09:06:54,364 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,364 - response=/common/top
2018-07-05 09:06:54,365 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,373 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 09:06:54,373 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,373 - url=http://localhost:8081/common/footer
2018-07-05 09:06:54,373 - method=GET
2018-07-05 09:06:54,373 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,373 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 09:06:54,374 - args:
2018-07-05 09:06:54,374 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,374 - response=/common/footer
2018-07-05 09:06:54,374 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:54,380 - ===========进入拦截器==============
2018-07-05 09:06:54,380 - http://localhost:8081/menu/findMenuByRole
2018-07-05 09:06:54,405 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 09:06:54,405 - ===========请求时间:2018-07-05 09:06:54==========================
2018-07-05 09:06:54,405 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 09:06:54,405 - method=GET
2018-07-05 09:06:54,405 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:54,405 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 09:06:54,405 - args:roleId=1,
2018-07-05 09:06:54,413 - =============结束请求时间:2018-07-05 09:06:54,耗时:0s======================
2018-07-05 09:06:54,413 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 09:06:54,414 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:56,307 - ===========进入拦截器==============
2018-07-05 09:06:56,307 - http://localhost:8081/number-coin.html
2018-07-05 09:06:56,330 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 09:06:56,330 - ===========请求时间:2018-07-05 09:06:56==========================
2018-07-05 09:06:56,330 - url=http://localhost:8081/number-coin.html
2018-07-05 09:06:56,330 - method=GET
2018-07-05 09:06:56,330 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:06:56,330 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 09:06:56,330 - args:
2018-07-05 09:06:56,330 - =============结束请求时间:2018-07-05 09:06:56,耗时:0s======================
2018-07-05 09:06:56,330 - response=/number-coin
2018-07-05 09:06:56,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:56,381 - ===========进入拦截器==============
2018-07-05 09:06:56,381 - ===========进入拦截器==============
2018-07-05 09:06:56,381 - http://localhost:8081/error
2018-07-05 09:06:56,381 - http://localhost:8081/error
2018-07-05 09:06:56,400 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:56,400 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:56,410 - ===========进入拦截器==============
2018-07-05 09:06:56,410 - http://localhost:8081/error
2018-07-05 09:06:56,417 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:06:56,427 - ===========进入拦截器==============
2018-07-05 09:06:56,427 - http://localhost:8081/error
2018-07-05 09:06:56,433 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:05,091 - ===========进入拦截器==============
2018-07-05 09:58:05,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 09:58:05,104 - ===========请求时间:2018-07-05 09:58:05==========================
2018-07-05 09:58:05,104 - url=http://localhost:8081/login
2018-07-05 09:58:05,104 - method=GET
2018-07-05 09:58:05,104 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:05,104 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 09:58:05,104 - args:
2018-07-05 09:58:05,104 - =============结束请求时间:2018-07-05 09:58:05,耗时:0s======================
2018-07-05 09:58:05,104 - response=/login
2018-07-05 09:58:07,812 - ===========进入拦截器==============
2018-07-05 09:58:07,815 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 09:58:07,815 - ===========请求时间:2018-07-05 09:58:07==========================
2018-07-05 09:58:07,815 - url=http://localhost:8081/login
2018-07-05 09:58:07,815 - method=GET
2018-07-05 09:58:07,815 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:07,815 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 09:58:07,815 - args:
2018-07-05 09:58:07,815 - =============结束请求时间:2018-07-05 09:58:07,耗时:0s======================
2018-07-05 09:58:07,815 - response=/login
2018-07-05 09:58:11,754 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 09:58:11,754 - ===========请求时间:2018-07-05 09:58:11==========================
2018-07-05 09:58:11,754 - url=http://localhost:8081/signIn
2018-07-05 09:58:11,754 - method=POST
2018-07-05 09:58:11,754 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:11,754 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 09:58:11,754 - args:userName=admin,password=123456,
2018-07-05 09:58:11,955 - =============结束请求时间:2018-07-05 09:58:11,耗时:0s======================
2018-07-05 09:58:11,955 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 09:58:11, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 09:58:11,985 - ===========进入拦截器==============
2018-07-05 09:58:11,985 - http://localhost:8081/home
2018-07-05 09:58:11,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 09:58:11,990 - ===========请求时间:2018-07-05 09:58:11==========================
2018-07-05 09:58:11,990 - url=http://localhost:8081/home
2018-07-05 09:58:11,990 - method=GET
2018-07-05 09:58:11,990 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:11,990 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 09:58:11,990 - args:
2018-07-05 09:58:11,990 - =============结束请求时间:2018-07-05 09:58:11,耗时:0s======================
2018-07-05 09:58:11,990 - response=/home
2018-07-05 09:58:11,990 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:12,053 - ===========进入拦截器==============
2018-07-05 09:58:12,053 - http://localhost:8081/welcome
2018-07-05 09:58:12,063 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 09:58:12,064 - ===========请求时间:2018-07-05 09:58:12==========================
2018-07-05 09:58:12,064 - url=http://localhost:8081/welcome
2018-07-05 09:58:12,064 - method=GET
2018-07-05 09:58:12,064 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:12,064 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 09:58:12,064 - args:
2018-07-05 09:58:12,064 - =============结束请求时间:2018-07-05 09:58:12,耗时:0s======================
2018-07-05 09:58:12,064 - response=/welcome
2018-07-05 09:58:12,064 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:12,068 - ===========进入拦截器==============
2018-07-05 09:58:12,068 - http://localhost:8081/common/top
2018-07-05 09:58:12,070 - ===========进入拦截器==============
2018-07-05 09:58:12,070 - http://localhost:8081/common/footer
2018-07-05 09:58:12,070 - ===========进入拦截器==============
2018-07-05 09:58:12,071 - http://localhost:8081/common/left
2018-07-05 09:58:12,080 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 09:58:12,080 - ===========请求时间:2018-07-05 09:58:12==========================
2018-07-05 09:58:12,080 - url=http://localhost:8081/common/top
2018-07-05 09:58:12,080 - method=GET
2018-07-05 09:58:12,080 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:12,080 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 09:58:12,080 - args:
2018-07-05 09:58:12,080 - =============结束请求时间:2018-07-05 09:58:12,耗时:0s======================
2018-07-05 09:58:12,080 - response=/common/top
2018-07-05 09:58:12,080 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:12,083 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 09:58:12,083 - ===========请求时间:2018-07-05 09:58:12==========================
2018-07-05 09:58:12,083 - url=http://localhost:8081/common/footer
2018-07-05 09:58:12,083 - method=GET
2018-07-05 09:58:12,083 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:12,083 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 09:58:12,083 - args:
2018-07-05 09:58:12,083 - =============结束请求时间:2018-07-05 09:58:12,耗时:0s======================
2018-07-05 09:58:12,083 - response=/common/footer
2018-07-05 09:58:12,083 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:12,088 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 09:58:12,088 - ===========请求时间:2018-07-05 09:58:12==========================
2018-07-05 09:58:12,088 - url=http://localhost:8081/common/left
2018-07-05 09:58:12,088 - method=GET
2018-07-05 09:58:12,088 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:12,088 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 09:58:12,088 - args:
2018-07-05 09:58:12,089 - =============结束请求时间:2018-07-05 09:58:12,耗时:0s======================
2018-07-05 09:58:12,089 - response=/common/left
2018-07-05 09:58:12,089 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:12,116 - ===========进入拦截器==============
2018-07-05 09:58:12,116 - http://localhost:8081/menu/findMenuByRole
2018-07-05 09:58:12,121 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 09:58:12,121 - ===========请求时间:2018-07-05 09:58:12==========================
2018-07-05 09:58:12,121 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 09:58:12,121 - method=GET
2018-07-05 09:58:12,121 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:12,121 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 09:58:12,121 - args:roleId=1,
2018-07-05 09:58:12,128 - =============结束请求时间:2018-07-05 09:58:12,耗时:0s======================
2018-07-05 09:58:12,128 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 09:58:12,129 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:15,207 - ===========进入拦截器==============
2018-07-05 09:58:15,208 - http://localhost:8081/user.html
2018-07-05 09:58:15,213 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-05 09:58:15,213 - ===========请求时间:2018-07-05 09:58:15==========================
2018-07-05 09:58:15,213 - url=http://localhost:8081/user.html
2018-07-05 09:58:15,213 - method=GET
2018-07-05 09:58:15,213 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:15,213 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-05 09:58:15,213 - args:
2018-07-05 09:58:15,213 - =============结束请求时间:2018-07-05 09:58:15,耗时:0s======================
2018-07-05 09:58:15,213 - response=/user
2018-07-05 09:58:15,213 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:15,298 - ===========进入拦截器==============
2018-07-05 09:58:15,299 - http://localhost:8081/user/findAllUser
2018-07-05 09:58:15,307 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-05 09:58:15,307 - ===========请求时间:2018-07-05 09:58:15==========================
2018-07-05 09:58:15,307 - url=http://localhost:8081/user/findAllUser
2018-07-05 09:58:15,307 - method=GET
2018-07-05 09:58:15,307 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:15,307 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-05 09:58:15,307 - args:userName=,
2018-07-05 09:58:15,313 - =============结束请求时间:2018-07-05 09:58:15,耗时:0s======================
2018-07-05 09:58:15,313 - response=Result(code=200, msg=成功, data=[User(gid=4, userName=31, password=FF473088FBDCCB239D57EAB3C6D77A40, tel=18888888888, email=31321@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:56:56.0, version=1, createTime=2018-07-04 18:56:56.0, updateTime=2018-07-04 18:56:56.0, status=0), User(gid=2, userName=lyj, password=9C0CD9F9F38A53F48E36A8A2CF540A01, tel=18888888888, email=rweri@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:55:40.0, version=1, createTime=2018-07-04 18:24:38.0, updateTime=2018-07-04 18:24:38.0, status=0), User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 09:58:11.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=3, totalPage=null), totalCount=3)
2018-07-05 09:58:15,325 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:16,465 - ===========进入拦截器==============
2018-07-05 09:58:16,465 - http://localhost:8081/role.html
2018-07-05 09:58:16,472 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-05 09:58:16,472 - ===========请求时间:2018-07-05 09:58:16==========================
2018-07-05 09:58:16,472 - url=http://localhost:8081/role.html
2018-07-05 09:58:16,472 - method=GET
2018-07-05 09:58:16,472 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:16,472 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-05 09:58:16,472 - args:
2018-07-05 09:58:16,472 - =============结束请求时间:2018-07-05 09:58:16,耗时:0s======================
2018-07-05 09:58:16,472 - response=/role
2018-07-05 09:58:16,473 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:16,555 - ===========进入拦截器==============
2018-07-05 09:58:16,556 - http://localhost:8081/role/findAllRole
2018-07-05 09:58:16,579 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 09:58:16,579 - ===========请求时间:2018-07-05 09:58:16==========================
2018-07-05 09:58:16,579 - url=http://localhost:8081/role/findAllRole
2018-07-05 09:58:16,579 - method=GET
2018-07-05 09:58:16,579 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:16,579 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 09:58:16,579 - args:roleName=,
2018-07-05 09:58:16,591 - =============结束请求时间:2018-07-05 09:58:16,耗时:0s======================
2018-07-05 09:58:16,591 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 09:58:16,593 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:16,599 - ===========进入拦截器==============
2018-07-05 09:58:16,599 - http://localhost:8081/menu/findAllMenu
2018-07-05 09:58:16,609 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-05 09:58:16,609 - ===========请求时间:2018-07-05 09:58:16==========================
2018-07-05 09:58:16,609 - url=http://localhost:8081/menu/findAllMenu
2018-07-05 09:58:16,609 - method=GET
2018-07-05 09:58:16,609 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:16,609 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-05 09:58:16,609 - args:
2018-07-05 09:58:16,619 - =============结束请求时间:2018-07-05 09:58:16,耗时:0s======================
2018-07-05 09:58:16,619 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-05 09:58:16,623 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:17,913 - ===========进入拦截器==============
2018-07-05 09:58:17,913 - http://localhost:8081/menu.html
2018-07-05 09:58:17,922 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-05 09:58:17,922 - ===========请求时间:2018-07-05 09:58:17==========================
2018-07-05 09:58:17,922 - url=http://localhost:8081/menu.html
2018-07-05 09:58:17,922 - method=GET
2018-07-05 09:58:17,922 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:17,922 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-05 09:58:17,922 - args:
2018-07-05 09:58:17,922 - =============结束请求时间:2018-07-05 09:58:17,耗时:0s======================
2018-07-05 09:58:17,922 - response=/menu
2018-07-05 09:58:17,922 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:18,001 - ===========进入拦截器==============
2018-07-05 09:58:18,001 - http://localhost:8081/menu/findAllMenu
2018-07-05 09:58:18,021 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-05 09:58:18,022 - ===========请求时间:2018-07-05 09:58:18==========================
2018-07-05 09:58:18,022 - url=http://localhost:8081/menu/findAllMenu
2018-07-05 09:58:18,022 - method=GET
2018-07-05 09:58:18,022 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:18,022 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-05 09:58:18,022 - args:
2018-07-05 09:58:18,029 - =============结束请求时间:2018-07-05 09:58:18,耗时:0s======================
2018-07-05 09:58:18,029 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-05 09:58:18,031 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:18,751 - ===========进入拦截器==============
2018-07-05 09:58:18,752 - http://localhost:8081/icon.html
2018-07-05 09:58:18,757 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.icon============
2018-07-05 09:58:18,757 - ===========请求时间:2018-07-05 09:58:18==========================
2018-07-05 09:58:18,757 - url=http://localhost:8081/icon.html
2018-07-05 09:58:18,757 - method=GET
2018-07-05 09:58:18,757 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:18,757 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.icon
2018-07-05 09:58:18,757 - args:
2018-07-05 09:58:18,758 - =============结束请求时间:2018-07-05 09:58:18,耗时:0s======================
2018-07-05 09:58:18,758 - response=/icon
2018-07-05 09:58:18,758 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 09:58:18,836 - ===========进入拦截器==============
2018-07-05 09:58:18,836 - http://localhost:8081/menu/findIconList
2018-07-05 09:58:18,846 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findIconList============
2018-07-05 09:58:18,846 - ===========请求时间:2018-07-05 09:58:18==========================
2018-07-05 09:58:18,846 - url=http://localhost:8081/menu/findIconList
2018-07-05 09:58:18,846 - method=GET
2018-07-05 09:58:18,846 - ip=0:0:0:0:0:0:0:1
2018-07-05 09:58:18,846 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findIconList
2018-07-05 09:58:18,846 - args:
2018-07-05 09:58:18,855 - =============结束请求时间:2018-07-05 09:58:18,耗时:0s======================
2018-07-05 09:58:18,855 - response=Result(code=200, msg=成功, data=[Icon(gid=1, name=四叶草, url=&#xe696;, version=1, createTime=2018-06-02 14:58:09.0, updateTime=2018-06-02 14:58:09.0, status=0), Icon(gid=2, name=难过, url=&#xe69c;, version=1, createTime=2018-06-02 15:10:03.0, updateTime=2018-06-02 15:10:03.0, status=0), Icon(gid=3, name=微笑, url=&#xe6af;, version=1, createTime=2018-06-02 15:10:18.0, updateTime=2018-06-02 15:10:18.0, status=0), Icon(gid=4, name=后退, url=&#xe697;, version=1, createTime=2018-06-02 15:11:39.0, updateTime=2018-06-02 15:11:39.0, status=0), Icon(gid=5, name=更多, url=&#xe6a7;, version=1, createTime=2018-06-02 15:11:56.0, updateTime=2018-06-02 15:11:56.0, status=0), Icon(gid=6, name=更少, url=&#xe6a5;, version=1, createTime=2018-06-02 15:12:12.0, updateTime=2018-06-02 15:12:12.0, status=0), Icon(gid=7, name=下箭头, url=&#xe6a6;, version=1, createTime=2018-06-02 15:12:33.0, updateTime=2018-06-02 15:12:33.0, status=0), Icon(gid=8, name=关闭, url=&#xe69a;, version=1, createTime=2018-06-02 15:12:58.0, updateTime=2018-06-02 15:12:58.0, status=0), Icon(gid=9, name=选择, url=&#xe6ad;, version=1, createTime=2018-06-02 15:13:18.0, updateTime=2018-06-02 15:13:18.0, status=0), Icon(gid=10, name=成功, url=&#xe6b1;, version=1, createTime=2018-06-02 15:13:43.0, updateTime=2018-06-02 15:13:43.0, status=0), Icon(gid=11, name=错误, url=&#xe6b7;, version=1, createTime=2018-06-02 15:13:53.0, updateTime=2018-06-02 15:13:53.0, status=0), Icon(gid=12, name=警告, url=&#xe6b6;, version=1, createTime=2018-06-02 15:14:02.0, updateTime=2018-06-02 15:14:02.0, status=0), Icon(gid=13, name=购物车, url=&#xe698;, version=1, createTime=2018-06-02 15:14:37.0, updateTime=2018-06-02 15:14:37.0, status=0), Icon(gid=14, name=短信, url=&#xe69b;, version=1, createTime=2018-06-02 15:14:50.0, updateTime=2018-06-02 15:14:50.0, status=0), Icon(gid=15, name=邮件, url=&#xe72d;, version=1, createTime=2018-06-02 15:15:11.0, updateTime=2018-06-02 15:15:11.0, status=0), Icon(gid=16, name=用户, url=&#xe6b8;, version=1, createTime=2018-06-02 15:15:38.0, updateTime=2018-06-02 15:15:38.0, status=0), Icon(gid=17, name=客服, url=&#xe6c7;, version=1, createTime=2018-06-02 15:15:48.0, updateTime=2018-06-02 15:15:48.0, status=0), Icon(gid=18, name=设置, url=&#xe6ae;, version=1, createTime=2018-06-02 15:16:09.0, updateTime=2018-06-02 15:16:09.0, status=0), Icon(gid=19, name=横杠, url=&#xe6fe;, version=1, createTime=2018-06-04 18:30:05.0, updateTime=2018-06-04 18:30:05.0, status=0), Icon(gid=20, name=添加, url=&#xe6b9;, version=1, createTime=2018-06-07 14:53:24.0, updateTime=2018-06-07 14:53:24.0, status=0), Icon(gid=21, name=编辑, url=&#xe69e;, version=1, createTime=2018-06-07 14:53:45.0, updateTime=2018-06-07 14:53:45.0, status=0), Icon(gid=22, name=删除, url=&#xe69d;, version=1, createTime=2018-06-07 14:54:01.0, updateTime=2018-06-07 14:54:01.0, status=0), Icon(gid=23, name=列表, url=&#xe6b5;, version=1, createTime=2018-06-07 14:54:25.0, updateTime=2018-06-07 14:54:25.0, status=0)], page=null, totalCount=null)
2018-07-05 09:58:18,856 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:05:32,457 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4b2fe642: startup date [Wed Jul 04 19:10:01 CST 2018]; root of context hierarchy
2018-07-05 11:05:32,468 - Unregistering JMX-exposed beans on shutdown
2018-07-05 11:05:32,468 - Unregistering JMX-exposed beans
2018-07-05 11:05:32,472 - {dataSource-1} closed
2018-07-05 11:05:33,181 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18204 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:05:33,181 - No active profile set, falling back to default profiles: default
2018-07-05 11:05:33,197 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@728063ac: startup date [Thu Jul 05 11:05:33 CST 2018]; root of context hierarchy
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:33,752 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:05:33,753 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:05:34,001 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:05:34,001 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:05:34,001 - Starting service [Tomcat]
2018-07-05 11:05:34,001 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:05:34,034 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:05:34,035 - Root WebApplicationContext: initialization completed in 838 ms
2018-07-05 11:05:34,090 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:05:34,091 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:05:34,091 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:05:34,091 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:05:34,091 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:05:34,091 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:05:34,326 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'wasDataDictionaryController': Unsatisfied dependency expressed through field 'wasDataDictionaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'wasDataDictionaryService': Unsatisfied dependency expressed through field 'wasDataDictionaryMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'wasDataDictionaryMapper' defined in file [D:\project\fq-ltd-was-backstage\target\classes\com\fq\fqltdwasbackstage\mapper\WasDataDictionaryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating SqlSource for SqlProvider. Method 'pageQueryCount' not found in SqlProvider 'com.fq.fqltdwasbackstage.provider.BaseProvider'.
2018-07-05 11:05:34,326 - Stopping service [Tomcat]
2018-07-05 11:05:34,335 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-07-05 11:05:44,377 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10584 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:05:44,379 - No active profile set, falling back to default profiles: default
2018-07-05 11:05:44,550 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:05:44,609 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3007f3d1: startup date [Thu Jul 05 11:05:44 CST 2018]; root of context hierarchy
2018-07-05 11:05:45,469 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:05:45,470 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:05:45,471 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:05:46,483 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:05:46,495 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:05:46,503 - Starting service [Tomcat]
2018-07-05 11:05:46,504 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:05:46,604 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:05:46,605 - Root WebApplicationContext: initialization completed in 1996 ms
2018-07-05 11:05:46,855 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:05:46,858 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:05:46,859 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:05:46,859 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:05:46,859 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:05:46,859 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:05:47,925 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'wasDataDictionaryController': Unsatisfied dependency expressed through field 'wasDataDictionaryService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'wasDataDictionaryService': Unsatisfied dependency expressed through field 'wasDataDictionaryMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'wasDataDictionaryMapper' defined in file [D:\project\fq-ltd-was-backstage\target\classes\com\fq\fqltdwasbackstage\mapper\WasDataDictionaryMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Could not find value method on SQL annotation.  Cause: org.apache.ibatis.builder.BuilderException: Error creating SqlSource for SqlProvider. Method 'pageQueryCount' not found in SqlProvider 'com.fq.fqltdwasbackstage.provider.BaseProvider'.
2018-07-05 11:05:47,929 - Stopping service [Tomcat]
2018-07-05 11:05:47,957 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2018-07-05 11:07:01,920 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16456 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:07:01,922 - No active profile set, falling back to default profiles: default
2018-07-05 11:07:02,071 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:07:02,129 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Thu Jul 05 11:07:02 CST 2018]; root of context hierarchy
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:07:03,041 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:07:03,041 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:07:04,047 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:07:04,061 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:07:04,072 - Starting service [Tomcat]
2018-07-05 11:07:04,072 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:07:04,171 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:07:04,171 - Root WebApplicationContext: initialization completed in 2042 ms
2018-07-05 11:07:04,379 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:07:04,384 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:07:04,385 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:07:04,385 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:07:04,385 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:07:04,385 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:07:05,946 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Thu Jul 05 11:07:02 CST 2018]; root of context hierarchy
2018-07-05 11:07:06,045 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:07:06,046 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:07:06,046 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:07:06,046 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:07:06,047 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:07:06,047 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:07:06,047 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:07:06,047 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:07:06,047 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:07:06,047 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:07:06,047 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:07:06,048 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:07:06,048 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:07:06,048 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:07:06,048 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:07:06,048 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:07:06,048 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:07:06,048 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:07:06,048 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:07:06,049 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:07:06,049 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:07:06,053 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:07:06,053 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:07:06,056 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:07:06,056 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:07:06,056 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:07:06,056 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:07:06,056 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:07:06,057 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:07:06,057 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:07:06,057 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:07:06,057 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:07:06,058 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:07:06,058 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:07:06,058 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:07:06,058 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:07:06,059 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:07:06,060 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:07:06,060 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:07:06,060 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:07:06,060 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:07:06,060 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:07:06,061 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:07:06,061 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:07:06,062 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:07:06,062 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:07:06,062 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:07:06,063 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:07:06,063 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:07:06,063 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:07:06,063 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:07:06,064 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:07:06,064 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:07:06,064 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:07:06,064 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:07:06,064 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:07:06,065 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:07:06,066 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:07:06,116 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:07:06,116 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:07:06,140 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:07:06,174 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:07:06,952 - LiveReload server is running on port 35729
2018-07-05 11:07:07,079 - Registering beans for JMX exposure on startup
2018-07-05 11:07:07,081 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:07:07,087 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:07:07,099 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:07:07,126 - Using a shared selector for servlet write/read
2018-07-05 11:07:07,147 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:07:07,155 - Started FqLtdWasBackstageApplication in 6.269 seconds (JVM running for 7.5)
2018-07-05 11:07:47,097 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 11:07:47,097 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 11:07:47,139 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 11:07:47,207 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:07:47,207 - ===========请求时间:2018-07-05 11:07:47==========================
2018-07-05 11:07:47,207 - url=http://localhost:8081/signIn
2018-07-05 11:07:47,207 - method=POST
2018-07-05 11:07:47,207 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:47,207 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:07:47,207 - args:userName=admin,password=123456,
2018-07-05 11:07:47,301 - {dataSource-1} inited
2018-07-05 11:07:47,755 - =============结束请求时间:2018-07-05 11:07:47,耗时:0s======================
2018-07-05 11:07:47,756 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:07:47, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:07:47,864 - ===========进入拦截器==============
2018-07-05 11:07:47,871 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:07:47,871 - ===========请求时间:2018-07-05 11:07:47==========================
2018-07-05 11:07:47,871 - url=http://localhost:8081/login
2018-07-05 11:07:47,871 - method=GET
2018-07-05 11:07:47,871 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:47,872 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:07:47,872 - args:
2018-07-05 11:07:47,880 - =============结束请求时间:2018-07-05 11:07:47,耗时:0s======================
2018-07-05 11:07:47,881 - response=/login
2018-07-05 11:07:47,918 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 11:07:47,994 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 11:07:47,995 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 11:07:47,995 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 11:07:47,995 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 11:07:48,001 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 11:07:48,001 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 11:07:55,545 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:07:55,545 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,545 - url=http://localhost:8081/signIn
2018-07-05 11:07:55,545 - method=POST
2018-07-05 11:07:55,545 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,545 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:07:55,545 - args:userName=admin,password=123456,
2018-07-05 11:07:55,590 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,590 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:07:55, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:07:55,603 - ===========进入拦截器==============
2018-07-05 11:07:55,603 - http://localhost:8081/home
2018-07-05 11:07:55,613 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 11:07:55,613 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,613 - url=http://localhost:8081/home
2018-07-05 11:07:55,613 - method=GET
2018-07-05 11:07:55,613 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,613 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 11:07:55,614 - args:
2018-07-05 11:07:55,614 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,614 - response=/home
2018-07-05 11:07:55,614 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:07:55,686 - ===========进入拦截器==============
2018-07-05 11:07:55,686 - http://localhost:8081/welcome
2018-07-05 11:07:55,697 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 11:07:55,697 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,697 - url=http://localhost:8081/welcome
2018-07-05 11:07:55,697 - method=GET
2018-07-05 11:07:55,697 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,697 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 11:07:55,697 - args:
2018-07-05 11:07:55,697 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,697 - response=/welcome
2018-07-05 11:07:55,698 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:07:55,709 - ===========进入拦截器==============
2018-07-05 11:07:55,709 - http://localhost:8081/common/top
2018-07-05 11:07:55,710 - ===========进入拦截器==============
2018-07-05 11:07:55,710 - http://localhost:8081/common/left
2018-07-05 11:07:55,714 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 11:07:55,714 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,714 - url=http://localhost:8081/common/top
2018-07-05 11:07:55,714 - method=GET
2018-07-05 11:07:55,714 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,714 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 11:07:55,714 - args:
2018-07-05 11:07:55,714 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,714 - response=/common/top
2018-07-05 11:07:55,715 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:07:55,719 - ===========进入拦截器==============
2018-07-05 11:07:55,719 - http://localhost:8081/common/footer
2018-07-05 11:07:55,724 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 11:07:55,724 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,724 - url=http://localhost:8081/common/left
2018-07-05 11:07:55,724 - method=GET
2018-07-05 11:07:55,724 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,724 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 11:07:55,724 - args:
2018-07-05 11:07:55,724 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,724 - response=/common/left
2018-07-05 11:07:55,724 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:07:55,734 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 11:07:55,734 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,734 - url=http://localhost:8081/common/footer
2018-07-05 11:07:55,734 - method=GET
2018-07-05 11:07:55,734 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,734 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 11:07:55,734 - args:
2018-07-05 11:07:55,735 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,735 - response=/common/footer
2018-07-05 11:07:55,735 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:07:55,764 - ===========进入拦截器==============
2018-07-05 11:07:55,764 - http://localhost:8081/menu/findMenuByRole
2018-07-05 11:07:55,775 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 11:07:55,776 - ===========请求时间:2018-07-05 11:07:55==========================
2018-07-05 11:07:55,776 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 11:07:55,776 - method=GET
2018-07-05 11:07:55,776 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:07:55,776 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 11:07:55,776 - args:roleId=1,
2018-07-05 11:07:55,811 - =============结束请求时间:2018-07-05 11:07:55,耗时:0s======================
2018-07-05 11:07:55,812 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 11:07:55,823 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:08:18,561 - ===========进入拦截器==============
2018-07-05 11:08:18,561 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:08:18,571 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:08:18,572 - ===========请求时间:2018-07-05 11:08:18==========================
2018-07-05 11:08:18,572 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:08:18,572 - method=GET
2018-07-05 11:08:18,572 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:08:18,572 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:08:18,572 - args:
2018-07-05 11:08:18,585 - =============结束请求时间:2018-07-05 11:08:18,耗时:0s======================
2018-07-05 11:08:18,586 - response=Result(code=200, msg=成功, data=null, page=null, totalCount=null)
2018-07-05 11:08:18,587 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:08:39,376 - ===========进入拦截器==============
2018-07-05 11:08:39,376 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:08:39,383 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:08:39,384 - ===========请求时间:2018-07-05 11:08:39==========================
2018-07-05 11:08:39,384 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:08:39,384 - method=GET
2018-07-05 11:08:39,384 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:08:39,384 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:08:39,384 - args:
2018-07-05 11:08:45,244 - =============结束请求时间:2018-07-05 11:08:45,耗时:5s======================
2018-07-05 11:08:45,244 - response=Result(code=200, msg=成功, data=null, page=null, totalCount=null)
2018-07-05 11:08:45,245 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:11,214 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7908 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:09:11,217 - No active profile set, falling back to default profiles: default
2018-07-05 11:09:11,409 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:09:11,485 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5724e8f0: startup date [Thu Jul 05 11:09:11 CST 2018]; root of context hierarchy
2018-07-05 11:09:12,672 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:09:12,673 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:09:12,674 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:09:13,846 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:09:13,857 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:09:13,865 - Starting service [Tomcat]
2018-07-05 11:09:13,865 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:09:13,983 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:09:13,983 - Root WebApplicationContext: initialization completed in 2498 ms
2018-07-05 11:09:14,224 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:09:14,230 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:09:14,230 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:09:14,230 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:09:14,230 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:09:14,230 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:09:15,755 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5724e8f0: startup date [Thu Jul 05 11:09:11 CST 2018]; root of context hierarchy
2018-07-05 11:09:15,862 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:09:15,863 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:09:15,863 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:09:15,863 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:09:15,863 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:09:15,863 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:09:15,864 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:09:15,864 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:09:15,864 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:09:15,864 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:09:15,864 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:09:15,865 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:09:15,865 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:09:15,865 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:09:15,865 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:09:15,865 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:09:15,865 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:09:15,865 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:09:15,865 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:09:15,866 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:09:15,866 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:09:15,870 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:09:15,870 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:09:15,871 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:09:15,872 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:09:15,872 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:09:15,872 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:09:15,872 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:09:15,872 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:09:15,872 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:09:15,872 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:09:15,873 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:09:15,874 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:09:15,874 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:09:15,874 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:09:15,874 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:09:15,875 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:09:15,875 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:09:15,875 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:09:15,875 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:09:15,876 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:09:15,876 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:09:15,876 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:09:15,877 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:09:15,878 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:09:15,878 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:09:15,878 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:09:15,879 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:09:15,879 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:09:15,879 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:09:15,879 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:09:15,880 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:09:15,880 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:09:15,880 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:09:15,880 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:09:15,880 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:09:15,882 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:09:15,883 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:09:15,933 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:09:15,933 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:09:15,957 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:09:15,995 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:09:16,732 - LiveReload server is running on port 35729
2018-07-05 11:09:16,857 - Registering beans for JMX exposure on startup
2018-07-05 11:09:16,859 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:09:16,865 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:09:16,882 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:09:16,911 - Using a shared selector for servlet write/read
2018-07-05 11:09:16,929 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:09:16,937 - Started FqLtdWasBackstageApplication in 6.449 seconds (JVM running for 7.594)
2018-07-05 11:09:23,707 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 11:09:23,707 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 11:09:23,747 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 11:09:23,779 - ===========进入拦截器==============
2018-07-05 11:09:23,814 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:09:23,814 - ===========请求时间:2018-07-05 11:09:23==========================
2018-07-05 11:09:23,814 - url=http://localhost:8081/login
2018-07-05 11:09:23,814 - method=GET
2018-07-05 11:09:23,814 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:23,814 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:09:23,814 - args:
2018-07-05 11:09:23,818 - =============结束请求时间:2018-07-05 11:09:23,耗时:0s======================
2018-07-05 11:09:23,818 - response=/login
2018-07-05 11:09:23,850 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 11:09:23,918 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 11:09:23,918 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 11:09:23,918 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 11:09:23,918 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 11:09:23,924 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 11:09:23,924 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 11:09:26,693 - ===========进入拦截器==============
2018-07-05 11:09:26,697 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:09:26,698 - ===========请求时间:2018-07-05 11:09:26==========================
2018-07-05 11:09:26,698 - url=http://localhost:8081/login
2018-07-05 11:09:26,698 - method=GET
2018-07-05 11:09:26,698 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:26,698 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:09:26,698 - args:
2018-07-05 11:09:26,698 - =============结束请求时间:2018-07-05 11:09:26,耗时:0s======================
2018-07-05 11:09:26,698 - response=/login
2018-07-05 11:09:30,698 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:09:30,698 - ===========请求时间:2018-07-05 11:09:30==========================
2018-07-05 11:09:30,698 - url=http://localhost:8081/signIn
2018-07-05 11:09:30,698 - method=POST
2018-07-05 11:09:30,698 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:30,698 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:09:30,698 - args:userName=admin,password=123456,
2018-07-05 11:09:30,796 - {dataSource-1} inited
2018-07-05 11:09:31,290 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,291 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:09:31, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:09:31,404 - ===========进入拦截器==============
2018-07-05 11:09:31,404 - http://localhost:8081/home
2018-07-05 11:09:31,410 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 11:09:31,410 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,410 - url=http://localhost:8081/home
2018-07-05 11:09:31,410 - method=GET
2018-07-05 11:09:31,410 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 11:09:31,410 - args:
2018-07-05 11:09:31,411 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,411 - response=/home
2018-07-05 11:09:31,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:31,484 - ===========进入拦截器==============
2018-07-05 11:09:31,484 - http://localhost:8081/welcome
2018-07-05 11:09:31,492 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 11:09:31,492 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,492 - url=http://localhost:8081/welcome
2018-07-05 11:09:31,492 - method=GET
2018-07-05 11:09:31,492 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,492 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 11:09:31,492 - args:
2018-07-05 11:09:31,492 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,492 - response=/welcome
2018-07-05 11:09:31,493 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:31,502 - ===========进入拦截器==============
2018-07-05 11:09:31,502 - http://localhost:8081/common/top
2018-07-05 11:09:31,504 - ===========进入拦截器==============
2018-07-05 11:09:31,504 - http://localhost:8081/common/footer
2018-07-05 11:09:31,508 - ===========进入拦截器==============
2018-07-05 11:09:31,508 - http://localhost:8081/common/left
2018-07-05 11:09:31,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 11:09:31,508 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,508 - url=http://localhost:8081/common/top
2018-07-05 11:09:31,508 - method=GET
2018-07-05 11:09:31,508 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,508 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 11:09:31,508 - args:
2018-07-05 11:09:31,508 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,508 - response=/common/top
2018-07-05 11:09:31,508 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:31,526 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 11:09:31,526 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,526 - url=http://localhost:8081/common/left
2018-07-05 11:09:31,526 - method=GET
2018-07-05 11:09:31,526 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,526 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 11:09:31,526 - args:
2018-07-05 11:09:31,527 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,527 - response=/common/left
2018-07-05 11:09:31,527 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:31,531 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 11:09:31,531 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,531 - url=http://localhost:8081/common/footer
2018-07-05 11:09:31,531 - method=GET
2018-07-05 11:09:31,531 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,531 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 11:09:31,531 - args:
2018-07-05 11:09:31,532 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,532 - response=/common/footer
2018-07-05 11:09:31,532 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:31,585 - ===========进入拦截器==============
2018-07-05 11:09:31,585 - http://localhost:8081/menu/findMenuByRole
2018-07-05 11:09:31,592 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 11:09:31,592 - ===========请求时间:2018-07-05 11:09:31==========================
2018-07-05 11:09:31,592 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 11:09:31,592 - method=GET
2018-07-05 11:09:31,592 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:31,592 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 11:09:31,592 - args:roleId=1,
2018-07-05 11:09:31,630 - =============结束请求时间:2018-07-05 11:09:31,耗时:0s======================
2018-07-05 11:09:31,630 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 11:09:31,639 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:09:44,719 - ===========进入拦截器==============
2018-07-05 11:09:44,719 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:09:44,735 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:09:44,736 - ===========请求时间:2018-07-05 11:09:44==========================
2018-07-05 11:09:44,736 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:09:44,736 - method=GET
2018-07-05 11:09:44,736 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:09:44,736 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:09:44,736 - args:
2018-07-05 11:11:11,296 - =============结束请求时间:2018-07-05 11:11:11,耗时:86s======================
2018-07-05 11:11:11,296 - response=Result(code=200, msg=成功, data=null, page=null, totalCount=null)
2018-07-05 11:11:11,299 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:11,699 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11660 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:12:11,703 - No active profile set, falling back to default profiles: default
2018-07-05 11:12:11,938 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:12:11,982 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b4dd7: startup date [Thu Jul 05 11:12:11 CST 2018]; root of context hierarchy
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:12:12,854 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:12:12,855 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:12:13,889 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:12:13,902 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:12:13,910 - Starting service [Tomcat]
2018-07-05 11:12:13,911 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:12:14,019 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:12:14,020 - Root WebApplicationContext: initialization completed in 2037 ms
2018-07-05 11:12:14,253 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:12:14,260 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:12:14,261 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:12:14,261 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:12:14,261 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:12:14,261 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:12:15,959 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@637b4dd7: startup date [Thu Jul 05 11:12:11 CST 2018]; root of context hierarchy
2018-07-05 11:12:16,064 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:12:16,066 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:12:16,066 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:12:16,066 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:12:16,066 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:12:16,066 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:12:16,066 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:12:16,067 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:12:16,067 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:12:16,067 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:12:16,067 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:12:16,067 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:12:16,067 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:12:16,067 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:12:16,067 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:12:16,068 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:12:16,068 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:12:16,068 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:12:16,068 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:12:16,068 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:12:16,068 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:12:16,072 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:12:16,072 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:12:16,074 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:12:16,074 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:12:16,075 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:12:16,075 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:12:16,075 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:12:16,075 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:12:16,075 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:12:16,075 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:12:16,075 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:12:16,076 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:12:16,076 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:12:16,076 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:12:16,077 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:12:16,078 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:12:16,078 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:12:16,078 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:12:16,078 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:12:16,078 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:12:16,078 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:12:16,079 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:12:16,079 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:12:16,080 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:12:16,081 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:12:16,081 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:12:16,081 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:12:16,081 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:12:16,081 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:12:16,081 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:12:16,082 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:12:16,082 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:12:16,082 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:12:16,082 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:12:16,082 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:12:16,084 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:12:16,084 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:12:16,138 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:12:16,138 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:12:16,164 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:12:16,199 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:12:16,960 - LiveReload server is running on port 35729
2018-07-05 11:12:17,096 - Registering beans for JMX exposure on startup
2018-07-05 11:12:17,098 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:12:17,104 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:12:17,116 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:12:17,146 - Using a shared selector for servlet write/read
2018-07-05 11:12:17,170 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:12:17,178 - Started FqLtdWasBackstageApplication in 6.6 seconds (JVM running for 8.006)
2018-07-05 11:12:42,016 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 11:12:42,016 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 11:12:42,055 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-05 11:12:42,083 - ===========进入拦截器==============
2018-07-05 11:12:42,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:12:42,120 - ===========请求时间:2018-07-05 11:12:42==========================
2018-07-05 11:12:42,120 - url=http://localhost:8081/login
2018-07-05 11:12:42,120 - method=GET
2018-07-05 11:12:42,120 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:42,120 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:12:42,121 - args:
2018-07-05 11:12:42,125 - =============结束请求时间:2018-07-05 11:12:42,耗时:0s======================
2018-07-05 11:12:42,125 - response=/login
2018-07-05 11:12:42,158 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 11:12:42,229 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 11:12:42,229 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 11:12:42,229 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 11:12:42,229 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 11:12:42,235 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 11:12:42,235 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 11:12:46,155 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:12:46,155 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,155 - url=http://localhost:8081/signIn
2018-07-05 11:12:46,155 - method=POST
2018-07-05 11:12:46,155 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,155 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:12:46,155 - args:userName=admin,password=123456,
2018-07-05 11:12:46,249 - {dataSource-1} inited
2018-07-05 11:12:46,705 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,705 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:12:46, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:12:46,809 - ===========进入拦截器==============
2018-07-05 11:12:46,809 - http://localhost:8081/home
2018-07-05 11:12:46,817 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 11:12:46,817 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,818 - url=http://localhost:8081/home
2018-07-05 11:12:46,818 - method=GET
2018-07-05 11:12:46,818 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,818 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 11:12:46,818 - args:
2018-07-05 11:12:46,818 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,818 - response=/home
2018-07-05 11:12:46,818 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:46,889 - ===========进入拦截器==============
2018-07-05 11:12:46,889 - http://localhost:8081/welcome
2018-07-05 11:12:46,895 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 11:12:46,895 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,895 - url=http://localhost:8081/welcome
2018-07-05 11:12:46,895 - method=GET
2018-07-05 11:12:46,895 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,895 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 11:12:46,895 - args:
2018-07-05 11:12:46,896 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,896 - response=/welcome
2018-07-05 11:12:46,896 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:46,906 - ===========进入拦截器==============
2018-07-05 11:12:46,906 - http://localhost:8081/common/top
2018-07-05 11:12:46,907 - ===========进入拦截器==============
2018-07-05 11:12:46,907 - http://localhost:8081/common/left
2018-07-05 11:12:46,914 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 11:12:46,914 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,914 - url=http://localhost:8081/common/top
2018-07-05 11:12:46,914 - method=GET
2018-07-05 11:12:46,914 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,914 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 11:12:46,914 - args:
2018-07-05 11:12:46,914 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,914 - response=/common/top
2018-07-05 11:12:46,915 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:46,916 - ===========进入拦截器==============
2018-07-05 11:12:46,917 - http://localhost:8081/common/footer
2018-07-05 11:12:46,959 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 11:12:46,959 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,959 - url=http://localhost:8081/common/footer
2018-07-05 11:12:46,959 - method=GET
2018-07-05 11:12:46,959 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,959 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 11:12:46,959 - args:
2018-07-05 11:12:46,959 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,960 - response=/common/footer
2018-07-05 11:12:46,960 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:46,964 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 11:12:46,964 - ===========请求时间:2018-07-05 11:12:46==========================
2018-07-05 11:12:46,964 - url=http://localhost:8081/common/left
2018-07-05 11:12:46,965 - method=GET
2018-07-05 11:12:46,965 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:46,965 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 11:12:46,965 - args:
2018-07-05 11:12:46,965 - =============结束请求时间:2018-07-05 11:12:46,耗时:0s======================
2018-07-05 11:12:46,965 - response=/common/left
2018-07-05 11:12:46,965 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:46,994 - ===========进入拦截器==============
2018-07-05 11:12:46,994 - http://localhost:8081/menu/findMenuByRole
2018-07-05 11:12:47,010 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 11:12:47,010 - ===========请求时间:2018-07-05 11:12:47==========================
2018-07-05 11:12:47,010 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 11:12:47,010 - method=GET
2018-07-05 11:12:47,010 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:47,010 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 11:12:47,010 - args:roleId=1,
2018-07-05 11:12:47,054 - =============结束请求时间:2018-07-05 11:12:47,耗时:0s======================
2018-07-05 11:12:47,054 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 11:12:47,064 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:12:49,311 - ===========进入拦截器==============
2018-07-05 11:12:49,311 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:12:49,322 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:12:49,323 - ===========请求时间:2018-07-05 11:12:49==========================
2018-07-05 11:12:49,323 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:12:49,323 - method=GET
2018-07-05 11:12:49,323 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:12:49,323 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:12:49,323 - args:
2018-07-05 11:15:10,767 - =============结束请求时间:2018-07-05 11:15:10,耗时:141s======================
2018-07-05 11:15:10,767 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=1, wasBaseCurrency=null, wasType=null, wasBeginBlock=null, wasBlockNum=null, wasGateWay=null, wasTokenAddress=null, wasMinConfirm=null, wasStatus=null, wasPrecision=null, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=null, wasCreateTime=null, wasLastTime=null), page=null, totalCount=null)
2018-07-05 11:15:10,779 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:23,417 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19440 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:15:23,419 - No active profile set, falling back to default profiles: default
2018-07-05 11:15:23,590 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:15:23,635 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18613a0a: startup date [Thu Jul 05 11:15:23 CST 2018]; root of context hierarchy
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:15:24,441 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:15:24,441 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:15:25,500 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:15:25,516 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:15:25,528 - Starting service [Tomcat]
2018-07-05 11:15:25,528 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:15:25,656 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:15:25,656 - Root WebApplicationContext: initialization completed in 2021 ms
2018-07-05 11:15:25,871 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:15:25,875 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:15:25,876 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:15:25,876 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:15:25,876 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:15:25,876 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:15:27,499 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18613a0a: startup date [Thu Jul 05 11:15:23 CST 2018]; root of context hierarchy
2018-07-05 11:15:27,603 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:15:27,604 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:15:27,604 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:15:27,604 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:15:27,605 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:15:27,605 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:15:27,605 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:15:27,605 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:15:27,605 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:15:27,605 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:15:27,605 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:15:27,605 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:15:27,606 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:15:27,606 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:15:27,606 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:15:27,606 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:15:27,606 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:15:27,606 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:15:27,606 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:15:27,607 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:15:27,607 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:15:27,611 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:15:27,611 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:15:27,613 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:15:27,613 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:15:27,614 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:15:27,614 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:15:27,614 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:15:27,614 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:15:27,614 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:15:27,614 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:15:27,615 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:15:27,617 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:15:27,617 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:15:27,617 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:15:27,617 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:15:27,619 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:15:27,619 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:15:27,619 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:15:27,620 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:15:27,620 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:15:27,620 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:15:27,620 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:15:27,621 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:15:27,622 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:15:27,622 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:15:27,622 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:15:27,622 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:15:27,622 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:15:27,622 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:15:27,623 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:15:27,623 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:15:27,623 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:15:27,623 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:15:27,623 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:15:27,624 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:15:27,625 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:15:27,625 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:15:27,676 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:15:27,676 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:15:27,701 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:15:27,736 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:15:28,482 - LiveReload server is running on port 35729
2018-07-05 11:15:28,611 - Registering beans for JMX exposure on startup
2018-07-05 11:15:28,613 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:15:28,621 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:15:28,633 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:15:28,661 - Using a shared selector for servlet write/read
2018-07-05 11:15:28,679 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:15:28,687 - Started FqLtdWasBackstageApplication in 5.953 seconds (JVM running for 7.256)
2018-07-05 11:15:35,755 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 11:15:35,755 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 11:15:35,798 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 11:15:35,828 - ===========进入拦截器==============
2018-07-05 11:15:35,863 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:15:35,864 - ===========请求时间:2018-07-05 11:15:35==========================
2018-07-05 11:15:35,864 - url=http://localhost:8081/login
2018-07-05 11:15:35,864 - method=GET
2018-07-05 11:15:35,864 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:35,864 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:15:35,864 - args:
2018-07-05 11:15:35,869 - =============结束请求时间:2018-07-05 11:15:35,耗时:0s======================
2018-07-05 11:15:35,869 - response=/login
2018-07-05 11:15:35,903 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 11:15:35,981 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 11:15:35,981 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 11:15:35,981 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 11:15:35,981 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 11:15:35,987 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 11:15:35,987 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 11:15:40,575 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:15:40,575 - ===========请求时间:2018-07-05 11:15:40==========================
2018-07-05 11:15:40,575 - url=http://localhost:8081/signIn
2018-07-05 11:15:40,575 - method=POST
2018-07-05 11:15:40,575 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:40,575 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:15:40,575 - args:userName=admin,password=123456,
2018-07-05 11:15:40,677 - {dataSource-1} inited
2018-07-05 11:15:41,558 - =============结束请求时间:2018-07-05 11:15:41,耗时:0s======================
2018-07-05 11:15:41,559 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:15:41, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:15:41,671 - ===========进入拦截器==============
2018-07-05 11:15:41,671 - http://localhost:8081/home
2018-07-05 11:15:41,680 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 11:15:41,681 - ===========请求时间:2018-07-05 11:15:41==========================
2018-07-05 11:15:41,681 - url=http://localhost:8081/home
2018-07-05 11:15:41,681 - method=GET
2018-07-05 11:15:41,681 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:41,681 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 11:15:41,681 - args:
2018-07-05 11:15:41,682 - =============结束请求时间:2018-07-05 11:15:41,耗时:0s======================
2018-07-05 11:15:41,682 - response=/home
2018-07-05 11:15:41,683 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:41,768 - ===========进入拦截器==============
2018-07-05 11:15:41,768 - http://localhost:8081/welcome
2018-07-05 11:15:41,778 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 11:15:41,779 - ===========请求时间:2018-07-05 11:15:41==========================
2018-07-05 11:15:41,779 - url=http://localhost:8081/welcome
2018-07-05 11:15:41,779 - method=GET
2018-07-05 11:15:41,779 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:41,779 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 11:15:41,779 - args:
2018-07-05 11:15:41,779 - =============结束请求时间:2018-07-05 11:15:41,耗时:0s======================
2018-07-05 11:15:41,779 - response=/welcome
2018-07-05 11:15:41,780 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:42,171 - ===========进入拦截器==============
2018-07-05 11:15:42,172 - http://localhost:8081/common/left
2018-07-05 11:15:42,172 - ===========进入拦截器==============
2018-07-05 11:15:42,172 - http://localhost:8081/common/footer
2018-07-05 11:15:42,172 - ===========进入拦截器==============
2018-07-05 11:15:42,172 - http://localhost:8081/common/top
2018-07-05 11:15:42,179 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 11:15:42,181 - ===========请求时间:2018-07-05 11:15:42==========================
2018-07-05 11:15:42,181 - url=http://localhost:8081/common/left
2018-07-05 11:15:42,181 - method=GET
2018-07-05 11:15:42,181 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:42,181 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 11:15:42,181 - args:
2018-07-05 11:15:42,181 - =============结束请求时间:2018-07-05 11:15:42,耗时:0s======================
2018-07-05 11:15:42,181 - response=/common/left
2018-07-05 11:15:42,181 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:42,188 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 11:15:42,188 - ===========请求时间:2018-07-05 11:15:42==========================
2018-07-05 11:15:42,188 - url=http://localhost:8081/common/footer
2018-07-05 11:15:42,188 - method=GET
2018-07-05 11:15:42,188 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:42,188 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 11:15:42,188 - args:
2018-07-05 11:15:42,188 - =============结束请求时间:2018-07-05 11:15:42,耗时:0s======================
2018-07-05 11:15:42,188 - response=/common/footer
2018-07-05 11:15:42,188 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:42,197 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 11:15:42,197 - ===========请求时间:2018-07-05 11:15:42==========================
2018-07-05 11:15:42,197 - url=http://localhost:8081/common/top
2018-07-05 11:15:42,197 - method=GET
2018-07-05 11:15:42,197 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:42,197 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 11:15:42,197 - args:
2018-07-05 11:15:42,197 - =============结束请求时间:2018-07-05 11:15:42,耗时:0s======================
2018-07-05 11:15:42,197 - response=/common/top
2018-07-05 11:15:42,198 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:43,168 - ===========进入拦截器==============
2018-07-05 11:15:43,168 - http://localhost:8081/menu/findMenuByRole
2018-07-05 11:15:43,177 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 11:15:43,177 - ===========请求时间:2018-07-05 11:15:43==========================
2018-07-05 11:15:43,177 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 11:15:43,177 - method=GET
2018-07-05 11:15:43,177 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:43,177 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 11:15:43,177 - args:roleId=1,
2018-07-05 11:15:43,219 - =============结束请求时间:2018-07-05 11:15:43,耗时:0s======================
2018-07-05 11:15:43,219 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 11:15:43,229 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:15:54,321 - ===========进入拦截器==============
2018-07-05 11:15:54,321 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:15:54,334 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:15:54,334 - ===========请求时间:2018-07-05 11:15:54==========================
2018-07-05 11:15:54,334 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:15:54,334 - method=GET
2018-07-05 11:15:54,334 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:15:54,334 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:15:54,334 - args:
2018-07-05 11:15:58,898 - =============结束请求时间:2018-07-05 11:15:58,耗时:4s======================
2018-07-05 11:15:58,898 - response=Result(code=200, msg=成功, data=null, page=null, totalCount=null)
2018-07-05 11:15:58,901 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:04,106 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14864 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:32:04,109 - No active profile set, falling back to default profiles: default
2018-07-05 11:32:04,296 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:32:04,399 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75304b8b: startup date [Thu Jul 05 11:32:04 CST 2018]; root of context hierarchy
2018-07-05 11:32:05,709 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,709 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,709 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,709 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,710 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,710 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:32:05,710 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:32:05,710 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:32:06,801 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:32:06,812 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:32:06,822 - Starting service [Tomcat]
2018-07-05 11:32:06,822 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:32:06,923 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:32:06,924 - Root WebApplicationContext: initialization completed in 2525 ms
2018-07-05 11:32:07,167 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:32:07,171 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:32:07,172 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:32:07,172 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:32:07,172 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:32:07,172 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:32:08,768 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75304b8b: startup date [Thu Jul 05 11:32:04 CST 2018]; root of context hierarchy
2018-07-05 11:32:08,871 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:32:08,873 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:32:08,873 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:32:08,873 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:32:08,873 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:32:08,873 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:32:08,873 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:32:08,874 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:32:08,874 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:32:08,874 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:32:08,874 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:32:08,874 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:32:08,874 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:32:08,874 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:32:08,874 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:32:08,875 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:32:08,875 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:32:08,875 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:32:08,875 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:32:08,875 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:32:08,875 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:32:08,879 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:32:08,879 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:32:08,881 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:32:08,881 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:32:08,881 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:32:08,881 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:32:08,881 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:32:08,881 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:32:08,882 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:32:08,882 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:32:08,882 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:32:08,883 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:32:08,883 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:32:08,883 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:32:08,883 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:32:08,885 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:32:08,885 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:32:08,885 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:32:08,885 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:32:08,886 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:32:08,886 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:32:08,886 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:32:08,886 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:32:08,887 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:32:08,888 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:32:08,888 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:32:08,888 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:32:08,889 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:32:08,889 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:32:08,889 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:32:08,890 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:32:08,890 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:32:08,890 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:32:08,890 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:32:08,890 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:32:08,891 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:32:08,892 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:32:08,941 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:32:08,942 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:32:08,967 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:32:09,010 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:32:09,824 - LiveReload server is running on port 35729
2018-07-05 11:32:09,956 - Registering beans for JMX exposure on startup
2018-07-05 11:32:09,958 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:32:09,965 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:32:09,978 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:32:10,010 - Using a shared selector for servlet write/read
2018-07-05 11:32:10,029 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:32:10,039 - Started FqLtdWasBackstageApplication in 6.403 seconds (JVM running for 7.507)
2018-07-05 11:32:15,299 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 11:32:15,299 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 11:32:15,340 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 11:32:15,371 - ===========进入拦截器==============
2018-07-05 11:32:15,407 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 11:32:15,407 - ===========请求时间:2018-07-05 11:32:15==========================
2018-07-05 11:32:15,407 - url=http://localhost:8081/login
2018-07-05 11:32:15,407 - method=GET
2018-07-05 11:32:15,407 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:15,407 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 11:32:15,407 - args:
2018-07-05 11:32:15,411 - =============结束请求时间:2018-07-05 11:32:15,耗时:0s======================
2018-07-05 11:32:15,411 - response=/login
2018-07-05 11:32:15,445 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 11:32:15,522 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 11:32:15,523 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 11:32:15,523 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 11:32:15,523 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 11:32:15,530 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 11:32:15,530 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 11:32:19,954 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 11:32:19,955 - ===========请求时间:2018-07-05 11:32:19==========================
2018-07-05 11:32:19,955 - url=http://localhost:8081/signIn
2018-07-05 11:32:19,955 - method=POST
2018-07-05 11:32:19,955 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:19,955 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 11:32:19,955 - args:userName=admin,password=123456,
2018-07-05 11:32:20,048 - {dataSource-1} inited
2018-07-05 11:32:20,552 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,552 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 11:32:20, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 11:32:20,649 - ===========进入拦截器==============
2018-07-05 11:32:20,649 - http://localhost:8081/home
2018-07-05 11:32:20,655 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 11:32:20,655 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,655 - url=http://localhost:8081/home
2018-07-05 11:32:20,655 - method=GET
2018-07-05 11:32:20,655 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 11:32:20,656 - args:
2018-07-05 11:32:20,656 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,656 - response=/home
2018-07-05 11:32:20,656 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:20,736 - ===========进入拦截器==============
2018-07-05 11:32:20,736 - http://localhost:8081/welcome
2018-07-05 11:32:20,741 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 11:32:20,741 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,741 - url=http://localhost:8081/welcome
2018-07-05 11:32:20,741 - method=GET
2018-07-05 11:32:20,741 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,741 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 11:32:20,741 - args:
2018-07-05 11:32:20,741 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,741 - response=/welcome
2018-07-05 11:32:20,741 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:20,754 - ===========进入拦截器==============
2018-07-05 11:32:20,754 - http://localhost:8081/common/top
2018-07-05 11:32:20,759 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 11:32:20,759 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,759 - url=http://localhost:8081/common/top
2018-07-05 11:32:20,759 - method=GET
2018-07-05 11:32:20,759 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,759 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 11:32:20,759 - args:
2018-07-05 11:32:20,759 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,760 - response=/common/top
2018-07-05 11:32:20,760 - ===========进入拦截器==============
2018-07-05 11:32:20,760 - http://localhost:8081/common/footer
2018-07-05 11:32:20,760 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:20,760 - ===========进入拦截器==============
2018-07-05 11:32:20,760 - http://localhost:8081/common/left
2018-07-05 11:32:20,772 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 11:32:20,772 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,772 - url=http://localhost:8081/common/footer
2018-07-05 11:32:20,772 - method=GET
2018-07-05 11:32:20,772 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,772 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 11:32:20,772 - args:
2018-07-05 11:32:20,773 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,773 - response=/common/footer
2018-07-05 11:32:20,773 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:20,784 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 11:32:20,784 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,784 - url=http://localhost:8081/common/left
2018-07-05 11:32:20,784 - method=GET
2018-07-05 11:32:20,784 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,784 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 11:32:20,784 - args:
2018-07-05 11:32:20,785 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,785 - response=/common/left
2018-07-05 11:32:20,785 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:20,835 - ===========进入拦截器==============
2018-07-05 11:32:20,835 - http://localhost:8081/menu/findMenuByRole
2018-07-05 11:32:20,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 11:32:20,842 - ===========请求时间:2018-07-05 11:32:20==========================
2018-07-05 11:32:20,842 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 11:32:20,842 - method=GET
2018-07-05 11:32:20,842 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:20,842 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 11:32:20,842 - args:roleId=1,
2018-07-05 11:32:20,889 - =============结束请求时间:2018-07-05 11:32:20,耗时:0s======================
2018-07-05 11:32:20,889 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 11:32:20,900 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:32:22,720 - ===========进入拦截器==============
2018-07-05 11:32:22,720 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:32:22,749 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:32:22,749 - ===========请求时间:2018-07-05 11:32:22==========================
2018-07-05 11:32:22,749 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:32:22,749 - method=GET
2018-07-05 11:32:22,749 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:32:22,749 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:32:22,749 - args:
2018-07-05 11:32:22,761 - =============结束请求时间:2018-07-05 11:32:22,耗时:0s======================
2018-07-05 11:32:22,761 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), page=null, totalCount=null)
2018-07-05 11:32:22,766 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:34:01,331 - ===========进入拦截器==============
2018-07-05 11:34:01,331 - http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:34:01,357 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 11:34:01,357 - ===========请求时间:2018-07-05 11:34:01==========================
2018-07-05 11:34:01,357 - url=http://localhost:8081/generator/wasdatadictionary/info/1
2018-07-05 11:34:01,357 - method=GET
2018-07-05 11:34:01,357 - ip=0:0:0:0:0:0:0:1
2018-07-05 11:34:01,357 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 11:34:01,358 - args:
2018-07-05 11:34:01,363 - =============结束请求时间:2018-07-05 11:34:01,耗时:0s======================
2018-07-05 11:34:01,363 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), page=null, totalCount=null)
2018-07-05 11:34:01,364 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 11:59:49,540 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19416 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 11:59:49,543 - No active profile set, falling back to default profiles: default
2018-07-05 11:59:49,731 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 11:59:49,815 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@462a6bf3: startup date [Thu Jul 05 11:59:49 CST 2018]; root of context hierarchy
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 11:59:51,184 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 11:59:51,185 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 11:59:52,410 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 11:59:52,423 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 11:59:52,431 - Starting service [Tomcat]
2018-07-05 11:59:52,431 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 11:59:52,538 - Initializing Spring embedded WebApplicationContext
2018-07-05 11:59:52,538 - Root WebApplicationContext: initialization completed in 2723 ms
2018-07-05 11:59:52,752 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 11:59:52,756 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 11:59:52,757 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 11:59:52,757 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 11:59:52,757 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 11:59:52,757 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 11:59:54,324 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@462a6bf3: startup date [Thu Jul 05 11:59:49 CST 2018]; root of context hierarchy
2018-07-05 11:59:54,432 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 11:59:54,434 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 11:59:54,434 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 11:59:54,434 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 11:59:54,434 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 11:59:54,434 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 11:59:54,434 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 11:59:54,434 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 11:59:54,434 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 11:59:54,435 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 11:59:54,435 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 11:59:54,435 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 11:59:54,435 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 11:59:54,435 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 11:59:54,435 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 11:59:54,436 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 11:59:54,436 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 11:59:54,436 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 11:59:54,436 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 11:59:54,436 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 11:59:54,436 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 11:59:54,440 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 11:59:54,441 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 11:59:54,443 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 11:59:54,443 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 11:59:54,443 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 11:59:54,443 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 11:59:54,443 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 11:59:54,444 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 11:59:54,444 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 11:59:54,444 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:59:54,444 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 11:59:54,446 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 11:59:54,446 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 11:59:54,446 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 11:59:54,446 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 11:59:54,447 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 11:59:54,448 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 11:59:54,448 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 11:59:54,448 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 11:59:54,448 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 11:59:54,448 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 11:59:54,448 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 11:59:54,449 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 11:59:54,450 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:59:54,450 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 11:59:54,450 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 11:59:54,450 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:59:54,450 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 11:59:54,450 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 11:59:54,451 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 11:59:54,451 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:59:54,451 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 11:59:54,451 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 11:59:54,451 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 11:59:54,452 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 11:59:54,453 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 11:59:54,453 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 11:59:54,510 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:59:54,510 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:59:54,539 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 11:59:54,574 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 11:59:55,314 - LiveReload server is running on port 35729
2018-07-05 11:59:55,477 - Registering beans for JMX exposure on startup
2018-07-05 11:59:55,479 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 11:59:55,485 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 11:59:55,497 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 11:59:55,531 - Using a shared selector for servlet write/read
2018-07-05 11:59:55,552 - Tomcat started on port(s): 8081 (http)
2018-07-05 11:59:55,563 - Started FqLtdWasBackstageApplication in 6.461 seconds (JVM running for 7.652)
2018-07-05 12:00:01,399 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 12:00:01,399 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 12:00:01,449 - FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2018-07-05 12:00:01,484 - ===========进入拦截器==============
2018-07-05 12:00:01,524 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 12:00:01,524 - ===========请求时间:2018-07-05 12:00:01==========================
2018-07-05 12:00:01,524 - url=http://localhost:8081/login
2018-07-05 12:00:01,524 - method=GET
2018-07-05 12:00:01,524 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:01,524 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 12:00:01,524 - args:
2018-07-05 12:00:01,528 - =============结束请求时间:2018-07-05 12:00:01,耗时:0s======================
2018-07-05 12:00:01,529 - response=/login
2018-07-05 12:00:01,562 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 12:00:01,638 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 12:00:01,638 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 12:00:01,638 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 12:00:01,638 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 12:00:01,643 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 12:00:01,643 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 12:00:05,524 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 12:00:05,524 - ===========请求时间:2018-07-05 12:00:05==========================
2018-07-05 12:00:05,524 - url=http://localhost:8081/signIn
2018-07-05 12:00:05,524 - method=POST
2018-07-05 12:00:05,524 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:05,524 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 12:00:05,524 - args:userName=admin,password=123456,
2018-07-05 12:00:05,619 - {dataSource-1} inited
2018-07-05 12:00:09,855 - =============结束请求时间:2018-07-05 12:00:09,耗时:4s======================
2018-07-05 12:00:09,855 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 12:00:09, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 12:00:09,970 - ===========进入拦截器==============
2018-07-05 12:00:09,970 - http://localhost:8081/home
2018-07-05 12:00:10,217 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 12:00:10,218 - ===========请求时间:2018-07-05 12:00:10==========================
2018-07-05 12:00:10,218 - url=http://localhost:8081/home
2018-07-05 12:00:10,218 - method=GET
2018-07-05 12:00:10,218 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:10,218 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 12:00:10,218 - args:
2018-07-05 12:00:10,218 - =============结束请求时间:2018-07-05 12:00:10,耗时:0s======================
2018-07-05 12:00:10,218 - response=/home
2018-07-05 12:00:10,218 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:10,296 - ===========进入拦截器==============
2018-07-05 12:00:10,297 - http://localhost:8081/welcome
2018-07-05 12:00:10,321 - ===========进入拦截器==============
2018-07-05 12:00:10,321 - http://localhost:8081/common/top
2018-07-05 12:00:10,325 - ===========进入拦截器==============
2018-07-05 12:00:10,325 - ===========进入拦截器==============
2018-07-05 12:00:10,326 - http://localhost:8081/common/footer
2018-07-05 12:00:10,326 - http://localhost:8081/common/left
2018-07-05 12:00:10,612 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 12:00:10,613 - ===========请求时间:2018-07-05 12:00:10==========================
2018-07-05 12:00:10,613 - url=http://localhost:8081/welcome
2018-07-05 12:00:10,613 - method=GET
2018-07-05 12:00:10,613 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:10,613 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 12:00:10,613 - args:
2018-07-05 12:00:10,613 - =============结束请求时间:2018-07-05 12:00:10,耗时:0s======================
2018-07-05 12:00:10,613 - response=/welcome
2018-07-05 12:00:10,614 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:10,845 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 12:00:10,846 - ===========请求时间:2018-07-05 12:00:10==========================
2018-07-05 12:00:10,846 - url=http://localhost:8081/common/top
2018-07-05 12:00:10,846 - method=GET
2018-07-05 12:00:10,846 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:10,846 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 12:00:10,846 - args:
2018-07-05 12:00:10,846 - =============结束请求时间:2018-07-05 12:00:10,耗时:0s======================
2018-07-05 12:00:10,846 - response=/common/top
2018-07-05 12:00:10,847 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:11,208 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 12:00:11,208 - ===========请求时间:2018-07-05 12:00:11==========================
2018-07-05 12:00:11,208 - url=http://localhost:8081/common/left
2018-07-05 12:00:11,209 - method=GET
2018-07-05 12:00:11,209 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:11,209 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 12:00:11,209 - args:
2018-07-05 12:00:11,209 - =============结束请求时间:2018-07-05 12:00:11,耗时:0s======================
2018-07-05 12:00:11,209 - response=/common/left
2018-07-05 12:00:11,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:11,223 - ===========进入拦截器==============
2018-07-05 12:00:11,223 - http://localhost:8081/menu/findMenuByRole
2018-07-05 12:00:11,591 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 12:00:11,591 - ===========请求时间:2018-07-05 12:00:11==========================
2018-07-05 12:00:11,591 - url=http://localhost:8081/common/footer
2018-07-05 12:00:11,591 - method=GET
2018-07-05 12:00:11,591 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:11,591 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 12:00:11,591 - args:
2018-07-05 12:00:11,592 - =============结束请求时间:2018-07-05 12:00:11,耗时:0s======================
2018-07-05 12:00:11,592 - response=/common/footer
2018-07-05 12:00:11,592 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:11,972 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 12:00:11,972 - ===========请求时间:2018-07-05 12:00:11==========================
2018-07-05 12:00:11,972 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 12:00:11,972 - method=GET
2018-07-05 12:00:11,973 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:00:11,974 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 12:00:11,974 - args:roleId=1,
2018-07-05 12:00:12,166 - =============结束请求时间:2018-07-05 12:00:12,耗时:0s======================
2018-07-05 12:00:12,167 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 12:00:12,182 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:00:30,466 - ===========进入拦截器==============
2018-07-05 12:00:30,466 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 12:00:30,737 - 参数不全异常{}
org.springframework.web.bind.MissingServletRequestParameterException: Required WasDataDictionary parameter 'wasDataDictionary' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:198)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:109)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.fq.fqltdwasbackstage.config.OriginFilter.doFilter(OriginFilter.java:37)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-05 12:00:59,812 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 4236 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 12:00:59,814 - No active profile set, falling back to default profiles: default
2018-07-05 12:01:00,020 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 12:01:00,106 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Thu Jul 05 12:01:00 CST 2018]; root of context hierarchy
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:01:01,344 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 12:01:01,344 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 12:01:02,360 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 12:01:02,372 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 12:01:02,381 - Starting service [Tomcat]
2018-07-05 12:01:02,382 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 12:01:02,487 - Initializing Spring embedded WebApplicationContext
2018-07-05 12:01:02,487 - Root WebApplicationContext: initialization completed in 2381 ms
2018-07-05 12:01:02,701 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 12:01:02,704 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 12:01:02,705 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 12:01:02,705 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 12:01:02,705 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 12:01:02,705 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 12:01:04,257 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Thu Jul 05 12:01:00 CST 2018]; root of context hierarchy
2018-07-05 12:01:04,362 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 12:01:04,363 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 12:01:04,364 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 12:01:04,364 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 12:01:04,364 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 12:01:04,364 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 12:01:04,364 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 12:01:04,364 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 12:01:04,365 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 12:01:04,365 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 12:01:04,365 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 12:01:04,365 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 12:01:04,365 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 12:01:04,365 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 12:01:04,365 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 12:01:04,366 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 12:01:04,366 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 12:01:04,366 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 12:01:04,367 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 12:01:04,367 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 12:01:04,367 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 12:01:04,371 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 12:01:04,371 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 12:01:04,373 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 12:01:04,373 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 12:01:04,374 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 12:01:04,374 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 12:01:04,374 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 12:01:04,374 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 12:01:04,374 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 12:01:04,374 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 12:01:04,374 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 12:01:04,375 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 12:01:04,375 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 12:01:04,376 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 12:01:04,376 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 12:01:04,377 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 12:01:04,377 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 12:01:04,377 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 12:01:04,377 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 12:01:04,377 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 12:01:04,377 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 12:01:04,378 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 12:01:04,378 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 12:01:04,380 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:01:04,380 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 12:01:04,380 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:01:04,380 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 12:01:04,381 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 12:01:04,381 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 12:01:04,381 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:01:04,382 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 12:01:04,382 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 12:01:04,382 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 12:01:04,382 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 12:01:04,382 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 12:01:04,384 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 12:01:04,384 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 12:01:04,434 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:01:04,434 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:01:04,460 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 12:01:04,496 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:01:05,232 - LiveReload server is running on port 35729
2018-07-05 12:01:05,358 - Registering beans for JMX exposure on startup
2018-07-05 12:01:05,360 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 12:01:05,366 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 12:01:05,378 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 12:01:05,406 - Using a shared selector for servlet write/read
2018-07-05 12:01:05,426 - Tomcat started on port(s): 8081 (http)
2018-07-05 12:01:05,434 - Started FqLtdWasBackstageApplication in 6.187 seconds (JVM running for 7.488)
2018-07-05 12:01:08,959 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 12:01:08,959 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 12:01:09,001 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 12:01:10,060 - ===========进入拦截器==============
2018-07-05 12:01:10,094 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 12:01:10,094 - ===========请求时间:2018-07-05 12:01:10==========================
2018-07-05 12:01:10,094 - url=http://localhost:8081/login
2018-07-05 12:01:10,095 - method=GET
2018-07-05 12:01:10,095 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:10,095 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 12:01:10,095 - args:
2018-07-05 12:01:10,098 - =============结束请求时间:2018-07-05 12:01:10,耗时:0s======================
2018-07-05 12:01:10,098 - response=/login
2018-07-05 12:01:10,131 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 12:01:10,198 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 12:01:10,198 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 12:01:10,198 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 12:01:10,198 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 12:01:10,204 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 12:01:10,204 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 12:01:14,270 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 12:01:14,270 - ===========请求时间:2018-07-05 12:01:14==========================
2018-07-05 12:01:14,270 - url=http://localhost:8081/signIn
2018-07-05 12:01:14,270 - method=POST
2018-07-05 12:01:14,270 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:14,270 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 12:01:14,270 - args:userName=admin,password=123456,
2018-07-05 12:01:14,370 - {dataSource-1} inited
2018-07-05 12:01:15,664 - =============结束请求时间:2018-07-05 12:01:15,耗时:1s======================
2018-07-05 12:01:15,664 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 12:01:15, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 12:01:15,762 - ===========进入拦截器==============
2018-07-05 12:01:15,762 - http://localhost:8081/home
2018-07-05 12:01:15,767 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 12:01:15,768 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,768 - url=http://localhost:8081/home
2018-07-05 12:01:15,768 - method=GET
2018-07-05 12:01:15,768 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,768 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 12:01:15,768 - args:
2018-07-05 12:01:15,768 - =============结束请求时间:2018-07-05 12:01:15,耗时:0s======================
2018-07-05 12:01:15,768 - response=/home
2018-07-05 12:01:15,768 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:15,843 - ===========进入拦截器==============
2018-07-05 12:01:15,843 - http://localhost:8081/welcome
2018-07-05 12:01:15,861 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 12:01:15,861 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,861 - url=http://localhost:8081/welcome
2018-07-05 12:01:15,861 - method=GET
2018-07-05 12:01:15,861 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,861 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 12:01:15,861 - args:
2018-07-05 12:01:15,862 - =============结束请求时间:2018-07-05 12:01:15,耗时:0s======================
2018-07-05 12:01:15,862 - response=/welcome
2018-07-05 12:01:15,862 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:15,865 - ===========进入拦截器==============
2018-07-05 12:01:15,865 - http://localhost:8081/common/top
2018-07-05 12:01:15,866 - ===========进入拦截器==============
2018-07-05 12:01:15,866 - http://localhost:8081/common/left
2018-07-05 12:01:15,871 - ===========进入拦截器==============
2018-07-05 12:01:15,871 - http://localhost:8081/common/footer
2018-07-05 12:01:15,881 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 12:01:15,881 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,881 - url=http://localhost:8081/common/top
2018-07-05 12:01:15,881 - method=GET
2018-07-05 12:01:15,881 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,881 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 12:01:15,881 - args:
2018-07-05 12:01:15,882 - =============结束请求时间:2018-07-05 12:01:15,耗时:0s======================
2018-07-05 12:01:15,882 - response=/common/top
2018-07-05 12:01:15,882 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:15,899 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 12:01:15,899 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,899 - url=http://localhost:8081/common/left
2018-07-05 12:01:15,899 - method=GET
2018-07-05 12:01:15,899 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,899 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 12:01:15,899 - args:
2018-07-05 12:01:15,900 - =============结束请求时间:2018-07-05 12:01:15,耗时:0s======================
2018-07-05 12:01:15,900 - response=/common/left
2018-07-05 12:01:15,900 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:15,917 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 12:01:15,918 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,918 - url=http://localhost:8081/common/footer
2018-07-05 12:01:15,918 - method=GET
2018-07-05 12:01:15,918 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,918 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 12:01:15,918 - args:
2018-07-05 12:01:15,918 - =============结束请求时间:2018-07-05 12:01:15,耗时:0s======================
2018-07-05 12:01:15,918 - response=/common/footer
2018-07-05 12:01:15,918 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:15,945 - ===========进入拦截器==============
2018-07-05 12:01:15,945 - http://localhost:8081/menu/findMenuByRole
2018-07-05 12:01:15,982 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 12:01:15,982 - ===========请求时间:2018-07-05 12:01:15==========================
2018-07-05 12:01:15,982 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 12:01:15,982 - method=GET
2018-07-05 12:01:15,982 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:15,983 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 12:01:15,983 - args:roleId=1,
2018-07-05 12:01:16,041 - =============结束请求时间:2018-07-05 12:01:16,耗时:0s======================
2018-07-05 12:01:16,041 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 12:01:16,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:01:24,513 - ===========进入拦截器==============
2018-07-05 12:01:24,514 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 12:01:24,535 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 12:01:24,535 - ===========请求时间:2018-07-05 12:01:24==========================
2018-07-05 12:01:24,536 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 12:01:24,536 - method=GET
2018-07-05 12:01:24,536 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:01:24,536 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 12:01:24,536 - args:pageNumber=1,pageSize=10,
2018-07-05 12:01:24,555 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-05 12:01:24,619 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-05 12:01:24,626 - =============结束请求时间:2018-07-05 12:01:24,耗时:0s======================
2018-07-05 12:02:10,515 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18232 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 12:02:10,517 - No active profile set, falling back to default profiles: default
2018-07-05 12:02:10,659 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 12:02:10,730 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d9fad8c: startup date [Thu Jul 05 12:02:10 CST 2018]; root of context hierarchy
2018-07-05 12:02:11,896 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,896 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,896 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,896 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,897 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,897 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 12:02:11,897 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 12:02:11,897 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 12:02:13,256 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 12:02:13,267 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 12:02:13,276 - Starting service [Tomcat]
2018-07-05 12:02:13,276 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 12:02:13,385 - Initializing Spring embedded WebApplicationContext
2018-07-05 12:02:13,386 - Root WebApplicationContext: initialization completed in 2656 ms
2018-07-05 12:02:13,593 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 12:02:13,597 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 12:02:13,597 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 12:02:13,598 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 12:02:13,598 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 12:02:13,598 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 12:02:15,142 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d9fad8c: startup date [Thu Jul 05 12:02:10 CST 2018]; root of context hierarchy
2018-07-05 12:02:15,252 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 12:02:15,254 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 12:02:15,254 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 12:02:15,254 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 12:02:15,254 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 12:02:15,254 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 12:02:15,254 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 12:02:15,255 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 12:02:15,255 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 12:02:15,255 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 12:02:15,255 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 12:02:15,255 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 12:02:15,255 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 12:02:15,255 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 12:02:15,255 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 12:02:15,256 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 12:02:15,256 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 12:02:15,257 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 12:02:15,257 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 12:02:15,257 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 12:02:15,257 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 12:02:15,261 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 12:02:15,262 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 12:02:15,263 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 12:02:15,263 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 12:02:15,264 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 12:02:15,264 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 12:02:15,264 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 12:02:15,264 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 12:02:15,264 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 12:02:15,264 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 12:02:15,264 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 12:02:15,265 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 12:02:15,265 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 12:02:15,266 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 12:02:15,266 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 12:02:15,267 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 12:02:15,267 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 12:02:15,267 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 12:02:15,267 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 12:02:15,267 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 12:02:15,267 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 12:02:15,268 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 12:02:15,268 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 12:02:15,269 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:02:15,270 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:02:15,270 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 12:02:15,270 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 12:02:15,270 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 12:02:15,270 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 12:02:15,270 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 12:02:15,271 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 12:02:15,271 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 12:02:15,271 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 12:02:15,271 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 12:02:15,271 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 12:02:15,273 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 12:02:15,273 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 12:02:15,325 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:02:15,325 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:02:15,351 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 12:02:15,384 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 12:02:16,135 - LiveReload server is running on port 35729
2018-07-05 12:02:16,267 - Registering beans for JMX exposure on startup
2018-07-05 12:02:16,269 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 12:02:16,275 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 12:02:16,288 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 12:02:16,318 - Using a shared selector for servlet write/read
2018-07-05 12:02:16,336 - Tomcat started on port(s): 8081 (http)
2018-07-05 12:02:16,346 - Started FqLtdWasBackstageApplication in 6.57 seconds (JVM running for 7.969)
2018-07-05 12:02:22,602 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 12:02:22,602 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 12:02:22,650 - FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-05 12:02:22,682 - ===========进入拦截器==============
2018-07-05 12:02:22,729 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 12:02:22,730 - ===========请求时间:2018-07-05 12:02:22==========================
2018-07-05 12:02:22,730 - url=http://localhost:8081/login
2018-07-05 12:02:22,730 - method=GET
2018-07-05 12:02:22,730 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:22,730 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 12:02:22,730 - args:
2018-07-05 12:02:22,734 - =============结束请求时间:2018-07-05 12:02:22,耗时:0s======================
2018-07-05 12:02:22,734 - response=/login
2018-07-05 12:02:22,768 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 12:02:22,849 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 12:02:22,849 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 12:02:22,849 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 12:02:22,849 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 12:02:22,855 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 12:02:22,855 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 12:02:26,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 12:02:26,565 - ===========请求时间:2018-07-05 12:02:26==========================
2018-07-05 12:02:26,565 - url=http://localhost:8081/signIn
2018-07-05 12:02:26,565 - method=POST
2018-07-05 12:02:26,565 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:26,565 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 12:02:26,565 - args:userName=admin,password=123456,
2018-07-05 12:02:26,659 - {dataSource-1} inited
2018-07-05 12:02:27,084 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,084 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 12:02:27, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 12:02:27,195 - ===========进入拦截器==============
2018-07-05 12:02:27,195 - http://localhost:8081/home
2018-07-05 12:02:27,200 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 12:02:27,201 - ===========请求时间:2018-07-05 12:02:27==========================
2018-07-05 12:02:27,201 - url=http://localhost:8081/home
2018-07-05 12:02:27,201 - method=GET
2018-07-05 12:02:27,201 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:27,201 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 12:02:27,201 - args:
2018-07-05 12:02:27,201 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,201 - response=/home
2018-07-05 12:02:27,201 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:27,289 - ===========进入拦截器==============
2018-07-05 12:02:27,289 - http://localhost:8081/welcome
2018-07-05 12:02:27,293 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 12:02:27,294 - ===========请求时间:2018-07-05 12:02:27==========================
2018-07-05 12:02:27,294 - url=http://localhost:8081/welcome
2018-07-05 12:02:27,294 - method=GET
2018-07-05 12:02:27,294 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:27,294 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 12:02:27,294 - args:
2018-07-05 12:02:27,294 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,294 - response=/welcome
2018-07-05 12:02:27,294 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:27,326 - ===========进入拦截器==============
2018-07-05 12:02:27,327 - http://localhost:8081/common/top
2018-07-05 12:02:27,331 - ===========进入拦截器==============
2018-07-05 12:02:27,331 - http://localhost:8081/common/left
2018-07-05 12:02:27,331 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 12:02:27,332 - ===========请求时间:2018-07-05 12:02:27==========================
2018-07-05 12:02:27,332 - url=http://localhost:8081/common/top
2018-07-05 12:02:27,332 - method=GET
2018-07-05 12:02:27,332 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:27,332 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 12:02:27,332 - args:
2018-07-05 12:02:27,332 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,332 - response=/common/top
2018-07-05 12:02:27,332 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:27,346 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 12:02:27,347 - ===========请求时间:2018-07-05 12:02:27==========================
2018-07-05 12:02:27,347 - url=http://localhost:8081/common/left
2018-07-05 12:02:27,347 - method=GET
2018-07-05 12:02:27,347 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:27,347 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 12:02:27,347 - args:
2018-07-05 12:02:27,347 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,347 - response=/common/left
2018-07-05 12:02:27,347 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:27,356 - ===========进入拦截器==============
2018-07-05 12:02:27,356 - http://localhost:8081/common/footer
2018-07-05 12:02:27,364 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 12:02:27,364 - ===========请求时间:2018-07-05 12:02:27==========================
2018-07-05 12:02:27,364 - url=http://localhost:8081/common/footer
2018-07-05 12:02:27,365 - method=GET
2018-07-05 12:02:27,365 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:27,365 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 12:02:27,365 - args:
2018-07-05 12:02:27,366 - =============结束请求时间:2018-07-05 12:02:27,耗时:0s======================
2018-07-05 12:02:27,366 - response=/common/footer
2018-07-05 12:02:27,366 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:28,173 - ===========进入拦截器==============
2018-07-05 12:02:28,173 - http://localhost:8081/menu/findMenuByRole
2018-07-05 12:02:28,184 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 12:02:28,184 - ===========请求时间:2018-07-05 12:02:28==========================
2018-07-05 12:02:28,184 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 12:02:28,184 - method=GET
2018-07-05 12:02:28,184 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:28,184 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 12:02:28,185 - args:roleId=1,
2018-07-05 12:02:28,230 - =============结束请求时间:2018-07-05 12:02:28,耗时:0s======================
2018-07-05 12:02:28,230 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 12:02:28,242 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 12:02:29,509 - ===========进入拦截器==============
2018-07-05 12:02:29,509 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 12:02:29,527 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 12:02:29,527 - ===========请求时间:2018-07-05 12:02:29==========================
2018-07-05 12:02:29,527 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 12:02:29,527 - method=GET
2018-07-05 12:02:29,527 - ip=0:0:0:0:0:0:0:1
2018-07-05 12:02:29,527 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 12:02:29,527 - args:pageNumber=1,pageSize=10,
2018-07-05 12:02:29,546 - =============结束请求时间:2018-07-05 12:02:29,耗时:0s======================
2018-07-05 12:02:29,546 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 12:02:29,551 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:18:52,834 - ===========进入拦截器==============
2018-07-05 13:18:52,842 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 13:18:52,842 - ===========请求时间:2018-07-05 13:18:52==========================
2018-07-05 13:18:52,842 - url=http://localhost:8081/login
2018-07-05 13:18:52,843 - method=GET
2018-07-05 13:18:52,843 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:18:52,843 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 13:18:52,843 - args:
2018-07-05 13:18:52,843 - =============结束请求时间:2018-07-05 13:18:52,耗时:0s======================
2018-07-05 13:18:52,843 - response=/login
2018-07-05 13:53:05,418 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 17448 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 13:53:05,422 - No active profile set, falling back to default profiles: default
2018-07-05 13:53:05,598 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 13:53:05,638 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b05988b: startup date [Thu Jul 05 13:53:05 CST 2018]; root of context hierarchy
2018-07-05 13:53:06,392 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:53:06,393 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 13:53:06,393 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 13:53:07,385 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 13:53:07,401 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 13:53:07,412 - Starting service [Tomcat]
2018-07-05 13:53:07,413 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 13:53:07,540 - Initializing Spring embedded WebApplicationContext
2018-07-05 13:53:07,540 - Root WebApplicationContext: initialization completed in 1902 ms
2018-07-05 13:53:07,745 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 13:53:07,750 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 13:53:07,750 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 13:53:07,750 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 13:53:07,750 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 13:53:07,750 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 13:53:09,479 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@b05988b: startup date [Thu Jul 05 13:53:05 CST 2018]; root of context hierarchy
2018-07-05 13:53:09,588 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 13:53:09,589 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 13:53:09,590 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 13:53:09,590 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 13:53:09,591 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 13:53:09,591 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 13:53:09,591 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 13:53:09,591 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 13:53:09,591 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 13:53:09,591 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 13:53:09,591 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 13:53:09,592 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 13:53:09,592 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 13:53:09,592 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 13:53:09,592 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 13:53:09,592 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 13:53:09,592 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 13:53:09,592 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 13:53:09,593 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 13:53:09,593 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 13:53:09,593 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 13:53:09,597 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 13:53:09,597 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 13:53:09,599 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 13:53:09,599 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 13:53:09,599 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 13:53:09,599 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:53:09,600 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 13:53:09,600 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 13:53:09,600 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:53:09,600 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 13:53:09,600 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 13:53:09,601 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 13:53:09,601 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 13:53:09,601 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 13:53:09,602 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 13:53:09,604 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 13:53:09,604 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 13:53:09,604 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 13:53:09,605 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 13:53:09,605 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 13:53:09,605 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 13:53:09,605 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 13:53:09,605 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 13:53:09,606 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:53:09,607 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 13:53:09,607 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:53:09,607 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 13:53:09,607 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 13:53:09,607 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 13:53:09,607 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:53:09,608 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:53:09,608 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 13:53:09,608 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 13:53:09,609 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:53:09,610 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 13:53:09,611 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 13:53:09,612 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 13:53:09,665 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:53:09,665 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:53:09,693 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 13:53:09,731 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:53:10,515 - LiveReload server is running on port 35729
2018-07-05 13:53:10,662 - Registering beans for JMX exposure on startup
2018-07-05 13:53:10,664 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 13:53:10,671 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 13:53:10,684 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 13:53:10,716 - Using a shared selector for servlet write/read
2018-07-05 13:53:10,737 - Tomcat started on port(s): 8081 (http)
2018-07-05 13:53:10,745 - Started FqLtdWasBackstageApplication in 6.075 seconds (JVM running for 7.244)
2018-07-05 13:53:15,359 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 13:53:15,359 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 13:53:15,401 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 13:53:15,451 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 13:53:15,452 - ===========请求时间:2018-07-05 13:53:15==========================
2018-07-05 13:53:15,452 - url=http://localhost:8081/login
2018-07-05 13:53:15,452 - method=GET
2018-07-05 13:53:15,452 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:15,452 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 13:53:15,452 - args:
2018-07-05 13:53:15,455 - =============结束请求时间:2018-07-05 13:53:15,耗时:0s======================
2018-07-05 13:53:15,456 - response=/login
2018-07-05 13:53:15,489 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 13:53:15,561 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 13:53:15,561 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 13:53:15,561 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 13:53:15,561 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 13:53:15,567 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 13:53:15,568 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 13:53:20,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 13:53:20,239 - ===========请求时间:2018-07-05 13:53:20==========================
2018-07-05 13:53:20,239 - url=http://localhost:8081/signIn
2018-07-05 13:53:20,239 - method=POST
2018-07-05 13:53:20,239 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:20,239 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 13:53:20,239 - args:userName=admin,password=123456,
2018-07-05 13:53:20,332 - {dataSource-1} inited
2018-07-05 13:53:20,757 - =============结束请求时间:2018-07-05 13:53:20,耗时:0s======================
2018-07-05 13:53:20,757 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 13:53:20, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 13:53:20,856 - ===========进入拦截器==============
2018-07-05 13:53:20,856 - http://localhost:8081/home
2018-07-05 13:53:20,862 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 13:53:20,863 - ===========请求时间:2018-07-05 13:53:20==========================
2018-07-05 13:53:20,863 - url=http://localhost:8081/home
2018-07-05 13:53:20,863 - method=GET
2018-07-05 13:53:20,863 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:20,863 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 13:53:20,863 - args:
2018-07-05 13:53:20,863 - =============结束请求时间:2018-07-05 13:53:20,耗时:0s======================
2018-07-05 13:53:20,863 - response=/home
2018-07-05 13:53:20,863 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:20,936 - ===========进入拦截器==============
2018-07-05 13:53:20,936 - http://localhost:8081/welcome
2018-07-05 13:53:20,940 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 13:53:20,941 - ===========请求时间:2018-07-05 13:53:20==========================
2018-07-05 13:53:20,941 - url=http://localhost:8081/welcome
2018-07-05 13:53:20,941 - method=GET
2018-07-05 13:53:20,941 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:20,941 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 13:53:20,941 - args:
2018-07-05 13:53:20,941 - =============结束请求时间:2018-07-05 13:53:20,耗时:0s======================
2018-07-05 13:53:20,941 - response=/welcome
2018-07-05 13:53:20,941 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:20,968 - ===========进入拦截器==============
2018-07-05 13:53:20,968 - http://localhost:8081/common/top
2018-07-05 13:53:20,969 - ===========进入拦截器==============
2018-07-05 13:53:20,969 - http://localhost:8081/common/left
2018-07-05 13:53:20,973 - ===========进入拦截器==============
2018-07-05 13:53:20,973 - http://localhost:8081/common/footer
2018-07-05 13:53:20,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 13:53:20,975 - ===========请求时间:2018-07-05 13:53:20==========================
2018-07-05 13:53:20,975 - url=http://localhost:8081/common/top
2018-07-05 13:53:20,975 - method=GET
2018-07-05 13:53:20,975 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:20,975 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 13:53:20,975 - args:
2018-07-05 13:53:20,975 - =============结束请求时间:2018-07-05 13:53:20,耗时:0s======================
2018-07-05 13:53:20,975 - response=/common/top
2018-07-05 13:53:20,975 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:21,001 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 13:53:21,001 - ===========请求时间:2018-07-05 13:53:21==========================
2018-07-05 13:53:21,001 - url=http://localhost:8081/common/left
2018-07-05 13:53:21,001 - method=GET
2018-07-05 13:53:21,001 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:21,002 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 13:53:21,002 - args:
2018-07-05 13:53:21,002 - =============结束请求时间:2018-07-05 13:53:21,耗时:0s======================
2018-07-05 13:53:21,002 - response=/common/left
2018-07-05 13:53:21,002 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:21,008 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 13:53:21,008 - ===========请求时间:2018-07-05 13:53:21==========================
2018-07-05 13:53:21,008 - url=http://localhost:8081/common/footer
2018-07-05 13:53:21,008 - method=GET
2018-07-05 13:53:21,008 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:21,008 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 13:53:21,008 - args:
2018-07-05 13:53:21,008 - =============结束请求时间:2018-07-05 13:53:21,耗时:0s======================
2018-07-05 13:53:21,008 - response=/common/footer
2018-07-05 13:53:21,009 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:21,054 - ===========进入拦截器==============
2018-07-05 13:53:21,054 - http://localhost:8081/menu/findMenuByRole
2018-07-05 13:53:21,064 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 13:53:21,064 - ===========请求时间:2018-07-05 13:53:21==========================
2018-07-05 13:53:21,064 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 13:53:21,064 - method=GET
2018-07-05 13:53:21,065 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:21,065 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 13:53:21,065 - args:roleId=1,
2018-07-05 13:53:21,108 - =============结束请求时间:2018-07-05 13:53:21,耗时:0s======================
2018-07-05 13:53:21,108 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 13:53:21,119 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,897 - ===========进入拦截器==============
2018-07-05 13:53:22,897 - http://localhost:8081/number-coin.html
2018-07-05 13:53:22,905 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 13:53:22,905 - ===========请求时间:2018-07-05 13:53:22==========================
2018-07-05 13:53:22,905 - url=http://localhost:8081/number-coin.html
2018-07-05 13:53:22,905 - method=GET
2018-07-05 13:53:22,905 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:53:22,905 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 13:53:22,905 - args:
2018-07-05 13:53:22,905 - =============结束请求时间:2018-07-05 13:53:22,耗时:0s======================
2018-07-05 13:53:22,905 - response=/number-coin
2018-07-05 13:53:22,906 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,943 - ===========进入拦截器==============
2018-07-05 13:53:22,943 - ===========进入拦截器==============
2018-07-05 13:53:22,943 - http://localhost:8081/error
2018-07-05 13:53:22,943 - http://localhost:8081/error
2018-07-05 13:53:22,967 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,974 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,987 - ===========进入拦截器==============
2018-07-05 13:53:22,987 - ===========进入拦截器==============
2018-07-05 13:53:22,987 - http://localhost:8081/error
2018-07-05 13:53:22,987 - http://localhost:8081/error
2018-07-05 13:53:22,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,993 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:53:22,999 - ===========进入拦截器==============
2018-07-05 13:53:22,999 - http://localhost:8081/error
2018-07-05 13:53:23,006 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:00,691 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18284 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 13:55:00,694 - No active profile set, falling back to default profiles: default
2018-07-05 13:55:00,913 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 13:55:01,012 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c30012d: startup date [Thu Jul 05 13:55:01 CST 2018]; root of context hierarchy
2018-07-05 13:55:02,440 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:55:02,441 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 13:55:02,441 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 13:55:03,547 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 13:55:03,558 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 13:55:03,566 - Starting service [Tomcat]
2018-07-05 13:55:03,566 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 13:55:03,669 - Initializing Spring embedded WebApplicationContext
2018-07-05 13:55:03,669 - Root WebApplicationContext: initialization completed in 2657 ms
2018-07-05 13:55:03,888 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 13:55:03,892 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 13:55:03,892 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 13:55:03,892 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 13:55:03,892 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 13:55:03,892 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 13:55:05,378 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1c30012d: startup date [Thu Jul 05 13:55:01 CST 2018]; root of context hierarchy
2018-07-05 13:55:05,481 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 13:55:05,482 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 13:55:05,482 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 13:55:05,482 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 13:55:05,483 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 13:55:05,483 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 13:55:05,483 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 13:55:05,483 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 13:55:05,483 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 13:55:05,483 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 13:55:05,483 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 13:55:05,484 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 13:55:05,484 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 13:55:05,484 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 13:55:05,484 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 13:55:05,484 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 13:55:05,484 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 13:55:05,484 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 13:55:05,484 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 13:55:05,485 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 13:55:05,485 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 13:55:05,489 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 13:55:05,489 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 13:55:05,491 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 13:55:05,492 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 13:55:05,492 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 13:55:05,492 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:55:05,492 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 13:55:05,493 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 13:55:05,493 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 13:55:05,493 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:55:05,493 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 13:55:05,494 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 13:55:05,494 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 13:55:05,495 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 13:55:05,495 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 13:55:05,496 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 13:55:05,496 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 13:55:05,496 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 13:55:05,497 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 13:55:05,497 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 13:55:05,497 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 13:55:05,497 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 13:55:05,497 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 13:55:05,499 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:55:05,499 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:55:05,500 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:55:05,500 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 13:55:05,500 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 13:55:05,500 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 13:55:05,500 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 13:55:05,501 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:55:05,501 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 13:55:05,501 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 13:55:05,501 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:55:05,501 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 13:55:05,503 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 13:55:05,503 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 13:55:05,554 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:55:05,554 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:55:05,578 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 13:55:05,612 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:55:06,335 - LiveReload server is running on port 35729
2018-07-05 13:55:06,464 - Registering beans for JMX exposure on startup
2018-07-05 13:55:06,466 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 13:55:06,473 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 13:55:06,486 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 13:55:06,514 - Using a shared selector for servlet write/read
2018-07-05 13:55:06,532 - Tomcat started on port(s): 8081 (http)
2018-07-05 13:55:06,539 - Started FqLtdWasBackstageApplication in 6.249 seconds (JVM running for 7.418)
2018-07-05 13:55:09,016 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 13:55:09,016 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 13:55:09,061 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 13:55:09,092 - ===========进入拦截器==============
2018-07-05 13:55:09,126 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 13:55:09,127 - ===========请求时间:2018-07-05 13:55:09==========================
2018-07-05 13:55:09,127 - url=http://localhost:8081/login
2018-07-05 13:55:09,127 - method=GET
2018-07-05 13:55:09,127 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:09,127 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 13:55:09,127 - args:
2018-07-05 13:55:09,131 - =============结束请求时间:2018-07-05 13:55:09,耗时:0s======================
2018-07-05 13:55:09,132 - response=/login
2018-07-05 13:55:09,164 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 13:55:09,232 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 13:55:09,232 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 13:55:09,232 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 13:55:09,232 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 13:55:09,238 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 13:55:09,238 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 13:55:13,628 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 13:55:13,628 - ===========请求时间:2018-07-05 13:55:13==========================
2018-07-05 13:55:13,628 - url=http://localhost:8081/signIn
2018-07-05 13:55:13,628 - method=POST
2018-07-05 13:55:13,628 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:13,628 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 13:55:13,628 - args:userName=admin,password=123456,
2018-07-05 13:55:13,721 - {dataSource-1} inited
2018-07-05 13:55:14,152 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,153 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 13:55:14, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 13:55:14,253 - ===========进入拦截器==============
2018-07-05 13:55:14,253 - http://localhost:8081/home
2018-07-05 13:55:14,258 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 13:55:14,258 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,258 - url=http://localhost:8081/home
2018-07-05 13:55:14,258 - method=GET
2018-07-05 13:55:14,259 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,259 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 13:55:14,259 - args:
2018-07-05 13:55:14,259 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,259 - response=/home
2018-07-05 13:55:14,259 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:14,372 - ===========进入拦截器==============
2018-07-05 13:55:14,373 - http://localhost:8081/welcome
2018-07-05 13:55:14,379 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 13:55:14,380 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,380 - url=http://localhost:8081/welcome
2018-07-05 13:55:14,380 - method=GET
2018-07-05 13:55:14,380 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,380 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 13:55:14,380 - args:
2018-07-05 13:55:14,380 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,381 - response=/welcome
2018-07-05 13:55:14,381 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:14,442 - ===========进入拦截器==============
2018-07-05 13:55:14,442 - http://localhost:8081/common/top
2018-07-05 13:55:14,443 - ===========进入拦截器==============
2018-07-05 13:55:14,443 - http://localhost:8081/common/left
2018-07-05 13:55:14,443 - ===========进入拦截器==============
2018-07-05 13:55:14,443 - http://localhost:8081/common/footer
2018-07-05 13:55:14,449 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 13:55:14,449 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,449 - url=http://localhost:8081/common/top
2018-07-05 13:55:14,449 - method=GET
2018-07-05 13:55:14,449 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,449 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 13:55:14,449 - args:
2018-07-05 13:55:14,449 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,449 - response=/common/top
2018-07-05 13:55:14,450 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:14,464 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 13:55:14,464 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,464 - url=http://localhost:8081/common/left
2018-07-05 13:55:14,464 - method=GET
2018-07-05 13:55:14,464 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,464 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 13:55:14,464 - args:
2018-07-05 13:55:14,464 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,464 - response=/common/left
2018-07-05 13:55:14,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:14,472 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 13:55:14,472 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,472 - url=http://localhost:8081/common/footer
2018-07-05 13:55:14,472 - method=GET
2018-07-05 13:55:14,472 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,472 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 13:55:14,472 - args:
2018-07-05 13:55:14,472 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,472 - response=/common/footer
2018-07-05 13:55:14,473 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:14,527 - ===========进入拦截器==============
2018-07-05 13:55:14,527 - http://localhost:8081/menu/findMenuByRole
2018-07-05 13:55:14,533 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 13:55:14,533 - ===========请求时间:2018-07-05 13:55:14==========================
2018-07-05 13:55:14,533 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 13:55:14,533 - method=GET
2018-07-05 13:55:14,533 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:14,534 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 13:55:14,534 - args:roleId=1,
2018-07-05 13:55:14,564 - =============结束请求时间:2018-07-05 13:55:14,耗时:0s======================
2018-07-05 13:55:14,565 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 13:55:14,577 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:17,762 - ===========进入拦截器==============
2018-07-05 13:55:17,762 - http://localhost:8081/number-coin.html
2018-07-05 13:55:17,766 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 13:55:17,766 - ===========请求时间:2018-07-05 13:55:17==========================
2018-07-05 13:55:17,766 - url=http://localhost:8081/number-coin.html
2018-07-05 13:55:17,766 - method=GET
2018-07-05 13:55:17,766 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:17,766 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 13:55:17,766 - args:
2018-07-05 13:55:17,766 - =============结束请求时间:2018-07-05 13:55:17,耗时:0s======================
2018-07-05 13:55:17,766 - response=/number-coin
2018-07-05 13:55:17,767 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:55:17,967 - ===========进入拦截器==============
2018-07-05 13:55:17,968 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 13:55:17,992 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 13:55:17,992 - ===========请求时间:2018-07-05 13:55:17==========================
2018-07-05 13:55:17,992 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 13:55:17,992 - method=GET
2018-07-05 13:55:17,992 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:55:17,992 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 13:55:17,992 - args:pageNumber=1,pageSize=10,
2018-07-05 13:55:32,317 - =============结束请求时间:2018-07-05 13:55:32,耗时:14s======================
2018-07-05 13:55:32,318 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 13:55:32,325 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:58:53,511 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8204 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 13:58:53,514 - No active profile set, falling back to default profiles: default
2018-07-05 13:58:53,751 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 13:58:53,873 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Thu Jul 05 13:58:53 CST 2018]; root of context hierarchy
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 13:58:54,657 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 13:58:54,657 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 13:58:55,692 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 13:58:55,705 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 13:58:55,715 - Starting service [Tomcat]
2018-07-05 13:58:55,715 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 13:58:55,837 - Initializing Spring embedded WebApplicationContext
2018-07-05 13:58:55,837 - Root WebApplicationContext: initialization completed in 1964 ms
2018-07-05 13:58:56,054 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 13:58:56,059 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 13:58:56,059 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 13:58:56,059 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 13:58:56,059 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 13:58:56,059 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 13:58:57,614 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Thu Jul 05 13:58:53 CST 2018]; root of context hierarchy
2018-07-05 13:58:57,716 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 13:58:57,718 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 13:58:57,718 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 13:58:57,718 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 13:58:57,718 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 13:58:57,718 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 13:58:57,718 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 13:58:57,718 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 13:58:57,719 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 13:58:57,719 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 13:58:57,719 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 13:58:57,719 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 13:58:57,719 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 13:58:57,719 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 13:58:57,719 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 13:58:57,719 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 13:58:57,720 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 13:58:57,720 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 13:58:57,720 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 13:58:57,720 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 13:58:57,720 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 13:58:57,724 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 13:58:57,725 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 13:58:57,728 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 13:58:57,729 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:58:57,729 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 13:58:57,730 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 13:58:57,730 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 13:58:57,731 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 13:58:57,731 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 13:58:57,731 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 13:58:57,731 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 13:58:57,732 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 13:58:57,732 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 13:58:57,732 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 13:58:57,732 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 13:58:57,734 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 13:58:57,734 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 13:58:57,734 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 13:58:57,734 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 13:58:57,734 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 13:58:57,734 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 13:58:57,735 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 13:58:57,735 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 13:58:57,736 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:58:57,736 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:58:57,736 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 13:58:57,737 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 13:58:57,737 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 13:58:57,737 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 13:58:57,737 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 13:58:57,738 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:58:57,738 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 13:58:57,738 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 13:58:57,739 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 13:58:57,739 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 13:58:57,741 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 13:58:57,741 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 13:58:57,797 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:58:57,797 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:58:57,824 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 13:58:57,858 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 13:58:58,637 - LiveReload server is running on port 35729
2018-07-05 13:58:58,777 - Registering beans for JMX exposure on startup
2018-07-05 13:58:58,779 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 13:58:58,786 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 13:58:58,799 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 13:58:58,829 - Using a shared selector for servlet write/read
2018-07-05 13:58:58,848 - Tomcat started on port(s): 8081 (http)
2018-07-05 13:58:58,857 - Started FqLtdWasBackstageApplication in 6.062 seconds (JVM running for 7.217)
2018-07-05 13:59:01,527 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 13:59:01,527 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 13:59:01,575 - FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-05 13:59:01,607 - ===========进入拦截器==============
2018-07-05 13:59:01,651 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 13:59:01,651 - ===========请求时间:2018-07-05 13:59:01==========================
2018-07-05 13:59:01,652 - url=http://localhost:8081/login
2018-07-05 13:59:01,652 - method=GET
2018-07-05 13:59:01,652 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:01,652 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 13:59:01,652 - args:
2018-07-05 13:59:01,656 - =============结束请求时间:2018-07-05 13:59:01,耗时:0s======================
2018-07-05 13:59:01,656 - response=/login
2018-07-05 13:59:01,696 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 13:59:01,784 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 13:59:01,784 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 13:59:01,784 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 13:59:01,784 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 13:59:01,790 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 13:59:01,790 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 13:59:06,738 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 13:59:06,738 - ===========请求时间:2018-07-05 13:59:06==========================
2018-07-05 13:59:06,738 - url=http://localhost:8081/signIn
2018-07-05 13:59:06,738 - method=POST
2018-07-05 13:59:06,738 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:06,738 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 13:59:06,738 - args:userName=admin,password=123456,
2018-07-05 13:59:06,833 - {dataSource-1} inited
2018-07-05 13:59:07,291 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,291 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 13:59:07, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 13:59:07,390 - ===========进入拦截器==============
2018-07-05 13:59:07,390 - http://localhost:8081/home
2018-07-05 13:59:07,397 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 13:59:07,398 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,398 - url=http://localhost:8081/home
2018-07-05 13:59:07,398 - method=GET
2018-07-05 13:59:07,398 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,398 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 13:59:07,398 - args:
2018-07-05 13:59:07,398 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,398 - response=/home
2018-07-05 13:59:07,398 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:07,470 - ===========进入拦截器==============
2018-07-05 13:59:07,470 - http://localhost:8081/welcome
2018-07-05 13:59:07,475 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 13:59:07,475 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,475 - url=http://localhost:8081/welcome
2018-07-05 13:59:07,475 - method=GET
2018-07-05 13:59:07,475 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,475 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 13:59:07,475 - args:
2018-07-05 13:59:07,475 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,475 - response=/welcome
2018-07-05 13:59:07,476 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:07,503 - ===========进入拦截器==============
2018-07-05 13:59:07,504 - http://localhost:8081/common/top
2018-07-05 13:59:07,504 - ===========进入拦截器==============
2018-07-05 13:59:07,504 - http://localhost:8081/common/left
2018-07-05 13:59:07,505 - ===========进入拦截器==============
2018-07-05 13:59:07,505 - http://localhost:8081/common/footer
2018-07-05 13:59:07,512 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 13:59:07,513 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,513 - url=http://localhost:8081/common/top
2018-07-05 13:59:07,513 - method=GET
2018-07-05 13:59:07,513 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,513 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 13:59:07,513 - args:
2018-07-05 13:59:07,513 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,513 - response=/common/top
2018-07-05 13:59:07,513 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:07,548 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 13:59:07,548 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,548 - url=http://localhost:8081/common/left
2018-07-05 13:59:07,548 - method=GET
2018-07-05 13:59:07,548 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,548 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 13:59:07,548 - args:
2018-07-05 13:59:07,548 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,548 - response=/common/left
2018-07-05 13:59:07,549 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:07,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 13:59:07,565 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,565 - url=http://localhost:8081/common/footer
2018-07-05 13:59:07,565 - method=GET
2018-07-05 13:59:07,565 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,565 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 13:59:07,565 - args:
2018-07-05 13:59:07,565 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,566 - response=/common/footer
2018-07-05 13:59:07,566 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:07,592 - ===========进入拦截器==============
2018-07-05 13:59:07,593 - http://localhost:8081/menu/findMenuByRole
2018-07-05 13:59:07,601 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 13:59:07,601 - ===========请求时间:2018-07-05 13:59:07==========================
2018-07-05 13:59:07,601 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 13:59:07,601 - method=GET
2018-07-05 13:59:07,601 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:07,601 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 13:59:07,601 - args:roleId=1,
2018-07-05 13:59:07,643 - =============结束请求时间:2018-07-05 13:59:07,耗时:0s======================
2018-07-05 13:59:07,643 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 13:59:07,655 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:09,240 - ===========进入拦截器==============
2018-07-05 13:59:09,241 - http://localhost:8081/number-coin.html
2018-07-05 13:59:09,247 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 13:59:09,247 - ===========请求时间:2018-07-05 13:59:09==========================
2018-07-05 13:59:09,247 - url=http://localhost:8081/number-coin.html
2018-07-05 13:59:09,247 - method=GET
2018-07-05 13:59:09,247 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:09,247 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 13:59:09,247 - args:
2018-07-05 13:59:09,247 - =============结束请求时间:2018-07-05 13:59:09,耗时:0s======================
2018-07-05 13:59:09,247 - response=/number-coin
2018-07-05 13:59:09,247 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:09,377 - ===========进入拦截器==============
2018-07-05 13:59:09,377 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 13:59:09,398 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 13:59:09,398 - ===========请求时间:2018-07-05 13:59:09==========================
2018-07-05 13:59:09,398 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 13:59:09,398 - method=GET
2018-07-05 13:59:09,398 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:09,398 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 13:59:09,398 - args:pageNumber=1,pageSize=10,
2018-07-05 13:59:09,421 - =============结束请求时间:2018-07-05 13:59:09,耗时:0s======================
2018-07-05 13:59:09,422 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 13:59:09,434 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:18,561 - ===========进入拦截器==============
2018-07-05 13:59:18,561 - http://localhost:8081/user.html
2018-07-05 13:59:18,566 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-05 13:59:18,566 - ===========请求时间:2018-07-05 13:59:18==========================
2018-07-05 13:59:18,566 - url=http://localhost:8081/user.html
2018-07-05 13:59:18,566 - method=GET
2018-07-05 13:59:18,566 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:18,566 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-05 13:59:18,566 - args:
2018-07-05 13:59:18,566 - =============结束请求时间:2018-07-05 13:59:18,耗时:0s======================
2018-07-05 13:59:18,566 - response=/user
2018-07-05 13:59:18,567 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:18,671 - ===========进入拦截器==============
2018-07-05 13:59:18,671 - http://localhost:8081/user/findAllUser
2018-07-05 13:59:18,685 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-05 13:59:18,685 - ===========请求时间:2018-07-05 13:59:18==========================
2018-07-05 13:59:18,685 - url=http://localhost:8081/user/findAllUser
2018-07-05 13:59:18,685 - method=GET
2018-07-05 13:59:18,685 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:18,685 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-05 13:59:18,686 - args:userName=,
2018-07-05 13:59:18,699 - =============结束请求时间:2018-07-05 13:59:18,耗时:0s======================
2018-07-05 13:59:18,699 - response=Result(code=200, msg=成功, data=[User(gid=4, userName=31, password=FF473088FBDCCB239D57EAB3C6D77A40, tel=18888888888, email=31321@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:56:56.0, version=1, createTime=2018-07-04 18:56:56.0, updateTime=2018-07-04 18:56:56.0, status=0), User(gid=2, userName=lyj, password=9C0CD9F9F38A53F48E36A8A2CF540A01, tel=18888888888, email=rweri@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:55:40.0, version=1, createTime=2018-07-04 18:24:38.0, updateTime=2018-07-04 18:24:38.0, status=0), User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 13:59:07.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=3, totalPage=null), totalCount=3)
2018-07-05 13:59:18,702 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:21,481 - ===========进入拦截器==============
2018-07-05 13:59:21,481 - http://localhost:8081/menu.html
2018-07-05 13:59:21,486 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.menu============
2018-07-05 13:59:21,487 - ===========请求时间:2018-07-05 13:59:21==========================
2018-07-05 13:59:21,487 - url=http://localhost:8081/menu.html
2018-07-05 13:59:21,487 - method=GET
2018-07-05 13:59:21,487 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:21,487 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.menu
2018-07-05 13:59:21,487 - args:
2018-07-05 13:59:21,487 - =============结束请求时间:2018-07-05 13:59:21,耗时:0s======================
2018-07-05 13:59:21,487 - response=/menu
2018-07-05 13:59:21,487 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:21,588 - ===========进入拦截器==============
2018-07-05 13:59:21,588 - http://localhost:8081/menu/findAllMenu
2018-07-05 13:59:21,602 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-05 13:59:21,603 - ===========请求时间:2018-07-05 13:59:21==========================
2018-07-05 13:59:21,603 - url=http://localhost:8081/menu/findAllMenu
2018-07-05 13:59:21,603 - method=GET
2018-07-05 13:59:21,603 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:21,603 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-05 13:59:21,603 - args:
2018-07-05 13:59:21,614 - =============结束请求时间:2018-07-05 13:59:21,耗时:0s======================
2018-07-05 13:59:21,615 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-05 13:59:21,631 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:22,153 - ===========进入拦截器==============
2018-07-05 13:59:22,153 - http://localhost:8081/role.html
2018-07-05 13:59:22,156 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.role============
2018-07-05 13:59:22,157 - ===========请求时间:2018-07-05 13:59:22==========================
2018-07-05 13:59:22,157 - url=http://localhost:8081/role.html
2018-07-05 13:59:22,157 - method=GET
2018-07-05 13:59:22,157 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:22,157 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.role
2018-07-05 13:59:22,157 - args:
2018-07-05 13:59:22,157 - =============结束请求时间:2018-07-05 13:59:22,耗时:0s======================
2018-07-05 13:59:22,157 - response=/role
2018-07-05 13:59:22,157 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:22,251 - ===========进入拦截器==============
2018-07-05 13:59:22,251 - http://localhost:8081/role/findAllRole
2018-07-05 13:59:22,265 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 13:59:22,265 - ===========请求时间:2018-07-05 13:59:22==========================
2018-07-05 13:59:22,265 - url=http://localhost:8081/role/findAllRole
2018-07-05 13:59:22,265 - method=GET
2018-07-05 13:59:22,265 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:22,265 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 13:59:22,265 - args:roleName=,
2018-07-05 13:59:22,284 - =============结束请求时间:2018-07-05 13:59:22,耗时:0s======================
2018-07-05 13:59:22,285 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 13:59:22,288 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 13:59:22,296 - ===========进入拦截器==============
2018-07-05 13:59:22,296 - http://localhost:8081/menu/findAllMenu
2018-07-05 13:59:22,305 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu============
2018-07-05 13:59:22,305 - ===========请求时间:2018-07-05 13:59:22==========================
2018-07-05 13:59:22,305 - url=http://localhost:8081/menu/findAllMenu
2018-07-05 13:59:22,305 - method=GET
2018-07-05 13:59:22,305 - ip=0:0:0:0:0:0:0:1
2018-07-05 13:59:22,305 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu
2018-07-05 13:59:22,305 - args:
2018-07-05 13:59:22,315 - =============结束请求时间:2018-07-05 13:59:22,耗时:0s======================
2018-07-05 13:59:22,315 - response=Result(code=200, msg=成功, data=[Menu(gid=8, menuType=0, icon=, menuName=系统管理, url=--, parentCode=0, code=6, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=56, menuType=1, icon=, menuName=图标列表, url=menu/findIconList, parentCode=6, code=49, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:54.0, updateTime=2018-06-07 15:41:54.0, status=0), Menu(gid=55, menuType=1, icon=, menuName=添加图标, url=menu/addIcon, parentCode=6, code=48, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:41:32.0, updateTime=2018-06-07 15:41:32.0, status=0), Menu(gid=54, menuType=1, icon=, menuName=菜单列表, url=menu/findAllMenu, parentCode=6, code=47, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:37:22.0, updateTime=2018-06-07 15:37:22.0, status=0), Menu(gid=53, menuType=1, icon=, menuName=删除菜单, url=menu/delMenu, parentCode=6, code=46, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:54.0, updateTime=2018-06-07 15:36:54.0, status=0), Menu(gid=52, menuType=1, icon=, menuName=编辑菜单, url=menu/editMenu, parentCode=6, code=45, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:36:29.0, updateTime=2018-06-07 15:36:29.0, status=0), Menu(gid=51, menuType=1, icon=, menuName=添加菜单, url=menu/addMenu, parentCode=6, code=44, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:22:44.0, updateTime=2018-06-07 15:22:44.0, status=0), Menu(gid=50, menuType=1, icon=, menuName=查询角色, url=role/findAllRole, parentCode=6, code=38, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:16:42.0, updateTime=2018-06-07 15:16:42.0, status=0), Menu(gid=49, menuType=1, icon=, menuName=编辑权限, url=role/updateRoleMenu, parentCode=6, code=37, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:59.0, updateTime=2018-06-07 15:15:59.0, status=0), Menu(gid=48, menuType=1, icon=, menuName=编辑角色, url=role/updateRole, parentCode=6, code=36, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:36.0, updateTime=2018-06-07 15:15:36.0, status=0), Menu(gid=47, menuType=1, icon=, menuName=删除角色, url=role/deleteRole, parentCode=6, code=35, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:15:04.0, updateTime=2018-06-07 15:15:04.0, status=0), Menu(gid=46, menuType=1, icon=, menuName=添加角色, url=role/addRole, parentCode=6, code=34, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:14:38.0, updateTime=2018-06-07 15:14:38.0, status=0), Menu(gid=45, menuType=1, icon=, menuName=查询用户, url=user/findAllUser, parentCode=6, code=33, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:42.0, updateTime=2018-06-07 15:13:42.0, status=0), Menu(gid=44, menuType=1, icon=, menuName=编辑用户, url=user/updateUser, parentCode=6, code=32, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:13:20.0, updateTime=2018-06-07 15:13:20.0, status=0), Menu(gid=43, menuType=1, icon=, menuName=删除用户, url=user/deleteUser, parentCode=6, code=31, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:57.0, updateTime=2018-06-07 15:12:57.0, status=0), Menu(gid=26, menuType=1, icon=, menuName=新增用户, url=user/addUser, parentCode=6, code=30, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-06-07 15:12:28.0, updateTime=2018-06-07 15:12:28.0, status=0), Menu(gid=12, menuType=0, icon=, menuName=图标管理, url=/icon.html, parentCode=6, code=4, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:54.0, updateTime=2018-07-04 10:16:54.0, status=0), Menu(gid=11, menuType=0, icon=, menuName=菜单管理, url=/menu.html, parentCode=6, code=3, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:16:35.0, updateTime=2018-07-04 10:16:35.0, status=0), Menu(gid=10, menuType=0, icon=, menuName=角色管理, url=/role.html, parentCode=6, code=2, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:15:55.0, updateTime=2018-07-04 10:15:55.0, status=0), Menu(gid=9, menuType=0, icon=, menuName=用户管理, url=/user.html, parentCode=6, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=2, createTime=2018-07-04 10:15:31.0, updateTime=2018-07-04 19:00:21.0, status=0)], version=1, createTime=2018-07-04 10:14:42.0, updateTime=2018-07-04 10:14:42.0, status=0), Menu(gid=7, menuType=0, icon=, menuName=平台提币管理, url=--, parentCode=0, code=5, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=23, menuType=0, icon=, menuName=平台提币管理, url=/withdraw-coin.html, parentCode=5, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:08:38.0, updateTime=2018-07-04 11:08:38.0, status=0)], version=1, createTime=2018-07-04 10:14:28.0, updateTime=2018-07-04 10:14:28.0, status=0), Menu(gid=6, menuType=0, icon=, menuName=平台充值管理, url=--, parentCode=0, code=4, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=14, menuType=0, icon=, menuName=平台充值管理, url=/recharge-control.html, parentCode=4, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:17:57.0, updateTime=2018-07-04 10:17:57.0, status=0)], version=1, createTime=2018-07-04 10:14:14.0, updateTime=2018-07-04 10:14:14.0, status=0), Menu(gid=5, menuType=0, icon=, menuName=地址池管理, url=--, parentCode=0, code=3, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=24, menuType=0, icon=, menuName=地址池管理, url=/address-pool.html, parentCode=3, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:14:13.0, updateTime=2018-07-04 11:14:13.0, status=0)], version=1, createTime=2018-07-04 10:13:55.0, updateTime=2018-07-04 10:13:55.0, status=0), Menu(gid=3, menuType=0, icon=, menuName=数字货币监控及预警, url=--, parentCode=0, code=2, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=4, menuType=0, icon=, menuName=数字货币监控及预警, url=/control-waring.html, parentCode=2, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 10:12:13.0, updateTime=2018-07-04 10:12:13.0, status=0)], version=1, createTime=2018-07-04 10:11:23.0, updateTime=2018-07-04 10:11:23.0, status=0), Menu(gid=1, menuType=0, icon=, menuName=数字货币管理, url=--, parentCode=0, code=1, belong=1, projectName=WAS后台接口管理, menuList=[Menu(gid=25, menuType=0, icon=, menuName=数字货币管理, url=/number-coin.html, parentCode=1, code=1, belong=1, projectName=WAS后台接口管理, menuList=null, version=1, createTime=2018-07-04 11:15:11.0, updateTime=2018-07-04 11:15:11.0, status=0)], version=1, createTime=2018-07-04 09:56:14.0, updateTime=2018-07-04 09:56:14.0, status=0)], page=null, totalCount=null)
2018-07-05 13:59:22,320 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:00:43,851 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10204 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:00:43,853 - No active profile set, falling back to default profiles: default
2018-07-05 14:00:44,065 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:00:44,146 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5bfe13: startup date [Thu Jul 05 14:00:44 CST 2018]; root of context hierarchy
2018-07-05 14:00:45,327 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,327 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,327 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,327 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,327 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,328 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:00:45,328 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:00:45,328 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:00:46,538 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:00:46,549 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:00:46,557 - Starting service [Tomcat]
2018-07-05 14:00:46,558 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:00:46,659 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:00:46,659 - Root WebApplicationContext: initialization completed in 2514 ms
2018-07-05 14:00:46,870 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:00:46,874 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:00:46,874 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:00:46,875 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:00:46,875 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:00:46,875 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:00:48,379 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5bfe13: startup date [Thu Jul 05 14:00:44 CST 2018]; root of context hierarchy
2018-07-05 14:00:48,484 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:00:48,485 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:00:48,485 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:00:48,486 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:00:48,486 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:00:48,486 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:00:48,486 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:00:48,486 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:00:48,486 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:00:48,486 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:00:48,487 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:00:48,487 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:00:48,487 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:00:48,487 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:00:48,487 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:00:48,487 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:00:48,487 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:00:48,487 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:00:48,488 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:00:48,488 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:00:48,488 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:00:48,491 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:00:48,492 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:00:48,496 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:00:48,496 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:00:48,496 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:00:48,496 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:00:48,497 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:00:48,497 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:00:48,497 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:00:48,497 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:00:48,497 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:00:48,499 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:00:48,499 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:00:48,499 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:00:48,500 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:00:48,501 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:00:48,502 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:00:48,502 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:00:48,502 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:00:48,503 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:00:48,503 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:00:48,504 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:00:48,504 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:00:48,506 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:00:48,506 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:00:48,506 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:00:48,507 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:00:48,507 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:00:48,507 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:00:48,507 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:00:48,507 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:00:48,508 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:00:48,508 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:00:48,508 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:00:48,508 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:00:48,510 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:00:48,510 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:00:48,562 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:00:48,562 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:00:48,587 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:00:48,619 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:00:49,340 - LiveReload server is running on port 35729
2018-07-05 14:00:49,471 - Registering beans for JMX exposure on startup
2018-07-05 14:00:49,473 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:00:49,480 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:00:49,491 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:00:49,519 - Using a shared selector for servlet write/read
2018-07-05 14:00:49,538 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:00:49,546 - Started FqLtdWasBackstageApplication in 6.387 seconds (JVM running for 7.704)
2018-07-05 14:02:27,469 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:02:27,469 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:02:27,515 - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-05 14:02:27,547 - ===========进入拦截器==============
2018-07-05 14:02:27,589 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:02:27,589 - ===========请求时间:2018-07-05 14:02:27==========================
2018-07-05 14:02:27,590 - url=http://localhost:8081/login
2018-07-05 14:02:27,590 - method=GET
2018-07-05 14:02:27,590 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:27,590 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:02:27,590 - args:
2018-07-05 14:02:27,595 - =============结束请求时间:2018-07-05 14:02:27,耗时:0s======================
2018-07-05 14:02:27,595 - response=/login
2018-07-05 14:02:27,638 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:02:27,724 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:02:27,724 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:02:27,724 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:02:27,724 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:02:27,731 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:02:27,731 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:02:31,821 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:02:31,821 - ===========请求时间:2018-07-05 14:02:31==========================
2018-07-05 14:02:31,821 - url=http://localhost:8081/signIn
2018-07-05 14:02:31,822 - method=POST
2018-07-05 14:02:31,822 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:31,822 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:02:31,822 - args:userName=admin,password=123456,
2018-07-05 14:02:31,919 - {dataSource-1} inited
2018-07-05 14:02:32,350 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,351 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:02:32, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:02:32,468 - ===========进入拦截器==============
2018-07-05 14:02:32,469 - http://localhost:8081/home
2018-07-05 14:02:32,476 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:02:32,477 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,477 - url=http://localhost:8081/home
2018-07-05 14:02:32,477 - method=GET
2018-07-05 14:02:32,477 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,477 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:02:32,477 - args:
2018-07-05 14:02:32,477 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,477 - response=/home
2018-07-05 14:02:32,477 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:32,549 - ===========进入拦截器==============
2018-07-05 14:02:32,549 - http://localhost:8081/welcome
2018-07-05 14:02:32,553 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:02:32,553 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,553 - url=http://localhost:8081/welcome
2018-07-05 14:02:32,553 - method=GET
2018-07-05 14:02:32,553 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,553 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:02:32,553 - args:
2018-07-05 14:02:32,554 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,554 - response=/welcome
2018-07-05 14:02:32,554 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:32,578 - ===========进入拦截器==============
2018-07-05 14:02:32,578 - http://localhost:8081/common/top
2018-07-05 14:02:32,579 - ===========进入拦截器==============
2018-07-05 14:02:32,579 - http://localhost:8081/common/left
2018-07-05 14:02:32,580 - ===========进入拦截器==============
2018-07-05 14:02:32,580 - http://localhost:8081/common/footer
2018-07-05 14:02:32,583 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:02:32,583 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,583 - url=http://localhost:8081/common/top
2018-07-05 14:02:32,583 - method=GET
2018-07-05 14:02:32,583 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,583 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:02:32,583 - args:
2018-07-05 14:02:32,584 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,584 - response=/common/top
2018-07-05 14:02:32,584 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:32,610 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:02:32,610 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,610 - url=http://localhost:8081/common/left
2018-07-05 14:02:32,610 - method=GET
2018-07-05 14:02:32,610 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,610 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:02:32,610 - args:
2018-07-05 14:02:32,611 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,611 - response=/common/left
2018-07-05 14:02:32,611 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:32,613 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:02:32,613 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,613 - url=http://localhost:8081/common/footer
2018-07-05 14:02:32,613 - method=GET
2018-07-05 14:02:32,613 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,613 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:02:32,613 - args:
2018-07-05 14:02:32,614 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,614 - response=/common/footer
2018-07-05 14:02:32,614 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:32,651 - ===========进入拦截器==============
2018-07-05 14:02:32,652 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:02:32,659 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:02:32,660 - ===========请求时间:2018-07-05 14:02:32==========================
2018-07-05 14:02:32,660 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:02:32,660 - method=GET
2018-07-05 14:02:32,660 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:32,660 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:02:32,660 - args:roleId=1,
2018-07-05 14:02:32,689 - =============结束请求时间:2018-07-05 14:02:32,耗时:0s======================
2018-07-05 14:02:32,689 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:02:32,699 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:34,712 - ===========进入拦截器==============
2018-07-05 14:02:34,713 - http://localhost:8081/number-coin.html
2018-07-05 14:02:34,719 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:02:34,719 - ===========请求时间:2018-07-05 14:02:34==========================
2018-07-05 14:02:34,719 - url=http://localhost:8081/number-coin.html
2018-07-05 14:02:34,719 - method=GET
2018-07-05 14:02:34,719 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:34,719 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:02:34,719 - args:
2018-07-05 14:02:34,721 - =============结束请求时间:2018-07-05 14:02:34,耗时:0s======================
2018-07-05 14:02:34,721 - response=/number-coin
2018-07-05 14:02:34,721 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:02:34,859 - ===========进入拦截器==============
2018-07-05 14:02:34,859 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:02:34,899 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:02:34,899 - ===========请求时间:2018-07-05 14:02:34==========================
2018-07-05 14:02:34,899 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:02:34,899 - method=GET
2018-07-05 14:02:34,899 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:02:34,899 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:02:34,899 - args:pageNumber=1,pageSize=10,
2018-07-05 14:02:34,913 - =============结束请求时间:2018-07-05 14:02:34,耗时:0s======================
2018-07-05 14:02:34,914 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:02:34,921 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:03:02,756 - ===========进入拦截器==============
2018-07-05 14:03:02,756 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:02,763 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:03:02,763 - ===========请求时间:2018-07-05 14:03:02==========================
2018-07-05 14:03:02,763 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:02,763 - method=GET
2018-07-05 14:03:02,763 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:03:02,763 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:03:02,763 - args:pageNumber=1,pageSize=10,
2018-07-05 14:03:02,789 - =============结束请求时间:2018-07-05 14:03:02,耗时:0s======================
2018-07-05 14:03:02,789 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:03:02,800 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:03:09,035 - ===========进入拦截器==============
2018-07-05 14:03:09,036 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:09,041 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:03:09,041 - ===========请求时间:2018-07-05 14:03:09==========================
2018-07-05 14:03:09,041 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:09,041 - method=GET
2018-07-05 14:03:09,041 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:03:09,041 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:03:09,041 - args:pageNumber=1,pageSize=10,
2018-07-05 14:03:09,121 - =============结束请求时间:2018-07-05 14:03:09,耗时:0s======================
2018-07-05 14:03:09,121 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:03:09,123 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:03:17,152 - ===========进入拦截器==============
2018-07-05 14:03:17,152 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:17,159 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:03:17,159 - ===========请求时间:2018-07-05 14:03:17==========================
2018-07-05 14:03:17,159 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:03:17,159 - method=GET
2018-07-05 14:03:17,159 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:03:17,159 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:03:17,159 - args:pageNumber=1,pageSize=30,
2018-07-05 14:03:17,173 - =============结束请求时间:2018-07-05 14:03:17,耗时:0s======================
2018-07-05 14:03:17,173 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018), WasDataDictionary(wasId=8, wasBaseCurrency=ETH, wasType=ETH, wasBeginBlock=3467849, wasBlockNum=100, wasGateWay=ETH, wasTokenAddress=, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=21000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Thu Jun 21 03:08:32 CST 2018), WasDataDictionary(wasId=28, wasBaseCurrency=NEO, wasType=GAS, wasBeginBlock=500, wasBlockNum=100, wasGateWay=NEO, wasTokenAddress=0x602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7, wasMinConfirm=1, wasStatus=1, wasPrecision=8, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.22维护was数据字典表, wasCreateTime=Fri Jun 22 15:08:25 CST 2018, wasLastTime=Wed Jul 04 02:37:46 CST 2018), WasDataDictionary(wasId=4, wasBaseCurrency=QTUM/token, wasType=HLC, wasBeginBlock=175307, wasBlockNum=100, wasGateWay=QTUM/token, wasTokenAddress=b27d7bf95b03e02b55d5eb63d3f1692762101bf9, wasMinConfirm=8, wasStatus=1, wasPrecision=38, wasZeroGasPrice=0.0000004, wasZeroGasLimit=250000, wasTransferGasPrice=null, wasTransferGasLimit=0.0000004, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018), WasDataDictionary(wasId=22, wasBaseCurrency=ETH/token, wasType=LRC, wasBeginBlock=1300, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xef68e7c694f40c8202821edf525de3782458639f, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=2, wasBaseCurrency=BTC, wasType=LTC, wasBeginBlock=3724, wasBlockNum=500, wasGateWay=LTC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 15:30:08 CST 2018), WasDataDictionary(wasId=9, wasBaseCurrency=ETH/token, wasType=MCMC, wasBeginBlock=115800, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4da86520b1c57234ae409d4d059613a37974bc7b, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018), WasDataDictionary(wasId=12, wasBaseCurrency=NEO, wasType=NEO, wasBeginBlock=500, wasBlockNum=100, wasGateWay=NEO, wasTokenAddress=0xc56f33fc6ecfcd0c225c4ab356fee59390af8560be0e930faebe74a6daff7c9b, wasMinConfirm=1, wasStatus=1, wasPrecision=0, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.22修改was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Wed Jul 04 02:36:52 CST 2018), WasDataDictionary(wasId=13, wasBaseCurrency=BASE_BTC_, wasType=OMG, wasBeginBlock=0, wasBlockNum=100, wasGateWay=OMG, wasTokenAddress=null, wasMinConfirm=6, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=23, wasBaseCurrency=ETH/token, wasType=PPT, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xd4fa1460f537bb9085d22c7bccb5dd450ef28e3a, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=5, wasBaseCurrency=QTUM/token, wasType=QTC, wasBeginBlock=
158990, wasBlockNum=100, wasGateWay=QTUM/token, wasTokenAddress=06fffcfdc386f46fb94b78d9decb04649cef64c0, wasMinConfirm=8, wasStatus=1, wasPrecision=38, wasZeroGasPrice=0.0000004, wasZeroGasLimit=250000, wasTransferGasPrice=null, wasTransferGasLimit=0.0000004, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 11:35:01 CST 2018), WasDataDictionary(wasId=3, wasBaseCurrency=BTC, wasType=QTUM, wasBeginBlock=161306, wasBlockNum=100, wasGateWay=QTUM, wasTokenAddress=, wasMinConfirm=8, wasStatus=1, wasPrecision=38, wasZeroGasPrice=, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018), WasDataDictionary(wasId=24, wasBaseCurrency=ETH/token, wasType=REP, wasBeginBlock=300, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe94327d07fc17907b4db788e5adf2ed424addff6, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=11, wasBaseCurrency=BTC, wasType=SMTH, wasBeginBlock=0, wasBlockNum=100, wasGateWay=SMTH, wasTokenAddress=, wasMinConfirm=3, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=25, wasBaseCurrency=ETH/token, wasType=WAN, wasBeginBlock=500, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x5fc6de61258e63706543bb57619b99cc0e5a5a1f, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=18, wasBaseCurrency=BASE_XMR_, wasType=XMR, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XMR, wasTokenAddress=null, wasMinConfirm=3, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=15, wasBaseCurrency=BASE_BTC_, wasType=XRP, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XRP, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=26, wasBaseCurrency=ETH/token, wasType=ZIL, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x05f4a42e251f2d52b8ed15e9fedaacfcef1fad27, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=27, wasBaseCurrency=ETH/token, wasType=ZRX, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe41d2489571d322189246dafa5ebde1f4699f498, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=10, wasBaseCurrency=ETH/token, wasType=ZZL, wasBeginBlock=3467375, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4cc8cb7a0839a14a92349dfd138d104fbcacc630, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=30, pageNumber=1, totalCount=29, totalPage=1), totalCount=29)
2018-07-05 14:03:17,180 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:05,367 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7304 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:12:05,370 - No active profile set, falling back to default profiles: default
2018-07-05 14:12:05,554 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:12:05,637 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@523d3870: startup date [Thu Jul 05 14:12:05 CST 2018]; root of context hierarchy
2018-07-05 14:12:06,856 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,856 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,856 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,856 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,857 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,857 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:12:06,857 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:12:06,857 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:12:07,883 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:12:07,895 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:12:07,904 - Starting service [Tomcat]
2018-07-05 14:12:07,904 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:12:08,024 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:12:08,025 - Root WebApplicationContext: initialization completed in 2388 ms
2018-07-05 14:12:08,229 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:12:08,233 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:12:08,234 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:12:08,234 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:12:08,234 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:12:08,234 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:12:09,747 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@523d3870: startup date [Thu Jul 05 14:12:05 CST 2018]; root of context hierarchy
2018-07-05 14:12:09,855 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:12:09,856 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:12:09,857 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:12:09,857 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:12:09,857 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:12:09,857 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:12:09,857 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:12:09,857 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:12:09,858 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:12:09,858 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:12:09,858 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:12:09,858 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:12:09,858 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:12:09,858 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:12:09,858 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:12:09,859 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:12:09,859 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:12:09,859 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:12:09,859 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:12:09,859 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:12:09,859 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:12:09,863 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:12:09,863 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:12:09,865 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:12:09,865 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:12:09,865 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:12:09,865 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:12:09,866 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:12:09,866 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:12:09,866 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:12:09,866 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:12:09,866 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:12:09,867 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:12:09,867 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:12:09,867 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:12:09,867 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:12:09,868 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:12:09,869 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:12:09,869 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:12:09,869 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:12:09,869 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:12:09,870 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:12:09,870 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:12:09,871 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:12:09,872 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:12:09,872 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:12:09,873 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:12:09,873 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:12:09,873 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:12:09,873 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:12:09,873 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:12:09,874 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:12:09,874 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:12:09,874 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:12:09,874 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:12:09,874 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:12:09,875 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:12:09,876 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:12:09,930 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:12:09,930 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:12:09,955 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:12:09,994 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:12:10,791 - LiveReload server is running on port 35729
2018-07-05 14:12:10,919 - Registering beans for JMX exposure on startup
2018-07-05 14:12:10,921 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:12:10,927 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:12:10,939 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:12:10,969 - Using a shared selector for servlet write/read
2018-07-05 14:12:10,990 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:12:10,999 - Started FqLtdWasBackstageApplication in 6.042 seconds (JVM running for 7.106)
2018-07-05 14:12:13,781 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:12:13,781 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:12:13,827 - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-05 14:12:13,862 - ===========进入拦截器==============
2018-07-05 14:12:13,904 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:12:13,904 - ===========请求时间:2018-07-05 14:12:13==========================
2018-07-05 14:12:13,904 - url=http://localhost:8081/login
2018-07-05 14:12:13,905 - method=GET
2018-07-05 14:12:13,905 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:13,905 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:12:13,905 - args:
2018-07-05 14:12:13,911 - =============结束请求时间:2018-07-05 14:12:13,耗时:0s======================
2018-07-05 14:12:13,911 - response=/login
2018-07-05 14:12:13,948 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:12:14,047 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:12:14,047 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:12:14,047 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:12:14,047 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:12:14,052 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:12:14,052 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:12:18,274 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:12:18,274 - ===========请求时间:2018-07-05 14:12:18==========================
2018-07-05 14:12:18,274 - url=http://localhost:8081/signIn
2018-07-05 14:12:18,274 - method=POST
2018-07-05 14:12:18,274 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:18,274 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:12:18,274 - args:userName=admin,password=123456,
2018-07-05 14:12:18,366 - {dataSource-1} inited
2018-07-05 14:12:18,890 - =============结束请求时间:2018-07-05 14:12:18,耗时:0s======================
2018-07-05 14:12:18,890 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:12:18, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:12:18,986 - ===========进入拦截器==============
2018-07-05 14:12:18,986 - http://localhost:8081/home
2018-07-05 14:12:18,993 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:12:18,994 - ===========请求时间:2018-07-05 14:12:18==========================
2018-07-05 14:12:18,994 - url=http://localhost:8081/home
2018-07-05 14:12:18,994 - method=GET
2018-07-05 14:12:18,994 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:18,994 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:12:18,994 - args:
2018-07-05 14:12:18,994 - =============结束请求时间:2018-07-05 14:12:18,耗时:0s======================
2018-07-05 14:12:18,994 - response=/home
2018-07-05 14:12:18,994 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:19,067 - ===========进入拦截器==============
2018-07-05 14:12:19,067 - http://localhost:8081/welcome
2018-07-05 14:12:19,073 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:12:19,073 - ===========请求时间:2018-07-05 14:12:19==========================
2018-07-05 14:12:19,073 - url=http://localhost:8081/welcome
2018-07-05 14:12:19,073 - method=GET
2018-07-05 14:12:19,073 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:19,073 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:12:19,073 - args:
2018-07-05 14:12:19,073 - =============结束请求时间:2018-07-05 14:12:19,耗时:0s======================
2018-07-05 14:12:19,073 - response=/welcome
2018-07-05 14:12:19,074 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:19,101 - ===========进入拦截器==============
2018-07-05 14:12:19,101 - http://localhost:8081/common/top
2018-07-05 14:12:19,103 - ===========进入拦截器==============
2018-07-05 14:12:19,103 - http://localhost:8081/common/left
2018-07-05 14:12:19,105 - ===========进入拦截器==============
2018-07-05 14:12:19,105 - http://localhost:8081/common/footer
2018-07-05 14:12:19,108 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:12:19,108 - ===========请求时间:2018-07-05 14:12:19==========================
2018-07-05 14:12:19,108 - url=http://localhost:8081/common/top
2018-07-05 14:12:19,108 - method=GET
2018-07-05 14:12:19,108 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:19,108 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:12:19,108 - args:
2018-07-05 14:12:19,108 - =============结束请求时间:2018-07-05 14:12:19,耗时:0s======================
2018-07-05 14:12:19,108 - response=/common/top
2018-07-05 14:12:19,108 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:19,131 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:12:19,131 - ===========请求时间:2018-07-05 14:12:19==========================
2018-07-05 14:12:19,131 - url=http://localhost:8081/common/left
2018-07-05 14:12:19,131 - method=GET
2018-07-05 14:12:19,131 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:19,131 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:12:19,131 - args:
2018-07-05 14:12:19,131 - =============结束请求时间:2018-07-05 14:12:19,耗时:0s======================
2018-07-05 14:12:19,131 - response=/common/left
2018-07-05 14:12:19,131 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:19,143 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:12:19,143 - ===========请求时间:2018-07-05 14:12:19==========================
2018-07-05 14:12:19,143 - url=http://localhost:8081/common/footer
2018-07-05 14:12:19,143 - method=GET
2018-07-05 14:12:19,144 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:19,144 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:12:19,144 - args:
2018-07-05 14:12:19,144 - =============结束请求时间:2018-07-05 14:12:19,耗时:0s======================
2018-07-05 14:12:19,144 - response=/common/footer
2018-07-05 14:12:19,144 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:19,169 - ===========进入拦截器==============
2018-07-05 14:12:19,169 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:12:19,178 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:12:19,179 - ===========请求时间:2018-07-05 14:12:19==========================
2018-07-05 14:12:19,179 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:12:19,179 - method=GET
2018-07-05 14:12:19,179 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:19,179 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:12:19,179 - args:roleId=1,
2018-07-05 14:12:19,208 - =============结束请求时间:2018-07-05 14:12:19,耗时:0s======================
2018-07-05 14:12:19,208 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:12:19,218 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:20,974 - ===========进入拦截器==============
2018-07-05 14:12:20,974 - http://localhost:8081/number-coin.html
2018-07-05 14:12:20,981 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:12:20,981 - ===========请求时间:2018-07-05 14:12:20==========================
2018-07-05 14:12:20,981 - url=http://localhost:8081/number-coin.html
2018-07-05 14:12:20,981 - method=GET
2018-07-05 14:12:20,981 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:20,981 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:12:20,981 - args:
2018-07-05 14:12:20,981 - =============结束请求时间:2018-07-05 14:12:20,耗时:0s======================
2018-07-05 14:12:20,981 - response=/number-coin
2018-07-05 14:12:20,981 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:12:21,115 - ===========进入拦截器==============
2018-07-05 14:12:21,116 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:12:21,137 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:12:21,137 - ===========请求时间:2018-07-05 14:12:21==========================
2018-07-05 14:12:21,137 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:12:21,137 - method=GET
2018-07-05 14:12:21,137 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:12:21,137 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:12:21,137 - args:pageNumber=1,pageSize=10,
2018-07-05 14:12:21,156 - =============结束请求时间:2018-07-05 14:12:21,耗时:0s======================
2018-07-05 14:12:21,156 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:12:21,164 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:11,540 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 3088 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:19:11,543 - No active profile set, falling back to default profiles: default
2018-07-05 14:19:11,729 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:19:11,812 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19674ff9: startup date [Thu Jul 05 14:19:11 CST 2018]; root of context hierarchy
2018-07-05 14:19:13,019 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,019 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,019 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,020 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,020 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,020 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:19:13,020 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:19:13,020 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:19:14,115 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:19:14,126 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:19:14,135 - Starting service [Tomcat]
2018-07-05 14:19:14,135 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:19:14,237 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:19:14,237 - Root WebApplicationContext: initialization completed in 2425 ms
2018-07-05 14:19:14,444 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:19:14,448 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:19:14,449 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:19:14,449 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:19:14,449 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:19:14,449 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:19:15,950 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@19674ff9: startup date [Thu Jul 05 14:19:11 CST 2018]; root of context hierarchy
2018-07-05 14:19:16,059 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:19:16,060 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:19:16,060 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:19:16,060 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:19:16,060 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:19:16,061 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:19:16,061 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:19:16,061 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:19:16,061 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:19:16,061 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:19:16,061 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:19:16,062 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:19:16,062 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:19:16,062 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:19:16,062 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:19:16,062 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:19:16,062 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:19:16,063 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:19:16,063 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:19:16,063 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:19:16,063 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:19:16,067 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:19:16,067 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:19:16,069 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:19:16,069 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:19:16,069 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:19:16,070 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:19:16,070 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:19:16,070 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:19:16,070 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:19:16,071 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:19:16,071 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:19:16,073 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:19:16,073 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:19:16,073 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:19:16,074 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:19:16,075 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:19:16,075 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:19:16,075 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:19:16,075 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:19:16,075 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:19:16,075 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:19:16,076 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:19:16,076 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:19:16,077 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:19:16,077 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:19:16,078 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:19:16,078 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:19:16,078 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:19:16,078 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:19:16,078 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:19:16,079 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:19:16,079 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:19:16,080 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:19:16,080 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:19:16,080 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:19:16,082 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:19:16,082 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:19:16,139 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:19:16,139 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:19:16,166 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:19:16,202 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:19:16,983 - LiveReload server is running on port 35729
2018-07-05 14:19:17,113 - Registering beans for JMX exposure on startup
2018-07-05 14:19:17,115 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:19:17,122 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:19:17,134 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:19:17,163 - Using a shared selector for servlet write/read
2018-07-05 14:19:17,180 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:19:17,189 - Started FqLtdWasBackstageApplication in 6.077 seconds (JVM running for 7.095)
2018-07-05 14:19:20,021 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:19:20,021 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:19:20,066 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 14:19:20,102 - ===========进入拦截器==============
2018-07-05 14:19:20,144 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:19:20,144 - ===========请求时间:2018-07-05 14:19:20==========================
2018-07-05 14:19:20,144 - url=http://localhost:8081/login
2018-07-05 14:19:20,145 - method=GET
2018-07-05 14:19:20,145 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:20,145 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:19:20,145 - args:
2018-07-05 14:19:20,148 - =============结束请求时间:2018-07-05 14:19:20,耗时:0s======================
2018-07-05 14:19:20,148 - response=/login
2018-07-05 14:19:20,181 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:19:20,257 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:19:20,257 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:19:20,257 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:19:20,257 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:19:20,262 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:19:20,262 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:19:24,361 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:19:24,361 - ===========请求时间:2018-07-05 14:19:24==========================
2018-07-05 14:19:24,361 - url=http://localhost:8081/signIn
2018-07-05 14:19:24,361 - method=POST
2018-07-05 14:19:24,361 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:24,361 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:19:24,362 - args:userName=admin,password=123456,
2018-07-05 14:19:24,453 - {dataSource-1} inited
2018-07-05 14:19:24,864 - =============结束请求时间:2018-07-05 14:19:24,耗时:0s======================
2018-07-05 14:19:24,865 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:19:24, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:19:24,965 - ===========进入拦截器==============
2018-07-05 14:19:24,966 - http://localhost:8081/home
2018-07-05 14:19:24,973 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:19:24,973 - ===========请求时间:2018-07-05 14:19:24==========================
2018-07-05 14:19:24,973 - url=http://localhost:8081/home
2018-07-05 14:19:24,973 - method=GET
2018-07-05 14:19:24,973 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:24,973 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:19:24,973 - args:
2018-07-05 14:19:24,973 - =============结束请求时间:2018-07-05 14:19:24,耗时:0s======================
2018-07-05 14:19:24,973 - response=/home
2018-07-05 14:19:24,974 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:25,052 - ===========进入拦截器==============
2018-07-05 14:19:25,052 - http://localhost:8081/welcome
2018-07-05 14:19:25,056 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:19:25,057 - ===========请求时间:2018-07-05 14:19:25==========================
2018-07-05 14:19:25,057 - url=http://localhost:8081/welcome
2018-07-05 14:19:25,057 - method=GET
2018-07-05 14:19:25,057 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:25,057 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:19:25,057 - args:
2018-07-05 14:19:25,058 - =============结束请求时间:2018-07-05 14:19:25,耗时:0s======================
2018-07-05 14:19:25,058 - response=/welcome
2018-07-05 14:19:25,058 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:25,090 - ===========进入拦截器==============
2018-07-05 14:19:25,091 - http://localhost:8081/common/top
2018-07-05 14:19:25,092 - ===========进入拦截器==============
2018-07-05 14:19:25,092 - ===========进入拦截器==============
2018-07-05 14:19:25,092 - http://localhost:8081/common/footer
2018-07-05 14:19:25,092 - http://localhost:8081/common/left
2018-07-05 14:19:25,097 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:19:25,097 - ===========请求时间:2018-07-05 14:19:25==========================
2018-07-05 14:19:25,097 - url=http://localhost:8081/common/top
2018-07-05 14:19:25,097 - method=GET
2018-07-05 14:19:25,097 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:25,097 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:19:25,097 - args:
2018-07-05 14:19:25,097 - =============结束请求时间:2018-07-05 14:19:25,耗时:0s======================
2018-07-05 14:19:25,097 - response=/common/top
2018-07-05 14:19:25,097 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:25,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:19:25,101 - ===========请求时间:2018-07-05 14:19:25==========================
2018-07-05 14:19:25,102 - url=http://localhost:8081/common/footer
2018-07-05 14:19:25,102 - method=GET
2018-07-05 14:19:25,102 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:25,102 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:19:25,102 - args:
2018-07-05 14:19:25,102 - =============结束请求时间:2018-07-05 14:19:25,耗时:0s======================
2018-07-05 14:19:25,102 - response=/common/footer
2018-07-05 14:19:25,102 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:25,113 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:19:25,113 - ===========请求时间:2018-07-05 14:19:25==========================
2018-07-05 14:19:25,113 - url=http://localhost:8081/common/left
2018-07-05 14:19:25,113 - method=GET
2018-07-05 14:19:25,113 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:25,113 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:19:25,113 - args:
2018-07-05 14:19:25,114 - =============结束请求时间:2018-07-05 14:19:25,耗时:0s======================
2018-07-05 14:19:25,114 - response=/common/left
2018-07-05 14:19:25,114 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:25,164 - ===========进入拦截器==============
2018-07-05 14:19:25,165 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:19:25,173 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:19:25,173 - ===========请求时间:2018-07-05 14:19:25==========================
2018-07-05 14:19:25,173 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:19:25,173 - method=GET
2018-07-05 14:19:25,173 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:25,173 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:19:25,174 - args:roleId=1,
2018-07-05 14:19:25,208 - =============结束请求时间:2018-07-05 14:19:25,耗时:0s======================
2018-07-05 14:19:25,209 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:19:25,220 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:19:26,413 - ===========进入拦截器==============
2018-07-05 14:19:26,413 - http://localhost:8081/number-coin.html
2018-07-05 14:19:26,419 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:19:26,419 - ===========请求时间:2018-07-05 14:19:26==========================
2018-07-05 14:19:26,419 - url=http://localhost:8081/number-coin.html
2018-07-05 14:19:26,419 - method=GET
2018-07-05 14:19:26,419 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:19:26,419 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:19:26,419 - args:
2018-07-05 14:19:26,419 - =============结束请求时间:2018-07-05 14:19:26,耗时:0s======================
2018-07-05 14:19:26,419 - response=/number-coin
2018-07-05 14:19:26,420 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:41,450 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10812 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:20:41,453 - No active profile set, falling back to default profiles: default
2018-07-05 14:20:41,624 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:20:41,718 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c06156f: startup date [Thu Jul 05 14:20:41 CST 2018]; root of context hierarchy
2018-07-05 14:20:42,864 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:20:42,865 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:20:42,865 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:20:43,832 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:20:43,844 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:20:43,852 - Starting service [Tomcat]
2018-07-05 14:20:43,853 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:20:43,965 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:20:43,965 - Root WebApplicationContext: initialization completed in 2247 ms
2018-07-05 14:20:44,202 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:20:44,206 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:20:44,206 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:20:44,206 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:20:44,206 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:20:44,206 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:20:45,676 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c06156f: startup date [Thu Jul 05 14:20:41 CST 2018]; root of context hierarchy
2018-07-05 14:20:45,781 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:20:45,782 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:20:45,782 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:20:45,783 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:20:45,783 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:20:45,783 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:20:45,783 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:20:45,783 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:20:45,783 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:20:45,783 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:20:45,783 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:20:45,784 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:20:45,784 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:20:45,784 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:20:45,784 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:20:45,784 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:20:45,784 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:20:45,784 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:20:45,784 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:20:45,785 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:20:45,785 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:20:45,789 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:20:45,789 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:20:45,791 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:20:45,791 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:20:45,791 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:20:45,791 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:20:45,791 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:20:45,791 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:20:45,792 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:20:45,792 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:20:45,792 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:20:45,793 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:20:45,793 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:20:45,793 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:20:45,793 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:20:45,795 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:20:45,795 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:20:45,795 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:20:45,795 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:20:45,796 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:20:45,796 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:20:45,796 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:20:45,796 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:20:45,797 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:20:45,798 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:20:45,798 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:20:45,798 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:20:45,798 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:20:45,798 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:20:45,798 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:20:45,799 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:20:45,799 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:20:45,799 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:20:45,800 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:20:45,800 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:20:45,802 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:20:45,802 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:20:45,852 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:20:45,852 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:20:45,877 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:20:45,913 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:20:46,660 - LiveReload server is running on port 35729
2018-07-05 14:20:46,787 - Registering beans for JMX exposure on startup
2018-07-05 14:20:46,789 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:20:46,798 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:20:46,809 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:20:46,839 - Using a shared selector for servlet write/read
2018-07-05 14:20:46,856 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:20:46,864 - Started FqLtdWasBackstageApplication in 5.959 seconds (JVM running for 7.226)
2018-07-05 14:20:52,417 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:20:52,417 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:20:52,460 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 14:20:52,496 - ===========进入拦截器==============
2018-07-05 14:20:52,536 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:20:52,536 - ===========请求时间:2018-07-05 14:20:52==========================
2018-07-05 14:20:52,536 - url=http://localhost:8081/login
2018-07-05 14:20:52,536 - method=GET
2018-07-05 14:20:52,536 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:52,536 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:20:52,536 - args:
2018-07-05 14:20:52,541 - =============结束请求时间:2018-07-05 14:20:52,耗时:0s======================
2018-07-05 14:20:52,541 - response=/login
2018-07-05 14:20:52,576 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:20:52,649 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:20:52,650 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:20:52,650 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:20:52,650 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:20:52,656 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:20:52,656 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:20:57,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:20:57,103 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,103 - url=http://localhost:8081/signIn
2018-07-05 14:20:57,103 - method=POST
2018-07-05 14:20:57,103 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,103 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:20:57,103 - args:userName=admin,password=123456,
2018-07-05 14:20:57,192 - {dataSource-1} inited
2018-07-05 14:20:57,619 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,620 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:20:57, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:20:57,769 - ===========进入拦截器==============
2018-07-05 14:20:57,769 - http://localhost:8081/home
2018-07-05 14:20:57,774 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:20:57,774 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,774 - url=http://localhost:8081/home
2018-07-05 14:20:57,774 - method=GET
2018-07-05 14:20:57,774 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,774 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:20:57,774 - args:
2018-07-05 14:20:57,775 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,775 - response=/home
2018-07-05 14:20:57,775 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:57,882 - ===========进入拦截器==============
2018-07-05 14:20:57,882 - http://localhost:8081/welcome
2018-07-05 14:20:57,887 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:20:57,888 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,888 - url=http://localhost:8081/welcome
2018-07-05 14:20:57,888 - method=GET
2018-07-05 14:20:57,888 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,888 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:20:57,888 - args:
2018-07-05 14:20:57,888 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,888 - response=/welcome
2018-07-05 14:20:57,888 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:57,948 - ===========进入拦截器==============
2018-07-05 14:20:57,948 - http://localhost:8081/common/top
2018-07-05 14:20:57,950 - ===========进入拦截器==============
2018-07-05 14:20:57,950 - ===========进入拦截器==============
2018-07-05 14:20:57,950 - http://localhost:8081/common/left
2018-07-05 14:20:57,950 - http://localhost:8081/common/footer
2018-07-05 14:20:57,952 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:20:57,952 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,953 - url=http://localhost:8081/common/top
2018-07-05 14:20:57,953 - method=GET
2018-07-05 14:20:57,953 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,953 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:20:57,953 - args:
2018-07-05 14:20:57,953 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,953 - response=/common/top
2018-07-05 14:20:57,953 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:57,968 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:20:57,968 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,968 - url=http://localhost:8081/common/footer
2018-07-05 14:20:57,968 - method=GET
2018-07-05 14:20:57,968 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,968 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:20:57,969 - args:
2018-07-05 14:20:57,969 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,969 - response=/common/footer
2018-07-05 14:20:57,969 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:57,973 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:20:57,973 - ===========请求时间:2018-07-05 14:20:57==========================
2018-07-05 14:20:57,973 - url=http://localhost:8081/common/left
2018-07-05 14:20:57,973 - method=GET
2018-07-05 14:20:57,973 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:57,973 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:20:57,973 - args:
2018-07-05 14:20:57,973 - =============结束请求时间:2018-07-05 14:20:57,耗时:0s======================
2018-07-05 14:20:57,973 - response=/common/left
2018-07-05 14:20:57,973 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:20:58,017 - ===========进入拦截器==============
2018-07-05 14:20:58,017 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:20:58,024 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:20:58,024 - ===========请求时间:2018-07-05 14:20:58==========================
2018-07-05 14:20:58,024 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:20:58,024 - method=GET
2018-07-05 14:20:58,025 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:20:58,025 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:20:58,025 - args:roleId=1,
2018-07-05 14:20:58,051 - =============结束请求时间:2018-07-05 14:20:58,耗时:0s======================
2018-07-05 14:20:58,051 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:20:58,062 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:21:00,766 - ===========进入拦截器==============
2018-07-05 14:21:00,766 - http://localhost:8081/number-coin.html
2018-07-05 14:21:00,774 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:21:00,775 - ===========请求时间:2018-07-05 14:21:00==========================
2018-07-05 14:21:00,775 - url=http://localhost:8081/number-coin.html
2018-07-05 14:21:00,775 - method=GET
2018-07-05 14:21:00,775 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:21:00,775 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:21:00,775 - args:
2018-07-05 14:21:00,775 - =============结束请求时间:2018-07-05 14:21:00,耗时:0s======================
2018-07-05 14:21:00,775 - response=/number-coin
2018-07-05 14:21:00,775 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:21:00,955 - ===========进入拦截器==============
2018-07-05 14:21:00,955 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:21:00,974 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:21:00,974 - ===========请求时间:2018-07-05 14:21:00==========================
2018-07-05 14:21:00,974 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:21:00,974 - method=GET
2018-07-05 14:21:00,974 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:21:00,974 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:21:00,974 - args:pageNumber=1,pageSize=10,
2018-07-05 14:21:00,994 - =============结束请求时间:2018-07-05 14:21:00,耗时:0s======================
2018-07-05 14:21:00,995 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:21:01,009 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:18,165 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8592 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:23:18,168 - No active profile set, falling back to default profiles: default
2018-07-05 14:23:18,352 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:23:18,446 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75de6229: startup date [Thu Jul 05 14:23:18 CST 2018]; root of context hierarchy
2018-07-05 14:23:19,701 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,701 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,702 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,702 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,702 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,702 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:23:19,702 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:23:19,702 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:23:20,663 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:23:20,674 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:23:20,683 - Starting service [Tomcat]
2018-07-05 14:23:20,683 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:23:20,786 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:23:20,786 - Root WebApplicationContext: initialization completed in 2340 ms
2018-07-05 14:23:21,006 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:23:21,011 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:23:21,011 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:23:21,011 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:23:21,011 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:23:21,011 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:23:22,564 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75de6229: startup date [Thu Jul 05 14:23:18 CST 2018]; root of context hierarchy
2018-07-05 14:23:22,665 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:23:22,666 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:23:22,666 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:23:22,666 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:23:22,666 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:23:22,666 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:23:22,667 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:23:22,667 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:23:22,667 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:23:22,667 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:23:22,667 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:23:22,667 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:23:22,667 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:23:22,667 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:23:22,668 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:23:22,668 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:23:22,668 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:23:22,668 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:23:22,668 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:23:22,669 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:23:22,669 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:23:22,675 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:23:22,675 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:23:22,676 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:23:22,677 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:23:22,677 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:23:22,677 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:23:22,677 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:23:22,677 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:23:22,677 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:23:22,677 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:23:22,678 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:23:22,678 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:23:22,679 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:23:22,679 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:23:22,679 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:23:22,680 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:23:22,680 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:23:22,680 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:23:22,681 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:23:22,681 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:23:22,682 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:23:22,682 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:23:22,682 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:23:22,684 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:23:22,684 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:23:22,684 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:23:22,684 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:23:22,684 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:23:22,684 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:23:22,685 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:23:22,685 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:23:22,685 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:23:22,686 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:23:22,686 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:23:22,686 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:23:22,687 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:23:22,688 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:23:22,748 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:23:22,748 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:23:22,773 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:23:22,806 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:23:23,539 - LiveReload server is running on port 35729
2018-07-05 14:23:23,669 - Registering beans for JMX exposure on startup
2018-07-05 14:23:23,671 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:23:23,677 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:23:23,691 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:23:23,724 - Using a shared selector for servlet write/read
2018-07-05 14:23:23,742 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:23:23,751 - Started FqLtdWasBackstageApplication in 6.111 seconds (JVM running for 7.222)
2018-07-05 14:23:27,162 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:23:27,162 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:23:27,204 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 14:23:27,235 - ===========进入拦截器==============
2018-07-05 14:23:27,280 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:23:27,280 - ===========请求时间:2018-07-05 14:23:27==========================
2018-07-05 14:23:27,280 - url=http://localhost:8081/login
2018-07-05 14:23:27,280 - method=GET
2018-07-05 14:23:27,280 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:27,280 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:23:27,280 - args:
2018-07-05 14:23:27,284 - =============结束请求时间:2018-07-05 14:23:27,耗时:0s======================
2018-07-05 14:23:27,284 - response=/login
2018-07-05 14:23:27,320 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:23:27,392 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:23:27,392 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:23:27,392 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:23:27,392 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:23:27,397 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:23:27,397 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:23:32,024 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:23:32,024 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,024 - url=http://localhost:8081/signIn
2018-07-05 14:23:32,024 - method=POST
2018-07-05 14:23:32,025 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,025 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:23:32,025 - args:userName=admin,password=123456,
2018-07-05 14:23:32,117 - {dataSource-1} inited
2018-07-05 14:23:32,585 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,585 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:23:32, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:23:32,685 - ===========进入拦截器==============
2018-07-05 14:23:32,685 - http://localhost:8081/home
2018-07-05 14:23:32,691 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:23:32,691 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,691 - url=http://localhost:8081/home
2018-07-05 14:23:32,691 - method=GET
2018-07-05 14:23:32,691 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,691 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:23:32,691 - args:
2018-07-05 14:23:32,691 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,691 - response=/home
2018-07-05 14:23:32,692 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:32,797 - ===========进入拦截器==============
2018-07-05 14:23:32,798 - http://localhost:8081/welcome
2018-07-05 14:23:32,801 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:23:32,802 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,802 - url=http://localhost:8081/welcome
2018-07-05 14:23:32,802 - method=GET
2018-07-05 14:23:32,802 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,802 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:23:32,802 - args:
2018-07-05 14:23:32,802 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,802 - response=/welcome
2018-07-05 14:23:32,802 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:32,847 - ===========进入拦截器==============
2018-07-05 14:23:32,847 - http://localhost:8081/common/top
2018-07-05 14:23:32,847 - ===========进入拦截器==============
2018-07-05 14:23:32,847 - http://localhost:8081/common/left
2018-07-05 14:23:32,849 - ===========进入拦截器==============
2018-07-05 14:23:32,849 - http://localhost:8081/common/footer
2018-07-05 14:23:32,851 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:23:32,851 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,851 - url=http://localhost:8081/common/top
2018-07-05 14:23:32,851 - method=GET
2018-07-05 14:23:32,851 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,851 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:23:32,851 - args:
2018-07-05 14:23:32,852 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,852 - response=/common/top
2018-07-05 14:23:32,852 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:32,860 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:23:32,860 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,860 - url=http://localhost:8081/common/left
2018-07-05 14:23:32,860 - method=GET
2018-07-05 14:23:32,860 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,860 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:23:32,860 - args:
2018-07-05 14:23:32,860 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,860 - response=/common/left
2018-07-05 14:23:32,861 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:32,865 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:23:32,865 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,865 - url=http://localhost:8081/common/footer
2018-07-05 14:23:32,865 - method=GET
2018-07-05 14:23:32,865 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,865 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:23:32,865 - args:
2018-07-05 14:23:32,865 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,865 - response=/common/footer
2018-07-05 14:23:32,865 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:32,911 - ===========进入拦截器==============
2018-07-05 14:23:32,911 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:23:32,918 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:23:32,919 - ===========请求时间:2018-07-05 14:23:32==========================
2018-07-05 14:23:32,919 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:23:32,919 - method=GET
2018-07-05 14:23:32,919 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:32,919 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:23:32,919 - args:roleId=1,
2018-07-05 14:23:32,964 - =============结束请求时间:2018-07-05 14:23:32,耗时:0s======================
2018-07-05 14:23:32,965 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:23:32,981 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:34,764 - ===========进入拦截器==============
2018-07-05 14:23:34,765 - http://localhost:8081/number-coin.html
2018-07-05 14:23:34,785 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:23:34,785 - ===========请求时间:2018-07-05 14:23:34==========================
2018-07-05 14:23:34,785 - url=http://localhost:8081/number-coin.html
2018-07-05 14:23:34,785 - method=GET
2018-07-05 14:23:34,785 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:34,785 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:23:34,785 - args:
2018-07-05 14:23:34,785 - =============结束请求时间:2018-07-05 14:23:34,耗时:0s======================
2018-07-05 14:23:34,785 - response=/number-coin
2018-07-05 14:23:34,786 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:23:34,975 - ===========进入拦截器==============
2018-07-05 14:23:34,975 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:23:34,997 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:23:34,997 - ===========请求时间:2018-07-05 14:23:34==========================
2018-07-05 14:23:34,997 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:23:34,997 - method=GET
2018-07-05 14:23:34,997 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:23:34,997 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:23:34,997 - args:pageNumber=1,pageSize=10,
2018-07-05 14:23:35,017 - =============结束请求时间:2018-07-05 14:23:35,耗时:0s======================
2018-07-05 14:23:35,018 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:23:35,028 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:35:45,209 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 1884 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:35:45,212 - No active profile set, falling back to default profiles: default
2018-07-05 14:35:45,412 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:35:45,488 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3007f3d1: startup date [Thu Jul 05 14:35:45 CST 2018]; root of context hierarchy
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:35:46,237 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:35:46,237 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:35:47,234 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:35:47,245 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:35:47,254 - Starting service [Tomcat]
2018-07-05 14:35:47,254 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:35:47,355 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:35:47,355 - Root WebApplicationContext: initialization completed in 1867 ms
2018-07-05 14:35:47,562 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:35:47,567 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:35:47,568 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:35:47,568 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:35:47,568 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:35:47,568 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:35:49,113 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3007f3d1: startup date [Thu Jul 05 14:35:45 CST 2018]; root of context hierarchy
2018-07-05 14:35:49,216 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:35:49,217 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:35:49,218 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:35:49,218 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:35:49,218 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:35:49,218 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:35:49,218 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:35:49,218 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:35:49,219 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:35:49,219 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:35:49,219 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:35:49,219 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:35:49,219 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:35:49,219 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:35:49,219 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:35:49,220 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:35:49,220 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:35:49,220 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:35:49,220 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:35:49,220 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:35:49,220 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:35:49,224 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:35:49,225 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:35:49,226 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:35:49,227 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:35:49,228 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:35:49,228 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:35:49,228 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:35:49,228 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:35:49,228 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:35:49,228 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:35:49,228 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:35:49,229 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:35:49,230 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:35:49,230 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:35:49,230 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:35:49,231 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:35:49,231 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:35:49,231 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:35:49,231 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:35:49,232 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:35:49,232 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:35:49,233 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:35:49,233 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:35:49,235 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:35:49,235 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:35:49,235 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:35:49,235 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:35:49,235 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:35:49,235 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:35:49,236 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:35:49,236 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:35:49,237 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:35:49,237 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:35:49,237 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:35:49,237 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:35:49,238 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:35:49,239 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:35:49,291 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:35:49,291 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:35:49,316 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:35:49,348 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:35:50,126 - LiveReload server is running on port 35729
2018-07-05 14:35:50,254 - Registering beans for JMX exposure on startup
2018-07-05 14:35:50,256 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:35:50,262 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:35:50,275 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:35:50,303 - Using a shared selector for servlet write/read
2018-07-05 14:35:50,323 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:35:50,330 - Started FqLtdWasBackstageApplication in 5.809 seconds (JVM running for 6.953)
2018-07-05 14:35:57,036 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:35:57,036 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:35:57,083 - FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2018-07-05 14:35:57,114 - ===========进入拦截器==============
2018-07-05 14:35:57,153 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:35:57,154 - ===========请求时间:2018-07-05 14:35:57==========================
2018-07-05 14:35:57,154 - url=http://localhost:8081/login
2018-07-05 14:35:57,154 - method=GET
2018-07-05 14:35:57,154 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:35:57,154 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:35:57,154 - args:
2018-07-05 14:35:57,159 - =============结束请求时间:2018-07-05 14:35:57,耗时:0s======================
2018-07-05 14:35:57,160 - response=/login
2018-07-05 14:35:57,197 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:35:57,297 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:35:57,298 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:35:57,298 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:35:57,298 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:35:57,303 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:35:57,303 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:36:01,582 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:36:01,582 - ===========请求时间:2018-07-05 14:36:01==========================
2018-07-05 14:36:01,583 - url=http://localhost:8081/signIn
2018-07-05 14:36:01,583 - method=POST
2018-07-05 14:36:01,583 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:01,583 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:36:01,583 - args:userName=admin,password=123456,
2018-07-05 14:36:01,680 - {dataSource-1} inited
2018-07-05 14:36:02,181 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,182 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:36:02, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:36:02,318 - ===========进入拦截器==============
2018-07-05 14:36:02,318 - http://localhost:8081/home
2018-07-05 14:36:02,325 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:36:02,326 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,326 - url=http://localhost:8081/home
2018-07-05 14:36:02,326 - method=GET
2018-07-05 14:36:02,326 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,326 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:36:02,326 - args:
2018-07-05 14:36:02,326 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,326 - response=/home
2018-07-05 14:36:02,326 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:02,409 - ===========进入拦截器==============
2018-07-05 14:36:02,409 - http://localhost:8081/welcome
2018-07-05 14:36:02,436 - ===========进入拦截器==============
2018-07-05 14:36:02,436 - http://localhost:8081/common/top
2018-07-05 14:36:02,439 - ===========进入拦截器==============
2018-07-05 14:36:02,439 - http://localhost:8081/common/footer
2018-07-05 14:36:02,440 - ===========进入拦截器==============
2018-07-05 14:36:02,440 - http://localhost:8081/common/left
2018-07-05 14:36:02,442 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:36:02,442 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,442 - url=http://localhost:8081/welcome
2018-07-05 14:36:02,442 - method=GET
2018-07-05 14:36:02,442 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,442 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:36:02,442 - args:
2018-07-05 14:36:02,442 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,443 - response=/welcome
2018-07-05 14:36:02,443 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:02,446 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:36:02,446 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,447 - url=http://localhost:8081/common/top
2018-07-05 14:36:02,447 - method=GET
2018-07-05 14:36:02,447 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,447 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:36:02,447 - args:
2018-07-05 14:36:02,447 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,447 - response=/common/top
2018-07-05 14:36:02,447 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:02,471 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:36:02,471 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,471 - url=http://localhost:8081/common/footer
2018-07-05 14:36:02,471 - method=GET
2018-07-05 14:36:02,471 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,471 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:36:02,471 - args:
2018-07-05 14:36:02,472 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,472 - response=/common/footer
2018-07-05 14:36:02,472 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:02,481 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:36:02,482 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,482 - url=http://localhost:8081/common/left
2018-07-05 14:36:02,482 - method=GET
2018-07-05 14:36:02,482 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,482 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:36:02,482 - args:
2018-07-05 14:36:02,482 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,482 - response=/common/left
2018-07-05 14:36:02,482 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:02,518 - ===========进入拦截器==============
2018-07-05 14:36:02,518 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:36:02,558 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:36:02,559 - ===========请求时间:2018-07-05 14:36:02==========================
2018-07-05 14:36:02,560 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:36:02,560 - method=GET
2018-07-05 14:36:02,560 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:02,561 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:36:02,561 - args:roleId=1,
2018-07-05 14:36:02,608 - =============结束请求时间:2018-07-05 14:36:02,耗时:0s======================
2018-07-05 14:36:02,608 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:36:02,619 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:04,243 - ===========进入拦截器==============
2018-07-05 14:36:04,243 - http://localhost:8081/number-coin.html
2018-07-05 14:36:04,253 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:36:04,253 - ===========请求时间:2018-07-05 14:36:04==========================
2018-07-05 14:36:04,253 - url=http://localhost:8081/number-coin.html
2018-07-05 14:36:04,253 - method=GET
2018-07-05 14:36:04,253 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:04,253 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:36:04,253 - args:
2018-07-05 14:36:04,253 - =============结束请求时间:2018-07-05 14:36:04,耗时:0s======================
2018-07-05 14:36:04,254 - response=/number-coin
2018-07-05 14:36:04,254 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:04,405 - ===========进入拦截器==============
2018-07-05 14:36:04,405 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:36:04,426 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:36:04,426 - ===========请求时间:2018-07-05 14:36:04==========================
2018-07-05 14:36:04,426 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:36:04,426 - method=GET
2018-07-05 14:36:04,426 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:36:04,426 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:36:04,426 - args:pageNumber=1,pageSize=10,
2018-07-05 14:36:04,440 - =============结束请求时间:2018-07-05 14:36:04,耗时:0s======================
2018-07-05 14:36:04,441 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:36:04,448 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:30,674 - ===========进入拦截器==============
2018-07-05 14:36:30,674 - http://localhost:8081/error
2018-07-05 14:36:30,692 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:36:30,700 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-05 14:38:54,675 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 17260 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:38:54,678 - No active profile set, falling back to default profiles: default
2018-07-05 14:38:54,865 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:38:54,958 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c06156f: startup date [Thu Jul 05 14:38:54 CST 2018]; root of context hierarchy
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:38:56,123 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:38:56,123 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:38:57,090 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:38:57,102 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:38:57,112 - Starting service [Tomcat]
2018-07-05 14:38:57,112 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:38:57,211 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:38:57,211 - Root WebApplicationContext: initialization completed in 2253 ms
2018-07-05 14:38:57,424 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:38:57,428 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:38:57,428 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:38:57,428 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:38:57,429 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:38:57,429 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:38:58,944 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c06156f: startup date [Thu Jul 05 14:38:54 CST 2018]; root of context hierarchy
2018-07-05 14:38:59,044 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:38:59,045 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:38:59,046 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:38:59,046 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:38:59,046 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:38:59,046 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:38:59,046 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:38:59,046 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:38:59,046 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:38:59,047 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:38:59,047 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:38:59,047 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:38:59,047 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:38:59,047 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:38:59,047 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:38:59,047 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:38:59,048 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:38:59,048 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:38:59,048 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:38:59,048 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:38:59,048 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:38:59,052 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:38:59,052 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:38:59,053 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:38:59,054 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:38:59,054 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:38:59,054 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:38:59,054 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:38:59,054 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:38:59,054 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:38:59,054 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:38:59,055 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:38:59,056 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:38:59,056 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:38:59,056 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:38:59,057 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:38:59,058 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:38:59,058 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:38:59,058 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:38:59,058 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:38:59,058 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:38:59,058 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:38:59,059 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:38:59,059 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:38:59,060 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:38:59,061 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:38:59,061 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:38:59,061 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:38:59,061 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:38:59,061 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:38:59,061 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:38:59,062 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:38:59,062 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:38:59,062 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:38:59,062 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:38:59,062 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:38:59,064 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:38:59,064 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:38:59,115 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:38:59,115 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:38:59,140 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:38:59,175 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:38:59,919 - LiveReload server is running on port 35729
2018-07-05 14:39:00,120 - Registering beans for JMX exposure on startup
2018-07-05 14:39:00,122 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:39:00,129 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:39:00,143 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:39:00,171 - Using a shared selector for servlet write/read
2018-07-05 14:39:00,202 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:39:00,215 - Started FqLtdWasBackstageApplication in 6.344 seconds (JVM running for 7.623)
2018-07-05 14:39:03,997 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:39:03,997 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:39:04,039 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 14:39:04,072 - ===========进入拦截器==============
2018-07-05 14:39:04,114 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:39:04,114 - ===========请求时间:2018-07-05 14:39:04==========================
2018-07-05 14:39:04,114 - url=http://localhost:8081/login
2018-07-05 14:39:04,114 - method=GET
2018-07-05 14:39:04,114 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:04,115 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:39:04,115 - args:
2018-07-05 14:39:04,118 - =============结束请求时间:2018-07-05 14:39:04,耗时:0s======================
2018-07-05 14:39:04,118 - response=/login
2018-07-05 14:39:04,155 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:39:04,233 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:39:04,233 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:39:04,233 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:39:04,233 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:39:04,238 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:39:04,239 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:39:09,430 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:39:09,430 - ===========请求时间:2018-07-05 14:39:09==========================
2018-07-05 14:39:09,430 - url=http://localhost:8081/signIn
2018-07-05 14:39:09,430 - method=POST
2018-07-05 14:39:09,430 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:09,430 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:39:09,430 - args:userName=admin,password=123456,
2018-07-05 14:39:09,523 - {dataSource-1} inited
2018-07-05 14:39:09,942 - =============结束请求时间:2018-07-05 14:39:09,耗时:0s======================
2018-07-05 14:39:09,942 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:39:09, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:39:10,040 - ===========进入拦截器==============
2018-07-05 14:39:10,040 - http://localhost:8081/home
2018-07-05 14:39:10,045 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:39:10,045 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,045 - url=http://localhost:8081/home
2018-07-05 14:39:10,045 - method=GET
2018-07-05 14:39:10,045 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,045 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:39:10,045 - args:
2018-07-05 14:39:10,046 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,046 - response=/home
2018-07-05 14:39:10,046 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:10,153 - ===========进入拦截器==============
2018-07-05 14:39:10,153 - http://localhost:8081/welcome
2018-07-05 14:39:10,159 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:39:10,159 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,160 - url=http://localhost:8081/welcome
2018-07-05 14:39:10,160 - method=GET
2018-07-05 14:39:10,160 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,160 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:39:10,160 - args:
2018-07-05 14:39:10,160 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,160 - response=/welcome
2018-07-05 14:39:10,160 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:10,215 - ===========进入拦截器==============
2018-07-05 14:39:10,216 - http://localhost:8081/common/top
2018-07-05 14:39:10,216 - ===========进入拦截器==============
2018-07-05 14:39:10,216 - http://localhost:8081/common/footer
2018-07-05 14:39:10,218 - ===========进入拦截器==============
2018-07-05 14:39:10,218 - http://localhost:8081/common/left
2018-07-05 14:39:10,219 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:39:10,220 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,220 - url=http://localhost:8081/common/top
2018-07-05 14:39:10,220 - method=GET
2018-07-05 14:39:10,220 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,221 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:39:10,221 - args:
2018-07-05 14:39:10,221 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,221 - response=/common/top
2018-07-05 14:39:10,221 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:10,225 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:39:10,226 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,226 - url=http://localhost:8081/common/footer
2018-07-05 14:39:10,226 - method=GET
2018-07-05 14:39:10,226 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,226 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:39:10,226 - args:
2018-07-05 14:39:10,226 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,226 - response=/common/footer
2018-07-05 14:39:10,226 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:10,229 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:39:10,229 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,229 - url=http://localhost:8081/common/left
2018-07-05 14:39:10,229 - method=GET
2018-07-05 14:39:10,229 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,229 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:39:10,229 - args:
2018-07-05 14:39:10,230 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,230 - response=/common/left
2018-07-05 14:39:10,230 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:10,280 - ===========进入拦截器==============
2018-07-05 14:39:10,281 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:39:10,288 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:39:10,288 - ===========请求时间:2018-07-05 14:39:10==========================
2018-07-05 14:39:10,288 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:39:10,288 - method=GET
2018-07-05 14:39:10,288 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:10,288 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:39:10,288 - args:roleId=1,
2018-07-05 14:39:10,331 - =============结束请求时间:2018-07-05 14:39:10,耗时:0s======================
2018-07-05 14:39:10,332 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:39:10,347 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:13,044 - ===========进入拦截器==============
2018-07-05 14:39:13,044 - http://localhost:8081/number-coin.html
2018-07-05 14:39:13,050 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:39:13,050 - ===========请求时间:2018-07-05 14:39:13==========================
2018-07-05 14:39:13,050 - url=http://localhost:8081/number-coin.html
2018-07-05 14:39:13,050 - method=GET
2018-07-05 14:39:13,050 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:13,050 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:39:13,051 - args:
2018-07-05 14:39:13,051 - =============结束请求时间:2018-07-05 14:39:13,耗时:0s======================
2018-07-05 14:39:13,051 - response=/number-coin
2018-07-05 14:39:13,051 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:39:13,263 - ===========进入拦截器==============
2018-07-05 14:39:13,263 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:39:13,310 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:39:13,310 - ===========请求时间:2018-07-05 14:39:13==========================
2018-07-05 14:39:13,310 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:39:13,310 - method=GET
2018-07-05 14:39:13,310 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:39:13,310 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:39:13,310 - args:pageNumber=1,pageSize=10,
2018-07-05 14:39:13,326 - =============结束请求时间:2018-07-05 14:39:13,耗时:0s======================
2018-07-05 14:39:13,326 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:39:13,334 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:41:53,201 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12196 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:41:53,203 - No active profile set, falling back to default profiles: default
2018-07-05 14:41:53,339 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:41:53,421 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6a863b: startup date [Thu Jul 05 14:41:53 CST 2018]; root of context hierarchy
2018-07-05 14:41:54,173 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,173 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,174 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,174 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,174 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,174 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:41:54,174 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:41:54,174 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:41:55,180 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:41:55,194 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:41:55,206 - Starting service [Tomcat]
2018-07-05 14:41:55,206 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:41:55,316 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:41:55,316 - Root WebApplicationContext: initialization completed in 1895 ms
2018-07-05 14:41:55,526 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:41:55,530 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:41:55,530 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:41:55,530 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:41:55,530 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:41:55,531 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:41:57,041 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@e6a863b: startup date [Thu Jul 05 14:41:53 CST 2018]; root of context hierarchy
2018-07-05 14:41:57,145 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:41:57,146 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:41:57,147 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:41:57,147 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:41:57,147 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:41:57,147 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:41:57,147 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:41:57,147 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:41:57,147 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:41:57,148 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:41:57,148 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:41:57,148 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:41:57,148 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:41:57,148 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:41:57,148 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:41:57,148 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:41:57,148 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:41:57,149 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:41:57,149 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:41:57,149 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:41:57,149 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:41:57,154 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:41:57,154 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:41:57,156 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:41:57,156 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:41:57,156 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:41:57,156 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:41:57,156 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:41:57,157 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:41:57,157 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:41:57,157 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:41:57,157 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:41:57,158 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:41:57,158 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:41:57,158 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:41:57,159 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:41:57,160 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:41:57,160 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:41:57,160 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:41:57,160 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:41:57,160 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:41:57,160 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:41:57,161 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:41:57,161 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:41:57,162 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:41:57,163 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:41:57,163 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:41:57,163 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:41:57,163 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:41:57,163 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:41:57,163 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:41:57,164 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:41:57,164 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:41:57,164 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:41:57,165 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:41:57,165 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:41:57,168 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:41:57,168 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:41:57,218 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:41:57,219 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:41:57,244 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:41:57,277 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:41:58,022 - LiveReload server is running on port 35729
2018-07-05 14:41:58,149 - Registering beans for JMX exposure on startup
2018-07-05 14:41:58,151 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:41:58,158 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:41:58,169 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:41:58,197 - Using a shared selector for servlet write/read
2018-07-05 14:41:58,215 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:41:58,222 - Started FqLtdWasBackstageApplication in 5.706 seconds (JVM running for 6.856)
2018-07-05 14:42:04,634 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:42:04,634 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:42:04,679 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 14:42:04,714 - ===========进入拦截器==============
2018-07-05 14:42:04,760 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:42:04,761 - ===========请求时间:2018-07-05 14:42:04==========================
2018-07-05 14:42:04,761 - url=http://localhost:8081/login
2018-07-05 14:42:04,761 - method=GET
2018-07-05 14:42:04,761 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:04,761 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:42:04,761 - args:
2018-07-05 14:42:04,766 - =============结束请求时间:2018-07-05 14:42:04,耗时:0s======================
2018-07-05 14:42:04,766 - response=/login
2018-07-05 14:42:04,803 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:42:04,888 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:42:04,888 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:42:04,888 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:42:04,888 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:42:04,894 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:42:04,894 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:42:09,363 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:42:09,363 - ===========请求时间:2018-07-05 14:42:09==========================
2018-07-05 14:42:09,363 - url=http://localhost:8081/signIn
2018-07-05 14:42:09,363 - method=POST
2018-07-05 14:42:09,363 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:09,363 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:42:09,363 - args:userName=admin,password=123456,
2018-07-05 14:42:09,456 - {dataSource-1} inited
2018-07-05 14:42:09,920 - =============结束请求时间:2018-07-05 14:42:09,耗时:0s======================
2018-07-05 14:42:09,920 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:42:09, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:42:10,025 - ===========进入拦截器==============
2018-07-05 14:42:10,026 - http://localhost:8081/home
2018-07-05 14:42:10,031 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:42:10,031 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,031 - url=http://localhost:8081/home
2018-07-05 14:42:10,031 - method=GET
2018-07-05 14:42:10,032 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,032 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:42:10,032 - args:
2018-07-05 14:42:10,032 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,032 - response=/home
2018-07-05 14:42:10,032 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:10,151 - ===========进入拦截器==============
2018-07-05 14:42:10,151 - http://localhost:8081/welcome
2018-07-05 14:42:10,155 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:42:10,155 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,155 - url=http://localhost:8081/welcome
2018-07-05 14:42:10,156 - method=GET
2018-07-05 14:42:10,156 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,156 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:42:10,156 - args:
2018-07-05 14:42:10,156 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,156 - response=/welcome
2018-07-05 14:42:10,156 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:10,220 - ===========进入拦截器==============
2018-07-05 14:42:10,221 - http://localhost:8081/common/top
2018-07-05 14:42:10,222 - ===========进入拦截器==============
2018-07-05 14:42:10,222 - http://localhost:8081/common/left
2018-07-05 14:42:10,225 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:42:10,225 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,225 - url=http://localhost:8081/common/top
2018-07-05 14:42:10,225 - method=GET
2018-07-05 14:42:10,225 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,225 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:42:10,226 - args:
2018-07-05 14:42:10,226 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,226 - response=/common/top
2018-07-05 14:42:10,226 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:10,227 - ===========进入拦截器==============
2018-07-05 14:42:10,227 - http://localhost:8081/common/footer
2018-07-05 14:42:10,233 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:42:10,234 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,234 - url=http://localhost:8081/common/left
2018-07-05 14:42:10,234 - method=GET
2018-07-05 14:42:10,234 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,234 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:42:10,234 - args:
2018-07-05 14:42:10,234 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,234 - response=/common/left
2018-07-05 14:42:10,234 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:10,243 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:42:10,243 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,244 - url=http://localhost:8081/common/footer
2018-07-05 14:42:10,244 - method=GET
2018-07-05 14:42:10,244 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,244 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:42:10,244 - args:
2018-07-05 14:42:10,244 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,244 - response=/common/footer
2018-07-05 14:42:10,244 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:10,275 - ===========进入拦截器==============
2018-07-05 14:42:10,276 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:42:10,281 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:42:10,281 - ===========请求时间:2018-07-05 14:42:10==========================
2018-07-05 14:42:10,281 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:42:10,281 - method=GET
2018-07-05 14:42:10,281 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:10,281 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:42:10,281 - args:roleId=1,
2018-07-05 14:42:10,308 - =============结束请求时间:2018-07-05 14:42:10,耗时:0s======================
2018-07-05 14:42:10,308 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:42:10,317 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:11,964 - ===========进入拦截器==============
2018-07-05 14:42:11,964 - http://localhost:8081/number-coin.html
2018-07-05 14:42:11,968 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:42:11,969 - ===========请求时间:2018-07-05 14:42:11==========================
2018-07-05 14:42:11,969 - url=http://localhost:8081/number-coin.html
2018-07-05 14:42:11,969 - method=GET
2018-07-05 14:42:11,969 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:11,969 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:42:11,969 - args:
2018-07-05 14:42:11,969 - =============结束请求时间:2018-07-05 14:42:11,耗时:0s======================
2018-07-05 14:42:11,969 - response=/number-coin
2018-07-05 14:42:11,969 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:42:12,138 - ===========进入拦截器==============
2018-07-05 14:42:12,138 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:42:12,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:42:12,158 - ===========请求时间:2018-07-05 14:42:12==========================
2018-07-05 14:42:12,158 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:42:12,158 - method=GET
2018-07-05 14:42:12,158 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:42:12,158 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:42:12,158 - args:pageNumber=1,pageSize=10,
2018-07-05 14:42:12,175 - =============结束请求时间:2018-07-05 14:42:12,耗时:0s======================
2018-07-05 14:42:12,175 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:42:12,184 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:14,173 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9224 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:45:14,175 - No active profile set, falling back to default profiles: default
2018-07-05 14:45:14,352 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:45:14,497 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53f471a2: startup date [Thu Jul 05 14:45:14 CST 2018]; root of context hierarchy
2018-07-05 14:45:15,842 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:45:15,843 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:45:15,843 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:45:16,897 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:45:16,909 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:45:16,918 - Starting service [Tomcat]
2018-07-05 14:45:16,918 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:45:17,021 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:45:17,021 - Root WebApplicationContext: initialization completed in 2524 ms
2018-07-05 14:45:17,236 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:45:17,240 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:45:17,241 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:45:17,241 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:45:17,241 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:45:17,241 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:45:18,776 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53f471a2: startup date [Thu Jul 05 14:45:14 CST 2018]; root of context hierarchy
2018-07-05 14:45:18,879 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:45:18,880 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:45:18,880 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:45:18,881 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:45:18,881 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:45:18,881 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:45:18,881 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:45:18,881 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:45:18,882 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:45:18,882 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:45:18,882 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:45:18,882 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:45:18,882 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:45:18,882 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:45:18,882 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:45:18,882 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:45:18,883 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:45:18,883 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:45:18,883 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:45:18,883 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:45:18,883 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:45:18,887 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:45:18,887 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:45:18,889 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:45:18,889 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:45:18,890 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:45:18,890 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:45:18,890 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:45:18,890 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:45:18,890 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:45:18,890 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:45:18,890 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:45:18,891 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:45:18,892 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:45:18,892 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:45:18,892 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:45:18,893 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:45:18,893 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:45:18,893 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:45:18,894 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:45:18,894 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:45:18,894 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:45:18,894 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:45:18,894 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:45:18,896 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:45:18,896 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:45:18,896 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:45:18,896 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:45:18,896 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:45:18,896 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:45:18,897 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:45:18,897 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:45:18,897 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:45:18,897 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:45:18,898 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:45:18,898 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:45:18,899 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:45:18,899 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:45:18,950 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:45:18,950 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:45:18,974 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:45:19,007 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:45:19,808 - LiveReload server is running on port 35729
2018-07-05 14:45:19,935 - Registering beans for JMX exposure on startup
2018-07-05 14:45:19,937 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:45:19,944 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:45:19,956 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:45:19,984 - Using a shared selector for servlet write/read
2018-07-05 14:45:20,005 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:45:20,013 - Started FqLtdWasBackstageApplication in 6.342 seconds (JVM running for 7.442)
2018-07-05 14:45:23,973 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:45:23,973 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:45:24,022 - FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2018-07-05 14:45:24,052 - ===========进入拦截器==============
2018-07-05 14:45:24,095 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:45:24,095 - ===========请求时间:2018-07-05 14:45:24==========================
2018-07-05 14:45:24,095 - url=http://localhost:8081/login
2018-07-05 14:45:24,095 - method=GET
2018-07-05 14:45:24,095 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:24,095 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:45:24,095 - args:
2018-07-05 14:45:24,099 - =============结束请求时间:2018-07-05 14:45:24,耗时:0s======================
2018-07-05 14:45:24,099 - response=/login
2018-07-05 14:45:24,132 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:45:24,206 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:45:24,207 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:45:24,207 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:45:24,207 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:45:24,211 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:45:24,211 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:45:28,064 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:45:28,064 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,064 - url=http://localhost:8081/signIn
2018-07-05 14:45:28,064 - method=POST
2018-07-05 14:45:28,065 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,065 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:45:28,065 - args:userName=admin,password=123456,
2018-07-05 14:45:28,160 - {dataSource-1} inited
2018-07-05 14:45:28,624 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,624 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:45:28, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:45:28,723 - ===========进入拦截器==============
2018-07-05 14:45:28,724 - http://localhost:8081/home
2018-07-05 14:45:28,728 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:45:28,729 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,729 - url=http://localhost:8081/home
2018-07-05 14:45:28,729 - method=GET
2018-07-05 14:45:28,729 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,729 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:45:28,729 - args:
2018-07-05 14:45:28,729 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,729 - response=/home
2018-07-05 14:45:28,729 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:28,856 - ===========进入拦截器==============
2018-07-05 14:45:28,856 - http://localhost:8081/welcome
2018-07-05 14:45:28,860 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:45:28,860 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,860 - url=http://localhost:8081/welcome
2018-07-05 14:45:28,860 - method=GET
2018-07-05 14:45:28,860 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,860 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:45:28,861 - args:
2018-07-05 14:45:28,861 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,861 - response=/welcome
2018-07-05 14:45:28,861 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:28,914 - ===========进入拦截器==============
2018-07-05 14:45:28,914 - http://localhost:8081/common/top
2018-07-05 14:45:28,916 - ===========进入拦截器==============
2018-07-05 14:45:28,916 - http://localhost:8081/common/left
2018-07-05 14:45:28,917 - ===========进入拦截器==============
2018-07-05 14:45:28,917 - http://localhost:8081/common/footer
2018-07-05 14:45:28,919 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:45:28,920 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,920 - url=http://localhost:8081/common/top
2018-07-05 14:45:28,920 - method=GET
2018-07-05 14:45:28,920 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,920 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:45:28,920 - args:
2018-07-05 14:45:28,920 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,920 - response=/common/top
2018-07-05 14:45:28,921 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:28,929 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:45:28,930 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,930 - url=http://localhost:8081/common/left
2018-07-05 14:45:28,930 - method=GET
2018-07-05 14:45:28,930 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,930 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:45:28,930 - args:
2018-07-05 14:45:28,930 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,930 - response=/common/left
2018-07-05 14:45:28,930 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:28,934 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:45:28,934 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,934 - url=http://localhost:8081/common/footer
2018-07-05 14:45:28,934 - method=GET
2018-07-05 14:45:28,934 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,934 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:45:28,934 - args:
2018-07-05 14:45:28,934 - =============结束请求时间:2018-07-05 14:45:28,耗时:0s======================
2018-07-05 14:45:28,934 - response=/common/footer
2018-07-05 14:45:28,934 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:28,975 - ===========进入拦截器==============
2018-07-05 14:45:28,975 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:45:28,983 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:45:28,983 - ===========请求时间:2018-07-05 14:45:28==========================
2018-07-05 14:45:28,983 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:45:28,983 - method=GET
2018-07-05 14:45:28,983 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:28,983 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:45:28,984 - args:roleId=1,
2018-07-05 14:45:29,010 - =============结束请求时间:2018-07-05 14:45:29,耗时:0s======================
2018-07-05 14:45:29,010 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:45:29,022 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:32,851 - ===========进入拦截器==============
2018-07-05 14:45:32,852 - http://localhost:8081/number-coin.html
2018-07-05 14:45:32,856 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:45:32,856 - ===========请求时间:2018-07-05 14:45:32==========================
2018-07-05 14:45:32,856 - url=http://localhost:8081/number-coin.html
2018-07-05 14:45:32,856 - method=GET
2018-07-05 14:45:32,856 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:32,856 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:45:32,856 - args:
2018-07-05 14:45:32,856 - =============结束请求时间:2018-07-05 14:45:32,耗时:0s======================
2018-07-05 14:45:32,856 - response=/number-coin
2018-07-05 14:45:32,857 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:45:33,045 - ===========进入拦截器==============
2018-07-05 14:45:33,045 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:45:33,071 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:45:33,071 - ===========请求时间:2018-07-05 14:45:33==========================
2018-07-05 14:45:33,071 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:45:33,071 - method=GET
2018-07-05 14:45:33,071 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:45:33,071 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:45:33,071 - args:pageNumber=1,pageSize=10,
2018-07-05 14:45:33,094 - =============结束请求时间:2018-07-05 14:45:33,耗时:0s======================
2018-07-05 14:45:33,095 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:45:33,102 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:21,449 - ===========进入拦截器==============
2018-07-05 14:46:21,449 - http://localhost:8081/error
2018-07-05 14:46:21,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:21,474 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-05 14:46:43,103 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12612 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:46:43,106 - No active profile set, falling back to default profiles: default
2018-07-05 14:46:43,316 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:46:43,402 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253ee53e: startup date [Thu Jul 05 14:46:43 CST 2018]; root of context hierarchy
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:46:44,691 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:46:44,692 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:46:45,861 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:46:45,872 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:46:45,880 - Starting service [Tomcat]
2018-07-05 14:46:45,881 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:46:45,980 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:46:45,981 - Root WebApplicationContext: initialization completed in 2579 ms
2018-07-05 14:46:46,190 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:46:46,194 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:46:46,194 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:46:46,195 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:46:46,195 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:46:46,195 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:46:47,694 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@253ee53e: startup date [Thu Jul 05 14:46:43 CST 2018]; root of context hierarchy
2018-07-05 14:46:47,794 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:46:47,795 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:46:47,795 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:46:47,795 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:46:47,796 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:46:47,796 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:46:47,796 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:46:47,796 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:46:47,796 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:46:47,796 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:46:47,796 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:46:47,797 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:46:47,797 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:46:47,797 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:46:47,797 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:46:47,797 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:46:47,797 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:46:47,797 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:46:47,797 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:46:47,797 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:46:47,798 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:46:47,801 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:46:47,801 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:46:47,803 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:46:47,804 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:46:47,804 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:46:47,804 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:46:47,804 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:46:47,804 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:46:47,804 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:46:47,804 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:46:47,804 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:46:47,805 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:46:47,806 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:46:47,806 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:46:47,806 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:46:47,807 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:46:47,807 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:46:47,807 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:46:47,807 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:46:47,807 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:46:47,808 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:46:47,809 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:46:47,809 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:46:47,810 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:46:47,811 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:46:47,811 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:46:47,811 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:46:47,811 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:46:47,811 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:46:47,811 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:46:47,812 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:46:47,812 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:46:47,812 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:46:47,812 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:46:47,812 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:46:47,814 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:46:47,814 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:46:47,865 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:46:47,865 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:46:47,889 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:46:47,922 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:46:48,651 - LiveReload server is running on port 35729
2018-07-05 14:46:48,779 - Registering beans for JMX exposure on startup
2018-07-05 14:46:48,781 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:46:48,788 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:46:48,800 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:46:48,827 - Using a shared selector for servlet write/read
2018-07-05 14:46:48,844 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:46:48,852 - Started FqLtdWasBackstageApplication in 6.3 seconds (JVM running for 7.418)
2018-07-05 14:46:53,114 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:46:53,114 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:46:53,159 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 14:46:53,195 - ===========进入拦截器==============
2018-07-05 14:46:53,237 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:46:53,238 - ===========请求时间:2018-07-05 14:46:53==========================
2018-07-05 14:46:53,238 - url=http://localhost:8081/login
2018-07-05 14:46:53,239 - method=GET
2018-07-05 14:46:53,239 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:53,239 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:46:53,239 - args:
2018-07-05 14:46:53,242 - =============结束请求时间:2018-07-05 14:46:53,耗时:0s======================
2018-07-05 14:46:53,243 - response=/login
2018-07-05 14:46:53,280 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:46:53,357 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:46:53,358 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:46:53,358 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:46:53,358 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:46:53,362 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:46:53,362 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:46:57,366 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:46:57,366 - ===========请求时间:2018-07-05 14:46:57==========================
2018-07-05 14:46:57,366 - url=http://localhost:8081/signIn
2018-07-05 14:46:57,366 - method=POST
2018-07-05 14:46:57,366 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:57,366 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:46:57,366 - args:userName=admin,password=123456,
2018-07-05 14:46:57,463 - {dataSource-1} inited
2018-07-05 14:46:57,876 - =============结束请求时间:2018-07-05 14:46:57,耗时:0s======================
2018-07-05 14:46:57,876 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:46:57, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:46:57,973 - ===========进入拦截器==============
2018-07-05 14:46:57,974 - http://localhost:8081/home
2018-07-05 14:46:57,978 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:46:57,979 - ===========请求时间:2018-07-05 14:46:57==========================
2018-07-05 14:46:57,979 - url=http://localhost:8081/home
2018-07-05 14:46:57,979 - method=GET
2018-07-05 14:46:57,979 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:57,979 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:46:57,979 - args:
2018-07-05 14:46:57,979 - =============结束请求时间:2018-07-05 14:46:57,耗时:0s======================
2018-07-05 14:46:57,979 - response=/home
2018-07-05 14:46:57,979 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:58,055 - ===========进入拦截器==============
2018-07-05 14:46:58,055 - http://localhost:8081/welcome
2018-07-05 14:46:58,060 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:46:58,060 - ===========请求时间:2018-07-05 14:46:58==========================
2018-07-05 14:46:58,060 - url=http://localhost:8081/welcome
2018-07-05 14:46:58,060 - method=GET
2018-07-05 14:46:58,060 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:58,061 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:46:58,061 - args:
2018-07-05 14:46:58,061 - =============结束请求时间:2018-07-05 14:46:58,耗时:0s======================
2018-07-05 14:46:58,061 - response=/welcome
2018-07-05 14:46:58,061 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:58,088 - ===========进入拦截器==============
2018-07-05 14:46:58,088 - http://localhost:8081/common/top
2018-07-05 14:46:58,089 - ===========进入拦截器==============
2018-07-05 14:46:58,089 - http://localhost:8081/common/left
2018-07-05 14:46:58,093 - ===========进入拦截器==============
2018-07-05 14:46:58,094 - http://localhost:8081/common/footer
2018-07-05 14:46:58,095 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:46:58,095 - ===========请求时间:2018-07-05 14:46:58==========================
2018-07-05 14:46:58,095 - url=http://localhost:8081/common/top
2018-07-05 14:46:58,095 - method=GET
2018-07-05 14:46:58,095 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:58,095 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:46:58,095 - args:
2018-07-05 14:46:58,095 - =============结束请求时间:2018-07-05 14:46:58,耗时:0s======================
2018-07-05 14:46:58,096 - response=/common/top
2018-07-05 14:46:58,096 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:58,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:46:58,103 - ===========请求时间:2018-07-05 14:46:58==========================
2018-07-05 14:46:58,103 - url=http://localhost:8081/common/left
2018-07-05 14:46:58,103 - method=GET
2018-07-05 14:46:58,103 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:58,103 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:46:58,103 - args:
2018-07-05 14:46:58,104 - =============结束请求时间:2018-07-05 14:46:58,耗时:0s======================
2018-07-05 14:46:58,104 - response=/common/left
2018-07-05 14:46:58,104 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:58,111 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:46:58,111 - ===========请求时间:2018-07-05 14:46:58==========================
2018-07-05 14:46:58,111 - url=http://localhost:8081/common/footer
2018-07-05 14:46:58,111 - method=GET
2018-07-05 14:46:58,111 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:58,111 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:46:58,111 - args:
2018-07-05 14:46:58,111 - =============结束请求时间:2018-07-05 14:46:58,耗时:0s======================
2018-07-05 14:46:58,112 - response=/common/footer
2018-07-05 14:46:58,112 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:58,145 - ===========进入拦截器==============
2018-07-05 14:46:58,145 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:46:58,151 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:46:58,151 - ===========请求时间:2018-07-05 14:46:58==========================
2018-07-05 14:46:58,151 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:46:58,151 - method=GET
2018-07-05 14:46:58,151 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:58,151 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:46:58,151 - args:roleId=1,
2018-07-05 14:46:58,199 - =============结束请求时间:2018-07-05 14:46:58,耗时:0s======================
2018-07-05 14:46:58,200 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:46:58,210 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:59,555 - ===========进入拦截器==============
2018-07-05 14:46:59,555 - http://localhost:8081/number-coin.html
2018-07-05 14:46:59,561 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:46:59,561 - ===========请求时间:2018-07-05 14:46:59==========================
2018-07-05 14:46:59,561 - url=http://localhost:8081/number-coin.html
2018-07-05 14:46:59,561 - method=GET
2018-07-05 14:46:59,561 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:59,561 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:46:59,561 - args:
2018-07-05 14:46:59,561 - =============结束请求时间:2018-07-05 14:46:59,耗时:0s======================
2018-07-05 14:46:59,561 - response=/number-coin
2018-07-05 14:46:59,561 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:46:59,705 - ===========进入拦截器==============
2018-07-05 14:46:59,705 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:46:59,724 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:46:59,724 - ===========请求时间:2018-07-05 14:46:59==========================
2018-07-05 14:46:59,724 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:46:59,724 - method=GET
2018-07-05 14:46:59,724 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:46:59,724 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:46:59,724 - args:pageNumber=1,pageSize=10,
2018-07-05 14:46:59,741 - =============结束请求时间:2018-07-05 14:46:59,耗时:0s======================
2018-07-05 14:46:59,743 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:46:59,758 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:47:05,676 - ===========进入拦截器==============
2018-07-05 14:47:05,676 - http://localhost:8081/error
2018-07-05 14:47:05,694 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:47:05,703 - Failed to invoke @ExceptionHandler method: public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.handle.ExceptionHandle.handle(java.lang.Exception)
org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:259)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:385)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:59)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:135)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:76)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1222)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1034)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:177)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2018-07-05 14:48:16,176 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13360 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:48:16,179 - No active profile set, falling back to default profiles: default
2018-07-05 14:48:16,377 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:48:16,453 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3aecd4a0: startup date [Thu Jul 05 14:48:16 CST 2018]; root of context hierarchy
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:48:17,731 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:48:17,732 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:48:18,751 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:48:18,761 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:48:18,770 - Starting service [Tomcat]
2018-07-05 14:48:18,771 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:48:18,894 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:48:18,894 - Root WebApplicationContext: initialization completed in 2441 ms
2018-07-05 14:48:19,103 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:48:19,107 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:48:19,108 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:48:19,108 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:48:19,108 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:48:19,108 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:48:20,689 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3aecd4a0: startup date [Thu Jul 05 14:48:16 CST 2018]; root of context hierarchy
2018-07-05 14:48:20,794 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:48:20,795 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:48:20,795 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:48:20,795 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:48:20,795 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:48:20,795 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:48:20,796 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:48:20,796 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:48:20,796 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:48:20,796 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:48:20,796 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:48:20,796 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:48:20,796 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:48:20,797 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:48:20,797 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:48:20,797 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:48:20,797 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:48:20,797 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:48:20,797 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:48:20,797 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:48:20,797 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:48:20,801 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:48:20,801 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:48:20,804 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:48:20,804 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:48:20,805 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:48:20,806 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:48:20,806 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:48:20,806 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:48:20,806 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:48:20,806 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:48:20,806 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:48:20,807 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:48:20,807 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:48:20,807 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:48:20,808 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:48:20,809 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:48:20,809 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:48:20,809 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:48:20,810 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:48:20,810 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:48:20,810 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:48:20,810 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:48:20,811 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:48:20,812 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:48:20,812 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:48:20,812 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:48:20,812 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:48:20,812 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:48:20,812 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:48:20,813 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:48:20,813 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:48:20,813 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:48:20,813 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:48:20,813 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:48:20,814 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:48:20,815 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:48:20,815 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:48:20,862 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:48:20,863 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:48:20,887 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:48:20,918 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:48:21,652 - LiveReload server is running on port 35729
2018-07-05 14:48:21,826 - Registering beans for JMX exposure on startup
2018-07-05 14:48:21,829 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:48:21,838 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:48:21,853 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:48:21,882 - Using a shared selector for servlet write/read
2018-07-05 14:48:21,901 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:48:21,909 - Started FqLtdWasBackstageApplication in 6.342 seconds (JVM running for 7.65)
2018-07-05 14:48:29,617 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:48:29,617 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:48:29,668 - FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-05 14:48:29,711 - ===========进入拦截器==============
2018-07-05 14:48:29,757 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:48:29,758 - ===========请求时间:2018-07-05 14:48:29==========================
2018-07-05 14:48:29,758 - url=http://localhost:8081/login
2018-07-05 14:48:29,758 - method=GET
2018-07-05 14:48:29,759 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:29,759 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:48:29,759 - args:
2018-07-05 14:48:29,763 - =============结束请求时间:2018-07-05 14:48:29,耗时:0s======================
2018-07-05 14:48:29,764 - response=/login
2018-07-05 14:48:29,802 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:48:29,904 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:48:29,904 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:48:29,904 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:48:29,904 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:48:29,911 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:48:29,911 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:48:33,884 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:48:33,884 - ===========请求时间:2018-07-05 14:48:33==========================
2018-07-05 14:48:33,884 - url=http://localhost:8081/signIn
2018-07-05 14:48:33,884 - method=POST
2018-07-05 14:48:33,884 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:33,884 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:48:33,884 - args:userName=admin,password=123456,
2018-07-05 14:48:33,977 - {dataSource-1} inited
2018-07-05 14:48:34,379 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,379 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:48:34, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:48:34,476 - ===========进入拦截器==============
2018-07-05 14:48:34,476 - http://localhost:8081/home
2018-07-05 14:48:34,482 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:48:34,482 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,482 - url=http://localhost:8081/home
2018-07-05 14:48:34,483 - method=GET
2018-07-05 14:48:34,483 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,483 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:48:34,483 - args:
2018-07-05 14:48:34,483 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,483 - response=/home
2018-07-05 14:48:34,483 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:34,558 - ===========进入拦截器==============
2018-07-05 14:48:34,558 - http://localhost:8081/welcome
2018-07-05 14:48:34,564 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:48:34,564 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,564 - url=http://localhost:8081/welcome
2018-07-05 14:48:34,564 - method=GET
2018-07-05 14:48:34,564 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,564 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:48:34,564 - args:
2018-07-05 14:48:34,564 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,564 - response=/welcome
2018-07-05 14:48:34,564 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:34,596 - ===========进入拦截器==============
2018-07-05 14:48:34,596 - http://localhost:8081/common/footer
2018-07-05 14:48:34,596 - ===========进入拦截器==============
2018-07-05 14:48:34,597 - http://localhost:8081/common/top
2018-07-05 14:48:34,600 - ===========进入拦截器==============
2018-07-05 14:48:34,600 - http://localhost:8081/common/left
2018-07-05 14:48:34,610 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:48:34,610 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,610 - url=http://localhost:8081/common/footer
2018-07-05 14:48:34,610 - method=GET
2018-07-05 14:48:34,610 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,610 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:48:34,610 - args:
2018-07-05 14:48:34,610 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,610 - response=/common/footer
2018-07-05 14:48:34,610 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:34,628 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:48:34,628 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,628 - url=http://localhost:8081/common/top
2018-07-05 14:48:34,628 - method=GET
2018-07-05 14:48:34,628 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,628 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:48:34,628 - args:
2018-07-05 14:48:34,629 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,629 - response=/common/top
2018-07-05 14:48:34,629 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:34,631 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:48:34,632 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,632 - url=http://localhost:8081/common/left
2018-07-05 14:48:34,632 - method=GET
2018-07-05 14:48:34,632 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,632 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:48:34,632 - args:
2018-07-05 14:48:34,632 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,632 - response=/common/left
2018-07-05 14:48:34,632 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:34,677 - ===========进入拦截器==============
2018-07-05 14:48:34,677 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:48:34,684 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:48:34,684 - ===========请求时间:2018-07-05 14:48:34==========================
2018-07-05 14:48:34,684 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:48:34,684 - method=GET
2018-07-05 14:48:34,684 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:34,684 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:48:34,684 - args:roleId=1,
2018-07-05 14:48:34,725 - =============结束请求时间:2018-07-05 14:48:34,耗时:0s======================
2018-07-05 14:48:34,726 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:48:34,741 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:35,883 - ===========进入拦截器==============
2018-07-05 14:48:35,883 - http://localhost:8081/number-coin.html
2018-07-05 14:48:35,888 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:48:35,889 - ===========请求时间:2018-07-05 14:48:35==========================
2018-07-05 14:48:35,889 - url=http://localhost:8081/number-coin.html
2018-07-05 14:48:35,889 - method=GET
2018-07-05 14:48:35,889 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:35,889 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:48:35,889 - args:
2018-07-05 14:48:35,889 - =============结束请求时间:2018-07-05 14:48:35,耗时:0s======================
2018-07-05 14:48:35,889 - response=/number-coin
2018-07-05 14:48:35,889 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:36,018 - ===========进入拦截器==============
2018-07-05 14:48:36,019 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:48:36,041 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:48:36,041 - ===========请求时间:2018-07-05 14:48:36==========================
2018-07-05 14:48:36,041 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:48:36,041 - method=GET
2018-07-05 14:48:36,041 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:36,041 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:48:36,041 - args:pageNumber=1,pageSize=10,
2018-07-05 14:48:36,055 - =============结束请求时间:2018-07-05 14:48:36,耗时:0s======================
2018-07-05 14:48:36,055 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:48:36,065 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:48:50,974 - ===========进入拦截器==============
2018-07-05 14:48:50,974 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:48:50,996 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:48:50,996 - ===========请求时间:2018-07-05 14:48:50==========================
2018-07-05 14:48:50,996 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:48:50,996 - method=GET
2018-07-05 14:48:50,996 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:48:50,996 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:48:50,996 - args:pageNumber=1,pageSize=10,
2018-07-05 14:48:51,024 - =============结束请求时间:2018-07-05 14:48:51,耗时:0s======================
2018-07-05 14:48:51,025 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:48:51,036 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:49:06,750 - ===========进入拦截器==============
2018-07-05 14:49:06,750 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:49:06,757 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:49:06,758 - ===========请求时间:2018-07-05 14:49:06==========================
2018-07-05 14:49:06,758 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:49:06,758 - method=GET
2018-07-05 14:49:06,758 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:49:06,758 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:49:06,758 - args:pageNumber=1,pageSize=10,
2018-07-05 14:49:23,170 - =============结束请求时间:2018-07-05 14:49:23,耗时:16s======================
2018-07-05 14:49:23,170 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:49:23,172 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:01,801 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2720 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:50:01,804 - No active profile set, falling back to default profiles: default
2018-07-05 14:50:02,000 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:50:02,104 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29ee6bb8: startup date [Thu Jul 05 14:50:02 CST 2018]; root of context hierarchy
2018-07-05 14:50:03,303 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,303 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,303 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,303 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,303 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,304 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:50:03,304 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:50:03,304 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:50:04,336 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:50:04,347 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:50:04,357 - Starting service [Tomcat]
2018-07-05 14:50:04,357 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:50:04,460 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:50:04,460 - Root WebApplicationContext: initialization completed in 2356 ms
2018-07-05 14:50:04,664 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:50:04,668 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:50:04,669 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:50:04,669 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:50:04,669 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:50:04,669 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:50:06,159 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29ee6bb8: startup date [Thu Jul 05 14:50:02 CST 2018]; root of context hierarchy
2018-07-05 14:50:06,260 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:50:06,261 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:50:06,261 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:50:06,261 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:50:06,262 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:50:06,262 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:50:06,262 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:50:06,262 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:50:06,262 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:50:06,262 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:50:06,262 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:50:06,263 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:50:06,263 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:50:06,263 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:50:06,263 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:50:06,263 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:50:06,263 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:50:06,263 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:50:06,263 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:50:06,263 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:50:06,264 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:50:06,268 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:50:06,268 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:50:06,270 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:50:06,270 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:50:06,270 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:50:06,270 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:50:06,270 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:50:06,270 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:50:06,270 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:50:06,271 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:50:06,271 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:50:06,272 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:50:06,272 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:50:06,272 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:50:06,272 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:50:06,273 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:50:06,273 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:50:06,273 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:50:06,274 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:50:06,274 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:50:06,274 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:50:06,275 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:50:06,275 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:50:06,276 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:50:06,276 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:50:06,276 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:50:06,276 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:50:06,276 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:50:06,277 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:50:06,277 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:50:06,278 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:50:06,278 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:50:06,278 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:50:06,278 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:50:06,279 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:50:06,280 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:50:06,281 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:50:06,331 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:50:06,331 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:50:06,357 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:50:06,390 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:50:07,133 - LiveReload server is running on port 35729
2018-07-05 14:50:07,260 - Registering beans for JMX exposure on startup
2018-07-05 14:50:07,261 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:50:07,269 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:50:07,281 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:50:07,308 - Using a shared selector for servlet write/read
2018-07-05 14:50:07,326 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:50:07,333 - Started FqLtdWasBackstageApplication in 5.966 seconds (JVM running for 6.989)
2018-07-05 14:50:18,124 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:50:18,124 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:50:18,172 - FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2018-07-05 14:50:18,208 - ===========进入拦截器==============
2018-07-05 14:50:18,248 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:50:18,248 - ===========请求时间:2018-07-05 14:50:18==========================
2018-07-05 14:50:18,248 - url=http://localhost:8081/login
2018-07-05 14:50:18,248 - method=GET
2018-07-05 14:50:18,248 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:18,248 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:50:18,248 - args:
2018-07-05 14:50:18,252 - =============结束请求时间:2018-07-05 14:50:18,耗时:0s======================
2018-07-05 14:50:18,252 - response=/login
2018-07-05 14:50:18,284 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:50:18,367 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:50:18,367 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:50:18,367 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:50:18,367 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:50:18,373 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:50:18,373 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:50:22,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:50:22,296 - ===========请求时间:2018-07-05 14:50:22==========================
2018-07-05 14:50:22,296 - url=http://localhost:8081/signIn
2018-07-05 14:50:22,296 - method=POST
2018-07-05 14:50:22,296 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:22,296 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:50:22,296 - args:userName=admin,password=123456,
2018-07-05 14:50:22,397 - {dataSource-1} inited
2018-07-05 14:50:22,898 - =============结束请求时间:2018-07-05 14:50:22,耗时:0s======================
2018-07-05 14:50:22,898 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:50:22, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:50:22,993 - ===========进入拦截器==============
2018-07-05 14:50:22,993 - http://localhost:8081/home
2018-07-05 14:50:23,003 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:50:23,004 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,004 - url=http://localhost:8081/home
2018-07-05 14:50:23,004 - method=GET
2018-07-05 14:50:23,004 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,004 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:50:23,004 - args:
2018-07-05 14:50:23,004 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,004 - response=/home
2018-07-05 14:50:23,005 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:23,077 - ===========进入拦截器==============
2018-07-05 14:50:23,077 - http://localhost:8081/welcome
2018-07-05 14:50:23,084 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:50:23,084 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,085 - url=http://localhost:8081/welcome
2018-07-05 14:50:23,085 - method=GET
2018-07-05 14:50:23,085 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,085 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:50:23,085 - args:
2018-07-05 14:50:23,085 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,085 - response=/welcome
2018-07-05 14:50:23,085 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:23,106 - ===========进入拦截器==============
2018-07-05 14:50:23,106 - http://localhost:8081/common/top
2018-07-05 14:50:23,107 - ===========进入拦截器==============
2018-07-05 14:50:23,107 - http://localhost:8081/common/footer
2018-07-05 14:50:23,108 - ===========进入拦截器==============
2018-07-05 14:50:23,108 - http://localhost:8081/common/left
2018-07-05 14:50:23,112 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:50:23,112 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,112 - url=http://localhost:8081/common/top
2018-07-05 14:50:23,112 - method=GET
2018-07-05 14:50:23,112 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,112 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:50:23,113 - args:
2018-07-05 14:50:23,113 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,113 - response=/common/top
2018-07-05 14:50:23,113 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:23,139 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:50:23,140 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,140 - url=http://localhost:8081/common/footer
2018-07-05 14:50:23,140 - method=GET
2018-07-05 14:50:23,140 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,140 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:50:23,140 - args:
2018-07-05 14:50:23,140 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,140 - response=/common/footer
2018-07-05 14:50:23,140 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:23,143 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:50:23,143 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,144 - url=http://localhost:8081/common/left
2018-07-05 14:50:23,144 - method=GET
2018-07-05 14:50:23,144 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,144 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:50:23,144 - args:
2018-07-05 14:50:23,144 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,144 - response=/common/left
2018-07-05 14:50:23,144 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:23,185 - ===========进入拦截器==============
2018-07-05 14:50:23,185 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:50:23,192 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:50:23,192 - ===========请求时间:2018-07-05 14:50:23==========================
2018-07-05 14:50:23,192 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:50:23,192 - method=GET
2018-07-05 14:50:23,192 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:23,192 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:50:23,192 - args:roleId=1,
2018-07-05 14:50:23,223 - =============结束请求时间:2018-07-05 14:50:23,耗时:0s======================
2018-07-05 14:50:23,223 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:50:23,233 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:24,589 - ===========进入拦截器==============
2018-07-05 14:50:24,589 - http://localhost:8081/number-coin.html
2018-07-05 14:50:24,593 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:50:24,593 - ===========请求时间:2018-07-05 14:50:24==========================
2018-07-05 14:50:24,593 - url=http://localhost:8081/number-coin.html
2018-07-05 14:50:24,593 - method=GET
2018-07-05 14:50:24,593 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:24,593 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:50:24,593 - args:
2018-07-05 14:50:24,593 - =============结束请求时间:2018-07-05 14:50:24,耗时:0s======================
2018-07-05 14:50:24,594 - response=/number-coin
2018-07-05 14:50:24,594 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:24,726 - ===========进入拦截器==============
2018-07-05 14:50:24,726 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:50:24,746 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:50:24,746 - ===========请求时间:2018-07-05 14:50:24==========================
2018-07-05 14:50:24,746 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:50:24,746 - method=GET
2018-07-05 14:50:24,746 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:24,746 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:50:24,747 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 14:50:28,111 - =============结束请求时间:2018-07-05 14:50:28,耗时:3s======================
2018-07-05 14:50:28,112 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:50:28,122 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:50:30,949 - ===========进入拦截器==============
2018-07-05 14:50:30,949 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:50:30,973 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:50:30,973 - ===========请求时间:2018-07-05 14:50:30==========================
2018-07-05 14:50:30,973 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:50:30,973 - method=GET
2018-07-05 14:50:30,973 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:50:30,973 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:50:30,973 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 14:50:35,614 - =============结束请求时间:2018-07-05 14:50:35,耗时:4s======================
2018-07-05 14:50:35,614 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 14:50:35,615 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:24,114 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 6140 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 14:51:24,117 - No active profile set, falling back to default profiles: default
2018-07-05 14:51:24,507 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 14:51:24,552 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@318b63a6: startup date [Thu Jul 05 14:51:24 CST 2018]; root of context hierarchy
2018-07-05 14:51:26,639 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 14:51:26,640 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 14:51:26,641 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 14:51:28,552 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 14:51:28,567 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 14:51:28,578 - Starting service [Tomcat]
2018-07-05 14:51:28,578 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 14:51:28,714 - Initializing Spring embedded WebApplicationContext
2018-07-05 14:51:28,714 - Root WebApplicationContext: initialization completed in 4162 ms
2018-07-05 14:51:28,977 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 14:51:28,983 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 14:51:28,984 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 14:51:28,984 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 14:51:28,984 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 14:51:28,984 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 14:51:30,927 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@318b63a6: startup date [Thu Jul 05 14:51:24 CST 2018]; root of context hierarchy
2018-07-05 14:51:31,076 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 14:51:31,077 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 14:51:31,078 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 14:51:31,078 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 14:51:31,079 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 14:51:31,079 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 14:51:31,080 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 14:51:31,081 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 14:51:31,081 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 14:51:31,082 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 14:51:31,082 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 14:51:31,083 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 14:51:31,084 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 14:51:31,084 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 14:51:31,084 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 14:51:31,084 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 14:51:31,085 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 14:51:31,085 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 14:51:31,085 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 14:51:31,085 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 14:51:31,085 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 14:51:31,092 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 14:51:31,092 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 14:51:31,095 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 14:51:31,095 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:51:31,095 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 14:51:31,095 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 14:51:31,095 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 14:51:31,096 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 14:51:31,096 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 14:51:31,096 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 14:51:31,096 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 14:51:31,097 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 14:51:31,097 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 14:51:31,097 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 14:51:31,098 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 14:51:31,099 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 14:51:31,100 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 14:51:31,100 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 14:51:31,100 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 14:51:31,101 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 14:51:31,101 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 14:51:31,102 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 14:51:31,102 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 14:51:31,104 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:51:31,105 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 14:51:31,105 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:51:31,105 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 14:51:31,105 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 14:51:31,106 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 14:51:31,106 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 14:51:31,108 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:51:31,109 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 14:51:31,109 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 14:51:31,109 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 14:51:31,109 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 14:51:31,111 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 14:51:31,112 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 14:51:31,195 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:51:31,195 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:51:31,222 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 14:51:31,256 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 14:51:32,118 - LiveReload server is running on port 35729
2018-07-05 14:51:32,265 - Registering beans for JMX exposure on startup
2018-07-05 14:51:32,267 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 14:51:32,274 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 14:51:32,287 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 14:51:32,326 - Using a shared selector for servlet write/read
2018-07-05 14:51:32,348 - Tomcat started on port(s): 8081 (http)
2018-07-05 14:51:32,357 - Started FqLtdWasBackstageApplication in 8.951 seconds (JVM running for 10.278)
2018-07-05 14:51:34,942 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 14:51:34,942 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 14:51:34,993 - FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2018-07-05 14:51:35,030 - ===========进入拦截器==============
2018-07-05 14:51:35,077 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 14:51:35,078 - ===========请求时间:2018-07-05 14:51:35==========================
2018-07-05 14:51:35,078 - url=http://localhost:8081/login
2018-07-05 14:51:35,078 - method=GET
2018-07-05 14:51:35,078 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:35,078 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 14:51:35,078 - args:
2018-07-05 14:51:35,082 - =============结束请求时间:2018-07-05 14:51:35,耗时:0s======================
2018-07-05 14:51:35,083 - response=/login
2018-07-05 14:51:35,122 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 14:51:35,210 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 14:51:35,210 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 14:51:35,210 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 14:51:35,210 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 14:51:35,218 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 14:51:35,218 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 14:51:39,099 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 14:51:39,100 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,100 - url=http://localhost:8081/signIn
2018-07-05 14:51:39,100 - method=POST
2018-07-05 14:51:39,100 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,100 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 14:51:39,100 - args:userName=admin,password=123456,
2018-07-05 14:51:39,200 - {dataSource-1} inited
2018-07-05 14:51:39,647 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,647 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 14:51:39, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 14:51:39,741 - ===========进入拦截器==============
2018-07-05 14:51:39,742 - http://localhost:8081/home
2018-07-05 14:51:39,747 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 14:51:39,747 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,747 - url=http://localhost:8081/home
2018-07-05 14:51:39,747 - method=GET
2018-07-05 14:51:39,747 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,747 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 14:51:39,747 - args:
2018-07-05 14:51:39,747 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,747 - response=/home
2018-07-05 14:51:39,748 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:39,819 - ===========进入拦截器==============
2018-07-05 14:51:39,819 - http://localhost:8081/welcome
2018-07-05 14:51:39,823 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 14:51:39,823 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,823 - url=http://localhost:8081/welcome
2018-07-05 14:51:39,823 - method=GET
2018-07-05 14:51:39,823 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,823 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 14:51:39,823 - args:
2018-07-05 14:51:39,823 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,823 - response=/welcome
2018-07-05 14:51:39,824 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:39,847 - ===========进入拦截器==============
2018-07-05 14:51:39,848 - http://localhost:8081/common/left
2018-07-05 14:51:39,848 - ===========进入拦截器==============
2018-07-05 14:51:39,848 - http://localhost:8081/common/top
2018-07-05 14:51:39,848 - ===========进入拦截器==============
2018-07-05 14:51:39,849 - http://localhost:8081/common/footer
2018-07-05 14:51:39,852 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 14:51:39,853 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,853 - url=http://localhost:8081/common/left
2018-07-05 14:51:39,853 - method=GET
2018-07-05 14:51:39,853 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,853 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 14:51:39,853 - args:
2018-07-05 14:51:39,853 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,853 - response=/common/left
2018-07-05 14:51:39,853 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:39,870 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 14:51:39,870 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,870 - url=http://localhost:8081/common/top
2018-07-05 14:51:39,870 - method=GET
2018-07-05 14:51:39,870 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,870 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 14:51:39,871 - args:
2018-07-05 14:51:39,871 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,871 - response=/common/top
2018-07-05 14:51:39,871 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:39,875 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 14:51:39,875 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,875 - url=http://localhost:8081/common/footer
2018-07-05 14:51:39,875 - method=GET
2018-07-05 14:51:39,875 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,875 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 14:51:39,876 - args:
2018-07-05 14:51:39,876 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,876 - response=/common/footer
2018-07-05 14:51:39,877 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:39,896 - ===========进入拦截器==============
2018-07-05 14:51:39,896 - http://localhost:8081/menu/findMenuByRole
2018-07-05 14:51:39,904 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 14:51:39,904 - ===========请求时间:2018-07-05 14:51:39==========================
2018-07-05 14:51:39,904 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 14:51:39,904 - method=GET
2018-07-05 14:51:39,904 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:39,904 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 14:51:39,904 - args:roleId=1,
2018-07-05 14:51:39,936 - =============结束请求时间:2018-07-05 14:51:39,耗时:0s======================
2018-07-05 14:51:39,936 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 14:51:39,948 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:41,250 - ===========进入拦截器==============
2018-07-05 14:51:41,251 - http://localhost:8081/number-coin.html
2018-07-05 14:51:41,264 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 14:51:41,265 - ===========请求时间:2018-07-05 14:51:41==========================
2018-07-05 14:51:41,265 - url=http://localhost:8081/number-coin.html
2018-07-05 14:51:41,265 - method=GET
2018-07-05 14:51:41,265 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:41,265 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 14:51:41,265 - args:
2018-07-05 14:51:41,265 - =============结束请求时间:2018-07-05 14:51:41,耗时:0s======================
2018-07-05 14:51:41,265 - response=/number-coin
2018-07-05 14:51:41,265 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 14:51:41,401 - ===========进入拦截器==============
2018-07-05 14:51:41,401 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:51:41,423 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 14:51:41,423 - ===========请求时间:2018-07-05 14:51:41==========================
2018-07-05 14:51:41,423 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 14:51:41,423 - method=GET
2018-07-05 14:51:41,423 - ip=0:0:0:0:0:0:0:1
2018-07-05 14:51:41,423 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 14:51:41,423 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 14:51:41,441 - =============结束请求时间:2018-07-05 14:51:41,耗时:0s======================
2018-07-05 14:51:41,441 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 14:51:41,448 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:39,314 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 17872 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 15:11:39,319 - No active profile set, falling back to default profiles: default
2018-07-05 15:11:39,587 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 15:11:39,687 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31196126: startup date [Thu Jul 05 15:11:39 CST 2018]; root of context hierarchy
2018-07-05 15:11:41,197 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,198 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,198 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,198 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,198 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,198 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:11:41,199 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 15:11:41,199 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 15:11:42,178 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 15:11:42,189 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 15:11:42,198 - Starting service [Tomcat]
2018-07-05 15:11:42,198 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 15:11:42,302 - Initializing Spring embedded WebApplicationContext
2018-07-05 15:11:42,302 - Root WebApplicationContext: initialization completed in 2615 ms
2018-07-05 15:11:42,523 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 15:11:42,527 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 15:11:42,527 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 15:11:42,527 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 15:11:42,527 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 15:11:42,527 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 15:11:44,097 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@31196126: startup date [Thu Jul 05 15:11:39 CST 2018]; root of context hierarchy
2018-07-05 15:11:44,218 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 15:11:44,219 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 15:11:44,219 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 15:11:44,219 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 15:11:44,219 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 15:11:44,219 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 15:11:44,220 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 15:11:44,220 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 15:11:44,220 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 15:11:44,220 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 15:11:44,220 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 15:11:44,221 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 15:11:44,221 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 15:11:44,221 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 15:11:44,221 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 15:11:44,222 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 15:11:44,222 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 15:11:44,222 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 15:11:44,222 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 15:11:44,222 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 15:11:44,222 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 15:11:44,225 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 15:11:44,226 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 15:11:44,227 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 15:11:44,229 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 15:11:44,229 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 15:11:44,229 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:11:44,229 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 15:11:44,230 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 15:11:44,230 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:11:44,230 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 15:11:44,230 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 15:11:44,232 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 15:11:44,232 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 15:11:44,232 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 15:11:44,233 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 15:11:44,234 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 15:11:44,235 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 15:11:44,235 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 15:11:44,235 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 15:11:44,235 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 15:11:44,235 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 15:11:44,236 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 15:11:44,236 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 15:11:44,237 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:11:44,238 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:11:44,238 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 15:11:44,239 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 15:11:44,239 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 15:11:44,239 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:11:44,239 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 15:11:44,240 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:11:44,240 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 15:11:44,240 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 15:11:44,240 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:11:44,240 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 15:11:44,241 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 15:11:44,242 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 15:11:44,317 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:11:44,318 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:11:44,375 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 15:11:44,425 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:11:45,261 - LiveReload server is running on port 35729
2018-07-05 15:11:45,396 - Registering beans for JMX exposure on startup
2018-07-05 15:11:45,398 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 15:11:45,405 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 15:11:45,417 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 15:11:45,448 - Using a shared selector for servlet write/read
2018-07-05 15:11:45,471 - Tomcat started on port(s): 8081 (http)
2018-07-05 15:11:45,482 - Started FqLtdWasBackstageApplication in 6.698 seconds (JVM running for 7.817)
2018-07-05 15:11:50,542 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 15:11:50,542 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 15:11:50,584 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 15:11:50,615 - ===========进入拦截器==============
2018-07-05 15:11:50,649 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 15:11:50,650 - ===========请求时间:2018-07-05 15:11:50==========================
2018-07-05 15:11:50,650 - url=http://localhost:8081/login
2018-07-05 15:11:50,651 - method=GET
2018-07-05 15:11:50,651 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:50,651 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 15:11:50,651 - args:
2018-07-05 15:11:50,655 - =============结束请求时间:2018-07-05 15:11:50,耗时:0s======================
2018-07-05 15:11:50,656 - response=/login
2018-07-05 15:11:50,687 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 15:11:50,772 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 15:11:50,772 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 15:11:50,772 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 15:11:50,772 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 15:11:50,781 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 15:11:50,781 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 15:11:57,140 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 15:11:57,141 - ===========请求时间:2018-07-05 15:11:57==========================
2018-07-05 15:11:57,141 - url=http://localhost:8081/signIn
2018-07-05 15:11:57,141 - method=POST
2018-07-05 15:11:57,141 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:57,141 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 15:11:57,141 - args:userName=admin,password=123456,
2018-07-05 15:11:57,234 - {dataSource-1} inited
2018-07-05 15:11:57,741 - =============结束请求时间:2018-07-05 15:11:57,耗时:0s======================
2018-07-05 15:11:57,742 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:11:57, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 15:11:57,862 - ===========进入拦截器==============
2018-07-05 15:11:57,862 - http://localhost:8081/home
2018-07-05 15:11:57,868 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 15:11:57,868 - ===========请求时间:2018-07-05 15:11:57==========================
2018-07-05 15:11:57,868 - url=http://localhost:8081/home
2018-07-05 15:11:57,868 - method=GET
2018-07-05 15:11:57,868 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:57,868 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 15:11:57,868 - args:
2018-07-05 15:11:57,868 - =============结束请求时间:2018-07-05 15:11:57,耗时:0s======================
2018-07-05 15:11:57,868 - response=/home
2018-07-05 15:11:57,868 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:57,944 - ===========进入拦截器==============
2018-07-05 15:11:57,944 - http://localhost:8081/welcome
2018-07-05 15:11:57,948 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 15:11:57,948 - ===========请求时间:2018-07-05 15:11:57==========================
2018-07-05 15:11:57,949 - url=http://localhost:8081/welcome
2018-07-05 15:11:57,949 - method=GET
2018-07-05 15:11:57,949 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:57,949 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 15:11:57,949 - args:
2018-07-05 15:11:57,949 - =============结束请求时间:2018-07-05 15:11:57,耗时:0s======================
2018-07-05 15:11:57,949 - response=/welcome
2018-07-05 15:11:57,949 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:57,982 - ===========进入拦截器==============
2018-07-05 15:11:57,982 - http://localhost:8081/common/top
2018-07-05 15:11:57,983 - ===========进入拦截器==============
2018-07-05 15:11:57,983 - http://localhost:8081/common/left
2018-07-05 15:11:57,983 - ===========进入拦截器==============
2018-07-05 15:11:57,984 - http://localhost:8081/common/footer
2018-07-05 15:11:57,986 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 15:11:57,987 - ===========请求时间:2018-07-05 15:11:57==========================
2018-07-05 15:11:57,987 - url=http://localhost:8081/common/top
2018-07-05 15:11:57,987 - method=GET
2018-07-05 15:11:57,987 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:57,987 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 15:11:57,987 - args:
2018-07-05 15:11:57,987 - =============结束请求时间:2018-07-05 15:11:57,耗时:0s======================
2018-07-05 15:11:57,987 - response=/common/top
2018-07-05 15:11:57,988 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:57,995 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 15:11:57,995 - ===========请求时间:2018-07-05 15:11:57==========================
2018-07-05 15:11:57,995 - url=http://localhost:8081/common/left
2018-07-05 15:11:57,995 - method=GET
2018-07-05 15:11:57,996 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:57,996 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 15:11:57,996 - args:
2018-07-05 15:11:57,996 - =============结束请求时间:2018-07-05 15:11:57,耗时:0s======================
2018-07-05 15:11:57,996 - response=/common/left
2018-07-05 15:11:57,996 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:58,001 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 15:11:58,001 - ===========请求时间:2018-07-05 15:11:58==========================
2018-07-05 15:11:58,001 - url=http://localhost:8081/common/footer
2018-07-05 15:11:58,001 - method=GET
2018-07-05 15:11:58,001 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:58,001 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 15:11:58,001 - args:
2018-07-05 15:11:58,001 - =============结束请求时间:2018-07-05 15:11:58,耗时:0s======================
2018-07-05 15:11:58,001 - response=/common/footer
2018-07-05 15:11:58,001 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:58,037 - ===========进入拦截器==============
2018-07-05 15:11:58,038 - http://localhost:8081/menu/findMenuByRole
2018-07-05 15:11:58,049 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 15:11:58,050 - ===========请求时间:2018-07-05 15:11:58==========================
2018-07-05 15:11:58,050 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 15:11:58,050 - method=GET
2018-07-05 15:11:58,050 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:58,050 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 15:11:58,050 - args:roleId=1,
2018-07-05 15:11:58,101 - =============结束请求时间:2018-07-05 15:11:58,耗时:0s======================
2018-07-05 15:11:58,102 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 15:11:58,113 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:11:59,865 - ===========进入拦截器==============
2018-07-05 15:11:59,865 - http://localhost:8081/number-coin.html
2018-07-05 15:11:59,873 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 15:11:59,873 - ===========请求时间:2018-07-05 15:11:59==========================
2018-07-05 15:11:59,873 - url=http://localhost:8081/number-coin.html
2018-07-05 15:11:59,873 - method=GET
2018-07-05 15:11:59,873 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:11:59,873 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 15:11:59,873 - args:
2018-07-05 15:11:59,873 - =============结束请求时间:2018-07-05 15:11:59,耗时:0s======================
2018-07-05 15:11:59,873 - response=/number-coin
2018-07-05 15:11:59,873 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:12:00,013 - ===========进入拦截器==============
2018-07-05 15:12:00,013 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:12:00,034 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 15:12:00,034 - ===========请求时间:2018-07-05 15:12:00==========================
2018-07-05 15:12:00,034 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:12:00,034 - method=GET
2018-07-05 15:12:00,034 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:12:00,034 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 15:12:00,034 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 15:12:00,051 - =============结束请求时间:2018-07-05 15:12:00,耗时:0s======================
2018-07-05 15:12:00,052 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 15:12:00,069 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:12:34,673 - ===========进入拦截器==============
2018-07-05 15:12:34,673 - http://localhost:8081/user.html
2018-07-05 15:12:34,683 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-05 15:12:34,683 - ===========请求时间:2018-07-05 15:12:34==========================
2018-07-05 15:12:34,683 - url=http://localhost:8081/user.html
2018-07-05 15:12:34,684 - method=GET
2018-07-05 15:12:34,684 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:12:34,684 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-05 15:12:34,684 - args:
2018-07-05 15:12:34,684 - =============结束请求时间:2018-07-05 15:12:34,耗时:0s======================
2018-07-05 15:12:34,684 - response=/user
2018-07-05 15:12:34,684 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:12:34,792 - ===========进入拦截器==============
2018-07-05 15:12:34,792 - http://localhost:8081/user/findAllUser
2018-07-05 15:12:34,805 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-05 15:12:34,805 - ===========请求时间:2018-07-05 15:12:34==========================
2018-07-05 15:12:34,805 - url=http://localhost:8081/user/findAllUser
2018-07-05 15:12:34,805 - method=GET
2018-07-05 15:12:34,806 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:12:34,806 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-05 15:12:34,806 - args:userName=,
2018-07-05 15:12:34,824 - =============结束请求时间:2018-07-05 15:12:34,耗时:0s======================
2018-07-05 15:12:34,824 - response=Result(code=200, msg=成功, data=[User(gid=4, userName=31, password=FF473088FBDCCB239D57EAB3C6D77A40, tel=18888888888, email=31321@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:56:56.0, version=1, createTime=2018-07-04 18:56:56.0, updateTime=2018-07-04 18:56:56.0, status=0), User(gid=2, userName=lyj, password=9C0CD9F9F38A53F48E36A8A2CF540A01, tel=18888888888, email=rweri@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:55:40.0, version=1, createTime=2018-07-04 18:24:38.0, updateTime=2018-07-04 18:24:38.0, status=0), User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:11:57.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=3, totalPage=null), totalCount=3)
2018-07-05 15:12:34,827 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:12:35,807 - ===========进入拦截器==============
2018-07-05 15:12:35,807 - http://localhost:8081/user-add.html
2018-07-05 15:12:35,823 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.userAdd============
2018-07-05 15:12:35,823 - ===========请求时间:2018-07-05 15:12:35==========================
2018-07-05 15:12:35,823 - url=http://localhost:8081/user-add.html
2018-07-05 15:12:35,823 - method=GET
2018-07-05 15:12:35,823 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:12:35,824 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.userAdd
2018-07-05 15:12:35,824 - args:
2018-07-05 15:12:35,824 - =============结束请求时间:2018-07-05 15:12:35,耗时:0s======================
2018-07-05 15:12:35,824 - response=/user-add
2018-07-05 15:12:35,824 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:12:35,933 - ===========进入拦截器==============
2018-07-05 15:12:35,933 - http://localhost:8081/role/findAllRole
2018-07-05 15:12:35,945 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 15:12:35,945 - ===========请求时间:2018-07-05 15:12:35==========================
2018-07-05 15:12:35,945 - url=http://localhost:8081/role/findAllRole
2018-07-05 15:12:35,945 - method=GET
2018-07-05 15:12:35,945 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:12:35,945 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 15:12:35,945 - args:
2018-07-05 15:12:35,957 - =============结束请求时间:2018-07-05 15:12:35,耗时:0s======================
2018-07-05 15:12:35,957 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 15:12:35,958 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:30,878 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9272 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 15:14:30,880 - No active profile set, falling back to default profiles: default
2018-07-05 15:14:31,067 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 15:14:31,118 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2bf320: startup date [Thu Jul 05 15:14:31 CST 2018]; root of context hierarchy
2018-07-05 15:14:32,140 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:14:32,141 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 15:14:32,141 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 15:14:33,517 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 15:14:33,529 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 15:14:33,538 - Starting service [Tomcat]
2018-07-05 15:14:33,538 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 15:14:33,642 - Initializing Spring embedded WebApplicationContext
2018-07-05 15:14:33,642 - Root WebApplicationContext: initialization completed in 2524 ms
2018-07-05 15:14:33,859 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 15:14:33,863 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 15:14:33,864 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 15:14:33,864 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 15:14:33,864 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 15:14:33,864 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 15:14:35,386 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2bf320: startup date [Thu Jul 05 15:14:31 CST 2018]; root of context hierarchy
2018-07-05 15:14:35,487 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 15:14:35,489 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 15:14:35,489 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 15:14:35,489 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 15:14:35,489 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 15:14:35,489 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 15:14:35,489 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 15:14:35,490 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 15:14:35,490 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 15:14:35,490 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 15:14:35,490 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 15:14:35,490 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 15:14:35,490 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 15:14:35,490 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 15:14:35,491 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 15:14:35,491 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 15:14:35,491 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 15:14:35,491 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 15:14:35,491 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 15:14:35,491 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 15:14:35,491 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 15:14:35,495 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 15:14:35,496 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 15:14:35,498 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 15:14:35,498 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 15:14:35,498 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:14:35,499 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 15:14:35,499 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 15:14:35,499 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 15:14:35,499 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 15:14:35,499 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 15:14:35,499 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:14:35,500 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 15:14:35,500 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 15:14:35,501 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 15:14:35,501 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 15:14:35,502 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 15:14:35,502 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 15:14:35,502 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 15:14:35,502 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 15:14:35,502 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 15:14:35,503 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 15:14:35,503 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 15:14:35,503 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 15:14:35,504 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:14:35,505 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 15:14:35,505 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:14:35,505 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 15:14:35,505 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 15:14:35,505 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:14:35,505 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 15:14:35,506 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:14:35,506 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 15:14:35,506 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 15:14:35,506 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:14:35,506 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 15:14:35,508 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 15:14:35,508 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 15:14:35,559 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:14:35,559 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:14:35,584 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 15:14:35,618 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:14:36,363 - LiveReload server is running on port 35729
2018-07-05 15:14:36,491 - Registering beans for JMX exposure on startup
2018-07-05 15:14:36,493 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 15:14:36,500 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 15:14:36,513 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 15:14:36,545 - Using a shared selector for servlet write/read
2018-07-05 15:14:36,563 - Tomcat started on port(s): 8081 (http)
2018-07-05 15:14:36,575 - Started FqLtdWasBackstageApplication in 6.34 seconds (JVM running for 7.58)
2018-07-05 15:14:41,656 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 15:14:41,656 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 15:14:41,694 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-05 15:14:41,725 - ===========进入拦截器==============
2018-07-05 15:14:41,760 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 15:14:41,761 - ===========请求时间:2018-07-05 15:14:41==========================
2018-07-05 15:14:41,761 - url=http://localhost:8081/login
2018-07-05 15:14:41,761 - method=GET
2018-07-05 15:14:41,761 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:41,761 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 15:14:41,762 - args:
2018-07-05 15:14:41,765 - =============结束请求时间:2018-07-05 15:14:41,耗时:0s======================
2018-07-05 15:14:41,765 - response=/login
2018-07-05 15:14:41,798 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 15:14:41,877 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 15:14:41,877 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 15:14:41,877 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 15:14:41,877 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 15:14:41,882 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 15:14:41,882 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 15:14:45,895 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 15:14:45,895 - ===========请求时间:2018-07-05 15:14:45==========================
2018-07-05 15:14:45,895 - url=http://localhost:8081/signIn
2018-07-05 15:14:45,895 - method=POST
2018-07-05 15:14:45,895 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:45,895 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 15:14:45,895 - args:userName=admin,password=123456,
2018-07-05 15:14:45,989 - {dataSource-1} inited
2018-07-05 15:14:46,433 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,433 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:14:46, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 15:14:46,531 - ===========进入拦截器==============
2018-07-05 15:14:46,532 - http://localhost:8081/home
2018-07-05 15:14:46,536 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 15:14:46,537 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,537 - url=http://localhost:8081/home
2018-07-05 15:14:46,537 - method=GET
2018-07-05 15:14:46,537 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,537 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 15:14:46,537 - args:
2018-07-05 15:14:46,538 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,538 - response=/home
2018-07-05 15:14:46,539 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:46,622 - ===========进入拦截器==============
2018-07-05 15:14:46,622 - http://localhost:8081/welcome
2018-07-05 15:14:46,627 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 15:14:46,627 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,627 - url=http://localhost:8081/welcome
2018-07-05 15:14:46,627 - method=GET
2018-07-05 15:14:46,627 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,627 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 15:14:46,627 - args:
2018-07-05 15:14:46,627 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,627 - response=/welcome
2018-07-05 15:14:46,627 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:46,653 - ===========进入拦截器==============
2018-07-05 15:14:46,653 - http://localhost:8081/common/top
2018-07-05 15:14:46,654 - ===========进入拦截器==============
2018-07-05 15:14:46,655 - http://localhost:8081/common/left
2018-07-05 15:14:46,660 - ===========进入拦截器==============
2018-07-05 15:14:46,660 - http://localhost:8081/common/footer
2018-07-05 15:14:46,663 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 15:14:46,663 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,663 - url=http://localhost:8081/common/top
2018-07-05 15:14:46,663 - method=GET
2018-07-05 15:14:46,663 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,663 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 15:14:46,664 - args:
2018-07-05 15:14:46,664 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,664 - response=/common/top
2018-07-05 15:14:46,664 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:46,690 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 15:14:46,690 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,690 - url=http://localhost:8081/common/left
2018-07-05 15:14:46,690 - method=GET
2018-07-05 15:14:46,690 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,690 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 15:14:46,690 - args:
2018-07-05 15:14:46,690 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,690 - response=/common/left
2018-07-05 15:14:46,690 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:46,720 - ===========进入拦截器==============
2018-07-05 15:14:46,720 - http://localhost:8081/menu/findMenuByRole
2018-07-05 15:14:46,724 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 15:14:46,724 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,724 - url=http://localhost:8081/common/footer
2018-07-05 15:14:46,724 - method=GET
2018-07-05 15:14:46,724 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,724 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 15:14:46,724 - args:
2018-07-05 15:14:46,724 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,724 - response=/common/footer
2018-07-05 15:14:46,724 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:46,733 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 15:14:46,733 - ===========请求时间:2018-07-05 15:14:46==========================
2018-07-05 15:14:46,733 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 15:14:46,733 - method=GET
2018-07-05 15:14:46,733 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:46,733 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 15:14:46,733 - args:roleId=1,
2018-07-05 15:14:46,768 - =============结束请求时间:2018-07-05 15:14:46,耗时:0s======================
2018-07-05 15:14:46,768 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 15:14:46,778 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:48,081 - ===========进入拦截器==============
2018-07-05 15:14:48,081 - http://localhost:8081/number-coin.html
2018-07-05 15:14:48,099 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 15:14:48,099 - ===========请求时间:2018-07-05 15:14:48==========================
2018-07-05 15:14:48,099 - url=http://localhost:8081/number-coin.html
2018-07-05 15:14:48,099 - method=GET
2018-07-05 15:14:48,099 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:48,099 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 15:14:48,099 - args:
2018-07-05 15:14:48,099 - =============结束请求时间:2018-07-05 15:14:48,耗时:0s======================
2018-07-05 15:14:48,099 - response=/number-coin
2018-07-05 15:14:48,099 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:14:48,245 - ===========进入拦截器==============
2018-07-05 15:14:48,245 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:14:48,268 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 15:14:48,269 - ===========请求时间:2018-07-05 15:14:48==========================
2018-07-05 15:14:48,269 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:14:48,269 - method=GET
2018-07-05 15:14:48,269 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:14:48,269 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 15:14:48,269 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 15:14:48,286 - =============结束请求时间:2018-07-05 15:14:48,耗时:0s======================
2018-07-05 15:14:48,287 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 15:14:48,298 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,151 - ===========进入拦截器==============
2018-07-05 15:15:02,152 - http://localhost:8081/home
2018-07-05 15:15:02,157 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 15:15:02,157 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,157 - url=http://localhost:8081/home
2018-07-05 15:15:02,157 - method=GET
2018-07-05 15:15:02,157 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,157 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 15:15:02,157 - args:
2018-07-05 15:15:02,157 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,157 - response=/home
2018-07-05 15:15:02,157 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,228 - ===========进入拦截器==============
2018-07-05 15:15:02,228 - http://localhost:8081/welcome
2018-07-05 15:15:02,233 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 15:15:02,233 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,233 - url=http://localhost:8081/welcome
2018-07-05 15:15:02,233 - method=GET
2018-07-05 15:15:02,233 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,233 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 15:15:02,233 - args:
2018-07-05 15:15:02,233 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,233 - response=/welcome
2018-07-05 15:15:02,233 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,264 - ===========进入拦截器==============
2018-07-05 15:15:02,264 - ===========进入拦截器==============
2018-07-05 15:15:02,265 - http://localhost:8081/common/top
2018-07-05 15:15:02,265 - http://localhost:8081/common/left
2018-07-05 15:15:02,265 - ===========进入拦截器==============
2018-07-05 15:15:02,265 - http://localhost:8081/common/footer
2018-07-05 15:15:02,270 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 15:15:02,270 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,270 - url=http://localhost:8081/common/top
2018-07-05 15:15:02,270 - method=GET
2018-07-05 15:15:02,270 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,271 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 15:15:02,271 - args:
2018-07-05 15:15:02,271 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,271 - response=/common/top
2018-07-05 15:15:02,271 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,273 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 15:15:02,273 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,274 - url=http://localhost:8081/common/left
2018-07-05 15:15:02,274 - method=GET
2018-07-05 15:15:02,274 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,274 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 15:15:02,274 - args:
2018-07-05 15:15:02,274 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,274 - response=/common/left
2018-07-05 15:15:02,274 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,290 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 15:15:02,290 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,290 - url=http://localhost:8081/common/footer
2018-07-05 15:15:02,290 - method=GET
2018-07-05 15:15:02,290 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,290 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 15:15:02,290 - args:
2018-07-05 15:15:02,290 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,290 - response=/common/footer
2018-07-05 15:15:02,290 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:02,326 - ===========进入拦截器==============
2018-07-05 15:15:02,327 - http://localhost:8081/menu/findMenuByRole
2018-07-05 15:15:02,334 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 15:15:02,334 - ===========请求时间:2018-07-05 15:15:02==========================
2018-07-05 15:15:02,334 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 15:15:02,334 - method=GET
2018-07-05 15:15:02,334 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:02,334 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 15:15:02,334 - args:roleId=1,
2018-07-05 15:15:02,361 - =============结束请求时间:2018-07-05 15:15:02,耗时:0s======================
2018-07-05 15:15:02,363 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 15:15:02,364 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:03,816 - ===========进入拦截器==============
2018-07-05 15:15:03,816 - http://localhost:8081/number-coin.html
2018-07-05 15:15:03,825 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 15:15:03,825 - ===========请求时间:2018-07-05 15:15:03==========================
2018-07-05 15:15:03,825 - url=http://localhost:8081/number-coin.html
2018-07-05 15:15:03,825 - method=GET
2018-07-05 15:15:03,825 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:03,825 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 15:15:03,825 - args:
2018-07-05 15:15:03,825 - =============结束请求时间:2018-07-05 15:15:03,耗时:0s======================
2018-07-05 15:15:03,825 - response=/number-coin
2018-07-05 15:15:03,826 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:15:03,962 - ===========进入拦截器==============
2018-07-05 15:15:03,962 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:15:03,968 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 15:15:03,968 - ===========请求时间:2018-07-05 15:15:03==========================
2018-07-05 15:15:03,968 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:15:03,968 - method=GET
2018-07-05 15:15:03,968 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:15:03,968 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 15:15:03,968 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 15:15:03,985 - =============结束请求时间:2018-07-05 15:15:03,耗时:0s======================
2018-07-05 15:15:03,986 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 15:15:04,000 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,770 - ===========进入拦截器==============
2018-07-05 15:16:52,770 - http://localhost:8081/home
2018-07-05 15:16:52,804 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 15:16:52,804 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,804 - url=http://localhost:8081/home
2018-07-05 15:16:52,804 - method=GET
2018-07-05 15:16:52,804 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,804 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 15:16:52,804 - args:
2018-07-05 15:16:52,804 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,804 - response=/home
2018-07-05 15:16:52,804 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,878 - ===========进入拦截器==============
2018-07-05 15:16:52,878 - http://localhost:8081/welcome
2018-07-05 15:16:52,885 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 15:16:52,886 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,886 - url=http://localhost:8081/welcome
2018-07-05 15:16:52,886 - method=GET
2018-07-05 15:16:52,886 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,886 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 15:16:52,886 - args:
2018-07-05 15:16:52,886 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,886 - response=/welcome
2018-07-05 15:16:52,886 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,911 - ===========进入拦截器==============
2018-07-05 15:16:52,911 - http://localhost:8081/common/top
2018-07-05 15:16:52,912 - ===========进入拦截器==============
2018-07-05 15:16:52,912 - http://localhost:8081/common/left
2018-07-05 15:16:52,913 - ===========进入拦截器==============
2018-07-05 15:16:52,913 - http://localhost:8081/common/footer
2018-07-05 15:16:52,915 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 15:16:52,915 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,915 - url=http://localhost:8081/common/top
2018-07-05 15:16:52,916 - method=GET
2018-07-05 15:16:52,916 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,916 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 15:16:52,916 - args:
2018-07-05 15:16:52,916 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,916 - response=/common/top
2018-07-05 15:16:52,916 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,935 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 15:16:52,935 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,935 - url=http://localhost:8081/common/footer
2018-07-05 15:16:52,935 - method=GET
2018-07-05 15:16:52,935 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,935 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 15:16:52,936 - args:
2018-07-05 15:16:52,936 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,936 - response=/common/footer
2018-07-05 15:16:52,936 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,936 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 15:16:52,936 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,936 - url=http://localhost:8081/common/left
2018-07-05 15:16:52,936 - method=GET
2018-07-05 15:16:52,936 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,936 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 15:16:52,936 - args:
2018-07-05 15:16:52,936 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,936 - response=/common/left
2018-07-05 15:16:52,937 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:52,964 - ===========进入拦截器==============
2018-07-05 15:16:52,964 - http://localhost:8081/menu/findMenuByRole
2018-07-05 15:16:52,969 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 15:16:52,969 - ===========请求时间:2018-07-05 15:16:52==========================
2018-07-05 15:16:52,969 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 15:16:52,969 - method=GET
2018-07-05 15:16:52,969 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:52,969 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 15:16:52,969 - args:roleId=1,
2018-07-05 15:16:52,979 - =============结束请求时间:2018-07-05 15:16:52,耗时:0s======================
2018-07-05 15:16:52,979 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 15:16:52,980 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:54,872 - ===========进入拦截器==============
2018-07-05 15:16:54,873 - http://localhost:8081/number-coin.html
2018-07-05 15:16:54,880 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 15:16:54,880 - ===========请求时间:2018-07-05 15:16:54==========================
2018-07-05 15:16:54,880 - url=http://localhost:8081/number-coin.html
2018-07-05 15:16:54,880 - method=GET
2018-07-05 15:16:54,881 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:54,881 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 15:16:54,881 - args:
2018-07-05 15:16:54,881 - =============结束请求时间:2018-07-05 15:16:54,耗时:0s======================
2018-07-05 15:16:54,881 - response=/number-coin
2018-07-05 15:16:54,881 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:16:55,015 - ===========进入拦截器==============
2018-07-05 15:16:55,015 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:16:55,021 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 15:16:55,021 - ===========请求时间:2018-07-05 15:16:55==========================
2018-07-05 15:16:55,021 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:16:55,021 - method=GET
2018-07-05 15:16:55,021 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:16:55,021 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 15:16:55,021 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 15:16:55,039 - =============结束请求时间:2018-07-05 15:16:55,耗时:0s======================
2018-07-05 15:16:55,040 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 15:16:55,045 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:19:23,994 - ===========进入拦截器==============
2018-07-05 15:19:23,995 - http://localhost:8081/user.html
2018-07-05 15:19:24,015 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-05 15:19:24,015 - ===========请求时间:2018-07-05 15:19:24==========================
2018-07-05 15:19:24,015 - url=http://localhost:8081/user.html
2018-07-05 15:19:24,015 - method=GET
2018-07-05 15:19:24,015 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:19:24,015 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-05 15:19:24,015 - args:
2018-07-05 15:19:24,016 - =============结束请求时间:2018-07-05 15:19:24,耗时:0s======================
2018-07-05 15:19:24,016 - response=/user
2018-07-05 15:19:24,016 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:19:24,113 - ===========进入拦截器==============
2018-07-05 15:19:24,113 - http://localhost:8081/user/findAllUser
2018-07-05 15:19:24,128 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-05 15:19:24,128 - ===========请求时间:2018-07-05 15:19:24==========================
2018-07-05 15:19:24,128 - url=http://localhost:8081/user/findAllUser
2018-07-05 15:19:24,128 - method=GET
2018-07-05 15:19:24,128 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:19:24,128 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-05 15:19:24,128 - args:userName=,
2018-07-05 15:19:24,136 - =============结束请求时间:2018-07-05 15:19:24,耗时:0s======================
2018-07-05 15:19:24,137 - response=Result(code=200, msg=成功, data=[User(gid=4, userName=31, password=FF473088FBDCCB239D57EAB3C6D77A40, tel=18888888888, email=31321@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:56:56.0, version=1, createTime=2018-07-04 18:56:56.0, updateTime=2018-07-04 18:56:56.0, status=0), User(gid=2, userName=lyj, password=9C0CD9F9F38A53F48E36A8A2CF540A01, tel=18888888888, email=rweri@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:55:40.0, version=1, createTime=2018-07-04 18:24:38.0, updateTime=2018-07-04 18:24:38.0, status=0), User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:14:46.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=3, totalPage=null), totalCount=3)
2018-07-05 15:19:24,140 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:19:24,778 - ===========进入拦截器==============
2018-07-05 15:19:24,778 - http://localhost:8081/user-add.html
2018-07-05 15:19:24,785 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.userAdd============
2018-07-05 15:19:24,785 - ===========请求时间:2018-07-05 15:19:24==========================
2018-07-05 15:19:24,785 - url=http://localhost:8081/user-add.html
2018-07-05 15:19:24,785 - method=GET
2018-07-05 15:19:24,785 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:19:24,785 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.userAdd
2018-07-05 15:19:24,785 - args:
2018-07-05 15:19:24,785 - =============结束请求时间:2018-07-05 15:19:24,耗时:0s======================
2018-07-05 15:19:24,785 - response=/user-add
2018-07-05 15:19:24,785 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:19:24,878 - ===========进入拦截器==============
2018-07-05 15:19:24,878 - http://localhost:8081/role/findAllRole
2018-07-05 15:19:24,895 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 15:19:24,895 - ===========请求时间:2018-07-05 15:19:24==========================
2018-07-05 15:19:24,895 - url=http://localhost:8081/role/findAllRole
2018-07-05 15:19:24,895 - method=GET
2018-07-05 15:19:24,895 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:19:24,895 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 15:19:24,895 - args:
2018-07-05 15:19:24,908 - =============结束请求时间:2018-07-05 15:19:24,耗时:0s======================
2018-07-05 15:19:24,908 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 15:19:24,909 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:21,614 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 8084 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 15:21:21,617 - No active profile set, falling back to default profiles: default
2018-07-05 15:21:21,831 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 15:21:21,911 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f31e05e: startup date [Thu Jul 05 15:21:21 CST 2018]; root of context hierarchy
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 15:21:23,258 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 15:21:23,258 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 15:21:24,322 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 15:21:24,336 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 15:21:24,347 - Starting service [Tomcat]
2018-07-05 15:21:24,347 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 15:21:24,463 - Initializing Spring embedded WebApplicationContext
2018-07-05 15:21:24,463 - Root WebApplicationContext: initialization completed in 2552 ms
2018-07-05 15:21:24,760 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 15:21:24,767 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 15:21:24,768 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 15:21:24,768 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 15:21:24,768 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 15:21:24,768 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 15:21:26,341 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f31e05e: startup date [Thu Jul 05 15:21:21 CST 2018]; root of context hierarchy
2018-07-05 15:21:26,442 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 15:21:26,443 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 15:21:26,443 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 15:21:26,444 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 15:21:26,444 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 15:21:26,444 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 15:21:26,444 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 15:21:26,444 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 15:21:26,449 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 15:21:26,451 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 15:21:26,453 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 15:21:26,454 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 15:21:26,454 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 15:21:26,454 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 15:21:26,455 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 15:21:26,455 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 15:21:26,455 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 15:21:26,455 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 15:21:26,455 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 15:21:26,456 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 15:21:26,456 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 15:21:26,456 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 15:21:26,461 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 15:21:26,462 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 15:21:26,464 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 15:21:26,464 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 15:21:26,464 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:21:26,464 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 15:21:26,465 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 15:21:26,465 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 15:21:26,465 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 15:21:26,465 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 15:21:26,465 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 15:21:26,466 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 15:21:26,467 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 15:21:26,467 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 15:21:26,467 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 15:21:26,468 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 15:21:26,468 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 15:21:26,468 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 15:21:26,468 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 15:21:26,468 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 15:21:26,469 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 15:21:26,470 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 15:21:26,470 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 15:21:26,471 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:21:26,472 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 15:21:26,472 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 15:21:26,472 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:21:26,472 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 15:21:26,472 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 15:21:26,472 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 15:21:26,473 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:21:26,473 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 15:21:26,473 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 15:21:26,473 - Mapped "{[/generator/wasdatadictionary/save]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 15:21:26,474 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 15:21:26,475 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 15:21:26,476 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 15:21:26,528 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:21:26,528 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:21:26,560 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 15:21:26,601 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 15:21:27,403 - LiveReload server is running on port 35729
2018-07-05 15:21:27,533 - Registering beans for JMX exposure on startup
2018-07-05 15:21:27,535 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 15:21:27,543 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 15:21:27,556 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 15:21:27,584 - Using a shared selector for servlet write/read
2018-07-05 15:21:27,621 - Tomcat started on port(s): 8081 (http)
2018-07-05 15:21:27,632 - Started FqLtdWasBackstageApplication in 6.57 seconds (JVM running for 7.796)
2018-07-05 15:21:36,488 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 15:21:36,489 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 15:21:36,531 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 15:21:36,562 - ===========进入拦截器==============
2018-07-05 15:21:36,602 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 15:21:36,602 - ===========请求时间:2018-07-05 15:21:36==========================
2018-07-05 15:21:36,602 - url=http://localhost:8081/login
2018-07-05 15:21:36,602 - method=GET
2018-07-05 15:21:36,602 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:36,602 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 15:21:36,603 - args:
2018-07-05 15:21:36,607 - =============结束请求时间:2018-07-05 15:21:36,耗时:0s======================
2018-07-05 15:21:36,608 - response=/login
2018-07-05 15:21:36,642 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 15:21:36,716 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 15:21:36,716 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 15:21:36,716 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 15:21:36,716 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 15:21:36,723 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 15:21:36,723 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 15:21:41,866 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 15:21:41,866 - ===========请求时间:2018-07-05 15:21:41==========================
2018-07-05 15:21:41,866 - url=http://localhost:8081/signIn
2018-07-05 15:21:41,866 - method=POST
2018-07-05 15:21:41,866 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:41,867 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 15:21:41,867 - args:userName=admin,password=123456,
2018-07-05 15:21:41,964 - {dataSource-1} inited
2018-07-05 15:21:42,417 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,417 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:21:42, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 15:21:42,518 - ===========进入拦截器==============
2018-07-05 15:21:42,518 - http://localhost:8081/home
2018-07-05 15:21:42,526 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 15:21:42,527 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,527 - url=http://localhost:8081/home
2018-07-05 15:21:42,527 - method=GET
2018-07-05 15:21:42,527 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,527 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 15:21:42,527 - args:
2018-07-05 15:21:42,527 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,527 - response=/home
2018-07-05 15:21:42,527 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:42,602 - ===========进入拦截器==============
2018-07-05 15:21:42,602 - http://localhost:8081/welcome
2018-07-05 15:21:42,607 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 15:21:42,607 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,607 - url=http://localhost:8081/welcome
2018-07-05 15:21:42,607 - method=GET
2018-07-05 15:21:42,607 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,607 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 15:21:42,607 - args:
2018-07-05 15:21:42,607 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,607 - response=/welcome
2018-07-05 15:21:42,607 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:42,641 - ===========进入拦截器==============
2018-07-05 15:21:42,642 - http://localhost:8081/common/top
2018-07-05 15:21:42,644 - ===========进入拦截器==============
2018-07-05 15:21:42,644 - http://localhost:8081/common/footer
2018-07-05 15:21:42,649 - ===========进入拦截器==============
2018-07-05 15:21:42,650 - http://localhost:8081/common/left
2018-07-05 15:21:42,655 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 15:21:42,655 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,655 - url=http://localhost:8081/common/top
2018-07-05 15:21:42,655 - method=GET
2018-07-05 15:21:42,655 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,655 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 15:21:42,655 - args:
2018-07-05 15:21:42,655 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,655 - response=/common/top
2018-07-05 15:21:42,656 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:42,674 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 15:21:42,674 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,674 - url=http://localhost:8081/common/footer
2018-07-05 15:21:42,674 - method=GET
2018-07-05 15:21:42,675 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,675 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 15:21:42,675 - args:
2018-07-05 15:21:42,675 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,675 - response=/common/footer
2018-07-05 15:21:42,675 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:42,678 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 15:21:42,678 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,678 - url=http://localhost:8081/common/left
2018-07-05 15:21:42,678 - method=GET
2018-07-05 15:21:42,678 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,678 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 15:21:42,678 - args:
2018-07-05 15:21:42,678 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,679 - response=/common/left
2018-07-05 15:21:42,679 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:42,722 - ===========进入拦截器==============
2018-07-05 15:21:42,722 - http://localhost:8081/menu/findMenuByRole
2018-07-05 15:21:42,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 15:21:42,737 - ===========请求时间:2018-07-05 15:21:42==========================
2018-07-05 15:21:42,737 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 15:21:42,737 - method=GET
2018-07-05 15:21:42,737 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:42,738 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 15:21:42,738 - args:roleId=1,
2018-07-05 15:21:42,796 - =============结束请求时间:2018-07-05 15:21:42,耗时:0s======================
2018-07-05 15:21:42,797 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 15:21:42,810 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:44,723 - ===========进入拦截器==============
2018-07-05 15:21:44,723 - http://localhost:8081/number-coin.html
2018-07-05 15:21:44,727 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 15:21:44,728 - ===========请求时间:2018-07-05 15:21:44==========================
2018-07-05 15:21:44,728 - url=http://localhost:8081/number-coin.html
2018-07-05 15:21:44,728 - method=GET
2018-07-05 15:21:44,728 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:44,728 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 15:21:44,728 - args:
2018-07-05 15:21:44,728 - =============结束请求时间:2018-07-05 15:21:44,耗时:0s======================
2018-07-05 15:21:44,728 - response=/number-coin
2018-07-05 15:21:44,728 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:44,856 - ===========进入拦截器==============
2018-07-05 15:21:44,856 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:21:44,895 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 15:21:44,895 - ===========请求时间:2018-07-05 15:21:44==========================
2018-07-05 15:21:44,895 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 15:21:44,895 - method=GET
2018-07-05 15:21:44,895 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:44,895 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 15:21:44,895 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 15:21:44,918 - =============结束请求时间:2018-07-05 15:21:44,耗时:0s======================
2018-07-05 15:21:44,918 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 15:21:44,928 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:46,352 - ===========进入拦截器==============
2018-07-05 15:21:46,352 - http://localhost:8081/number-coin-add.html
2018-07-05 15:21:46,362 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 15:21:46,362 - ===========请求时间:2018-07-05 15:21:46==========================
2018-07-05 15:21:46,362 - url=http://localhost:8081/number-coin-add.html
2018-07-05 15:21:46,362 - method=GET
2018-07-05 15:21:46,362 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:46,362 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 15:21:46,362 - args:
2018-07-05 15:21:46,362 - =============结束请求时间:2018-07-05 15:21:46,耗时:0s======================
2018-07-05 15:21:46,362 - response=/number-coin-add
2018-07-05 15:21:46,362 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:54,200 - ===========进入拦截器==============
2018-07-05 15:21:54,200 - http://localhost:8081/user.html
2018-07-05 15:21:54,205 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.user============
2018-07-05 15:21:54,205 - ===========请求时间:2018-07-05 15:21:54==========================
2018-07-05 15:21:54,205 - url=http://localhost:8081/user.html
2018-07-05 15:21:54,205 - method=GET
2018-07-05 15:21:54,205 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:54,205 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.user
2018-07-05 15:21:54,205 - args:
2018-07-05 15:21:54,206 - =============结束请求时间:2018-07-05 15:21:54,耗时:0s======================
2018-07-05 15:21:54,206 - response=/user
2018-07-05 15:21:54,206 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:54,314 - ===========进入拦截器==============
2018-07-05 15:21:54,314 - http://localhost:8081/user/findAllUser
2018-07-05 15:21:54,333 - ===========开始请求com.fq.fqltdwasbackstage.controller.UserController.findAllUser============
2018-07-05 15:21:54,334 - ===========请求时间:2018-07-05 15:21:54==========================
2018-07-05 15:21:54,334 - url=http://localhost:8081/user/findAllUser
2018-07-05 15:21:54,334 - method=GET
2018-07-05 15:21:54,334 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:54,334 - class_method=com.fq.fqltdwasbackstage.controller.UserController.findAllUser
2018-07-05 15:21:54,334 - args:userName=,
2018-07-05 15:21:54,346 - =============结束请求时间:2018-07-05 15:21:54,耗时:0s======================
2018-07-05 15:21:54,346 - response=Result(code=200, msg=成功, data=[User(gid=4, userName=31, password=FF473088FBDCCB239D57EAB3C6D77A40, tel=18888888888, email=31321@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:56:56.0, version=1, createTime=2018-07-04 18:56:56.0, updateTime=2018-07-04 18:56:56.0, status=0), User(gid=2, userName=lyj, password=9C0CD9F9F38A53F48E36A8A2CF540A01, tel=18888888888, email=rweri@qq.com, roleId=4, roleName=管理, loginTime=2018-07-04 18:55:40.0, version=1, createTime=2018-07-04 18:24:38.0, updateTime=2018-07-04 18:24:38.0, status=0), User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 15:21:42.0, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)], page=Pages(first=false, last=false, pageSize=null, pageNumber=null, totalCount=3, totalPage=null), totalCount=3)
2018-07-05 15:21:54,349 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:55,010 - ===========进入拦截器==============
2018-07-05 15:21:55,010 - http://localhost:8081/user-add.html
2018-07-05 15:21:55,015 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.userAdd============
2018-07-05 15:21:55,015 - ===========请求时间:2018-07-05 15:21:55==========================
2018-07-05 15:21:55,015 - url=http://localhost:8081/user-add.html
2018-07-05 15:21:55,015 - method=GET
2018-07-05 15:21:55,015 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:55,015 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.userAdd
2018-07-05 15:21:55,015 - args:
2018-07-05 15:21:55,015 - =============结束请求时间:2018-07-05 15:21:55,耗时:0s======================
2018-07-05 15:21:55,015 - response=/user-add
2018-07-05 15:21:55,015 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:21:55,107 - ===========进入拦截器==============
2018-07-05 15:21:55,107 - http://localhost:8081/role/findAllRole
2018-07-05 15:21:55,117 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 15:21:55,117 - ===========请求时间:2018-07-05 15:21:55==========================
2018-07-05 15:21:55,117 - url=http://localhost:8081/role/findAllRole
2018-07-05 15:21:55,117 - method=GET
2018-07-05 15:21:55,117 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:21:55,117 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 15:21:55,117 - args:
2018-07-05 15:21:55,138 - =============结束请求时间:2018-07-05 15:21:55,耗时:0s======================
2018-07-05 15:21:55,138 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 15:21:55,141 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:22:37,081 - ===========进入拦截器==============
2018-07-05 15:22:37,081 - http://localhost:8081/user-add.html
2018-07-05 15:22:37,086 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.userAdd============
2018-07-05 15:22:37,086 - ===========请求时间:2018-07-05 15:22:37==========================
2018-07-05 15:22:37,086 - url=http://localhost:8081/user-add.html
2018-07-05 15:22:37,086 - method=GET
2018-07-05 15:22:37,086 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:22:37,086 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.userAdd
2018-07-05 15:22:37,086 - args:
2018-07-05 15:22:37,088 - =============结束请求时间:2018-07-05 15:22:37,耗时:0s======================
2018-07-05 15:22:37,089 - response=/user-add
2018-07-05 15:22:37,089 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 15:22:37,178 - ===========进入拦截器==============
2018-07-05 15:22:37,179 - http://localhost:8081/role/findAllRole
2018-07-05 15:22:37,191 - ===========开始请求com.fq.fqltdwasbackstage.controller.RoleController.findAllRole============
2018-07-05 15:22:37,191 - ===========请求时间:2018-07-05 15:22:37==========================
2018-07-05 15:22:37,191 - url=http://localhost:8081/role/findAllRole
2018-07-05 15:22:37,192 - method=GET
2018-07-05 15:22:37,192 - ip=0:0:0:0:0:0:0:1
2018-07-05 15:22:37,192 - class_method=com.fq.fqltdwasbackstage.controller.RoleController.findAllRole
2018-07-05 15:22:37,192 - args:
2018-07-05 15:22:37,200 - =============结束请求时间:2018-07-05 15:22:37,耗时:0s======================
2018-07-05 15:22:37,200 - response=Result(code=200, msg=成功, data=[Role(gid=1, roleName=超级管理员, roleNameEn=admin, version=6, createTime=2018-07-03 19:04:22.0, updateTime=2018-07-04 09:18:09.0, status=0), Role(gid=4, roleName=管理, roleNameEn=manager, version=2, createTime=2018-07-04 18:18:40.0, updateTime=2018-07-04 18:18:40.0, status=0)], page=null, totalCount=null)
2018-07-05 15:22:37,201 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:21,496 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13076 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:01:21,499 - No active profile set, falling back to default profiles: default
2018-07-05 16:01:21,694 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:01:21,825 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75de6229: startup date [Thu Jul 05 16:01:21 CST 2018]; root of context hierarchy
2018-07-05 16:01:23,229 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,230 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,230 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,231 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,231 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,231 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:01:23,231 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:01:23,232 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:01:24,815 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:01:24,850 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:01:24,878 - Starting service [Tomcat]
2018-07-05 16:01:24,879 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:01:25,317 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:01:25,318 - Root WebApplicationContext: initialization completed in 3493 ms
2018-07-05 16:01:25,843 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:01:25,848 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:01:25,848 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:01:25,848 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:01:25,848 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:01:25,848 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:01:27,666 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75de6229: startup date [Thu Jul 05 16:01:21 CST 2018]; root of context hierarchy
2018-07-05 16:01:27,777 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:01:27,778 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:01:27,778 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:01:27,778 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:01:27,778 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:01:27,779 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:01:27,779 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:01:27,779 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:01:27,779 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:01:27,780 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:01:27,780 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:01:27,780 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:01:27,780 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:01:27,780 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:01:27,780 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:01:27,780 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:01:27,780 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:01:27,781 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:01:27,781 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:01:27,781 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:01:27,781 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:01:27,781 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:01:27,786 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:01:27,786 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:01:27,789 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:01:27,790 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:01:27,791 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:01:27,791 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:01:27,791 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:01:27,791 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:01:27,792 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:01:27,792 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:01:27,792 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:01:27,793 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:01:27,794 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:01:27,794 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:01:27,794 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:01:27,795 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:01:27,795 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:01:27,795 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:01:27,795 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:01:27,795 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:01:27,796 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:01:27,797 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:01:27,797 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:01:27,800 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:01:27,800 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:01:27,800 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:01:27,800 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:01:27,801 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:01:27,801 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:01:27,801 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:01:27,802 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:01:27,802 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:01:27,802 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:01:27,802 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:01:27,803 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:01:27,805 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:01:27,806 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:01:27,863 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:01:27,863 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:01:27,904 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:01:27,942 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:01:29,044 - LiveReload server is running on port 35729
2018-07-05 16:01:29,203 - Registering beans for JMX exposure on startup
2018-07-05 16:01:29,204 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:01:29,210 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:01:29,225 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:01:29,259 - Using a shared selector for servlet write/read
2018-07-05 16:01:29,280 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:01:29,290 - Started FqLtdWasBackstageApplication in 8.23 seconds (JVM running for 9.522)
2018-07-05 16:01:34,617 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:01:34,617 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:01:34,663 - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-05 16:01:34,701 - ===========进入拦截器==============
2018-07-05 16:01:34,741 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:01:34,741 - ===========请求时间:2018-07-05 16:01:34==========================
2018-07-05 16:01:34,742 - url=http://localhost:8081/login
2018-07-05 16:01:34,742 - method=GET
2018-07-05 16:01:34,742 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:34,742 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:01:34,742 - args:
2018-07-05 16:01:34,746 - =============结束请求时间:2018-07-05 16:01:34,耗时:0s======================
2018-07-05 16:01:34,746 - response=/login
2018-07-05 16:01:34,782 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:01:34,877 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:01:34,877 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:01:34,877 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:01:34,877 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:01:34,886 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:01:34,886 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:01:39,432 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:01:39,432 - ===========请求时间:2018-07-05 16:01:39==========================
2018-07-05 16:01:39,432 - url=http://localhost:8081/signIn
2018-07-05 16:01:39,432 - method=POST
2018-07-05 16:01:39,432 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:39,432 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:01:39,432 - args:userName=admin,password=123456,
2018-07-05 16:01:39,532 - {dataSource-1} inited
2018-07-05 16:01:40,199 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,199 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:01:40, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:01:40,300 - ===========进入拦截器==============
2018-07-05 16:01:40,300 - http://localhost:8081/home
2018-07-05 16:01:40,312 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:01:40,312 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,313 - url=http://localhost:8081/home
2018-07-05 16:01:40,313 - method=GET
2018-07-05 16:01:40,313 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,313 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:01:40,313 - args:
2018-07-05 16:01:40,313 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,313 - response=/home
2018-07-05 16:01:40,313 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:40,393 - ===========进入拦截器==============
2018-07-05 16:01:40,394 - http://localhost:8081/welcome
2018-07-05 16:01:40,402 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:01:40,402 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,402 - url=http://localhost:8081/welcome
2018-07-05 16:01:40,402 - method=GET
2018-07-05 16:01:40,402 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,402 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:01:40,402 - args:
2018-07-05 16:01:40,402 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,402 - response=/welcome
2018-07-05 16:01:40,402 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:40,430 - ===========进入拦截器==============
2018-07-05 16:01:40,430 - http://localhost:8081/common/top
2018-07-05 16:01:40,430 - ===========进入拦截器==============
2018-07-05 16:01:40,431 - http://localhost:8081/common/footer
2018-07-05 16:01:40,433 - ===========进入拦截器==============
2018-07-05 16:01:40,433 - http://localhost:8081/common/left
2018-07-05 16:01:40,435 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:01:40,436 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,436 - url=http://localhost:8081/common/top
2018-07-05 16:01:40,436 - method=GET
2018-07-05 16:01:40,436 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,436 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:01:40,436 - args:
2018-07-05 16:01:40,437 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,437 - response=/common/top
2018-07-05 16:01:40,437 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:40,482 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:01:40,483 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,483 - url=http://localhost:8081/common/footer
2018-07-05 16:01:40,483 - method=GET
2018-07-05 16:01:40,483 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,483 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:01:40,483 - args:
2018-07-05 16:01:40,483 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,483 - response=/common/footer
2018-07-05 16:01:40,483 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:40,511 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:01:40,511 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,511 - url=http://localhost:8081/common/left
2018-07-05 16:01:40,511 - method=GET
2018-07-05 16:01:40,511 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,511 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:01:40,511 - args:
2018-07-05 16:01:40,511 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,511 - response=/common/left
2018-07-05 16:01:40,512 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:40,539 - ===========进入拦截器==============
2018-07-05 16:01:40,539 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:01:40,546 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:01:40,546 - ===========请求时间:2018-07-05 16:01:40==========================
2018-07-05 16:01:40,546 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:01:40,546 - method=GET
2018-07-05 16:01:40,546 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:40,546 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:01:40,546 - args:roleId=1,
2018-07-05 16:01:40,606 - =============结束请求时间:2018-07-05 16:01:40,耗时:0s======================
2018-07-05 16:01:40,606 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:01:40,618 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:42,191 - ===========进入拦截器==============
2018-07-05 16:01:42,191 - http://localhost:8081/number-coin.html
2018-07-05 16:01:42,196 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:01:42,197 - ===========请求时间:2018-07-05 16:01:42==========================
2018-07-05 16:01:42,197 - url=http://localhost:8081/number-coin.html
2018-07-05 16:01:42,197 - method=GET
2018-07-05 16:01:42,197 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:42,197 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:01:42,197 - args:
2018-07-05 16:01:42,197 - =============结束请求时间:2018-07-05 16:01:42,耗时:0s======================
2018-07-05 16:01:42,197 - response=/number-coin
2018-07-05 16:01:42,197 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:42,335 - ===========进入拦截器==============
2018-07-05 16:01:42,335 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:01:42,358 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:01:42,359 - ===========请求时间:2018-07-05 16:01:42==========================
2018-07-05 16:01:42,359 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:01:42,359 - method=GET
2018-07-05 16:01:42,359 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:42,359 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:01:42,359 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:01:42,393 - =============结束请求时间:2018-07-05 16:01:42,耗时:0s======================
2018-07-05 16:01:42,395 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:01:42,413 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:01:43,974 - ===========进入拦截器==============
2018-07-05 16:01:43,974 - http://localhost:8081/number-coin-add.html
2018-07-05 16:01:44,027 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:01:44,028 - ===========请求时间:2018-07-05 16:01:44==========================
2018-07-05 16:01:44,028 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:01:44,028 - method=GET
2018-07-05 16:01:44,028 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:01:44,028 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:01:44,028 - args:
2018-07-05 16:01:44,028 - =============结束请求时间:2018-07-05 16:01:44,耗时:0s======================
2018-07-05 16:01:44,028 - response=/number-coin-add
2018-07-05 16:01:44,028 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:31,520 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19332 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:05:31,522 - No active profile set, falling back to default profiles: default
2018-07-05 16:05:31,727 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:05:31,882 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@348c0e6b: startup date [Thu Jul 05 16:05:31 CST 2018]; root of context hierarchy
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:05:32,918 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:05:32,919 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:05:33,968 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:05:33,981 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:05:33,998 - Starting service [Tomcat]
2018-07-05 16:05:33,999 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:05:34,162 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:05:34,162 - Root WebApplicationContext: initialization completed in 2280 ms
2018-07-05 16:05:34,443 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:05:34,449 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:05:34,449 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:05:34,449 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:05:34,449 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:05:34,450 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:05:36,135 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@348c0e6b: startup date [Thu Jul 05 16:05:31 CST 2018]; root of context hierarchy
2018-07-05 16:05:36,258 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:05:36,259 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:05:36,259 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:05:36,260 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:05:36,260 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:05:36,260 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:05:36,260 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:05:36,260 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:05:36,260 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:05:36,261 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:05:36,261 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:05:36,261 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:05:36,261 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:05:36,262 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:05:36,262 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:05:36,262 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:05:36,262 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:05:36,262 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:05:36,263 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:05:36,263 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:05:36,263 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:05:36,264 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:05:36,267 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:05:36,268 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:05:36,270 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:05:36,270 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:05:36,271 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:05:36,271 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:05:36,271 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:05:36,271 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:05:36,271 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:05:36,271 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:05:36,271 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:05:36,273 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:05:36,273 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:05:36,274 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:05:36,274 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:05:36,276 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:05:36,276 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:05:36,277 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:05:36,277 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:05:36,277 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:05:36,278 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:05:36,278 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:05:36,279 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:05:36,281 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:05:36,281 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:05:36,282 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:05:36,282 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:05:36,282 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:05:36,282 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:05:36,283 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:05:36,284 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:05:36,284 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:05:36,284 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:05:36,285 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:05:36,285 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:05:36,287 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:05:36,288 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:05:36,361 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:05:36,361 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:05:36,399 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:05:36,453 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:05:37,697 - LiveReload server is running on port 35729
2018-07-05 16:05:38,030 - Registering beans for JMX exposure on startup
2018-07-05 16:05:38,031 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:05:38,042 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:05:38,060 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:05:38,099 - Using a shared selector for servlet write/read
2018-07-05 16:05:38,120 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:05:38,128 - Started FqLtdWasBackstageApplication in 7.535 seconds (JVM running for 9.105)
2018-07-05 16:05:42,816 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:05:42,816 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:05:42,859 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 16:05:42,888 - ===========进入拦截器==============
2018-07-05 16:05:42,924 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:05:42,925 - ===========请求时间:2018-07-05 16:05:42==========================
2018-07-05 16:05:42,925 - url=http://localhost:8081/login
2018-07-05 16:05:42,926 - method=GET
2018-07-05 16:05:42,926 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:42,926 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:05:42,926 - args:
2018-07-05 16:05:42,930 - =============结束请求时间:2018-07-05 16:05:42,耗时:0s======================
2018-07-05 16:05:42,930 - response=/login
2018-07-05 16:05:42,963 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:05:43,039 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:05:43,039 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:05:43,039 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:05:43,039 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:05:43,045 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:05:43,045 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:05:47,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:05:47,736 - ===========请求时间:2018-07-05 16:05:47==========================
2018-07-05 16:05:47,736 - url=http://localhost:8081/signIn
2018-07-05 16:05:47,736 - method=POST
2018-07-05 16:05:47,736 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:47,736 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:05:47,736 - args:userName=admin,password=123456,
2018-07-05 16:05:47,834 - {dataSource-1} inited
2018-07-05 16:05:48,286 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,286 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:05:48, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:05:48,400 - ===========进入拦截器==============
2018-07-05 16:05:48,401 - http://localhost:8081/home
2018-07-05 16:05:48,411 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:05:48,411 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,411 - url=http://localhost:8081/home
2018-07-05 16:05:48,411 - method=GET
2018-07-05 16:05:48,411 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,411 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:05:48,411 - args:
2018-07-05 16:05:48,411 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,411 - response=/home
2018-07-05 16:05:48,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:48,524 - ===========进入拦截器==============
2018-07-05 16:05:48,525 - http://localhost:8081/welcome
2018-07-05 16:05:48,531 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:05:48,531 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,531 - url=http://localhost:8081/welcome
2018-07-05 16:05:48,531 - method=GET
2018-07-05 16:05:48,531 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,531 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:05:48,531 - args:
2018-07-05 16:05:48,532 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,532 - response=/welcome
2018-07-05 16:05:48,532 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:48,584 - ===========进入拦截器==============
2018-07-05 16:05:48,585 - http://localhost:8081/common/top
2018-07-05 16:05:48,586 - ===========进入拦截器==============
2018-07-05 16:05:48,586 - http://localhost:8081/common/left
2018-07-05 16:05:48,586 - ===========进入拦截器==============
2018-07-05 16:05:48,588 - http://localhost:8081/common/footer
2018-07-05 16:05:48,589 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:05:48,589 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,589 - url=http://localhost:8081/common/top
2018-07-05 16:05:48,590 - method=GET
2018-07-05 16:05:48,590 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,590 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:05:48,590 - args:
2018-07-05 16:05:48,590 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,590 - response=/common/top
2018-07-05 16:05:48,590 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:48,597 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:05:48,597 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,597 - url=http://localhost:8081/common/left
2018-07-05 16:05:48,597 - method=GET
2018-07-05 16:05:48,597 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,597 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:05:48,597 - args:
2018-07-05 16:05:48,598 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,598 - response=/common/left
2018-07-05 16:05:48,598 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:48,605 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:05:48,606 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,606 - url=http://localhost:8081/common/footer
2018-07-05 16:05:48,606 - method=GET
2018-07-05 16:05:48,606 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,606 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:05:48,606 - args:
2018-07-05 16:05:48,607 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,607 - response=/common/footer
2018-07-05 16:05:48,607 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:48,646 - ===========进入拦截器==============
2018-07-05 16:05:48,646 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:05:48,652 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:05:48,652 - ===========请求时间:2018-07-05 16:05:48==========================
2018-07-05 16:05:48,652 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:05:48,652 - method=GET
2018-07-05 16:05:48,652 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:48,652 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:05:48,652 - args:roleId=1,
2018-07-05 16:05:48,678 - =============结束请求时间:2018-07-05 16:05:48,耗时:0s======================
2018-07-05 16:05:48,678 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:05:48,688 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:50,278 - ===========进入拦截器==============
2018-07-05 16:05:50,278 - http://localhost:8081/number-coin.html
2018-07-05 16:05:50,283 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:05:50,283 - ===========请求时间:2018-07-05 16:05:50==========================
2018-07-05 16:05:50,283 - url=http://localhost:8081/number-coin.html
2018-07-05 16:05:50,283 - method=GET
2018-07-05 16:05:50,283 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:50,283 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:05:50,283 - args:
2018-07-05 16:05:50,283 - =============结束请求时间:2018-07-05 16:05:50,耗时:0s======================
2018-07-05 16:05:50,283 - response=/number-coin
2018-07-05 16:05:50,283 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:50,469 - ===========进入拦截器==============
2018-07-05 16:05:50,470 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:05:50,493 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:05:50,493 - ===========请求时间:2018-07-05 16:05:50==========================
2018-07-05 16:05:50,493 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:05:50,493 - method=GET
2018-07-05 16:05:50,493 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:50,493 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:05:50,493 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:05:50,521 - =============结束请求时间:2018-07-05 16:05:50,耗时:0s======================
2018-07-05 16:05:50,522 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:05:50,531 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:05:51,238 - ===========进入拦截器==============
2018-07-05 16:05:51,238 - http://localhost:8081/number-coin-add.html
2018-07-05 16:05:51,244 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:05:51,244 - ===========请求时间:2018-07-05 16:05:51==========================
2018-07-05 16:05:51,244 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:05:51,244 - method=GET
2018-07-05 16:05:51,244 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:05:51,244 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:05:51,244 - args:
2018-07-05 16:05:51,244 - =============结束请求时间:2018-07-05 16:05:51,耗时:0s======================
2018-07-05 16:05:51,244 - response=/number-coin-add
2018-07-05 16:05:51,244 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:33,318 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15100 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:09:33,323 - No active profile set, falling back to default profiles: default
2018-07-05 16:09:33,576 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:09:33,673 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Thu Jul 05 16:09:33 CST 2018]; root of context hierarchy
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:09:34,498 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:09:34,499 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:09:35,733 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:09:35,745 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:09:35,754 - Starting service [Tomcat]
2018-07-05 16:09:35,754 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:09:35,863 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:09:35,863 - Root WebApplicationContext: initialization completed in 2190 ms
2018-07-05 16:09:36,109 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:09:36,113 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:09:36,113 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:09:36,113 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:09:36,113 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:09:36,113 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:09:37,692 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Thu Jul 05 16:09:33 CST 2018]; root of context hierarchy
2018-07-05 16:09:37,795 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:09:37,796 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:09:37,796 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:09:37,796 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:09:37,796 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:09:37,796 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:09:37,797 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:09:37,797 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:09:37,797 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:09:37,797 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:09:37,798 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:09:37,798 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:09:37,798 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:09:37,798 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:09:37,798 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:09:37,799 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:09:37,799 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:09:37,799 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:09:37,799 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:09:37,799 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:09:37,799 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:09:37,799 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:09:37,802 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:09:37,803 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:09:37,808 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:09:37,809 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:09:37,809 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:09:37,809 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:09:37,810 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:09:37,810 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:09:37,810 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:09:37,810 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:09:37,811 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:09:37,812 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:09:37,812 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:09:37,813 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:09:37,813 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:09:37,814 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:09:37,815 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:09:37,815 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:09:37,815 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:09:37,815 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:09:37,815 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:09:37,816 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:09:37,816 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:09:37,817 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:09:37,817 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:09:37,818 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:09:37,818 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:09:37,818 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:09:37,818 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:09:37,818 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:09:37,819 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:09:37,819 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:09:37,819 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:09:37,819 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:09:37,819 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:09:37,822 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:09:37,822 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:09:37,877 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:09:37,878 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:09:37,905 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:09:37,942 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:09:38,731 - LiveReload server is running on port 35729
2018-07-05 16:09:38,874 - Registering beans for JMX exposure on startup
2018-07-05 16:09:38,876 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:09:38,883 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:09:38,897 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:09:38,927 - Using a shared selector for servlet write/read
2018-07-05 16:09:38,953 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:09:38,965 - Started FqLtdWasBackstageApplication in 6.663 seconds (JVM running for 8.163)
2018-07-05 16:09:42,256 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:09:42,257 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:09:42,301 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-05 16:09:42,352 - ===========进入拦截器==============
2018-07-05 16:09:42,400 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:09:42,400 - ===========请求时间:2018-07-05 16:09:42==========================
2018-07-05 16:09:42,400 - url=http://localhost:8081/login
2018-07-05 16:09:42,401 - method=GET
2018-07-05 16:09:42,401 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:42,401 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:09:42,401 - args:
2018-07-05 16:09:42,406 - =============结束请求时间:2018-07-05 16:09:42,耗时:0s======================
2018-07-05 16:09:42,406 - response=/login
2018-07-05 16:09:42,447 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:09:42,532 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:09:42,533 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:09:42,533 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:09:42,533 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:09:42,539 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:09:42,539 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:09:47,226 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:09:47,226 - ===========请求时间:2018-07-05 16:09:47==========================
2018-07-05 16:09:47,226 - url=http://localhost:8081/signIn
2018-07-05 16:09:47,226 - method=POST
2018-07-05 16:09:47,226 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:47,226 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:09:47,227 - args:userName=admin,password=123456,
2018-07-05 16:09:47,336 - {dataSource-1} inited
2018-07-05 16:09:47,840 - =============结束请求时间:2018-07-05 16:09:47,耗时:0s======================
2018-07-05 16:09:47,840 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:09:47, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:09:47,943 - ===========进入拦截器==============
2018-07-05 16:09:47,943 - http://localhost:8081/home
2018-07-05 16:09:48,021 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:09:48,022 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,022 - url=http://localhost:8081/home
2018-07-05 16:09:48,022 - method=GET
2018-07-05 16:09:48,022 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,022 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:09:48,023 - args:
2018-07-05 16:09:48,023 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,024 - response=/home
2018-07-05 16:09:48,024 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:48,169 - ===========进入拦截器==============
2018-07-05 16:09:48,169 - http://localhost:8081/welcome
2018-07-05 16:09:48,173 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:09:48,173 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,173 - url=http://localhost:8081/welcome
2018-07-05 16:09:48,173 - method=GET
2018-07-05 16:09:48,173 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,173 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:09:48,173 - args:
2018-07-05 16:09:48,173 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,173 - response=/welcome
2018-07-05 16:09:48,174 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:48,237 - ===========进入拦截器==============
2018-07-05 16:09:48,237 - http://localhost:8081/common/top
2018-07-05 16:09:48,240 - ===========进入拦截器==============
2018-07-05 16:09:48,240 - http://localhost:8081/common/left
2018-07-05 16:09:48,242 - ===========进入拦截器==============
2018-07-05 16:09:48,242 - http://localhost:8081/common/footer
2018-07-05 16:09:48,243 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:09:48,244 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,244 - url=http://localhost:8081/common/top
2018-07-05 16:09:48,244 - method=GET
2018-07-05 16:09:48,244 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,244 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:09:48,244 - args:
2018-07-05 16:09:48,244 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,244 - response=/common/top
2018-07-05 16:09:48,244 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:48,261 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:09:48,261 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,261 - url=http://localhost:8081/common/left
2018-07-05 16:09:48,261 - method=GET
2018-07-05 16:09:48,261 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,261 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:09:48,261 - args:
2018-07-05 16:09:48,261 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,261 - response=/common/left
2018-07-05 16:09:48,262 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:48,265 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:09:48,265 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,265 - url=http://localhost:8081/common/footer
2018-07-05 16:09:48,265 - method=GET
2018-07-05 16:09:48,265 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,265 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:09:48,265 - args:
2018-07-05 16:09:48,266 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,266 - response=/common/footer
2018-07-05 16:09:48,266 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:48,309 - ===========进入拦截器==============
2018-07-05 16:09:48,309 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:09:48,320 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:09:48,321 - ===========请求时间:2018-07-05 16:09:48==========================
2018-07-05 16:09:48,322 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:09:48,322 - method=GET
2018-07-05 16:09:48,322 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:48,322 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:09:48,322 - args:roleId=1,
2018-07-05 16:09:48,355 - =============结束请求时间:2018-07-05 16:09:48,耗时:0s======================
2018-07-05 16:09:48,355 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:09:48,369 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:49,990 - ===========进入拦截器==============
2018-07-05 16:09:49,990 - http://localhost:8081/number-coin.html
2018-07-05 16:09:49,995 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:09:49,995 - ===========请求时间:2018-07-05 16:09:49==========================
2018-07-05 16:09:49,995 - url=http://localhost:8081/number-coin.html
2018-07-05 16:09:49,995 - method=GET
2018-07-05 16:09:49,995 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:49,995 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:09:49,995 - args:
2018-07-05 16:09:49,995 - =============结束请求时间:2018-07-05 16:09:49,耗时:0s======================
2018-07-05 16:09:49,995 - response=/number-coin
2018-07-05 16:09:49,995 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:50,214 - ===========进入拦截器==============
2018-07-05 16:09:50,215 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:09:50,253 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:09:50,253 - ===========请求时间:2018-07-05 16:09:50==========================
2018-07-05 16:09:50,253 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:09:50,253 - method=GET
2018-07-05 16:09:50,253 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:50,253 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:09:50,253 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:09:50,268 - =============结束请求时间:2018-07-05 16:09:50,耗时:0s======================
2018-07-05 16:09:50,269 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:09:50,277 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:09:51,750 - ===========进入拦截器==============
2018-07-05 16:09:51,750 - http://localhost:8081/number-coin-add.html
2018-07-05 16:09:51,756 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:09:51,756 - ===========请求时间:2018-07-05 16:09:51==========================
2018-07-05 16:09:51,756 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:09:51,756 - method=GET
2018-07-05 16:09:51,756 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:09:51,756 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:09:51,756 - args:
2018-07-05 16:09:51,756 - =============结束请求时间:2018-07-05 16:09:51,耗时:0s======================
2018-07-05 16:09:51,756 - response=/number-coin-add
2018-07-05 16:09:51,757 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:41,363 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5656 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:11:41,366 - No active profile set, falling back to default profiles: default
2018-07-05 16:11:41,549 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:11:41,618 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@341678d5: startup date [Thu Jul 05 16:11:41 CST 2018]; root of context hierarchy
2018-07-05 16:11:42,410 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:11:42,411 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:11:42,411 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:11:43,398 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:11:43,410 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:11:43,419 - Starting service [Tomcat]
2018-07-05 16:11:43,419 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:11:43,521 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:11:43,521 - Root WebApplicationContext: initialization completed in 1903 ms
2018-07-05 16:11:43,754 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:11:43,758 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:11:43,758 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:11:43,758 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:11:43,758 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:11:43,758 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:11:45,274 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@341678d5: startup date [Thu Jul 05 16:11:41 CST 2018]; root of context hierarchy
2018-07-05 16:11:45,379 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:11:45,381 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:11:45,381 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:11:45,381 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:11:45,381 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:11:45,381 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:11:45,382 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:11:45,382 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:11:45,382 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:11:45,382 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:11:45,382 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:11:45,382 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:11:45,382 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:11:45,383 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:11:45,383 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:11:45,383 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:11:45,383 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:11:45,383 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:11:45,383 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:11:45,383 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:11:45,383 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:11:45,383 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:11:45,388 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:11:45,388 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:11:45,390 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:11:45,390 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:11:45,390 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:11:45,390 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:11:45,391 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:11:45,391 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:11:45,391 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:11:45,391 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:11:45,391 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:11:45,392 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:11:45,392 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:11:45,392 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:11:45,392 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:11:45,393 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:11:45,394 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:11:45,394 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:11:45,394 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:11:45,394 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:11:45,394 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:11:45,395 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:11:45,395 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:11:45,396 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:11:45,397 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:11:45,397 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:11:45,397 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:11:45,397 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:11:45,397 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:11:45,397 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:11:45,398 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:11:45,398 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:11:45,398 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:11:45,398 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:11:45,398 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:11:45,400 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:11:45,401 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:11:45,453 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:11:45,454 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:11:45,478 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:11:45,510 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:11:46,265 - LiveReload server is running on port 35729
2018-07-05 16:11:46,396 - Registering beans for JMX exposure on startup
2018-07-05 16:11:46,398 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:11:46,405 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:11:46,417 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:11:46,449 - Using a shared selector for servlet write/read
2018-07-05 16:11:46,466 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:11:46,475 - Started FqLtdWasBackstageApplication in 5.935 seconds (JVM running for 7.131)
2018-07-05 16:11:48,998 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:11:48,998 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:11:49,047 - FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2018-07-05 16:11:49,080 - ===========进入拦截器==============
2018-07-05 16:11:49,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:11:49,121 - ===========请求时间:2018-07-05 16:11:49==========================
2018-07-05 16:11:49,121 - url=http://localhost:8081/login
2018-07-05 16:11:49,121 - method=GET
2018-07-05 16:11:49,121 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:49,121 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:11:49,122 - args:
2018-07-05 16:11:49,127 - =============结束请求时间:2018-07-05 16:11:49,耗时:0s======================
2018-07-05 16:11:49,127 - response=/login
2018-07-05 16:11:49,163 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:11:49,253 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:11:49,253 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:11:49,253 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:11:49,253 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:11:49,261 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:11:49,261 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:11:53,435 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:11:53,435 - ===========请求时间:2018-07-05 16:11:53==========================
2018-07-05 16:11:53,435 - url=http://localhost:8081/signIn
2018-07-05 16:11:53,435 - method=POST
2018-07-05 16:11:53,435 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:53,435 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:11:53,435 - args:userName=admin,password=123456,
2018-07-05 16:11:53,536 - {dataSource-1} inited
2018-07-05 16:11:53,986 - =============结束请求时间:2018-07-05 16:11:53,耗时:0s======================
2018-07-05 16:11:53,987 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:11:53, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:11:54,095 - ===========进入拦截器==============
2018-07-05 16:11:54,096 - http://localhost:8081/home
2018-07-05 16:11:54,102 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:11:54,102 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,102 - url=http://localhost:8081/home
2018-07-05 16:11:54,102 - method=GET
2018-07-05 16:11:54,102 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,102 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:11:54,102 - args:
2018-07-05 16:11:54,102 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,103 - response=/home
2018-07-05 16:11:54,103 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:54,235 - ===========进入拦截器==============
2018-07-05 16:11:54,235 - http://localhost:8081/welcome
2018-07-05 16:11:54,240 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:11:54,240 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,240 - url=http://localhost:8081/welcome
2018-07-05 16:11:54,240 - method=GET
2018-07-05 16:11:54,240 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,240 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:11:54,240 - args:
2018-07-05 16:11:54,240 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,240 - response=/welcome
2018-07-05 16:11:54,241 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:54,317 - ===========进入拦截器==============
2018-07-05 16:11:54,318 - http://localhost:8081/common/top
2018-07-05 16:11:54,322 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:11:54,322 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,322 - url=http://localhost:8081/common/top
2018-07-05 16:11:54,322 - method=GET
2018-07-05 16:11:54,322 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,322 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:11:54,322 - args:
2018-07-05 16:11:54,322 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,322 - response=/common/top
2018-07-05 16:11:54,322 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:54,323 - ===========进入拦截器==============
2018-07-05 16:11:54,323 - http://localhost:8081/common/left
2018-07-05 16:11:54,330 - ===========进入拦截器==============
2018-07-05 16:11:54,330 - http://localhost:8081/common/footer
2018-07-05 16:11:54,338 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:11:54,339 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,339 - url=http://localhost:8081/common/left
2018-07-05 16:11:54,339 - method=GET
2018-07-05 16:11:54,339 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,339 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:11:54,339 - args:
2018-07-05 16:11:54,339 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,339 - response=/common/left
2018-07-05 16:11:54,339 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:54,342 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:11:54,342 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,342 - url=http://localhost:8081/common/footer
2018-07-05 16:11:54,342 - method=GET
2018-07-05 16:11:54,342 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,342 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:11:54,342 - args:
2018-07-05 16:11:54,342 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,342 - response=/common/footer
2018-07-05 16:11:54,342 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:54,407 - ===========进入拦截器==============
2018-07-05 16:11:54,407 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:11:54,418 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:11:54,418 - ===========请求时间:2018-07-05 16:11:54==========================
2018-07-05 16:11:54,418 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:11:54,418 - method=GET
2018-07-05 16:11:54,418 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:54,418 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:11:54,418 - args:roleId=1,
2018-07-05 16:11:54,453 - =============结束请求时间:2018-07-05 16:11:54,耗时:0s======================
2018-07-05 16:11:54,454 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:11:54,468 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:55,949 - ===========进入拦截器==============
2018-07-05 16:11:55,949 - http://localhost:8081/number-coin.html
2018-07-05 16:11:55,959 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:11:55,959 - ===========请求时间:2018-07-05 16:11:55==========================
2018-07-05 16:11:55,959 - url=http://localhost:8081/number-coin.html
2018-07-05 16:11:55,959 - method=GET
2018-07-05 16:11:55,959 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:55,959 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:11:55,959 - args:
2018-07-05 16:11:55,959 - =============结束请求时间:2018-07-05 16:11:55,耗时:0s======================
2018-07-05 16:11:55,959 - response=/number-coin
2018-07-05 16:11:55,960 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:56,135 - ===========进入拦截器==============
2018-07-05 16:11:56,135 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:11:56,156 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:11:56,156 - ===========请求时间:2018-07-05 16:11:56==========================
2018-07-05 16:11:56,156 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:11:56,156 - method=GET
2018-07-05 16:11:56,156 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:56,156 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:11:56,156 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:11:56,171 - =============结束请求时间:2018-07-05 16:11:56,耗时:0s======================
2018-07-05 16:11:56,172 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:11:56,182 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:11:56,957 - ===========进入拦截器==============
2018-07-05 16:11:56,957 - http://localhost:8081/number-coin-add.html
2018-07-05 16:11:56,965 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:11:56,965 - ===========请求时间:2018-07-05 16:11:56==========================
2018-07-05 16:11:56,965 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:11:56,965 - method=GET
2018-07-05 16:11:56,965 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:11:56,966 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:11:56,966 - args:
2018-07-05 16:11:56,966 - =============结束请求时间:2018-07-05 16:11:56,耗时:0s======================
2018-07-05 16:11:56,966 - response=/number-coin-add
2018-07-05 16:11:56,966 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:19,862 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15904 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:14:19,904 - No active profile set, falling back to default profiles: default
2018-07-05 16:14:20,246 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ddc1ee9: startup date [Thu Jul 05 16:14:20 CST 2018]; root of context hierarchy
2018-07-05 16:14:20,279 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:14:21,610 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:14:21,610 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:14:23,700 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:14:23,715 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:14:23,724 - Starting service [Tomcat]
2018-07-05 16:14:23,724 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:14:23,843 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:14:23,843 - Root WebApplicationContext: initialization completed in 3597 ms
2018-07-05 16:14:24,066 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:14:24,071 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:14:24,072 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:14:24,072 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:14:24,072 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:14:24,072 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:14:26,499 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7ddc1ee9: startup date [Thu Jul 05 16:14:20 CST 2018]; root of context hierarchy
2018-07-05 16:14:26,611 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:14:26,612 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:14:26,612 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:14:26,612 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:14:26,612 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:14:26,613 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:14:26,613 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:14:26,613 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:14:26,613 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:14:26,613 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:14:26,614 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:14:26,614 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:14:26,614 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:14:26,614 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:14:26,614 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:14:26,614 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:14:26,615 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:14:26,615 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:14:26,615 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:14:26,615 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:14:26,615 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:14:26,615 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:14:26,619 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:14:26,620 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:14:26,623 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:14:26,623 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:14:26,623 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:14:26,623 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:14:26,623 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:14:26,624 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:14:26,624 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:14:26,624 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:14:26,624 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:14:26,625 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:14:26,625 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:14:26,625 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:14:26,625 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:14:26,626 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:14:26,627 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:14:26,627 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:14:26,627 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:14:26,627 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:14:26,627 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:14:26,628 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:14:26,628 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:14:26,630 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:14:26,631 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:14:26,631 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:14:26,631 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:14:26,631 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:14:26,631 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:14:26,631 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:14:26,632 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:14:26,632 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:14:26,632 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:14:26,632 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:14:26,632 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:14:26,634 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:14:26,634 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:14:26,685 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:14:26,685 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:14:26,710 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:14:26,748 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:14:27,518 - LiveReload server is running on port 35729
2018-07-05 16:14:27,655 - Registering beans for JMX exposure on startup
2018-07-05 16:14:27,657 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:14:27,663 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:14:27,676 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:14:27,708 - Using a shared selector for servlet write/read
2018-07-05 16:14:27,730 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:14:27,740 - Started FqLtdWasBackstageApplication in 9.345 seconds (JVM running for 10.783)
2018-07-05 16:14:30,879 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:14:30,879 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:14:30,923 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-05 16:14:30,959 - ===========进入拦截器==============
2018-07-05 16:14:31,007 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:14:31,007 - ===========请求时间:2018-07-05 16:14:31==========================
2018-07-05 16:14:31,008 - url=http://localhost:8081/login
2018-07-05 16:14:31,008 - method=GET
2018-07-05 16:14:31,008 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:31,008 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:14:31,008 - args:
2018-07-05 16:14:31,013 - =============结束请求时间:2018-07-05 16:14:31,耗时:0s======================
2018-07-05 16:14:31,014 - response=/login
2018-07-05 16:14:31,051 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:14:31,138 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:14:31,138 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:14:31,138 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:14:31,138 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:14:31,143 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:14:31,143 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:14:35,314 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:14:35,315 - ===========请求时间:2018-07-05 16:14:35==========================
2018-07-05 16:14:35,315 - url=http://localhost:8081/signIn
2018-07-05 16:14:35,315 - method=POST
2018-07-05 16:14:35,315 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:35,315 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:14:35,315 - args:userName=admin,password=123456,
2018-07-05 16:14:35,416 - {dataSource-1} inited
2018-07-05 16:14:35,885 - =============结束请求时间:2018-07-05 16:14:35,耗时:0s======================
2018-07-05 16:14:35,886 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:14:35, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:14:35,987 - ===========进入拦截器==============
2018-07-05 16:14:35,987 - http://localhost:8081/home
2018-07-05 16:14:35,992 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:14:35,992 - ===========请求时间:2018-07-05 16:14:35==========================
2018-07-05 16:14:35,992 - url=http://localhost:8081/home
2018-07-05 16:14:35,992 - method=GET
2018-07-05 16:14:35,992 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:35,992 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:14:35,992 - args:
2018-07-05 16:14:35,992 - =============结束请求时间:2018-07-05 16:14:35,耗时:0s======================
2018-07-05 16:14:35,992 - response=/home
2018-07-05 16:14:35,992 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:36,096 - ===========进入拦截器==============
2018-07-05 16:14:36,097 - http://localhost:8081/welcome
2018-07-05 16:14:36,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:14:36,104 - ===========请求时间:2018-07-05 16:14:36==========================
2018-07-05 16:14:36,104 - url=http://localhost:8081/welcome
2018-07-05 16:14:36,104 - method=GET
2018-07-05 16:14:36,104 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:36,104 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:14:36,104 - args:
2018-07-05 16:14:36,104 - =============结束请求时间:2018-07-05 16:14:36,耗时:0s======================
2018-07-05 16:14:36,104 - response=/welcome
2018-07-05 16:14:36,104 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:36,162 - ===========进入拦截器==============
2018-07-05 16:14:36,163 - http://localhost:8081/common/top
2018-07-05 16:14:36,163 - ===========进入拦截器==============
2018-07-05 16:14:36,163 - http://localhost:8081/common/left
2018-07-05 16:14:36,167 - ===========进入拦截器==============
2018-07-05 16:14:36,167 - http://localhost:8081/common/footer
2018-07-05 16:14:36,168 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:14:36,168 - ===========请求时间:2018-07-05 16:14:36==========================
2018-07-05 16:14:36,168 - url=http://localhost:8081/common/top
2018-07-05 16:14:36,168 - method=GET
2018-07-05 16:14:36,168 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:36,168 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:14:36,168 - args:
2018-07-05 16:14:36,168 - =============结束请求时间:2018-07-05 16:14:36,耗时:0s======================
2018-07-05 16:14:36,169 - response=/common/top
2018-07-05 16:14:36,169 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:36,179 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:14:36,179 - ===========请求时间:2018-07-05 16:14:36==========================
2018-07-05 16:14:36,179 - url=http://localhost:8081/common/footer
2018-07-05 16:14:36,179 - method=GET
2018-07-05 16:14:36,180 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:36,180 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:14:36,180 - args:
2018-07-05 16:14:36,180 - =============结束请求时间:2018-07-05 16:14:36,耗时:0s======================
2018-07-05 16:14:36,180 - response=/common/footer
2018-07-05 16:14:36,180 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:36,189 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:14:36,189 - ===========请求时间:2018-07-05 16:14:36==========================
2018-07-05 16:14:36,189 - url=http://localhost:8081/common/left
2018-07-05 16:14:36,189 - method=GET
2018-07-05 16:14:36,189 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:36,189 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:14:36,189 - args:
2018-07-05 16:14:36,190 - =============结束请求时间:2018-07-05 16:14:36,耗时:0s======================
2018-07-05 16:14:36,190 - response=/common/left
2018-07-05 16:14:36,190 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:36,236 - ===========进入拦截器==============
2018-07-05 16:14:36,237 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:14:36,246 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:14:36,246 - ===========请求时间:2018-07-05 16:14:36==========================
2018-07-05 16:14:36,246 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:14:36,246 - method=GET
2018-07-05 16:14:36,246 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:36,246 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:14:36,246 - args:roleId=1,
2018-07-05 16:14:36,279 - =============结束请求时间:2018-07-05 16:14:36,耗时:0s======================
2018-07-05 16:14:36,279 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:14:36,290 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:37,444 - ===========进入拦截器==============
2018-07-05 16:14:37,444 - http://localhost:8081/number-coin.html
2018-07-05 16:14:37,448 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:14:37,448 - ===========请求时间:2018-07-05 16:14:37==========================
2018-07-05 16:14:37,449 - url=http://localhost:8081/number-coin.html
2018-07-05 16:14:37,449 - method=GET
2018-07-05 16:14:37,449 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:37,449 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:14:37,449 - args:
2018-07-05 16:14:37,449 - =============结束请求时间:2018-07-05 16:14:37,耗时:0s======================
2018-07-05 16:14:37,449 - response=/number-coin
2018-07-05 16:14:37,449 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:37,641 - ===========进入拦截器==============
2018-07-05 16:14:37,641 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:14:37,675 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:14:37,676 - ===========请求时间:2018-07-05 16:14:37==========================
2018-07-05 16:14:37,676 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:14:37,676 - method=GET
2018-07-05 16:14:37,676 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:37,676 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:14:37,676 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:14:37,700 - =============结束请求时间:2018-07-05 16:14:37,耗时:0s======================
2018-07-05 16:14:37,704 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:14:37,719 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:14:38,942 - ===========进入拦截器==============
2018-07-05 16:14:38,942 - http://localhost:8081/number-coin-add.html
2018-07-05 16:14:38,951 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:14:38,951 - ===========请求时间:2018-07-05 16:14:38==========================
2018-07-05 16:14:38,951 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:14:38,951 - method=GET
2018-07-05 16:14:38,951 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:14:38,951 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:14:38,951 - args:
2018-07-05 16:14:38,951 - =============结束请求时间:2018-07-05 16:14:38,耗时:0s======================
2018-07-05 16:14:38,951 - response=/number-coin-add
2018-07-05 16:14:38,952 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:16:55,173 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18992 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:16:55,177 - No active profile set, falling back to default profiles: default
2018-07-05 16:16:55,367 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:16:55,460 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@70f4ed8f: startup date [Thu Jul 05 16:16:55 CST 2018]; root of context hierarchy
2018-07-05 16:16:56,305 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,305 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,305 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,306 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,306 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,306 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:16:56,306 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:16:56,306 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:16:57,506 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:16:57,517 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:16:57,527 - Starting service [Tomcat]
2018-07-05 16:16:57,527 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:16:57,632 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:16:57,632 - Root WebApplicationContext: initialization completed in 2172 ms
2018-07-05 16:16:57,848 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:16:57,851 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:16:57,852 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:16:57,852 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:16:57,852 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:16:57,852 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:16:59,434 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@70f4ed8f: startup date [Thu Jul 05 16:16:55 CST 2018]; root of context hierarchy
2018-07-05 16:16:59,533 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:16:59,534 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:16:59,534 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:16:59,534 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:16:59,534 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:16:59,535 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:16:59,535 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:16:59,535 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:16:59,535 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:16:59,535 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:16:59,535 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:16:59,535 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:16:59,535 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:16:59,536 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:16:59,536 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:16:59,536 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:16:59,536 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:16:59,536 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:16:59,536 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:16:59,536 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:16:59,536 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:16:59,536 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:16:59,541 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:16:59,541 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:16:59,542 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:16:59,543 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:16:59,543 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:16:59,543 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:16:59,543 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:16:59,543 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:16:59,543 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:16:59,543 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:16:59,543 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:16:59,544 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:16:59,545 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:16:59,545 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:16:59,545 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:16:59,547 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:16:59,547 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:16:59,547 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:16:59,547 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:16:59,547 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:16:59,548 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:16:59,548 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:16:59,548 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:16:59,550 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:16:59,550 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:16:59,550 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:16:59,550 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:16:59,550 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:16:59,550 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:16:59,550 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:16:59,551 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:16:59,551 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:16:59,551 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:16:59,551 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:16:59,551 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:16:59,553 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:16:59,553 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:16:59,604 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:16:59,604 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:16:59,632 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:16:59,682 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:17:00,447 - LiveReload server is running on port 35729
2018-07-05 16:17:00,579 - Registering beans for JMX exposure on startup
2018-07-05 16:17:00,581 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:17:00,588 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:17:00,601 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:17:00,635 - Using a shared selector for servlet write/read
2018-07-05 16:17:00,657 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:17:00,665 - Started FqLtdWasBackstageApplication in 6.226 seconds (JVM running for 7.531)
2018-07-05 16:17:03,459 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:17:03,459 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:17:03,501 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 16:17:03,532 - ===========进入拦截器==============
2018-07-05 16:17:03,572 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:17:03,572 - ===========请求时间:2018-07-05 16:17:03==========================
2018-07-05 16:17:03,573 - url=http://localhost:8081/login
2018-07-05 16:17:03,573 - method=GET
2018-07-05 16:17:03,573 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:03,573 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:17:03,573 - args:
2018-07-05 16:17:03,577 - =============结束请求时间:2018-07-05 16:17:03,耗时:0s======================
2018-07-05 16:17:03,577 - response=/login
2018-07-05 16:17:03,614 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:17:03,690 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:17:03,690 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:17:03,690 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:17:03,690 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:17:03,696 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:17:03,696 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:17:07,900 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:17:07,900 - ===========请求时间:2018-07-05 16:17:07==========================
2018-07-05 16:17:07,900 - url=http://localhost:8081/signIn
2018-07-05 16:17:07,900 - method=POST
2018-07-05 16:17:07,900 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:07,900 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:17:07,900 - args:userName=admin,password=123456,
2018-07-05 16:17:07,992 - {dataSource-1} inited
2018-07-05 16:17:08,495 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,495 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:17:08, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:17:08,595 - ===========进入拦截器==============
2018-07-05 16:17:08,595 - http://localhost:8081/home
2018-07-05 16:17:08,601 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:17:08,601 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,601 - url=http://localhost:8081/home
2018-07-05 16:17:08,601 - method=GET
2018-07-05 16:17:08,601 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,601 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:17:08,602 - args:
2018-07-05 16:17:08,602 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,602 - response=/home
2018-07-05 16:17:08,602 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:08,708 - ===========进入拦截器==============
2018-07-05 16:17:08,708 - http://localhost:8081/welcome
2018-07-05 16:17:08,717 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:17:08,717 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,717 - url=http://localhost:8081/welcome
2018-07-05 16:17:08,717 - method=GET
2018-07-05 16:17:08,717 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,717 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:17:08,717 - args:
2018-07-05 16:17:08,717 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,717 - response=/welcome
2018-07-05 16:17:08,718 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:08,777 - ===========进入拦截器==============
2018-07-05 16:17:08,777 - ===========进入拦截器==============
2018-07-05 16:17:08,777 - http://localhost:8081/common/top
2018-07-05 16:17:08,777 - http://localhost:8081/common/left
2018-07-05 16:17:08,779 - ===========进入拦截器==============
2018-07-05 16:17:08,779 - http://localhost:8081/common/footer
2018-07-05 16:17:08,783 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:17:08,784 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,784 - url=http://localhost:8081/common/top
2018-07-05 16:17:08,784 - method=GET
2018-07-05 16:17:08,784 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,784 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:17:08,784 - args:
2018-07-05 16:17:08,784 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,784 - response=/common/top
2018-07-05 16:17:08,785 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:08,807 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:17:08,807 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,807 - url=http://localhost:8081/common/left
2018-07-05 16:17:08,807 - method=GET
2018-07-05 16:17:08,807 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,807 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:17:08,807 - args:
2018-07-05 16:17:08,807 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,807 - response=/common/left
2018-07-05 16:17:08,808 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:08,819 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:17:08,819 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,819 - url=http://localhost:8081/common/footer
2018-07-05 16:17:08,819 - method=GET
2018-07-05 16:17:08,819 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,819 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:17:08,819 - args:
2018-07-05 16:17:08,820 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,820 - response=/common/footer
2018-07-05 16:17:08,820 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:08,854 - ===========进入拦截器==============
2018-07-05 16:17:08,854 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:17:08,865 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:17:08,866 - ===========请求时间:2018-07-05 16:17:08==========================
2018-07-05 16:17:08,866 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:17:08,866 - method=GET
2018-07-05 16:17:08,866 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:08,866 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:17:08,866 - args:roleId=1,
2018-07-05 16:17:08,912 - =============结束请求时间:2018-07-05 16:17:08,耗时:0s======================
2018-07-05 16:17:08,913 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:17:08,926 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:10,228 - ===========进入拦截器==============
2018-07-05 16:17:10,228 - http://localhost:8081/number-coin.html
2018-07-05 16:17:10,233 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:17:10,233 - ===========请求时间:2018-07-05 16:17:10==========================
2018-07-05 16:17:10,233 - url=http://localhost:8081/number-coin.html
2018-07-05 16:17:10,233 - method=GET
2018-07-05 16:17:10,233 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:10,233 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:17:10,233 - args:
2018-07-05 16:17:10,233 - =============结束请求时间:2018-07-05 16:17:10,耗时:0s======================
2018-07-05 16:17:10,233 - response=/number-coin
2018-07-05 16:17:10,234 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:10,413 - ===========进入拦截器==============
2018-07-05 16:17:10,413 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:17:10,436 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:17:10,436 - ===========请求时间:2018-07-05 16:17:10==========================
2018-07-05 16:17:10,436 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:17:10,436 - method=GET
2018-07-05 16:17:10,436 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:10,436 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:17:10,436 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:17:10,458 - =============结束请求时间:2018-07-05 16:17:10,耗时:0s======================
2018-07-05 16:17:10,458 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:17:10,464 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:17:12,023 - ===========进入拦截器==============
2018-07-05 16:17:12,023 - http://localhost:8081/number-coin-add.html
2018-07-05 16:17:12,033 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:17:12,033 - ===========请求时间:2018-07-05 16:17:12==========================
2018-07-05 16:17:12,034 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:17:12,034 - method=GET
2018-07-05 16:17:12,034 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:17:12,034 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:17:12,034 - args:
2018-07-05 16:17:12,034 - =============结束请求时间:2018-07-05 16:17:12,耗时:0s======================
2018-07-05 16:17:12,034 - response=/number-coin-add
2018-07-05 16:17:12,034 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:29,489 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16884 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:18:29,492 - No active profile set, falling back to default profiles: default
2018-07-05 16:18:29,710 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:18:29,809 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29d98327: startup date [Thu Jul 05 16:18:29 CST 2018]; root of context hierarchy
2018-07-05 16:18:31,145 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,145 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,145 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,145 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,146 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,146 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:18:31,146 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:18:31,146 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:18:33,022 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:18:33,038 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:18:33,050 - Starting service [Tomcat]
2018-07-05 16:18:33,050 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:18:33,172 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:18:33,172 - Root WebApplicationContext: initialization completed in 3363 ms
2018-07-05 16:18:33,428 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:18:33,434 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:18:33,434 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:18:33,434 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:18:33,434 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:18:33,435 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:18:35,569 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29d98327: startup date [Thu Jul 05 16:18:29 CST 2018]; root of context hierarchy
2018-07-05 16:18:35,682 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:18:35,684 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:18:35,684 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:18:35,684 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:18:35,684 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:18:35,684 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:18:35,685 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:18:35,685 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:18:35,685 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:18:35,685 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:18:35,685 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:18:35,686 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:18:35,686 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:18:35,686 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:18:35,686 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:18:35,686 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:18:35,686 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:18:35,686 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:18:35,687 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:18:35,687 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:18:35,687 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:18:35,687 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:18:35,691 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:18:35,691 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:18:35,693 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:18:35,693 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:18:35,693 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:18:35,693 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:18:35,693 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:18:35,693 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:18:35,694 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:18:35,694 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:18:35,694 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:18:35,695 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:18:35,695 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:18:35,695 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:18:35,696 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:18:35,697 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:18:35,697 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:18:35,697 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:18:35,698 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:18:35,698 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:18:35,698 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:18:35,699 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:18:35,699 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:18:35,700 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:18:35,701 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:18:35,701 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:18:35,701 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:18:35,701 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:18:35,701 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:18:35,701 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:18:35,702 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:18:35,702 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:18:35,702 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:18:35,702 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:18:35,702 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:18:35,704 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:18:35,704 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:18:35,752 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:18:35,753 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:18:35,777 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:18:35,810 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:18:36,565 - LiveReload server is running on port 35729
2018-07-05 16:18:36,708 - Registering beans for JMX exposure on startup
2018-07-05 16:18:36,710 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:18:36,716 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:18:36,727 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:18:36,759 - Using a shared selector for servlet write/read
2018-07-05 16:18:36,784 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:18:36,795 - Started FqLtdWasBackstageApplication in 8.416 seconds (JVM running for 10.096)
2018-07-05 16:18:38,866 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:18:38,866 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:18:38,907 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 16:18:38,934 - ===========进入拦截器==============
2018-07-05 16:18:38,968 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:18:38,968 - ===========请求时间:2018-07-05 16:18:38==========================
2018-07-05 16:18:38,968 - url=http://localhost:8081/login
2018-07-05 16:18:38,969 - method=GET
2018-07-05 16:18:38,969 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:38,969 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:18:38,969 - args:
2018-07-05 16:18:38,973 - =============结束请求时间:2018-07-05 16:18:38,耗时:0s======================
2018-07-05 16:18:38,973 - response=/login
2018-07-05 16:18:39,007 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:18:39,072 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:18:39,072 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:18:39,072 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:18:39,072 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:18:39,077 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:18:39,077 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:18:43,623 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:18:43,623 - ===========请求时间:2018-07-05 16:18:43==========================
2018-07-05 16:18:43,623 - url=http://localhost:8081/signIn
2018-07-05 16:18:43,623 - method=POST
2018-07-05 16:18:43,623 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:43,623 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:18:43,623 - args:userName=admin,password=123456,
2018-07-05 16:18:43,714 - {dataSource-1} inited
2018-07-05 16:18:44,155 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,155 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:18:44, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:18:44,270 - ===========进入拦截器==============
2018-07-05 16:18:44,271 - http://localhost:8081/home
2018-07-05 16:18:44,277 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:18:44,277 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,277 - url=http://localhost:8081/home
2018-07-05 16:18:44,277 - method=GET
2018-07-05 16:18:44,277 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,277 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:18:44,277 - args:
2018-07-05 16:18:44,277 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,277 - response=/home
2018-07-05 16:18:44,277 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:44,402 - ===========进入拦截器==============
2018-07-05 16:18:44,402 - http://localhost:8081/welcome
2018-07-05 16:18:44,406 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:18:44,406 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,406 - url=http://localhost:8081/welcome
2018-07-05 16:18:44,406 - method=GET
2018-07-05 16:18:44,406 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,406 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:18:44,407 - args:
2018-07-05 16:18:44,407 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,407 - response=/welcome
2018-07-05 16:18:44,407 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:44,465 - ===========进入拦截器==============
2018-07-05 16:18:44,465 - http://localhost:8081/common/top
2018-07-05 16:18:44,466 - ===========进入拦截器==============
2018-07-05 16:18:44,467 - http://localhost:8081/common/left
2018-07-05 16:18:44,469 - ===========进入拦截器==============
2018-07-05 16:18:44,469 - http://localhost:8081/common/footer
2018-07-05 16:18:44,472 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:18:44,472 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,472 - url=http://localhost:8081/common/top
2018-07-05 16:18:44,472 - method=GET
2018-07-05 16:18:44,472 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,472 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:18:44,473 - args:
2018-07-05 16:18:44,473 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,473 - response=/common/top
2018-07-05 16:18:44,473 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:44,481 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:18:44,481 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,481 - url=http://localhost:8081/common/left
2018-07-05 16:18:44,481 - method=GET
2018-07-05 16:18:44,481 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,481 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:18:44,481 - args:
2018-07-05 16:18:44,481 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,481 - response=/common/left
2018-07-05 16:18:44,482 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:44,485 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:18:44,485 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,485 - url=http://localhost:8081/common/footer
2018-07-05 16:18:44,485 - method=GET
2018-07-05 16:18:44,485 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,485 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:18:44,485 - args:
2018-07-05 16:18:44,486 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,486 - response=/common/footer
2018-07-05 16:18:44,486 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:44,535 - ===========进入拦截器==============
2018-07-05 16:18:44,535 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:18:44,541 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:18:44,541 - ===========请求时间:2018-07-05 16:18:44==========================
2018-07-05 16:18:44,541 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:18:44,541 - method=GET
2018-07-05 16:18:44,541 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:44,541 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:18:44,541 - args:roleId=1,
2018-07-05 16:18:44,567 - =============结束请求时间:2018-07-05 16:18:44,耗时:0s======================
2018-07-05 16:18:44,567 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:18:44,579 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:45,819 - ===========进入拦截器==============
2018-07-05 16:18:45,820 - http://localhost:8081/number-coin.html
2018-07-05 16:18:45,827 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:18:45,827 - ===========请求时间:2018-07-05 16:18:45==========================
2018-07-05 16:18:45,827 - url=http://localhost:8081/number-coin.html
2018-07-05 16:18:45,827 - method=GET
2018-07-05 16:18:45,827 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:45,827 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:18:45,827 - args:
2018-07-05 16:18:45,827 - =============结束请求时间:2018-07-05 16:18:45,耗时:0s======================
2018-07-05 16:18:45,827 - response=/number-coin
2018-07-05 16:18:45,827 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:46,006 - ===========进入拦截器==============
2018-07-05 16:18:46,006 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:18:46,029 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:18:46,029 - ===========请求时间:2018-07-05 16:18:46==========================
2018-07-05 16:18:46,029 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:18:46,029 - method=GET
2018-07-05 16:18:46,029 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:46,029 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:18:46,029 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:18:46,049 - =============结束请求时间:2018-07-05 16:18:46,耗时:0s======================
2018-07-05 16:18:46,049 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:18:46,055 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:18:46,717 - ===========进入拦截器==============
2018-07-05 16:18:46,717 - http://localhost:8081/number-coin-add.html
2018-07-05 16:18:46,723 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:18:46,724 - ===========请求时间:2018-07-05 16:18:46==========================
2018-07-05 16:18:46,724 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:18:46,724 - method=GET
2018-07-05 16:18:46,724 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:18:46,724 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:18:46,724 - args:
2018-07-05 16:18:46,724 - =============结束请求时间:2018-07-05 16:18:46,耗时:0s======================
2018-07-05 16:18:46,724 - response=/number-coin-add
2018-07-05 16:18:46,724 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:19:19,407 - ===========进入拦截器==============
2018-07-05 16:19:19,407 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:19:19,416 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:19:19,416 - ===========请求时间:2018-07-05 16:19:19==========================
2018-07-05 16:19:19,416 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:19:19,416 - method=GET
2018-07-05 16:19:19,416 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:19:19,416 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:19:19,416 - args:saveOrUpdate=1,wasBaseCurrency=test,wasTokenAddress=31231231,wasMinConfirm=1,wasBeginBlock=100,wasBlockNum=100,wasGateWay=ewnrf,wasPrecision=2,wasZeroGasPrice=20,wasZeroGasLimit=20,wasTransferGasPrice=20,wasTransferGasLimit=20,iconIntroduceUrl=https://www.baidu.com,blockBrowsersUrl=https://www.baidu.com,wasStatus=1,wasRemark=https://www.baidu.com,
2018-07-05 16:19:25,334 - =============结束请求时间:2018-07-05 16:19:25,耗时:5s======================
2018-07-05 16:20:16,800 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2460 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:20:16,802 - No active profile set, falling back to default profiles: default
2018-07-05 16:20:17,018 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:20:17,107 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f0dd56e: startup date [Thu Jul 05 16:20:17 CST 2018]; root of context hierarchy
2018-07-05 16:20:18,925 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:20:18,926 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:20:18,927 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:20:20,218 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:20:20,234 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:20:20,247 - Starting service [Tomcat]
2018-07-05 16:20:20,247 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:20:20,355 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:20:20,355 - Root WebApplicationContext: initialization completed in 3248 ms
2018-07-05 16:20:20,657 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:20:20,662 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:20:20,662 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:20:20,662 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:20:20,662 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:20:20,662 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:20:22,424 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f0dd56e: startup date [Thu Jul 05 16:20:17 CST 2018]; root of context hierarchy
2018-07-05 16:20:22,532 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:20:22,534 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:20:22,534 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:20:22,534 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:20:22,534 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:20:22,534 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:20:22,534 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:20:22,534 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:20:22,535 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:20:22,535 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:20:22,535 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:20:22,535 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:20:22,535 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:20:22,535 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:20:22,535 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:20:22,536 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:20:22,536 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:20:22,536 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:20:22,536 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:20:22,536 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:20:22,536 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:20:22,536 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:20:22,540 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:20:22,540 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:20:22,543 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:20:22,543 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:20:22,543 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:20:22,544 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:20:22,544 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:20:22,544 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:20:22,544 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:20:22,544 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:20:22,544 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:20:22,545 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:20:22,545 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:20:22,545 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:20:22,546 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:20:22,547 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:20:22,547 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:20:22,547 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:20:22,547 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:20:22,547 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:20:22,547 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:20:22,548 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:20:22,548 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:20:22,549 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:20:22,550 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:20:22,550 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:20:22,550 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:20:22,550 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:20:22,550 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:20:22,550 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:20:22,551 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:20:22,551 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:20:22,551 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:20:22,552 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:20:22,552 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:20:22,554 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:20:22,554 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:20:22,611 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:20:22,611 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:20:22,644 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:20:22,691 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:20:23,511 - LiveReload server is running on port 35729
2018-07-05 16:20:23,654 - Registering beans for JMX exposure on startup
2018-07-05 16:20:23,656 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:20:23,662 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:20:23,674 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:20:23,708 - Using a shared selector for servlet write/read
2018-07-05 16:20:23,731 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:20:23,742 - Started FqLtdWasBackstageApplication in 7.603 seconds (JVM running for 9.18)
2018-07-05 16:20:35,721 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:20:35,721 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:20:35,762 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 16:20:35,797 - ===========进入拦截器==============
2018-07-05 16:20:35,836 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:20:35,837 - ===========请求时间:2018-07-05 16:20:35==========================
2018-07-05 16:20:35,838 - url=http://localhost:8081/login
2018-07-05 16:20:35,838 - method=GET
2018-07-05 16:20:35,838 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:35,838 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:20:35,838 - args:
2018-07-05 16:20:35,844 - =============结束请求时间:2018-07-05 16:20:35,耗时:0s======================
2018-07-05 16:20:35,844 - response=/login
2018-07-05 16:20:35,882 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:20:35,961 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:20:35,961 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:20:35,962 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:20:35,962 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:20:35,967 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:20:35,967 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:20:40,416 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:20:40,416 - ===========请求时间:2018-07-05 16:20:40==========================
2018-07-05 16:20:40,416 - url=http://localhost:8081/signIn
2018-07-05 16:20:40,416 - method=POST
2018-07-05 16:20:40,416 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:40,416 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:20:40,416 - args:userName=admin,password=123456,
2018-07-05 16:20:40,510 - {dataSource-1} inited
2018-07-05 16:20:40,924 - =============结束请求时间:2018-07-05 16:20:40,耗时:0s======================
2018-07-05 16:20:40,924 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:20:40, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:20:41,027 - ===========进入拦截器==============
2018-07-05 16:20:41,028 - http://localhost:8081/home
2018-07-05 16:20:41,045 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:20:41,045 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,045 - url=http://localhost:8081/home
2018-07-05 16:20:41,045 - method=GET
2018-07-05 16:20:41,045 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,045 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:20:41,045 - args:
2018-07-05 16:20:41,046 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,046 - response=/home
2018-07-05 16:20:41,046 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:41,145 - ===========进入拦截器==============
2018-07-05 16:20:41,146 - http://localhost:8081/welcome
2018-07-05 16:20:41,151 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:20:41,151 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,151 - url=http://localhost:8081/welcome
2018-07-05 16:20:41,151 - method=GET
2018-07-05 16:20:41,151 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,151 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:20:41,151 - args:
2018-07-05 16:20:41,152 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,152 - response=/welcome
2018-07-05 16:20:41,152 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:41,206 - ===========进入拦截器==============
2018-07-05 16:20:41,206 - http://localhost:8081/common/top
2018-07-05 16:20:41,206 - ===========进入拦截器==============
2018-07-05 16:20:41,207 - http://localhost:8081/common/left
2018-07-05 16:20:41,209 - ===========进入拦截器==============
2018-07-05 16:20:41,209 - http://localhost:8081/common/footer
2018-07-05 16:20:41,212 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:20:41,212 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,212 - url=http://localhost:8081/common/top
2018-07-05 16:20:41,212 - method=GET
2018-07-05 16:20:41,212 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,213 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:20:41,213 - args:
2018-07-05 16:20:41,213 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,213 - response=/common/top
2018-07-05 16:20:41,213 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:41,219 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:20:41,219 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,219 - url=http://localhost:8081/common/left
2018-07-05 16:20:41,219 - method=GET
2018-07-05 16:20:41,219 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,219 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:20:41,219 - args:
2018-07-05 16:20:41,219 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,219 - response=/common/left
2018-07-05 16:20:41,220 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:41,225 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:20:41,225 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,225 - url=http://localhost:8081/common/footer
2018-07-05 16:20:41,225 - method=GET
2018-07-05 16:20:41,225 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,225 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:20:41,225 - args:
2018-07-05 16:20:41,225 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,225 - response=/common/footer
2018-07-05 16:20:41,226 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:41,272 - ===========进入拦截器==============
2018-07-05 16:20:41,272 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:20:41,282 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:20:41,282 - ===========请求时间:2018-07-05 16:20:41==========================
2018-07-05 16:20:41,282 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:20:41,282 - method=GET
2018-07-05 16:20:41,282 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:41,282 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:20:41,282 - args:roleId=1,
2018-07-05 16:20:41,312 - =============结束请求时间:2018-07-05 16:20:41,耗时:0s======================
2018-07-05 16:20:41,312 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:20:41,325 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:42,599 - ===========进入拦截器==============
2018-07-05 16:20:42,599 - http://localhost:8081/number-coin.html
2018-07-05 16:20:42,605 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:20:42,606 - ===========请求时间:2018-07-05 16:20:42==========================
2018-07-05 16:20:42,606 - url=http://localhost:8081/number-coin.html
2018-07-05 16:20:42,606 - method=GET
2018-07-05 16:20:42,606 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:42,606 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:20:42,606 - args:
2018-07-05 16:20:42,606 - =============结束请求时间:2018-07-05 16:20:42,耗时:0s======================
2018-07-05 16:20:42,606 - response=/number-coin
2018-07-05 16:20:42,606 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:42,822 - ===========进入拦截器==============
2018-07-05 16:20:42,822 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:20:42,854 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:20:42,855 - ===========请求时间:2018-07-05 16:20:42==========================
2018-07-05 16:20:42,855 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:20:42,855 - method=GET
2018-07-05 16:20:42,855 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:42,855 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:20:42,855 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:20:42,878 - =============结束请求时间:2018-07-05 16:20:42,耗时:0s======================
2018-07-05 16:20:42,878 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:20:42,887 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:20:44,461 - ===========进入拦截器==============
2018-07-05 16:20:44,461 - http://localhost:8081/number-coin-add.html
2018-07-05 16:20:44,469 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:20:44,469 - ===========请求时间:2018-07-05 16:20:44==========================
2018-07-05 16:20:44,469 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:20:44,469 - method=GET
2018-07-05 16:20:44,469 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:20:44,469 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:20:44,469 - args:
2018-07-05 16:20:44,470 - =============结束请求时间:2018-07-05 16:20:44,耗时:0s======================
2018-07-05 16:20:44,470 - response=/number-coin-add
2018-07-05 16:20:44,470 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:21:23,011 - ===========进入拦截器==============
2018-07-05 16:21:23,012 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:21:23,033 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:21:23,033 - ===========请求时间:2018-07-05 16:21:23==========================
2018-07-05 16:21:23,034 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:21:23,034 - method=GET
2018-07-05 16:21:23,034 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:21:23,034 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:21:23,034 - args:saveOrUpdate=1,wasBaseCurrency=test,wasTokenAddress=312312,wasMinConfirm=1,wasBeginBlock=110,wasBlockNum=100,wasGateWay=312,wasPrecision=2,wasZeroGasPrice=1,wasZeroGasLimit=1,wasTransferGasPrice=1,wasTransferGasLimit=1,iconIntroduceUrl=http://www.layui.com/doc/element/form.html,blockBrowsersUrl=http://www.layui.com/doc/element/form.html,wasStatus=1,wasRemark=1231eqweqw,
2018-07-05 16:21:31,819 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-05 16:21:32,063 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-05 16:21:33,848 - =============结束请求时间:2018-07-05 16:21:33,耗时:10s======================
2018-07-05 16:22:08,325 - ===========进入拦截器==============
2018-07-05 16:22:08,325 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:22:08,346 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:22:08,346 - ===========请求时间:2018-07-05 16:22:08==========================
2018-07-05 16:22:08,346 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:22:08,346 - method=GET
2018-07-05 16:22:08,346 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:22:08,346 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:22:08,346 - args:saveOrUpdate=1,wasBaseCurrency=test,wasTokenAddress=312312,wasMinConfirm=1,wasBeginBlock=110,wasBlockNum=100,wasGateWay=312,wasPrecision=2,wasZeroGasPrice=1,wasZeroGasLimit=1,wasTransferGasPrice=1,wasTransferGasLimit=1,iconIntroduceUrl=http://www.layui.com/doc/element/form.html,blockBrowsersUrl=http://www.layui.com/doc/element/form.html,wasStatus=1,wasRemark=1231eqweqw,
2018-07-05 16:22:59,457 - =============结束请求时间:2018-07-05 16:22:59,耗时:51s======================
2018-07-05 16:23:13,233 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7988 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:23:13,235 - No active profile set, falling back to default profiles: default
2018-07-05 16:23:13,401 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:23:13,477 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a344e6a: startup date [Thu Jul 05 16:23:13 CST 2018]; root of context hierarchy
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:23:14,473 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:23:14,474 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:23:15,761 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:23:15,774 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:23:15,784 - Starting service [Tomcat]
2018-07-05 16:23:15,784 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:23:15,913 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:23:15,914 - Root WebApplicationContext: initialization completed in 2437 ms
2018-07-05 16:23:16,207 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:23:16,210 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:23:16,211 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:23:16,211 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:23:16,211 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:23:16,211 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:23:17,779 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2a344e6a: startup date [Thu Jul 05 16:23:13 CST 2018]; root of context hierarchy
2018-07-05 16:23:17,877 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:23:17,878 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:23:17,878 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:23:17,878 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:23:17,878 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:23:17,878 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:23:17,879 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:23:17,879 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:23:17,879 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:23:17,879 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:23:17,879 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:23:17,879 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:23:17,880 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:23:17,880 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:23:17,880 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:23:17,880 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:23:17,880 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:23:17,880 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:23:17,880 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:23:17,881 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:23:17,881 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:23:17,881 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:23:17,884 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:23:17,884 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:23:17,886 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:23:17,886 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:23:17,886 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:23:17,886 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:23:17,886 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:23:17,887 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:23:17,887 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:23:17,887 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:23:17,887 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:23:17,889 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:23:17,889 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:23:17,889 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:23:17,889 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:23:17,890 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:23:17,891 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:23:17,891 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:23:17,891 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:23:17,891 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:23:17,891 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:23:17,892 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:23:17,892 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:23:17,894 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:23:17,895 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:23:17,895 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:23:17,895 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:23:17,895 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:23:17,895 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:23:17,896 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:23:17,896 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:23:17,896 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:23:17,897 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:23:17,897 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:23:17,897 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:23:17,898 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:23:17,899 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:23:17,948 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:23:17,948 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:23:17,971 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:23:18,016 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:23:18,756 - LiveReload server is running on port 35729
2018-07-05 16:23:18,891 - Registering beans for JMX exposure on startup
2018-07-05 16:23:18,893 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:23:18,900 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:23:18,912 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:23:18,943 - Using a shared selector for servlet write/read
2018-07-05 16:23:18,963 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:23:18,974 - Started FqLtdWasBackstageApplication in 6.613 seconds (JVM running for 8.163)
2018-07-05 16:23:22,056 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:23:22,056 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:23:22,099 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 16:23:22,130 - ===========进入拦截器==============
2018-07-05 16:23:22,175 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:23:22,176 - ===========请求时间:2018-07-05 16:23:22==========================
2018-07-05 16:23:22,176 - url=http://localhost:8081/login
2018-07-05 16:23:22,176 - method=GET
2018-07-05 16:23:22,176 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:22,176 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:23:22,176 - args:
2018-07-05 16:23:22,181 - =============结束请求时间:2018-07-05 16:23:22,耗时:0s======================
2018-07-05 16:23:22,181 - response=/login
2018-07-05 16:23:22,216 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:23:22,290 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:23:22,290 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:23:22,290 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:23:22,290 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:23:22,295 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:23:22,295 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:23:26,687 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:23:26,687 - ===========请求时间:2018-07-05 16:23:26==========================
2018-07-05 16:23:26,687 - url=http://localhost:8081/signIn
2018-07-05 16:23:26,687 - method=POST
2018-07-05 16:23:26,687 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:26,688 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:23:26,688 - args:userName=admin,password=123456,
2018-07-05 16:23:26,784 - {dataSource-1} inited
2018-07-05 16:23:27,247 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,247 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:23:27, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:23:27,367 - ===========进入拦截器==============
2018-07-05 16:23:27,367 - http://localhost:8081/home
2018-07-05 16:23:27,375 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:23:27,375 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,375 - url=http://localhost:8081/home
2018-07-05 16:23:27,375 - method=GET
2018-07-05 16:23:27,375 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,375 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:23:27,376 - args:
2018-07-05 16:23:27,376 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,376 - response=/home
2018-07-05 16:23:27,376 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:27,484 - ===========进入拦截器==============
2018-07-05 16:23:27,485 - http://localhost:8081/welcome
2018-07-05 16:23:27,489 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:23:27,489 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,489 - url=http://localhost:8081/welcome
2018-07-05 16:23:27,489 - method=GET
2018-07-05 16:23:27,489 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,489 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:23:27,489 - args:
2018-07-05 16:23:27,489 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,489 - response=/welcome
2018-07-05 16:23:27,489 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:27,545 - ===========进入拦截器==============
2018-07-05 16:23:27,545 - http://localhost:8081/common/top
2018-07-05 16:23:27,546 - ===========进入拦截器==============
2018-07-05 16:23:27,547 - http://localhost:8081/common/left
2018-07-05 16:23:27,547 - ===========进入拦截器==============
2018-07-05 16:23:27,547 - http://localhost:8081/common/footer
2018-07-05 16:23:27,555 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:23:27,555 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,555 - url=http://localhost:8081/common/top
2018-07-05 16:23:27,555 - method=GET
2018-07-05 16:23:27,555 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,555 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:23:27,555 - args:
2018-07-05 16:23:27,556 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,556 - response=/common/top
2018-07-05 16:23:27,556 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:27,561 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:23:27,561 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,561 - url=http://localhost:8081/common/left
2018-07-05 16:23:27,561 - method=GET
2018-07-05 16:23:27,561 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,561 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:23:27,562 - args:
2018-07-05 16:23:27,562 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,562 - response=/common/left
2018-07-05 16:23:27,562 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:27,592 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:23:27,592 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,592 - url=http://localhost:8081/common/footer
2018-07-05 16:23:27,592 - method=GET
2018-07-05 16:23:27,592 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,592 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:23:27,592 - args:
2018-07-05 16:23:27,592 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,592 - response=/common/footer
2018-07-05 16:23:27,593 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:27,612 - ===========进入拦截器==============
2018-07-05 16:23:27,612 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:23:27,620 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:23:27,620 - ===========请求时间:2018-07-05 16:23:27==========================
2018-07-05 16:23:27,620 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:23:27,620 - method=GET
2018-07-05 16:23:27,620 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:27,620 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:23:27,620 - args:roleId=1,
2018-07-05 16:23:27,671 - =============结束请求时间:2018-07-05 16:23:27,耗时:0s======================
2018-07-05 16:23:27,672 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:23:27,685 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:35,942 - ===========进入拦截器==============
2018-07-05 16:23:35,942 - http://localhost:8081/number-coin.html
2018-07-05 16:23:35,952 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:23:35,952 - ===========请求时间:2018-07-05 16:23:35==========================
2018-07-05 16:23:35,952 - url=http://localhost:8081/number-coin.html
2018-07-05 16:23:35,952 - method=GET
2018-07-05 16:23:35,952 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:35,952 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:23:35,952 - args:
2018-07-05 16:23:35,952 - =============结束请求时间:2018-07-05 16:23:35,耗时:0s======================
2018-07-05 16:23:35,952 - response=/number-coin
2018-07-05 16:23:35,952 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:36,139 - ===========进入拦截器==============
2018-07-05 16:23:36,139 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:23:36,165 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:23:36,166 - ===========请求时间:2018-07-05 16:23:36==========================
2018-07-05 16:23:36,166 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:23:36,166 - method=GET
2018-07-05 16:23:36,166 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:36,166 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:23:36,166 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:23:36,186 - =============结束请求时间:2018-07-05 16:23:36,耗时:0s======================
2018-07-05 16:23:36,186 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=29, totalPage=3), totalCount=29)
2018-07-05 16:23:36,198 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:23:36,884 - ===========进入拦截器==============
2018-07-05 16:23:36,885 - http://localhost:8081/number-coin-add.html
2018-07-05 16:23:36,892 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:23:36,892 - ===========请求时间:2018-07-05 16:23:36==========================
2018-07-05 16:23:36,892 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:23:36,892 - method=GET
2018-07-05 16:23:36,892 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:23:36,892 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:23:36,892 - args:
2018-07-05 16:23:36,892 - =============结束请求时间:2018-07-05 16:23:36,耗时:0s======================
2018-07-05 16:23:36,892 - response=/number-coin-add
2018-07-05 16:23:36,893 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:24:05,781 - ===========进入拦截器==============
2018-07-05 16:24:05,781 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:24:05,792 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:24:05,792 - ===========请求时间:2018-07-05 16:24:05==========================
2018-07-05 16:24:05,792 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:24:05,792 - method=GET
2018-07-05 16:24:05,792 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:24:05,792 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:24:05,792 - args:saveOrUpdate=1,wasBaseCurrency=test,wasType=test,wasTokenAddress=312312reqwe,wasMinConfirm=1,wasBeginBlock=100,wasBlockNum=100,wasGateWay=hqrr,wasPrecision=2,wasZeroGasPrice=1,wasZeroGasLimit=1,wasTransferGasPrice=1,wasTransferGasLimit=1,iconIntroduceUrl=http://www.layui.com/doc/element/form.html,blockBrowsersUrl=http://www.layui.com/doc/element/form.html,wasStatus=1,wasRemark=哈哈哈哈,tesrt
,
2018-07-05 16:24:08,008 - =============结束请求时间:2018-07-05 16:24:08,耗时:2s======================
2018-07-05 16:24:08,008 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-05 16:24:08,011 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:24:10,239 - ===========进入拦截器==============
2018-07-05 16:24:10,239 - http://localhost:8081/number-coin-add.html
2018-07-05 16:24:10,247 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:24:10,247 - ===========请求时间:2018-07-05 16:24:10==========================
2018-07-05 16:24:10,247 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:24:10,247 - method=GET
2018-07-05 16:24:10,247 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:24:10,247 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:24:10,247 - args:
2018-07-05 16:24:10,247 - =============结束请求时间:2018-07-05 16:24:10,耗时:0s======================
2018-07-05 16:24:10,247 - response=/number-coin-add
2018-07-05 16:24:10,247 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:24:19,674 - ===========进入拦截器==============
2018-07-05 16:24:19,674 - http://localhost:8081/number-coin.html
2018-07-05 16:24:19,679 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:24:19,679 - ===========请求时间:2018-07-05 16:24:19==========================
2018-07-05 16:24:19,679 - url=http://localhost:8081/number-coin.html
2018-07-05 16:24:19,679 - method=GET
2018-07-05 16:24:19,679 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:24:19,679 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:24:19,679 - args:
2018-07-05 16:24:19,679 - =============结束请求时间:2018-07-05 16:24:19,耗时:0s======================
2018-07-05 16:24:19,679 - response=/number-coin
2018-07-05 16:24:19,679 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:24:19,834 - ===========进入拦截器==============
2018-07-05 16:24:19,834 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:24:19,839 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:24:19,839 - ===========请求时间:2018-07-05 16:24:19==========================
2018-07-05 16:24:19,839 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:24:19,839 - method=GET
2018-07-05 16:24:19,839 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:24:19,839 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:24:19,840 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:24:19,855 - =============结束请求时间:2018-07-05 16:24:19,耗时:0s======================
2018-07-05 16:24:19,856 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:24:19,866 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:24:29,863 - ===========进入拦截器==============
2018-07-05 16:24:29,863 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:24:29,869 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:24:29,869 - ===========请求时间:2018-07-05 16:24:29==========================
2018-07-05 16:24:29,869 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:24:29,869 - method=GET
2018-07-05 16:24:29,869 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:24:29,869 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:24:29,869 - args:pageNumber=3,pageSize=10,wasId=,wasType=,
2018-07-05 16:24:29,881 - =============结束请求时间:2018-07-05 16:24:29,耗时:0s======================
2018-07-05 16:24:29,882 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=3, wasBaseCurrency=BTC, wasType=QTUM, wasBeginBlock=161306, wasBlockNum=100, wasGateWay=QTUM, wasTokenAddress=, wasMinConfirm=8, wasStatus=1, wasPrecision=38, wasZeroGasPrice=, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018), WasDataDictionary(wasId=24, wasBaseCurrency=ETH/token, wasType=REP, wasBeginBlock=300, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe94327d07fc17907b4db788e5adf2ed424addff6, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=11, wasBaseCurrency=BTC, wasType=SMTH, wasBeginBlock=0, wasBlockNum=100, wasGateWay=SMTH, wasTokenAddress=, wasMinConfirm=3, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018), WasDataDictionary(wasId=25, wasBaseCurrency=ETH/token, wasType=WAN, wasBeginBlock=500, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x5fc6de61258e63706543bb57619b99cc0e5a5a1f, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018), WasDataDictionary(wasId=18, wasBaseCurrency=BASE_XMR_, wasType=XMR, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XMR, wasTokenAddress=null, wasMinConfirm=3, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=15, wasBaseCurrency=BASE_BTC_, wasType=XRP, wasBeginBlock=0, wasBlockNum=100, wasGateWay=XRP, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018), WasDataDictionary(wasId=26, wasBaseCurrency=ETH/token, wasType=ZIL, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x05f4a42e251f2d52b8ed15e9fedaacfcef1fad27, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=27, wasBaseCurrency=ETH/token, wasType=ZRX, wasBeginBlock=400, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xe41d2489571d322189246dafa5ebde1f4699f498, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:15:01 CST 2018), WasDataDictionary(wasId=10, wasBaseCurrency=ETH/token, wasType=ZZL, wasBeginBlock=3467375, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4cc8cb7a0839a14a92349dfd138d104fbcacc630, wasMinConfirm=10, wasStatus=1, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018)], page=Pages(first=false, last=false, pageSize=10, pageNumber=3, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:24:29,884 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:21,321 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5192 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:31:21,324 - No active profile set, falling back to default profiles: default
2018-07-05 16:31:21,501 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:31:21,578 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5dbc74c1: startup date [Thu Jul 05 16:31:21 CST 2018]; root of context hierarchy
2018-07-05 16:31:22,778 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:31:22,779 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:31:22,780 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:31:23,955 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:31:23,966 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:31:23,976 - Starting service [Tomcat]
2018-07-05 16:31:23,976 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:31:24,088 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:31:24,088 - Root WebApplicationContext: initialization completed in 2510 ms
2018-07-05 16:31:24,316 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:31:24,320 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:31:24,320 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:31:24,320 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:31:24,320 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:31:24,321 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:31:25,861 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5dbc74c1: startup date [Thu Jul 05 16:31:21 CST 2018]; root of context hierarchy
2018-07-05 16:31:25,975 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:31:25,976 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:31:25,977 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:31:25,977 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:31:25,977 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:31:25,977 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:31:25,978 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:31:25,978 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:31:25,978 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:31:25,978 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:31:25,978 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:31:25,979 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:31:25,980 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:31:25,980 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:31:25,980 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:31:25,980 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:31:25,980 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:31:25,981 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:31:25,981 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:31:25,981 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:31:25,981 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:31:25,981 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:31:25,985 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:31:25,986 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:31:25,988 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:31:25,988 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:31:25,988 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:31:25,989 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:31:25,989 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:31:25,989 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:31:25,989 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:31:25,989 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:31:25,990 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:31:25,991 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:31:25,991 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:31:25,992 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:31:25,992 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:31:25,993 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:31:25,993 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:31:25,994 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:31:25,994 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:31:25,994 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:31:25,994 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:31:25,995 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:31:25,995 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:31:25,997 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:31:25,997 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:31:25,997 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:31:25,997 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:31:25,997 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:31:25,998 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:31:25,998 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:31:26,000 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:31:26,000 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:31:26,000 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:31:26,000 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:31:26,000 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:31:26,002 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:31:26,003 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:31:26,074 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:31:26,075 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:31:26,104 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:31:26,146 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:31:26,856 - LiveReload server is running on port 35729
2018-07-05 16:31:26,982 - Registering beans for JMX exposure on startup
2018-07-05 16:31:26,984 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:31:26,990 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:31:27,001 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:31:27,028 - Using a shared selector for servlet write/read
2018-07-05 16:31:27,045 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:31:27,053 - Started FqLtdWasBackstageApplication in 6.367 seconds (JVM running for 7.645)
2018-07-05 16:31:30,487 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:31:30,487 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:31:30,530 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 16:31:30,565 - ===========进入拦截器==============
2018-07-05 16:31:30,618 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:31:30,618 - ===========请求时间:2018-07-05 16:31:30==========================
2018-07-05 16:31:30,619 - url=http://localhost:8081/login
2018-07-05 16:31:30,619 - method=GET
2018-07-05 16:31:30,619 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:30,619 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:31:30,619 - args:
2018-07-05 16:31:30,627 - =============结束请求时间:2018-07-05 16:31:30,耗时:0s======================
2018-07-05 16:31:30,627 - response=/login
2018-07-05 16:31:30,664 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:31:30,745 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:31:30,745 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:31:30,745 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:31:30,745 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:31:30,750 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:31:30,750 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:31:35,750 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:31:35,751 - ===========请求时间:2018-07-05 16:31:35==========================
2018-07-05 16:31:35,751 - url=http://localhost:8081/signIn
2018-07-05 16:31:35,751 - method=POST
2018-07-05 16:31:35,751 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:35,751 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:31:35,751 - args:userName=admin,password=123456,
2018-07-05 16:31:35,845 - {dataSource-1} inited
2018-07-05 16:31:36,319 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,319 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:31:36, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:31:36,421 - ===========进入拦截器==============
2018-07-05 16:31:36,422 - http://localhost:8081/home
2018-07-05 16:31:36,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:31:36,429 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,429 - url=http://localhost:8081/home
2018-07-05 16:31:36,429 - method=GET
2018-07-05 16:31:36,429 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,429 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:31:36,429 - args:
2018-07-05 16:31:36,429 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,429 - response=/home
2018-07-05 16:31:36,429 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:36,504 - ===========进入拦截器==============
2018-07-05 16:31:36,504 - http://localhost:8081/welcome
2018-07-05 16:31:36,509 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:31:36,509 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,509 - url=http://localhost:8081/welcome
2018-07-05 16:31:36,509 - method=GET
2018-07-05 16:31:36,509 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,509 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:31:36,509 - args:
2018-07-05 16:31:36,510 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,510 - response=/welcome
2018-07-05 16:31:36,510 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:36,544 - ===========进入拦截器==============
2018-07-05 16:31:36,545 - http://localhost:8081/common/top
2018-07-05 16:31:36,545 - ===========进入拦截器==============
2018-07-05 16:31:36,546 - http://localhost:8081/common/left
2018-07-05 16:31:36,551 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:31:36,551 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,551 - url=http://localhost:8081/common/top
2018-07-05 16:31:36,551 - method=GET
2018-07-05 16:31:36,551 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,551 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:31:36,551 - args:
2018-07-05 16:31:36,551 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,551 - ===========进入拦截器==============
2018-07-05 16:31:36,551 - response=/common/top
2018-07-05 16:31:36,552 - http://localhost:8081/common/footer
2018-07-05 16:31:36,552 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:36,569 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:31:36,569 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,569 - url=http://localhost:8081/common/footer
2018-07-05 16:31:36,569 - method=GET
2018-07-05 16:31:36,569 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,569 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:31:36,570 - args:
2018-07-05 16:31:36,570 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,570 - response=/common/footer
2018-07-05 16:31:36,570 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:36,612 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:31:36,612 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,612 - url=http://localhost:8081/common/left
2018-07-05 16:31:36,612 - method=GET
2018-07-05 16:31:36,612 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,612 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:31:36,612 - args:
2018-07-05 16:31:36,612 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,612 - response=/common/left
2018-07-05 16:31:36,612 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:36,644 - ===========进入拦截器==============
2018-07-05 16:31:36,644 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:31:36,650 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:31:36,650 - ===========请求时间:2018-07-05 16:31:36==========================
2018-07-05 16:31:36,650 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:31:36,650 - method=GET
2018-07-05 16:31:36,650 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:36,650 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:31:36,651 - args:roleId=1,
2018-07-05 16:31:36,693 - =============结束请求时间:2018-07-05 16:31:36,耗时:0s======================
2018-07-05 16:31:36,693 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:31:36,705 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:38,131 - ===========进入拦截器==============
2018-07-05 16:31:38,131 - http://localhost:8081/number-coin.html
2018-07-05 16:31:38,137 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:31:38,138 - ===========请求时间:2018-07-05 16:31:38==========================
2018-07-05 16:31:38,138 - url=http://localhost:8081/number-coin.html
2018-07-05 16:31:38,138 - method=GET
2018-07-05 16:31:38,138 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:38,138 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:31:38,138 - args:
2018-07-05 16:31:38,138 - =============结束请求时间:2018-07-05 16:31:38,耗时:0s======================
2018-07-05 16:31:38,138 - response=/number-coin
2018-07-05 16:31:38,138 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:38,261 - ===========进入拦截器==============
2018-07-05 16:31:38,261 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:31:38,285 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:31:38,285 - ===========请求时间:2018-07-05 16:31:38==========================
2018-07-05 16:31:38,286 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:31:38,286 - method=GET
2018-07-05 16:31:38,286 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:38,286 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:31:38,286 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:31:38,310 - =============结束请求时间:2018-07-05 16:31:38,耗时:0s======================
2018-07-05 16:31:38,310 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:31:38,317 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:31:46,568 - ===========进入拦截器==============
2018-07-05 16:31:46,568 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:31:46,575 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:31:46,575 - ===========请求时间:2018-07-05 16:31:46==========================
2018-07-05 16:31:46,575 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:31:46,575 - method=GET
2018-07-05 16:31:46,575 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:31:46,575 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:31:46,575 - args:pageNumber=1,pageSize=10,wasId=,wasType=test,
2018-07-05 16:31:46,853 - =============结束请求时间:2018-07-05 16:31:46,耗时:0s======================
2018-07-05 16:31:46,854 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:31:46,857 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:44,825 - ===========进入拦截器==============
2018-07-05 16:32:44,825 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:44,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:32:44,841 - ===========请求时间:2018-07-05 16:32:44==========================
2018-07-05 16:32:44,841 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:44,841 - method=GET
2018-07-05 16:32:44,841 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:44,841 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:32:44,841 - args:pageNumber=1,pageSize=10,wasId=,wasType=test,
2018-07-05 16:32:44,861 - =============结束请求时间:2018-07-05 16:32:44,耗时:0s======================
2018-07-05 16:32:44,861 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:32:44,862 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,651 - ===========进入拦截器==============
2018-07-05 16:32:48,651 - http://localhost:8081/home
2018-07-05 16:32:48,655 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:32:48,655 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,655 - url=http://localhost:8081/home
2018-07-05 16:32:48,655 - method=GET
2018-07-05 16:32:48,655 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:32:48,656 - args:
2018-07-05 16:32:48,656 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,656 - response=/home
2018-07-05 16:32:48,656 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,759 - ===========进入拦截器==============
2018-07-05 16:32:48,759 - http://localhost:8081/welcome
2018-07-05 16:32:48,764 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:32:48,764 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,764 - url=http://localhost:8081/welcome
2018-07-05 16:32:48,764 - method=GET
2018-07-05 16:32:48,764 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,764 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:32:48,764 - args:
2018-07-05 16:32:48,764 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,764 - response=/welcome
2018-07-05 16:32:48,765 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,814 - ===========进入拦截器==============
2018-07-05 16:32:48,814 - http://localhost:8081/common/top
2018-07-05 16:32:48,816 - ===========进入拦截器==============
2018-07-05 16:32:48,816 - http://localhost:8081/common/footer
2018-07-05 16:32:48,816 - ===========进入拦截器==============
2018-07-05 16:32:48,816 - http://localhost:8081/common/left
2018-07-05 16:32:48,818 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:32:48,818 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,819 - url=http://localhost:8081/common/top
2018-07-05 16:32:48,819 - method=GET
2018-07-05 16:32:48,819 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,819 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:32:48,819 - args:
2018-07-05 16:32:48,819 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,819 - response=/common/top
2018-07-05 16:32:48,819 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,827 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:32:48,827 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,827 - url=http://localhost:8081/common/left
2018-07-05 16:32:48,828 - method=GET
2018-07-05 16:32:48,828 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,828 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:32:48,828 - args:
2018-07-05 16:32:48,829 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,830 - response=/common/left
2018-07-05 16:32:48,830 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,846 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:32:48,846 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,846 - url=http://localhost:8081/common/footer
2018-07-05 16:32:48,846 - method=GET
2018-07-05 16:32:48,846 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,846 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:32:48,846 - args:
2018-07-05 16:32:48,846 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,846 - response=/common/footer
2018-07-05 16:32:48,846 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:48,892 - ===========进入拦截器==============
2018-07-05 16:32:48,892 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:32:48,897 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:32:48,897 - ===========请求时间:2018-07-05 16:32:48==========================
2018-07-05 16:32:48,897 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:32:48,897 - method=GET
2018-07-05 16:32:48,897 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:48,897 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:32:48,897 - args:roleId=1,
2018-07-05 16:32:48,908 - =============结束请求时间:2018-07-05 16:32:48,耗时:0s======================
2018-07-05 16:32:48,909 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:32:48,910 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,395 - ===========进入拦截器==============
2018-07-05 16:32:49,395 - http://localhost:8081/home
2018-07-05 16:32:49,406 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:32:49,406 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,406 - url=http://localhost:8081/home
2018-07-05 16:32:49,407 - method=GET
2018-07-05 16:32:49,407 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,407 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:32:49,407 - args:
2018-07-05 16:32:49,407 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,407 - response=/home
2018-07-05 16:32:49,408 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,512 - ===========进入拦截器==============
2018-07-05 16:32:49,512 - http://localhost:8081/welcome
2018-07-05 16:32:49,518 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:32:49,518 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,518 - url=http://localhost:8081/welcome
2018-07-05 16:32:49,519 - method=GET
2018-07-05 16:32:49,519 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,519 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:32:49,519 - args:
2018-07-05 16:32:49,519 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,519 - response=/welcome
2018-07-05 16:32:49,519 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,556 - ===========进入拦截器==============
2018-07-05 16:32:49,556 - http://localhost:8081/common/top
2018-07-05 16:32:49,558 - ===========进入拦截器==============
2018-07-05 16:32:49,558 - http://localhost:8081/common/left
2018-07-05 16:32:49,558 - ===========进入拦截器==============
2018-07-05 16:32:49,559 - http://localhost:8081/common/footer
2018-07-05 16:32:49,560 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:32:49,560 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,560 - url=http://localhost:8081/common/top
2018-07-05 16:32:49,560 - method=GET
2018-07-05 16:32:49,560 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,560 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:32:49,560 - args:
2018-07-05 16:32:49,560 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,560 - response=/common/top
2018-07-05 16:32:49,561 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,562 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:32:49,562 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,562 - url=http://localhost:8081/common/left
2018-07-05 16:32:49,562 - method=GET
2018-07-05 16:32:49,562 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,562 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:32:49,562 - args:
2018-07-05 16:32:49,562 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,563 - response=/common/left
2018-07-05 16:32:49,563 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:32:49,565 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,565 - url=http://localhost:8081/common/footer
2018-07-05 16:32:49,565 - method=GET
2018-07-05 16:32:49,565 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,565 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:32:49,565 - args:
2018-07-05 16:32:49,565 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,565 - response=/common/footer
2018-07-05 16:32:49,566 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:49,608 - ===========进入拦截器==============
2018-07-05 16:32:49,608 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:32:49,612 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:32:49,612 - ===========请求时间:2018-07-05 16:32:49==========================
2018-07-05 16:32:49,612 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:32:49,612 - method=GET
2018-07-05 16:32:49,612 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:49,612 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:32:49,612 - args:roleId=1,
2018-07-05 16:32:49,621 - =============结束请求时间:2018-07-05 16:32:49,耗时:0s======================
2018-07-05 16:32:49,622 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:32:49,623 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:50,754 - ===========进入拦截器==============
2018-07-05 16:32:50,754 - http://localhost:8081/number-coin.html
2018-07-05 16:32:50,761 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:32:50,761 - ===========请求时间:2018-07-05 16:32:50==========================
2018-07-05 16:32:50,761 - url=http://localhost:8081/number-coin.html
2018-07-05 16:32:50,761 - method=GET
2018-07-05 16:32:50,761 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:50,761 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:32:50,761 - args:
2018-07-05 16:32:50,761 - =============结束请求时间:2018-07-05 16:32:50,耗时:0s======================
2018-07-05 16:32:50,761 - response=/number-coin
2018-07-05 16:32:50,761 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:50,926 - ===========进入拦截器==============
2018-07-05 16:32:50,926 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:50,932 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:32:50,932 - ===========请求时间:2018-07-05 16:32:50==========================
2018-07-05 16:32:50,932 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:50,932 - method=GET
2018-07-05 16:32:50,932 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:50,932 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:32:50,932 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:32:50,964 - =============结束请求时间:2018-07-05 16:32:50,耗时:0s======================
2018-07-05 16:32:50,965 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:32:50,979 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:32:54,575 - ===========进入拦截器==============
2018-07-05 16:32:54,575 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:54,580 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:32:54,580 - ===========请求时间:2018-07-05 16:32:54==========================
2018-07-05 16:32:54,580 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:32:54,580 - method=GET
2018-07-05 16:32:54,580 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:32:54,580 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:32:54,580 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:32:54,588 - =============结束请求时间:2018-07-05 16:32:54,耗时:0s======================
2018-07-05 16:32:54,588 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:32:54,589 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:33:59,014 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11132 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:33:59,018 - No active profile set, falling back to default profiles: default
2018-07-05 16:33:59,187 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:33:59,247 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Thu Jul 05 16:33:59 CST 2018]; root of context hierarchy
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:00,306 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:34:00,307 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:34:01,800 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:34:01,813 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:34:01,821 - Starting service [Tomcat]
2018-07-05 16:34:01,821 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:34:01,928 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:34:01,928 - Root WebApplicationContext: initialization completed in 2681 ms
2018-07-05 16:34:02,139 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:34:02,144 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:34:02,144 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:34:02,144 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:34:02,144 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:34:02,144 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:34:03,749 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1fe6e4cc: startup date [Thu Jul 05 16:33:59 CST 2018]; root of context hierarchy
2018-07-05 16:34:03,847 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:34:03,848 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:34:03,848 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:34:03,848 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:34:03,848 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:34:03,849 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:34:03,849 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:34:03,849 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:34:03,849 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:34:03,849 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:34:03,849 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:34:03,849 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:34:03,850 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:34:03,850 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:34:03,850 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:34:03,850 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:34:03,850 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:34:03,850 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:34:03,850 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:34:03,850 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:34:03,851 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:34:03,851 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:34:03,854 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:34:03,855 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:34:03,857 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:34:03,857 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:34:03,857 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:34:03,857 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:34:03,857 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:34:03,858 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:34:03,858 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:34:03,858 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:34:03,858 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:34:03,859 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:34:03,859 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:34:03,859 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:34:03,859 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:34:03,860 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:34:03,861 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:34:03,861 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:34:03,861 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:34:03,861 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:34:03,861 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:34:03,862 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:34:03,862 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:34:03,863 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:03,863 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:34:03,864 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:34:03,864 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:34:03,864 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:34:03,864 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:03,864 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:03,865 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:34:03,865 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:34:03,865 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:34:03,866 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:34:03,866 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:34:03,867 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:34:03,868 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:34:03,917 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:03,917 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:03,943 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:34:03,976 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:04,784 - LiveReload server is running on port 35729
2018-07-05 16:34:04,911 - Registering beans for JMX exposure on startup
2018-07-05 16:34:04,913 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:34:04,919 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:34:04,931 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:34:04,958 - Using a shared selector for servlet write/read
2018-07-05 16:34:04,978 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:34:04,986 - Started FqLtdWasBackstageApplication in 6.789 seconds (JVM running for 7.986)
2018-07-05 16:34:07,607 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:34:07,607 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:34:07,649 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 16:34:07,683 - ===========进入拦截器==============
2018-07-05 16:34:07,725 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:34:07,725 - ===========请求时间:2018-07-05 16:34:07==========================
2018-07-05 16:34:07,726 - url=http://localhost:8081/login
2018-07-05 16:34:07,726 - method=GET
2018-07-05 16:34:07,726 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:07,726 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:34:07,726 - args:
2018-07-05 16:34:07,730 - =============结束请求时间:2018-07-05 16:34:07,耗时:0s======================
2018-07-05 16:34:07,730 - response=/login
2018-07-05 16:34:07,761 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:34:07,834 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:34:07,835 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:34:07,835 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:34:07,835 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:34:07,840 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:34:07,840 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:34:12,203 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:34:12,203 - ===========请求时间:2018-07-05 16:34:12==========================
2018-07-05 16:34:12,203 - url=http://localhost:8081/signIn
2018-07-05 16:34:12,203 - method=POST
2018-07-05 16:34:12,203 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:12,203 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:34:12,203 - args:userName=admin,password=123456,
2018-07-05 16:34:12,300 - {dataSource-1} inited
2018-07-05 16:34:12,744 - =============结束请求时间:2018-07-05 16:34:12,耗时:0s======================
2018-07-05 16:34:12,744 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:34:12, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:34:12,846 - ===========进入拦截器==============
2018-07-05 16:34:12,846 - http://localhost:8081/home
2018-07-05 16:34:12,851 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:34:12,851 - ===========请求时间:2018-07-05 16:34:12==========================
2018-07-05 16:34:12,851 - url=http://localhost:8081/home
2018-07-05 16:34:12,851 - method=GET
2018-07-05 16:34:12,851 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:12,851 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:34:12,851 - args:
2018-07-05 16:34:12,852 - =============结束请求时间:2018-07-05 16:34:12,耗时:0s======================
2018-07-05 16:34:12,852 - response=/home
2018-07-05 16:34:12,852 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:12,949 - ===========进入拦截器==============
2018-07-05 16:34:12,949 - http://localhost:8081/welcome
2018-07-05 16:34:13,021 - ===========进入拦截器==============
2018-07-05 16:34:13,021 - http://localhost:8081/common/top
2018-07-05 16:34:13,024 - ===========进入拦截器==============
2018-07-05 16:34:13,024 - ===========进入拦截器==============
2018-07-05 16:34:13,024 - http://localhost:8081/common/footer
2018-07-05 16:34:13,025 - http://localhost:8081/common/left
2018-07-05 16:34:13,026 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:34:13,026 - ===========请求时间:2018-07-05 16:34:13==========================
2018-07-05 16:34:13,026 - url=http://localhost:8081/welcome
2018-07-05 16:34:13,026 - method=GET
2018-07-05 16:34:13,026 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:13,026 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:34:13,026 - args:
2018-07-05 16:34:13,026 - =============结束请求时间:2018-07-05 16:34:13,耗时:0s======================
2018-07-05 16:34:13,027 - response=/welcome
2018-07-05 16:34:13,027 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:13,033 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:34:13,033 - ===========请求时间:2018-07-05 16:34:13==========================
2018-07-05 16:34:13,033 - url=http://localhost:8081/common/top
2018-07-05 16:34:13,033 - method=GET
2018-07-05 16:34:13,033 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:13,033 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:34:13,033 - args:
2018-07-05 16:34:13,033 - =============结束请求时间:2018-07-05 16:34:13,耗时:0s======================
2018-07-05 16:34:13,033 - response=/common/top
2018-07-05 16:34:13,034 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:13,052 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:34:13,052 - ===========请求时间:2018-07-05 16:34:13==========================
2018-07-05 16:34:13,052 - url=http://localhost:8081/common/footer
2018-07-05 16:34:13,053 - method=GET
2018-07-05 16:34:13,053 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:13,053 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:34:13,053 - args:
2018-07-05 16:34:13,053 - =============结束请求时间:2018-07-05 16:34:13,耗时:0s======================
2018-07-05 16:34:13,053 - response=/common/footer
2018-07-05 16:34:13,053 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:13,074 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:34:13,074 - ===========请求时间:2018-07-05 16:34:13==========================
2018-07-05 16:34:13,074 - url=http://localhost:8081/common/left
2018-07-05 16:34:13,074 - method=GET
2018-07-05 16:34:13,074 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:13,074 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:34:13,074 - args:
2018-07-05 16:34:13,074 - =============结束请求时间:2018-07-05 16:34:13,耗时:0s======================
2018-07-05 16:34:13,074 - response=/common/left
2018-07-05 16:34:13,075 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:13,111 - ===========进入拦截器==============
2018-07-05 16:34:13,111 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:34:13,123 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:34:13,124 - ===========请求时间:2018-07-05 16:34:13==========================
2018-07-05 16:34:13,124 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:34:13,124 - method=GET
2018-07-05 16:34:13,124 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:13,124 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:34:13,124 - args:roleId=1,
2018-07-05 16:34:13,174 - =============结束请求时间:2018-07-05 16:34:13,耗时:0s======================
2018-07-05 16:34:13,175 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:34:13,188 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:14,515 - ===========进入拦截器==============
2018-07-05 16:34:14,515 - http://localhost:8081/number-coin.html
2018-07-05 16:34:14,520 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:34:14,520 - ===========请求时间:2018-07-05 16:34:14==========================
2018-07-05 16:34:14,520 - url=http://localhost:8081/number-coin.html
2018-07-05 16:34:14,520 - method=GET
2018-07-05 16:34:14,520 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:14,521 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:34:14,521 - args:
2018-07-05 16:34:14,521 - =============结束请求时间:2018-07-05 16:34:14,耗时:0s======================
2018-07-05 16:34:14,521 - response=/number-coin
2018-07-05 16:34:14,521 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:14,697 - ===========进入拦截器==============
2018-07-05 16:34:14,697 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:34:14,718 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:34:14,719 - ===========请求时间:2018-07-05 16:34:14==========================
2018-07-05 16:34:14,719 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:34:14,719 - method=GET
2018-07-05 16:34:14,719 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:14,719 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:34:14,719 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:34:14,746 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-07-05 16:34:14,816 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-07-05 16:34:14,856 - =============结束请求时间:2018-07-05 16:34:14,耗时:0s======================
2018-07-05 16:34:46,205 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15636 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:34:46,208 - No active profile set, falling back to default profiles: default
2018-07-05 16:34:46,421 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:34:46,474 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29d98327: startup date [Thu Jul 05 16:34:46 CST 2018]; root of context hierarchy
2018-07-05 16:34:47,660 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,660 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,660 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,661 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,661 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,661 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:34:47,661 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:34:47,661 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:34:48,858 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:34:48,868 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:34:48,877 - Starting service [Tomcat]
2018-07-05 16:34:48,878 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:34:48,978 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:34:48,978 - Root WebApplicationContext: initialization completed in 2504 ms
2018-07-05 16:34:49,213 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:34:49,217 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:34:49,218 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:34:49,218 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:34:49,218 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:34:49,218 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:34:50,727 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29d98327: startup date [Thu Jul 05 16:34:46 CST 2018]; root of context hierarchy
2018-07-05 16:34:50,826 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:34:50,827 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:34:50,827 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:34:50,827 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:34:50,828 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:34:50,828 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:34:50,828 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:34:50,828 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:34:50,828 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:34:50,828 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:34:50,828 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:34:50,829 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:34:50,829 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:34:50,829 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:34:50,829 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:34:50,829 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:34:50,830 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:34:50,830 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:34:50,830 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:34:50,830 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:34:50,830 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:34:50,830 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:34:50,833 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:34:50,833 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:34:50,835 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:34:50,835 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:34:50,835 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:34:50,835 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:34:50,836 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:34:50,836 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:34:50,836 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:34:50,836 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:34:50,836 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:34:50,837 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:34:50,837 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:34:50,837 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:34:50,838 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:34:50,839 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:34:50,839 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:34:50,839 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:34:50,839 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:34:50,839 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:34:50,839 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:34:50,840 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:34:50,840 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:34:50,842 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:50,842 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:34:50,843 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:34:50,843 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:34:50,843 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:34:50,843 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:50,843 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:34:50,844 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:34:50,844 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:34:50,844 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:34:50,844 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:34:50,844 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:34:50,846 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:34:50,846 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:34:50,900 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:50,900 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:50,929 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:34:50,964 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:34:51,725 - LiveReload server is running on port 35729
2018-07-05 16:34:51,901 - Registering beans for JMX exposure on startup
2018-07-05 16:34:51,904 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:34:51,910 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:34:51,926 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:34:51,960 - Using a shared selector for servlet write/read
2018-07-05 16:34:51,981 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:34:51,988 - Started FqLtdWasBackstageApplication in 6.578 seconds (JVM running for 7.689)
2018-07-05 16:34:53,681 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:34:53,681 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:34:53,723 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 16:34:53,754 - ===========进入拦截器==============
2018-07-05 16:34:53,792 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:34:53,792 - ===========请求时间:2018-07-05 16:34:53==========================
2018-07-05 16:34:53,793 - url=http://localhost:8081/login
2018-07-05 16:34:53,793 - method=GET
2018-07-05 16:34:53,793 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:53,793 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:34:53,793 - args:
2018-07-05 16:34:53,797 - =============结束请求时间:2018-07-05 16:34:53,耗时:0s======================
2018-07-05 16:34:53,797 - response=/login
2018-07-05 16:34:53,833 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:34:53,920 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:34:53,920 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:34:53,920 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:34:53,920 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:34:53,927 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:34:53,927 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:34:57,980 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:34:57,980 - ===========请求时间:2018-07-05 16:34:57==========================
2018-07-05 16:34:57,980 - url=http://localhost:8081/signIn
2018-07-05 16:34:57,980 - method=POST
2018-07-05 16:34:57,980 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:57,980 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:34:57,980 - args:userName=admin,password=123456,
2018-07-05 16:34:58,072 - {dataSource-1} inited
2018-07-05 16:34:58,477 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,477 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:34:58, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:34:58,581 - ===========进入拦截器==============
2018-07-05 16:34:58,581 - http://localhost:8081/home
2018-07-05 16:34:58,586 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:34:58,587 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,587 - url=http://localhost:8081/home
2018-07-05 16:34:58,587 - method=GET
2018-07-05 16:34:58,587 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,587 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:34:58,587 - args:
2018-07-05 16:34:58,587 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,587 - response=/home
2018-07-05 16:34:58,587 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:58,701 - ===========进入拦截器==============
2018-07-05 16:34:58,701 - http://localhost:8081/welcome
2018-07-05 16:34:58,706 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:34:58,706 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,706 - url=http://localhost:8081/welcome
2018-07-05 16:34:58,706 - method=GET
2018-07-05 16:34:58,706 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,706 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:34:58,706 - args:
2018-07-05 16:34:58,707 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,707 - response=/welcome
2018-07-05 16:34:58,707 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:58,774 - ===========进入拦截器==============
2018-07-05 16:34:58,774 - ===========进入拦截器==============
2018-07-05 16:34:58,774 - http://localhost:8081/common/top
2018-07-05 16:34:58,774 - http://localhost:8081/common/left
2018-07-05 16:34:58,774 - ===========进入拦截器==============
2018-07-05 16:34:58,775 - http://localhost:8081/common/footer
2018-07-05 16:34:58,781 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:34:58,781 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,781 - url=http://localhost:8081/common/left
2018-07-05 16:34:58,781 - method=GET
2018-07-05 16:34:58,781 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,781 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:34:58,781 - args:
2018-07-05 16:34:58,781 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,781 - response=/common/left
2018-07-05 16:34:58,782 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:58,790 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:34:58,790 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,790 - url=http://localhost:8081/common/top
2018-07-05 16:34:58,791 - method=GET
2018-07-05 16:34:58,791 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,791 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:34:58,791 - args:
2018-07-05 16:34:58,791 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,791 - response=/common/top
2018-07-05 16:34:58,791 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:58,802 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:34:58,802 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,802 - url=http://localhost:8081/common/footer
2018-07-05 16:34:58,802 - method=GET
2018-07-05 16:34:58,802 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,802 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:34:58,802 - args:
2018-07-05 16:34:58,802 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,802 - response=/common/footer
2018-07-05 16:34:58,803 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:58,826 - ===========进入拦截器==============
2018-07-05 16:34:58,826 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:34:58,832 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:34:58,832 - ===========请求时间:2018-07-05 16:34:58==========================
2018-07-05 16:34:58,832 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:34:58,832 - method=GET
2018-07-05 16:34:58,832 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:58,832 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:34:58,832 - args:roleId=1,
2018-07-05 16:34:58,859 - =============结束请求时间:2018-07-05 16:34:58,耗时:0s======================
2018-07-05 16:34:58,859 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:34:58,868 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:34:59,956 - ===========进入拦截器==============
2018-07-05 16:34:59,957 - http://localhost:8081/number-coin.html
2018-07-05 16:34:59,962 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:34:59,962 - ===========请求时间:2018-07-05 16:34:59==========================
2018-07-05 16:34:59,962 - url=http://localhost:8081/number-coin.html
2018-07-05 16:34:59,962 - method=GET
2018-07-05 16:34:59,962 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:34:59,963 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:34:59,963 - args:
2018-07-05 16:34:59,963 - =============结束请求时间:2018-07-05 16:34:59,耗时:0s======================
2018-07-05 16:34:59,963 - response=/number-coin
2018-07-05 16:34:59,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:35:00,140 - ===========进入拦截器==============
2018-07-05 16:35:00,140 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:35:00,161 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:35:00,161 - ===========请求时间:2018-07-05 16:35:00==========================
2018-07-05 16:35:00,161 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:35:00,161 - method=GET
2018-07-05 16:35:00,161 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:35:00,161 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:35:00,161 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:35:00,181 - =============结束请求时间:2018-07-05 16:35:00,耗时:0s======================
2018-07-05 16:35:00,181 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:35:00,191 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:35:02,678 - ===========进入拦截器==============
2018-07-05 16:35:02,678 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:35:02,684 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:35:02,684 - ===========请求时间:2018-07-05 16:35:02==========================
2018-07-05 16:35:02,684 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:35:02,684 - method=GET
2018-07-05 16:35:02,684 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:35:02,684 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:35:02,684 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:35:02,697 - =============结束请求时间:2018-07-05 16:35:02,耗时:0s======================
2018-07-05 16:35:02,697 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:35:02,698 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:30,588 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 7844 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:42:30,590 - No active profile set, falling back to default profiles: default
2018-07-05 16:42:30,775 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:42:30,828 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@933da3f: startup date [Thu Jul 05 16:42:30 CST 2018]; root of context hierarchy
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:42:31,621 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:42:31,622 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:42:32,588 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:42:32,599 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:42:32,610 - Starting service [Tomcat]
2018-07-05 16:42:32,611 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:42:32,719 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:42:32,719 - Root WebApplicationContext: initialization completed in 1891 ms
2018-07-05 16:42:32,925 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:42:32,929 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:42:32,929 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:42:32,929 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:42:32,929 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:42:32,929 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:42:34,469 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@933da3f: startup date [Thu Jul 05 16:42:30 CST 2018]; root of context hierarchy
2018-07-05 16:42:34,571 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:42:34,572 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:42:34,572 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:42:34,572 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:42:34,572 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:42:34,572 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:42:34,572 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:42:34,572 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:42:34,573 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:42:34,573 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:42:34,573 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:42:34,573 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:42:34,573 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:42:34,573 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:42:34,573 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:42:34,574 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:42:34,574 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:42:34,574 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:42:34,574 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:42:34,574 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:42:34,574 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:42:34,574 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:42:34,579 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:42:34,579 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:42:34,581 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:42:34,581 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:42:34,581 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:42:34,581 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:42:34,581 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:42:34,581 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:42:34,581 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:42:34,581 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:42:34,583 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:42:34,584 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:42:34,584 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:42:34,584 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:42:34,584 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:42:34,585 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:42:34,585 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:42:34,585 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:42:34,586 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:42:34,586 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:42:34,586 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:42:34,586 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:42:34,587 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:42:34,588 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:42:34,588 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:42:34,588 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:42:34,588 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:42:34,588 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:42:34,588 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:42:34,589 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:42:34,589 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:42:34,589 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:42:34,590 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:42:34,590 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:42:34,590 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:42:34,592 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:42:34,592 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:42:34,644 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:42:34,644 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:42:34,671 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:42:34,727 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:42:35,483 - LiveReload server is running on port 35729
2018-07-05 16:42:35,611 - Registering beans for JMX exposure on startup
2018-07-05 16:42:35,612 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:42:35,621 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:42:35,634 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:42:35,665 - Using a shared selector for servlet write/read
2018-07-05 16:42:35,686 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:42:35,699 - Started FqLtdWasBackstageApplication in 5.9 seconds (JVM running for 7.081)
2018-07-05 16:42:38,198 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:42:38,198 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:42:38,242 - FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
2018-07-05 16:42:38,270 - ===========进入拦截器==============
2018-07-05 16:42:38,306 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:42:38,306 - ===========请求时间:2018-07-05 16:42:38==========================
2018-07-05 16:42:38,307 - url=http://localhost:8081/login
2018-07-05 16:42:38,307 - method=GET
2018-07-05 16:42:38,307 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:38,307 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:42:38,307 - args:
2018-07-05 16:42:38,311 - =============结束请求时间:2018-07-05 16:42:38,耗时:0s======================
2018-07-05 16:42:38,311 - response=/login
2018-07-05 16:42:38,342 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:42:38,412 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:42:38,412 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:42:38,412 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:42:38,412 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:42:38,417 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:42:38,417 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:42:42,386 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:42:42,386 - ===========请求时间:2018-07-05 16:42:42==========================
2018-07-05 16:42:42,386 - url=http://localhost:8081/signIn
2018-07-05 16:42:42,386 - method=POST
2018-07-05 16:42:42,386 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:42,386 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:42:42,386 - args:userName=admin,password=123456,
2018-07-05 16:42:42,482 - {dataSource-1} inited
2018-07-05 16:42:43,686 - =============结束请求时间:2018-07-05 16:42:43,耗时:1s======================
2018-07-05 16:42:43,686 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:42:43, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:42:43,791 - ===========进入拦截器==============
2018-07-05 16:42:43,791 - http://localhost:8081/home
2018-07-05 16:42:43,797 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:42:43,797 - ===========请求时间:2018-07-05 16:42:43==========================
2018-07-05 16:42:43,797 - url=http://localhost:8081/home
2018-07-05 16:42:43,797 - method=GET
2018-07-05 16:42:43,797 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:43,797 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:42:43,797 - args:
2018-07-05 16:42:43,797 - =============结束请求时间:2018-07-05 16:42:43,耗时:0s======================
2018-07-05 16:42:43,797 - response=/home
2018-07-05 16:42:43,798 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:43,896 - ===========进入拦截器==============
2018-07-05 16:42:43,896 - http://localhost:8081/welcome
2018-07-05 16:42:43,903 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:42:43,904 - ===========请求时间:2018-07-05 16:42:43==========================
2018-07-05 16:42:43,904 - url=http://localhost:8081/welcome
2018-07-05 16:42:43,904 - method=GET
2018-07-05 16:42:43,904 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:43,904 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:42:43,904 - args:
2018-07-05 16:42:43,904 - =============结束请求时间:2018-07-05 16:42:43,耗时:0s======================
2018-07-05 16:42:43,904 - response=/welcome
2018-07-05 16:42:43,904 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:43,960 - ===========进入拦截器==============
2018-07-05 16:42:43,960 - http://localhost:8081/common/top
2018-07-05 16:42:43,961 - ===========进入拦截器==============
2018-07-05 16:42:43,961 - http://localhost:8081/common/left
2018-07-05 16:42:43,962 - ===========进入拦截器==============
2018-07-05 16:42:43,963 - http://localhost:8081/common/footer
2018-07-05 16:42:43,966 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:42:43,966 - ===========请求时间:2018-07-05 16:42:43==========================
2018-07-05 16:42:43,966 - url=http://localhost:8081/common/top
2018-07-05 16:42:43,967 - method=GET
2018-07-05 16:42:43,967 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:43,967 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:42:43,967 - args:
2018-07-05 16:42:43,967 - =============结束请求时间:2018-07-05 16:42:43,耗时:0s======================
2018-07-05 16:42:43,967 - response=/common/top
2018-07-05 16:42:43,967 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:43,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:42:43,990 - ===========请求时间:2018-07-05 16:42:43==========================
2018-07-05 16:42:43,990 - url=http://localhost:8081/common/left
2018-07-05 16:42:43,990 - method=GET
2018-07-05 16:42:43,990 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:43,990 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:42:43,990 - args:
2018-07-05 16:42:43,990 - =============结束请求时间:2018-07-05 16:42:43,耗时:0s======================
2018-07-05 16:42:43,991 - response=/common/left
2018-07-05 16:42:43,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:43,994 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:42:43,995 - ===========请求时间:2018-07-05 16:42:43==========================
2018-07-05 16:42:43,995 - url=http://localhost:8081/common/footer
2018-07-05 16:42:43,995 - method=GET
2018-07-05 16:42:43,995 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:43,995 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:42:43,995 - args:
2018-07-05 16:42:43,995 - =============结束请求时间:2018-07-05 16:42:43,耗时:0s======================
2018-07-05 16:42:43,995 - response=/common/footer
2018-07-05 16:42:43,995 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:44,039 - ===========进入拦截器==============
2018-07-05 16:42:44,039 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:42:44,051 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:42:44,051 - ===========请求时间:2018-07-05 16:42:44==========================
2018-07-05 16:42:44,051 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:42:44,051 - method=GET
2018-07-05 16:42:44,051 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:44,051 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:42:44,052 - args:roleId=1,
2018-07-05 16:42:44,151 - =============结束请求时间:2018-07-05 16:42:44,耗时:0s======================
2018-07-05 16:42:44,152 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:42:44,164 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:45,369 - ===========进入拦截器==============
2018-07-05 16:42:45,370 - http://localhost:8081/number-coin.html
2018-07-05 16:42:45,379 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:42:45,379 - ===========请求时间:2018-07-05 16:42:45==========================
2018-07-05 16:42:45,379 - url=http://localhost:8081/number-coin.html
2018-07-05 16:42:45,379 - method=GET
2018-07-05 16:42:45,379 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:45,379 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:42:45,379 - args:
2018-07-05 16:42:45,380 - =============结束请求时间:2018-07-05 16:42:45,耗时:0s======================
2018-07-05 16:42:45,380 - response=/number-coin
2018-07-05 16:42:45,380 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:45,567 - ===========进入拦截器==============
2018-07-05 16:42:45,567 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:42:45,596 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:42:45,596 - ===========请求时间:2018-07-05 16:42:45==========================
2018-07-05 16:42:45,596 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:42:45,596 - method=GET
2018-07-05 16:42:45,596 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:45,596 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:42:45,596 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:42:45,686 - =============结束请求时间:2018-07-05 16:42:45,耗时:0s======================
2018-07-05 16:42:45,688 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:42:45,698 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:48,096 - ===========进入拦截器==============
2018-07-05 16:42:48,096 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:42:48,104 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:42:48,105 - ===========请求时间:2018-07-05 16:42:48==========================
2018-07-05 16:42:48,105 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:42:48,105 - method=GET
2018-07-05 16:42:48,105 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:48,105 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:42:48,105 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:42:48,118 - =============结束请求时间:2018-07-05 16:42:48,耗时:0s======================
2018-07-05 16:42:48,118 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:42:48,119 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:51,258 - ===========进入拦截器==============
2018-07-05 16:42:51,259 - http://localhost:8081/number-coin-add.html
2018-07-05 16:42:51,264 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:42:51,264 - ===========请求时间:2018-07-05 16:42:51==========================
2018-07-05 16:42:51,264 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:42:51,264 - method=GET
2018-07-05 16:42:51,264 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:51,264 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:42:51,264 - args:wasId=31,
2018-07-05 16:42:51,264 - =============结束请求时间:2018-07-05 16:42:51,耗时:0s======================
2018-07-05 16:42:51,264 - response=/number-coin-add
2018-07-05 16:42:51,265 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:42:54,227 - ===========进入拦截器==============
2018-07-05 16:42:54,228 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:42:54,243 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:42:54,243 - ===========请求时间:2018-07-05 16:42:54==========================
2018-07-05 16:42:54,244 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:42:54,244 - method=GET
2018-07-05 16:42:54,244 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:42:54,244 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:42:54,244 - args:
2018-07-05 16:42:54,252 - =============结束请求时间:2018-07-05 16:42:54,耗时:0s======================
2018-07-05 16:42:54,252 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:42:54,257 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:05,685 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 10768 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:47:05,688 - No active profile set, falling back to default profiles: default
2018-07-05 16:47:05,843 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:47:05,949 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Thu Jul 05 16:47:05 CST 2018]; root of context hierarchy
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:47:06,764 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:47:06,764 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:47:07,795 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:47:07,809 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:47:07,820 - Starting service [Tomcat]
2018-07-05 16:47:07,820 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:47:07,924 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:47:07,924 - Root WebApplicationContext: initialization completed in 1975 ms
2018-07-05 16:47:08,145 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:47:08,150 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:47:08,151 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:47:08,152 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:47:08,152 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:47:08,152 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:47:09,693 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@36c2c164: startup date [Thu Jul 05 16:47:05 CST 2018]; root of context hierarchy
2018-07-05 16:47:09,801 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:47:09,803 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:47:09,803 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:47:09,803 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:47:09,803 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:47:09,804 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:47:09,804 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:47:09,804 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:47:09,804 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:47:09,804 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:47:09,804 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:47:09,804 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:47:09,804 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:47:09,805 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:47:09,805 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:47:09,805 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:47:09,805 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:47:09,805 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:47:09,805 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:47:09,805 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:47:09,805 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:47:09,805 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:47:09,809 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:47:09,809 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:47:09,811 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:47:09,812 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:47:09,812 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:47:09,812 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:47:09,812 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:47:09,812 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:47:09,812 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:47:09,813 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:47:09,813 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:47:09,814 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:47:09,814 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:47:09,814 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:47:09,814 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:47:09,815 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:47:09,816 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:47:09,816 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:47:09,816 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:47:09,816 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:47:09,816 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:47:09,817 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:47:09,817 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:47:09,819 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:47:09,819 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:47:09,819 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:47:09,819 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:47:09,820 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:47:09,820 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:47:09,820 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:47:09,821 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:47:09,821 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:47:09,821 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:47:09,821 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:47:09,821 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:47:09,822 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:47:09,823 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:47:09,876 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:47:09,876 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:47:09,902 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:47:09,936 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:47:10,824 - LiveReload server is running on port 35729
2018-07-05 16:47:10,957 - Registering beans for JMX exposure on startup
2018-07-05 16:47:10,959 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:47:10,965 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:47:10,978 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:47:11,010 - Using a shared selector for servlet write/read
2018-07-05 16:47:11,030 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:47:11,039 - Started FqLtdWasBackstageApplication in 6.454 seconds (JVM running for 7.603)
2018-07-05 16:47:50,074 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:47:50,074 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:47:50,114 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 16:47:50,144 - ===========进入拦截器==============
2018-07-05 16:47:50,180 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:47:50,181 - ===========请求时间:2018-07-05 16:47:50==========================
2018-07-05 16:47:50,181 - url=http://localhost:8081/login
2018-07-05 16:47:50,181 - method=GET
2018-07-05 16:47:50,181 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:50,181 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:47:50,181 - args:
2018-07-05 16:47:50,185 - =============结束请求时间:2018-07-05 16:47:50,耗时:0s======================
2018-07-05 16:47:50,185 - response=/login
2018-07-05 16:47:50,220 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:47:50,294 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:47:50,294 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:47:50,294 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:47:50,294 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:47:50,300 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:47:50,300 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:47:54,501 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:47:54,501 - ===========请求时间:2018-07-05 16:47:54==========================
2018-07-05 16:47:54,501 - url=http://localhost:8081/signIn
2018-07-05 16:47:54,501 - method=POST
2018-07-05 16:47:54,501 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:54,501 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:47:54,501 - args:userName=admin,password=123456,
2018-07-05 16:47:54,595 - {dataSource-1} inited
2018-07-05 16:47:54,998 - =============结束请求时间:2018-07-05 16:47:54,耗时:0s======================
2018-07-05 16:47:54,999 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:47:54, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:47:55,108 - ===========进入拦截器==============
2018-07-05 16:47:55,108 - http://localhost:8081/home
2018-07-05 16:47:55,115 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:47:55,115 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,115 - url=http://localhost:8081/home
2018-07-05 16:47:55,115 - method=GET
2018-07-05 16:47:55,115 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,115 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:47:55,115 - args:
2018-07-05 16:47:55,115 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,115 - response=/home
2018-07-05 16:47:55,116 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:55,217 - ===========进入拦截器==============
2018-07-05 16:47:55,217 - http://localhost:8081/welcome
2018-07-05 16:47:55,222 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:47:55,222 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,222 - url=http://localhost:8081/welcome
2018-07-05 16:47:55,222 - method=GET
2018-07-05 16:47:55,222 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,222 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:47:55,222 - args:
2018-07-05 16:47:55,223 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,223 - response=/welcome
2018-07-05 16:47:55,223 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:55,272 - ===========进入拦截器==============
2018-07-05 16:47:55,273 - http://localhost:8081/common/top
2018-07-05 16:47:55,273 - ===========进入拦截器==============
2018-07-05 16:47:55,273 - http://localhost:8081/common/left
2018-07-05 16:47:55,274 - ===========进入拦截器==============
2018-07-05 16:47:55,274 - http://localhost:8081/common/footer
2018-07-05 16:47:55,279 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:47:55,279 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,279 - url=http://localhost:8081/common/top
2018-07-05 16:47:55,279 - method=GET
2018-07-05 16:47:55,279 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,279 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:47:55,279 - args:
2018-07-05 16:47:55,280 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,280 - response=/common/top
2018-07-05 16:47:55,280 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:55,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:47:55,296 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,296 - url=http://localhost:8081/common/left
2018-07-05 16:47:55,296 - method=GET
2018-07-05 16:47:55,296 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,297 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:47:55,297 - args:
2018-07-05 16:47:55,297 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,297 - response=/common/left
2018-07-05 16:47:55,297 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:55,303 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:47:55,303 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,303 - url=http://localhost:8081/common/footer
2018-07-05 16:47:55,303 - method=GET
2018-07-05 16:47:55,304 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,304 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:47:55,304 - args:
2018-07-05 16:47:55,304 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,304 - response=/common/footer
2018-07-05 16:47:55,304 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:55,363 - ===========进入拦截器==============
2018-07-05 16:47:55,363 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:47:55,375 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:47:55,375 - ===========请求时间:2018-07-05 16:47:55==========================
2018-07-05 16:47:55,375 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:47:55,375 - method=GET
2018-07-05 16:47:55,375 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:55,375 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:47:55,375 - args:roleId=1,
2018-07-05 16:47:55,430 - =============结束请求时间:2018-07-05 16:47:55,耗时:0s======================
2018-07-05 16:47:55,430 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:47:55,442 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:56,554 - ===========进入拦截器==============
2018-07-05 16:47:56,554 - http://localhost:8081/number-coin.html
2018-07-05 16:47:56,560 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:47:56,560 - ===========请求时间:2018-07-05 16:47:56==========================
2018-07-05 16:47:56,560 - url=http://localhost:8081/number-coin.html
2018-07-05 16:47:56,560 - method=GET
2018-07-05 16:47:56,560 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:56,560 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:47:56,560 - args:
2018-07-05 16:47:56,560 - =============结束请求时间:2018-07-05 16:47:56,耗时:0s======================
2018-07-05 16:47:56,560 - response=/number-coin
2018-07-05 16:47:56,560 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:56,733 - ===========进入拦截器==============
2018-07-05 16:47:56,733 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:47:56,754 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:47:56,755 - ===========请求时间:2018-07-05 16:47:56==========================
2018-07-05 16:47:56,755 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:47:56,755 - method=GET
2018-07-05 16:47:56,755 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:56,755 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:47:56,755 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:47:56,771 - =============结束请求时间:2018-07-05 16:47:56,耗时:0s======================
2018-07-05 16:47:56,772 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:47:56,778 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:47:59,927 - ===========进入拦截器==============
2018-07-05 16:47:59,927 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:47:59,936 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:47:59,936 - ===========请求时间:2018-07-05 16:47:59==========================
2018-07-05 16:47:59,936 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:47:59,936 - method=GET
2018-07-05 16:47:59,936 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:47:59,936 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:47:59,936 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:47:59,945 - =============结束请求时间:2018-07-05 16:47:59,耗时:0s======================
2018-07-05 16:47:59,945 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:47:59,946 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:48:02,698 - ===========进入拦截器==============
2018-07-05 16:48:02,698 - http://localhost:8081/number-coin-add.html
2018-07-05 16:48:02,705 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:48:02,705 - ===========请求时间:2018-07-05 16:48:02==========================
2018-07-05 16:48:02,705 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:48:02,705 - method=GET
2018-07-05 16:48:02,705 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:48:02,705 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:48:02,705 - args:wasId=31,
2018-07-05 16:48:02,705 - =============结束请求时间:2018-07-05 16:48:02,耗时:0s======================
2018-07-05 16:48:02,705 - response=/number-coin-add
2018-07-05 16:48:02,705 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:48:02,833 - ===========进入拦截器==============
2018-07-05 16:48:02,833 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:48:02,847 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:48:02,847 - ===========请求时间:2018-07-05 16:48:02==========================
2018-07-05 16:48:02,847 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:48:02,847 - method=GET
2018-07-05 16:48:02,847 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:48:02,847 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:48:02,847 - args:
2018-07-05 16:48:02,853 - =============结束请求时间:2018-07-05 16:48:02,耗时:0s======================
2018-07-05 16:48:02,854 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:48:02,858 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:50:51,486 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13956 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 16:50:51,489 - No active profile set, falling back to default profiles: default
2018-07-05 16:50:51,638 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 16:50:51,769 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2df88ca0: startup date [Thu Jul 05 16:50:51 CST 2018]; root of context hierarchy
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 16:50:52,616 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 16:50:52,617 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 16:50:53,626 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 16:50:53,636 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 16:50:53,646 - Starting service [Tomcat]
2018-07-05 16:50:53,646 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 16:50:53,746 - Initializing Spring embedded WebApplicationContext
2018-07-05 16:50:53,747 - Root WebApplicationContext: initialization completed in 1979 ms
2018-07-05 16:50:53,980 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 16:50:53,985 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 16:50:53,986 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 16:50:53,986 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 16:50:53,986 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 16:50:53,986 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 16:50:55,447 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2df88ca0: startup date [Thu Jul 05 16:50:51 CST 2018]; root of context hierarchy
2018-07-05 16:50:55,551 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 16:50:55,552 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 16:50:55,552 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 16:50:55,553 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 16:50:55,553 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 16:50:55,553 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 16:50:55,553 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 16:50:55,553 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 16:50:55,554 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 16:50:55,554 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 16:50:55,554 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 16:50:55,554 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 16:50:55,554 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 16:50:55,554 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 16:50:55,555 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 16:50:55,555 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 16:50:55,556 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 16:50:55,556 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 16:50:55,556 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 16:50:55,556 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 16:50:55,556 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 16:50:55,556 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 16:50:55,560 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 16:50:55,560 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 16:50:55,562 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:50:55,562 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 16:50:55,562 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 16:50:55,562 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 16:50:55,562 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 16:50:55,562 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 16:50:55,562 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 16:50:55,563 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 16:50:55,563 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 16:50:55,564 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 16:50:55,564 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 16:50:55,564 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 16:50:55,564 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 16:50:55,565 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 16:50:55,565 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 16:50:55,565 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 16:50:55,566 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 16:50:55,566 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 16:50:55,566 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 16:50:55,566 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 16:50:55,566 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 16:50:55,568 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 16:50:55,568 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 16:50:55,568 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 16:50:55,568 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:50:55,568 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:50:55,568 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 16:50:55,568 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 16:50:55,569 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 16:50:55,569 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 16:50:55,569 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 16:50:55,569 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 16:50:55,569 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 16:50:55,571 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 16:50:55,572 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 16:50:55,625 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:50:55,625 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:50:55,647 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 16:50:55,698 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 16:50:56,467 - LiveReload server is running on port 35729
2018-07-05 16:50:56,606 - Registering beans for JMX exposure on startup
2018-07-05 16:50:56,610 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 16:50:56,618 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 16:50:56,633 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 16:50:56,664 - Using a shared selector for servlet write/read
2018-07-05 16:50:56,686 - Tomcat started on port(s): 8081 (http)
2018-07-05 16:50:56,696 - Started FqLtdWasBackstageApplication in 6.175 seconds (JVM running for 7.318)
2018-07-05 16:50:59,636 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 16:50:59,636 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 16:50:59,681 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 16:50:59,724 - ===========进入拦截器==============
2018-07-05 16:50:59,768 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 16:50:59,768 - ===========请求时间:2018-07-05 16:50:59==========================
2018-07-05 16:50:59,768 - url=http://localhost:8081/login
2018-07-05 16:50:59,768 - method=GET
2018-07-05 16:50:59,768 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:50:59,768 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 16:50:59,768 - args:
2018-07-05 16:50:59,773 - =============结束请求时间:2018-07-05 16:50:59,耗时:0s======================
2018-07-05 16:50:59,774 - response=/login
2018-07-05 16:50:59,808 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 16:50:59,892 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 16:50:59,892 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 16:50:59,892 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 16:50:59,892 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 16:50:59,898 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 16:50:59,898 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 16:51:04,128 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 16:51:04,128 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,128 - url=http://localhost:8081/signIn
2018-07-05 16:51:04,128 - method=POST
2018-07-05 16:51:04,128 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,128 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 16:51:04,129 - args:userName=admin,password=123456,
2018-07-05 16:51:04,220 - {dataSource-1} inited
2018-07-05 16:51:04,647 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,647 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 16:51:04, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 16:51:04,748 - ===========进入拦截器==============
2018-07-05 16:51:04,748 - http://localhost:8081/home
2018-07-05 16:51:04,757 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 16:51:04,758 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,758 - url=http://localhost:8081/home
2018-07-05 16:51:04,758 - method=GET
2018-07-05 16:51:04,758 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,758 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 16:51:04,758 - args:
2018-07-05 16:51:04,758 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,758 - response=/home
2018-07-05 16:51:04,758 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:04,853 - ===========进入拦截器==============
2018-07-05 16:51:04,853 - http://localhost:8081/welcome
2018-07-05 16:51:04,860 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 16:51:04,860 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,860 - url=http://localhost:8081/welcome
2018-07-05 16:51:04,860 - method=GET
2018-07-05 16:51:04,860 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,860 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 16:51:04,860 - args:
2018-07-05 16:51:04,860 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,860 - response=/welcome
2018-07-05 16:51:04,861 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:04,923 - ===========进入拦截器==============
2018-07-05 16:51:04,923 - http://localhost:8081/common/top
2018-07-05 16:51:04,924 - ===========进入拦截器==============
2018-07-05 16:51:04,924 - ===========进入拦截器==============
2018-07-05 16:51:04,924 - http://localhost:8081/common/left
2018-07-05 16:51:04,924 - http://localhost:8081/common/footer
2018-07-05 16:51:04,927 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 16:51:04,927 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,927 - url=http://localhost:8081/common/top
2018-07-05 16:51:04,927 - method=GET
2018-07-05 16:51:04,927 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,927 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 16:51:04,927 - args:
2018-07-05 16:51:04,928 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,928 - response=/common/top
2018-07-05 16:51:04,928 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:04,937 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 16:51:04,938 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,938 - url=http://localhost:8081/common/footer
2018-07-05 16:51:04,938 - method=GET
2018-07-05 16:51:04,938 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,938 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 16:51:04,938 - args:
2018-07-05 16:51:04,938 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,939 - response=/common/footer
2018-07-05 16:51:04,939 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:04,949 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 16:51:04,949 - ===========请求时间:2018-07-05 16:51:04==========================
2018-07-05 16:51:04,949 - url=http://localhost:8081/common/left
2018-07-05 16:51:04,949 - method=GET
2018-07-05 16:51:04,949 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:04,949 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 16:51:04,949 - args:
2018-07-05 16:51:04,949 - =============结束请求时间:2018-07-05 16:51:04,耗时:0s======================
2018-07-05 16:51:04,949 - response=/common/left
2018-07-05 16:51:04,949 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:05,016 - ===========进入拦截器==============
2018-07-05 16:51:05,016 - http://localhost:8081/menu/findMenuByRole
2018-07-05 16:51:05,025 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 16:51:05,025 - ===========请求时间:2018-07-05 16:51:05==========================
2018-07-05 16:51:05,025 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 16:51:05,025 - method=GET
2018-07-05 16:51:05,025 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:05,025 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 16:51:05,025 - args:roleId=1,
2018-07-05 16:51:05,055 - =============结束请求时间:2018-07-05 16:51:05,耗时:0s======================
2018-07-05 16:51:05,056 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 16:51:05,099 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:06,236 - ===========进入拦截器==============
2018-07-05 16:51:06,236 - http://localhost:8081/number-coin.html
2018-07-05 16:51:06,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:51:06,239 - ===========请求时间:2018-07-05 16:51:06==========================
2018-07-05 16:51:06,239 - url=http://localhost:8081/number-coin.html
2018-07-05 16:51:06,239 - method=GET
2018-07-05 16:51:06,239 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:06,239 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:51:06,239 - args:
2018-07-05 16:51:06,239 - =============结束请求时间:2018-07-05 16:51:06,耗时:0s======================
2018-07-05 16:51:06,240 - response=/number-coin
2018-07-05 16:51:06,240 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:06,411 - ===========进入拦截器==============
2018-07-05 16:51:06,411 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:51:06,431 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:51:06,431 - ===========请求时间:2018-07-05 16:51:06==========================
2018-07-05 16:51:06,431 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:51:06,431 - method=GET
2018-07-05 16:51:06,431 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:06,431 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:51:06,431 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:51:06,444 - =============结束请求时间:2018-07-05 16:51:06,耗时:0s======================
2018-07-05 16:51:06,445 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:51:06,460 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:09,469 - ===========进入拦截器==============
2018-07-05 16:51:09,469 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:51:09,475 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:51:09,475 - ===========请求时间:2018-07-05 16:51:09==========================
2018-07-05 16:51:09,475 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:51:09,475 - method=GET
2018-07-05 16:51:09,475 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:09,475 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:51:09,475 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:51:09,483 - =============结束请求时间:2018-07-05 16:51:09,耗时:0s======================
2018-07-05 16:51:09,483 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=null, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:51:09,484 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:12,295 - ===========进入拦截器==============
2018-07-05 16:51:12,295 - http://localhost:8081/number-coin-add.html
2018-07-05 16:51:12,299 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:51:12,299 - ===========请求时间:2018-07-05 16:51:12==========================
2018-07-05 16:51:12,299 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:51:12,299 - method=GET
2018-07-05 16:51:12,299 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:12,299 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:51:12,299 - args:wasId=31,
2018-07-05 16:51:12,299 - =============结束请求时间:2018-07-05 16:51:12,耗时:0s======================
2018-07-05 16:51:12,299 - response=/number-coin-add
2018-07-05 16:51:12,299 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:51:12,436 - ===========进入拦截器==============
2018-07-05 16:51:12,437 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:51:12,447 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:51:12,447 - ===========请求时间:2018-07-05 16:51:12==========================
2018-07-05 16:51:12,447 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:51:12,447 - method=GET
2018-07-05 16:51:12,447 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:51:12,447 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:51:12,447 - args:
2018-07-05 16:51:12,457 - =============结束请求时间:2018-07-05 16:51:12,耗时:0s======================
2018-07-05 16:51:12,457 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test, wasType=test, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr, wasTokenAddress=312312reqwe, wasMinConfirm=1, wasStatus=1, wasPrecision=2, wasZeroGasPrice=1, wasZeroGasLimit=1, wasTransferGasPrice=1, wasTransferGasLimit=1, wasRemark=哈哈哈哈,tesrt
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:24:08 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:51:12,465 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:05,912 - ===========进入拦截器==============
2018-07-05 16:52:05,912 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:52:05,919 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:52:05,920 - ===========请求时间:2018-07-05 16:52:05==========================
2018-07-05 16:52:05,920 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:52:05,920 - method=GET
2018-07-05 16:52:05,920 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:05,920 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:52:05,920 - args:saveOrUpdate=2,wasId=31,wasBaseCurrency=test1,wasType=test1,wasTokenAddress=312312reqwe1,wasMinConfirm=11,wasBeginBlock=100,wasBlockNum=100,wasGateWay=hqrr3123,wasPrecision=31,wasZeroGasPrice=12,wasZeroGasLimit=12,wasTransferGasPrice=12,wasTransferGasLimit=12,iconIntroduceUrl=https://www.baidu.com,blockBrowsersUrl=https://www.baidu.com,wasStatus=1,wasRemark=哈哈哈哈,tesrt111111111111
,
2018-07-05 16:52:05,936 - =============结束请求时间:2018-07-05 16:52:05,耗时:0s======================
2018-07-05 16:52:05,937 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-05 16:52:05,938 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:08,151 - ===========进入拦截器==============
2018-07-05 16:52:08,151 - http://localhost:8081/number-coin-add.html
2018-07-05 16:52:08,155 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:52:08,156 - ===========请求时间:2018-07-05 16:52:08==========================
2018-07-05 16:52:08,156 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:52:08,156 - method=GET
2018-07-05 16:52:08,156 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:08,156 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:52:08,156 - args:wasId=31,
2018-07-05 16:52:08,156 - =============结束请求时间:2018-07-05 16:52:08,耗时:0s======================
2018-07-05 16:52:08,156 - response=/number-coin-add
2018-07-05 16:52:08,156 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:08,291 - ===========进入拦截器==============
2018-07-05 16:52:08,291 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:08,296 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:52:08,296 - ===========请求时间:2018-07-05 16:52:08==========================
2018-07-05 16:52:08,296 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:08,296 - method=GET
2018-07-05 16:52:08,297 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:08,297 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:52:08,297 - args:
2018-07-05 16:52:08,306 - =============结束请求时间:2018-07-05 16:52:08,耗时:0s======================
2018-07-05 16:52:08,308 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=1, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=12, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:06 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:52:08,309 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:15,624 - ===========进入拦截器==============
2018-07-05 16:52:15,624 - http://localhost:8081/number-coin.html
2018-07-05 16:52:15,628 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 16:52:15,628 - ===========请求时间:2018-07-05 16:52:15==========================
2018-07-05 16:52:15,628 - url=http://localhost:8081/number-coin.html
2018-07-05 16:52:15,628 - method=GET
2018-07-05 16:52:15,628 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:15,628 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 16:52:15,628 - args:
2018-07-05 16:52:15,628 - =============结束请求时间:2018-07-05 16:52:15,耗时:0s======================
2018-07-05 16:52:15,628 - response=/number-coin
2018-07-05 16:52:15,629 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:15,812 - ===========进入拦截器==============
2018-07-05 16:52:15,813 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:15,817 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:52:15,817 - ===========请求时间:2018-07-05 16:52:15==========================
2018-07-05 16:52:15,817 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:15,817 - method=GET
2018-07-05 16:52:15,817 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:15,818 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:52:15,818 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 16:52:15,840 - =============结束请求时间:2018-07-05 16:52:15,耗时:0s======================
2018-07-05 16:52:15,840 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 16:52:15,853 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:18,320 - ===========进入拦截器==============
2018-07-05 16:52:18,320 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:18,325 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:52:18,325 - ===========请求时间:2018-07-05 16:52:18==========================
2018-07-05 16:52:18,325 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:18,325 - method=GET
2018-07-05 16:52:18,325 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:18,325 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:52:18,325 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:52:18,334 - =============结束请求时间:2018-07-05 16:52:18,耗时:0s======================
2018-07-05 16:52:18,334 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=1, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=null, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:06 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:52:18,335 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:36,459 - ===========进入拦截器==============
2018-07-05 16:52:36,459 - http://localhost:8081/number-coin-add.html
2018-07-05 16:52:36,462 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:52:36,463 - ===========请求时间:2018-07-05 16:52:36==========================
2018-07-05 16:52:36,463 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:52:36,463 - method=GET
2018-07-05 16:52:36,463 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:36,463 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:52:36,463 - args:wasId=31,
2018-07-05 16:52:36,463 - =============结束请求时间:2018-07-05 16:52:36,耗时:0s======================
2018-07-05 16:52:36,463 - response=/number-coin-add
2018-07-05 16:52:36,463 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:36,599 - ===========进入拦截器==============
2018-07-05 16:52:36,599 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:36,602 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:52:36,603 - ===========请求时间:2018-07-05 16:52:36==========================
2018-07-05 16:52:36,603 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:36,603 - method=GET
2018-07-05 16:52:36,603 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:36,603 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:52:36,603 - args:
2018-07-05 16:52:36,610 - =============结束请求时间:2018-07-05 16:52:36,耗时:0s======================
2018-07-05 16:52:36,611 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=1, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=12, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:06 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:52:36,612 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:45,707 - ===========进入拦截器==============
2018-07-05 16:52:45,707 - http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:52:45,719 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save============
2018-07-05 16:52:45,719 - ===========请求时间:2018-07-05 16:52:45==========================
2018-07-05 16:52:45,719 - url=http://localhost:8081/generator/wasdatadictionary/saveOrUpdate
2018-07-05 16:52:45,719 - method=GET
2018-07-05 16:52:45,719 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:45,719 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save
2018-07-05 16:52:45,719 - args:saveOrUpdate=2,wasId=31,wasBaseCurrency=test1,wasType=test1,wasTokenAddress=312312reqwe1,wasMinConfirm=11,wasBeginBlock=100,wasBlockNum=100,wasGateWay=hqrr3123,wasPrecision=31,wasZeroGasPrice=12,wasZeroGasLimit=12,wasTransferGasPrice=12,wasTransferGasLimit=12,iconIntroduceUrl=https://www.baidu.com,blockBrowsersUrl=https://www.baidu.com,wasStatus=0,wasRemark=哈哈哈哈,tesrt111111111111
,
2018-07-05 16:52:45,738 - =============结束请求时间:2018-07-05 16:52:45,耗时:0s======================
2018-07-05 16:52:45,738 - response=Result(code=200, msg=成功, data=true, page=null, totalCount=null)
2018-07-05 16:52:45,739 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:47,953 - ===========进入拦截器==============
2018-07-05 16:52:47,953 - http://localhost:8081/number-coin-add.html
2018-07-05 16:52:47,957 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd============
2018-07-05 16:52:47,957 - ===========请求时间:2018-07-05 16:52:47==========================
2018-07-05 16:52:47,957 - url=http://localhost:8081/number-coin-add.html
2018-07-05 16:52:47,957 - method=GET
2018-07-05 16:52:47,957 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:47,957 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd
2018-07-05 16:52:47,958 - args:wasId=31,
2018-07-05 16:52:47,958 - =============结束请求时间:2018-07-05 16:52:47,耗时:0s======================
2018-07-05 16:52:47,958 - response=/number-coin-add
2018-07-05 16:52:47,958 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:48,098 - ===========进入拦截器==============
2018-07-05 16:52:48,098 - http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:48,105 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info============
2018-07-05 16:52:48,105 - ===========请求时间:2018-07-05 16:52:48==========================
2018-07-05 16:52:48,105 - url=http://localhost:8081/generator/wasdatadictionary/info/31
2018-07-05 16:52:48,105 - method=GET
2018-07-05 16:52:48,105 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:48,105 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info
2018-07-05 16:52:48,105 - args:
2018-07-05 16:52:48,110 - =============结束请求时间:2018-07-05 16:52:48,耗时:0s======================
2018-07-05 16:52:48,111 - response=Result(code=200, msg=成功, data=WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=0, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=12, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:46 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com), page=null, totalCount=null)
2018-07-05 16:52:48,111 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 16:52:58,093 - ===========进入拦截器==============
2018-07-05 16:52:58,094 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:58,100 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 16:52:58,100 - ===========请求时间:2018-07-05 16:52:58==========================
2018-07-05 16:52:58,100 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 16:52:58,100 - method=GET
2018-07-05 16:52:58,100 - ip=0:0:0:0:0:0:0:1
2018-07-05 16:52:58,100 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 16:52:58,100 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 16:52:58,110 - =============结束请求时间:2018-07-05 16:52:58,耗时:0s======================
2018-07-05 16:52:58,110 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=0, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=null, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:46 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 16:52:58,110 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:38,869 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5824 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:03:38,872 - No active profile set, falling back to default profiles: default
2018-07-05 17:03:39,027 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:03:39,102 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3007f3d1: startup date [Thu Jul 05 17:03:39 CST 2018]; root of context hierarchy
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:03:39,854 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:03:39,855 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:03:40,900 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:03:40,911 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:03:40,920 - Starting service [Tomcat]
2018-07-05 17:03:40,920 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:03:41,022 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:03:41,023 - Root WebApplicationContext: initialization completed in 1921 ms
2018-07-05 17:03:41,256 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:03:41,261 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:03:41,262 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:03:41,262 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:03:41,262 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:03:41,262 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:03:42,791 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3007f3d1: startup date [Thu Jul 05 17:03:39 CST 2018]; root of context hierarchy
2018-07-05 17:03:42,891 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:03:42,892 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:03:42,892 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:03:42,892 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:03:42,892 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:03:42,893 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:03:42,893 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:03:42,893 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:03:42,893 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:03:42,893 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:03:42,893 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:03:42,893 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:03:42,893 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:03:42,894 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:03:42,894 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:03:42,894 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:03:42,894 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:03:42,894 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:03:42,895 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:03:42,895 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:03:42,895 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:03:42,895 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:03:42,899 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:03:42,901 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:03:42,904 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:03:42,904 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:03:42,905 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:03:42,905 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:03:42,905 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:03:42,905 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:03:42,905 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:03:42,905 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:03:42,906 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:03:42,907 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:03:42,907 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:03:42,908 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:03:42,908 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:03:42,909 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:03:42,910 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:03:42,910 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:03:42,910 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:03:42,910 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:03:42,910 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:03:42,911 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:03:42,912 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:03:42,913 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:03:42,914 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:03:42,914 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:03:42,914 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:03:42,914 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:03:42,914 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:03:42,914 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:03:42,916 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:03:42,916 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:03:42,916 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:03:42,917 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:03:42,917 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:03:42,917 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:03:42,918 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:03:42,918 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:03:42,975 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:03:42,975 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:03:42,999 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:03:43,050 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:03:43,791 - LiveReload server is running on port 35729
2018-07-05 17:03:43,917 - Registering beans for JMX exposure on startup
2018-07-05 17:03:43,919 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:03:43,925 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:03:43,937 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:03:43,967 - Using a shared selector for servlet write/read
2018-07-05 17:03:43,986 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:03:43,994 - Started FqLtdWasBackstageApplication in 5.998 seconds (JVM running for 7.378)
2018-07-05 17:03:47,627 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:03:47,628 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:03:47,669 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 17:03:47,699 - ===========进入拦截器==============
2018-07-05 17:03:47,735 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:03:47,735 - ===========请求时间:2018-07-05 17:03:47==========================
2018-07-05 17:03:47,735 - url=http://localhost:8081/login
2018-07-05 17:03:47,735 - method=GET
2018-07-05 17:03:47,735 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:47,735 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:03:47,735 - args:
2018-07-05 17:03:47,739 - =============结束请求时间:2018-07-05 17:03:47,耗时:0s======================
2018-07-05 17:03:47,739 - response=/login
2018-07-05 17:03:47,771 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:03:47,857 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:03:47,857 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:03:47,857 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:03:47,857 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:03:47,865 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:03:47,865 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:03:53,158 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:03:53,158 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,158 - url=http://localhost:8081/signIn
2018-07-05 17:03:53,158 - method=POST
2018-07-05 17:03:53,158 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,158 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:03:53,158 - args:userName=admin,password=123456,
2018-07-05 17:03:53,248 - {dataSource-1} inited
2018-07-05 17:03:53,668 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,668 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:03:53, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:03:53,765 - ===========进入拦截器==============
2018-07-05 17:03:53,766 - http://localhost:8081/home
2018-07-05 17:03:53,770 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:03:53,771 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,771 - url=http://localhost:8081/home
2018-07-05 17:03:53,771 - method=GET
2018-07-05 17:03:53,771 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,771 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:03:53,771 - args:
2018-07-05 17:03:53,771 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,771 - response=/home
2018-07-05 17:03:53,771 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:53,869 - ===========进入拦截器==============
2018-07-05 17:03:53,869 - http://localhost:8081/welcome
2018-07-05 17:03:53,873 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:03:53,873 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,873 - url=http://localhost:8081/welcome
2018-07-05 17:03:53,873 - method=GET
2018-07-05 17:03:53,873 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,873 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:03:53,874 - args:
2018-07-05 17:03:53,874 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,874 - response=/welcome
2018-07-05 17:03:53,874 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:53,945 - ===========进入拦截器==============
2018-07-05 17:03:53,945 - http://localhost:8081/common/top
2018-07-05 17:03:53,949 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:03:53,949 - ===========进入拦截器==============
2018-07-05 17:03:53,950 - http://localhost:8081/common/left
2018-07-05 17:03:53,950 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,950 - url=http://localhost:8081/common/top
2018-07-05 17:03:53,950 - method=GET
2018-07-05 17:03:53,950 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,950 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:03:53,950 - args:
2018-07-05 17:03:53,950 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,950 - response=/common/top
2018-07-05 17:03:53,950 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:53,953 - ===========进入拦截器==============
2018-07-05 17:03:53,953 - http://localhost:8081/common/footer
2018-07-05 17:03:53,962 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:03:53,963 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,963 - url=http://localhost:8081/common/left
2018-07-05 17:03:53,963 - method=GET
2018-07-05 17:03:53,963 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,963 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:03:53,963 - args:
2018-07-05 17:03:53,963 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,963 - response=/common/left
2018-07-05 17:03:53,963 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:53,966 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:03:53,966 - ===========请求时间:2018-07-05 17:03:53==========================
2018-07-05 17:03:53,966 - url=http://localhost:8081/common/footer
2018-07-05 17:03:53,966 - method=GET
2018-07-05 17:03:53,966 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:53,966 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:03:53,966 - args:
2018-07-05 17:03:53,967 - =============结束请求时间:2018-07-05 17:03:53,耗时:0s======================
2018-07-05 17:03:53,967 - response=/common/footer
2018-07-05 17:03:53,967 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:54,019 - ===========进入拦截器==============
2018-07-05 17:03:54,019 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:03:54,026 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:03:54,026 - ===========请求时间:2018-07-05 17:03:54==========================
2018-07-05 17:03:54,026 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:03:54,026 - method=GET
2018-07-05 17:03:54,026 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:54,026 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:03:54,026 - args:roleId=1,
2018-07-05 17:03:54,052 - =============结束请求时间:2018-07-05 17:03:54,耗时:0s======================
2018-07-05 17:03:54,052 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:03:54,064 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:55,258 - ===========进入拦截器==============
2018-07-05 17:03:55,259 - http://localhost:8081/number-coin.html
2018-07-05 17:03:55,264 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:03:55,264 - ===========请求时间:2018-07-05 17:03:55==========================
2018-07-05 17:03:55,264 - url=http://localhost:8081/number-coin.html
2018-07-05 17:03:55,264 - method=GET
2018-07-05 17:03:55,264 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:55,264 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:03:55,264 - args:
2018-07-05 17:03:55,264 - =============结束请求时间:2018-07-05 17:03:55,耗时:0s======================
2018-07-05 17:03:55,265 - response=/number-coin
2018-07-05 17:03:55,265 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:03:55,446 - ===========进入拦截器==============
2018-07-05 17:03:55,446 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:03:55,470 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:03:55,471 - ===========请求时间:2018-07-05 17:03:55==========================
2018-07-05 17:03:55,471 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:03:55,471 - method=GET
2018-07-05 17:03:55,471 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:03:55,471 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:03:55,471 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:03:55,496 - =============结束请求时间:2018-07-05 17:03:55,耗时:0s======================
2018-07-05 17:03:55,496 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=null, wasBlockBrowsersUrl=null)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:03:55,506 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:09,007 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18880 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:08:09,011 - No active profile set, falling back to default profiles: default
2018-07-05 17:08:09,200 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:08:09,293 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7da24771: startup date [Thu Jul 05 17:08:09 CST 2018]; root of context hierarchy
2018-07-05 17:08:10,570 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,571 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,571 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,572 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,572 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,572 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:08:10,572 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:08:10,573 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:08:11,658 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:08:11,668 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:08:11,678 - Starting service [Tomcat]
2018-07-05 17:08:11,678 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:08:11,780 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:08:11,781 - Root WebApplicationContext: initialization completed in 2487 ms
2018-07-05 17:08:11,987 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:08:11,991 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:08:11,991 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:08:11,991 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:08:11,991 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:08:11,991 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:08:13,467 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7da24771: startup date [Thu Jul 05 17:08:09 CST 2018]; root of context hierarchy
2018-07-05 17:08:13,568 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:08:13,569 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:08:13,569 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:08:13,569 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:08:13,569 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:08:13,570 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:08:13,570 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:08:13,570 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:08:13,570 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:08:13,570 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:08:13,571 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:08:13,571 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:08:13,571 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:08:13,571 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:08:13,571 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:08:13,571 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:08:13,571 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:08:13,571 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:08:13,571 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:08:13,572 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:08:13,572 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:08:13,572 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:08:13,576 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:08:13,577 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:08:13,578 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:08:13,579 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:08:13,579 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:08:13,579 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:08:13,579 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:08:13,579 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:08:13,579 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:08:13,579 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:08:13,579 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:08:13,580 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:08:13,581 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:08:13,581 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:08:13,581 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:08:13,582 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:08:13,582 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:08:13,582 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:08:13,582 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:08:13,582 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:08:13,582 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:08:13,583 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:08:13,583 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:08:13,584 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:08:13,585 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:08:13,585 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:08:13,585 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:08:13,585 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:08:13,585 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:08:13,585 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:08:13,586 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:08:13,588 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:08:13,588 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:08:13,640 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:08:13,640 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:08:13,669 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:08:13,706 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:08:14,437 - LiveReload server is running on port 35729
2018-07-05 17:08:14,562 - Registering beans for JMX exposure on startup
2018-07-05 17:08:14,564 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:08:14,570 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:08:14,584 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:08:14,613 - Using a shared selector for servlet write/read
2018-07-05 17:08:14,632 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:08:14,644 - Started FqLtdWasBackstageApplication in 6.056 seconds (JVM running for 7.202)
2018-07-05 17:08:21,795 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:08:21,796 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:08:21,848 - FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2018-07-05 17:08:21,886 - ===========进入拦截器==============
2018-07-05 17:08:21,933 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:08:21,934 - ===========请求时间:2018-07-05 17:08:21==========================
2018-07-05 17:08:21,934 - url=http://localhost:8081/login
2018-07-05 17:08:21,935 - method=GET
2018-07-05 17:08:21,935 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:21,935 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:08:21,935 - args:
2018-07-05 17:08:21,939 - =============结束请求时间:2018-07-05 17:08:21,耗时:0s======================
2018-07-05 17:08:21,939 - response=/login
2018-07-05 17:08:21,973 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:08:22,049 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:08:22,049 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:08:22,049 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:08:22,049 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:08:22,054 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:08:22,054 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:08:28,036 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:08:28,037 - ===========请求时间:2018-07-05 17:08:28==========================
2018-07-05 17:08:28,037 - url=http://localhost:8081/signIn
2018-07-05 17:08:28,037 - method=POST
2018-07-05 17:08:28,037 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:28,037 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:08:28,037 - args:userName=admin,password=123456,
2018-07-05 17:08:28,133 - {dataSource-1} inited
2018-07-05 17:08:28,645 - =============结束请求时间:2018-07-05 17:08:28,耗时:0s======================
2018-07-05 17:08:28,645 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:08:28, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:08:28,746 - ===========进入拦截器==============
2018-07-05 17:08:28,746 - http://localhost:8081/home
2018-07-05 17:08:28,752 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:08:28,753 - ===========请求时间:2018-07-05 17:08:28==========================
2018-07-05 17:08:28,753 - url=http://localhost:8081/home
2018-07-05 17:08:28,753 - method=GET
2018-07-05 17:08:28,753 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:28,753 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:08:28,753 - args:
2018-07-05 17:08:28,753 - =============结束请求时间:2018-07-05 17:08:28,耗时:0s======================
2018-07-05 17:08:28,753 - response=/home
2018-07-05 17:08:28,753 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:28,860 - ===========进入拦截器==============
2018-07-05 17:08:28,861 - http://localhost:8081/welcome
2018-07-05 17:08:28,874 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:08:28,874 - ===========请求时间:2018-07-05 17:08:28==========================
2018-07-05 17:08:28,874 - url=http://localhost:8081/welcome
2018-07-05 17:08:28,874 - method=GET
2018-07-05 17:08:28,874 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:28,874 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:08:28,874 - args:
2018-07-05 17:08:28,874 - =============结束请求时间:2018-07-05 17:08:28,耗时:0s======================
2018-07-05 17:08:28,874 - response=/welcome
2018-07-05 17:08:28,874 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:28,924 - ===========进入拦截器==============
2018-07-05 17:08:28,924 - http://localhost:8081/common/top
2018-07-05 17:08:28,925 - ===========进入拦截器==============
2018-07-05 17:08:28,926 - http://localhost:8081/common/left
2018-07-05 17:08:28,927 - ===========进入拦截器==============
2018-07-05 17:08:28,927 - http://localhost:8081/common/footer
2018-07-05 17:08:28,939 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:08:28,939 - ===========请求时间:2018-07-05 17:08:28==========================
2018-07-05 17:08:28,940 - url=http://localhost:8081/common/top
2018-07-05 17:08:28,940 - method=GET
2018-07-05 17:08:28,940 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:28,940 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:08:28,940 - args:
2018-07-05 17:08:28,940 - =============结束请求时间:2018-07-05 17:08:28,耗时:0s======================
2018-07-05 17:08:28,940 - response=/common/top
2018-07-05 17:08:28,940 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:28,996 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:08:28,996 - ===========请求时间:2018-07-05 17:08:28==========================
2018-07-05 17:08:28,996 - url=http://localhost:8081/common/left
2018-07-05 17:08:28,996 - method=GET
2018-07-05 17:08:28,996 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:28,996 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:08:28,996 - args:
2018-07-05 17:08:28,996 - =============结束请求时间:2018-07-05 17:08:28,耗时:0s======================
2018-07-05 17:08:28,996 - response=/common/left
2018-07-05 17:08:28,996 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:29,018 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:08:29,018 - ===========请求时间:2018-07-05 17:08:29==========================
2018-07-05 17:08:29,018 - url=http://localhost:8081/common/footer
2018-07-05 17:08:29,018 - method=GET
2018-07-05 17:08:29,018 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:29,019 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:08:29,019 - args:
2018-07-05 17:08:29,019 - =============结束请求时间:2018-07-05 17:08:29,耗时:0s======================
2018-07-05 17:08:29,019 - response=/common/footer
2018-07-05 17:08:29,019 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:29,063 - ===========进入拦截器==============
2018-07-05 17:08:29,063 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:08:29,075 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:08:29,076 - ===========请求时间:2018-07-05 17:08:29==========================
2018-07-05 17:08:29,076 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:08:29,076 - method=GET
2018-07-05 17:08:29,076 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:29,076 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:08:29,076 - args:roleId=1,
2018-07-05 17:08:29,123 - =============结束请求时间:2018-07-05 17:08:29,耗时:0s======================
2018-07-05 17:08:29,123 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:08:29,134 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:30,224 - ===========进入拦截器==============
2018-07-05 17:08:30,225 - http://localhost:8081/number-coin.html
2018-07-05 17:08:30,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:08:30,239 - ===========请求时间:2018-07-05 17:08:30==========================
2018-07-05 17:08:30,239 - url=http://localhost:8081/number-coin.html
2018-07-05 17:08:30,239 - method=GET
2018-07-05 17:08:30,239 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:30,239 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:08:30,239 - args:
2018-07-05 17:08:30,239 - =============结束请求时间:2018-07-05 17:08:30,耗时:0s======================
2018-07-05 17:08:30,239 - response=/number-coin
2018-07-05 17:08:30,239 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:30,420 - ===========进入拦截器==============
2018-07-05 17:08:30,421 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:08:30,446 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:08:30,446 - ===========请求时间:2018-07-05 17:08:30==========================
2018-07-05 17:08:30,446 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:08:30,446 - method=GET
2018-07-05 17:08:30,446 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:30,446 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:08:30,446 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:08:30,475 - =============结束请求时间:2018-07-05 17:08:30,耗时:0s======================
2018-07-05 17:08:30,476 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:08:30,493 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:08:38,605 - ===========进入拦截器==============
2018-07-05 17:08:38,606 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:08:38,612 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:08:38,612 - ===========请求时间:2018-07-05 17:08:38==========================
2018-07-05 17:08:38,612 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:08:38,612 - method=GET
2018-07-05 17:08:38,612 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:08:38,612 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:08:38,612 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 17:08:38,627 - =============结束请求时间:2018-07-05 17:08:38,耗时:0s======================
2018-07-05 17:08:38,627 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=0, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=null, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:46 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:08:38,628 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:17:39,481 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13276 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:17:39,484 - No active profile set, falling back to default profiles: default
2018-07-05 17:17:39,644 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:17:39,709 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5bfe13: startup date [Thu Jul 05 17:17:39 CST 2018]; root of context hierarchy
2018-07-05 17:17:40,554 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,555 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,556 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,556 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,556 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,556 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:17:40,556 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:17:40,557 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:17:41,612 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:17:41,628 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:17:41,642 - Starting service [Tomcat]
2018-07-05 17:17:41,643 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:17:41,755 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:17:41,755 - Root WebApplicationContext: initialization completed in 2046 ms
2018-07-05 17:17:41,947 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:17:41,950 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:17:41,951 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:17:41,951 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:17:41,951 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:17:41,951 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:17:43,461 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3f5bfe13: startup date [Thu Jul 05 17:17:39 CST 2018]; root of context hierarchy
2018-07-05 17:17:43,572 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:17:43,573 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:17:43,574 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:17:43,574 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:17:43,574 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:17:43,574 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:17:43,574 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:17:43,574 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:17:43,574 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:17:43,575 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:17:43,575 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:17:43,576 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:17:43,576 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:17:43,576 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:17:43,576 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:17:43,576 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:17:43,576 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:17:43,576 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:17:43,577 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:17:43,577 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:17:43,577 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:17:43,577 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:17:43,581 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:17:43,582 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:17:43,583 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:17:43,583 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:17:43,584 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:17:43,584 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:17:43,584 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:17:43,584 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:17:43,584 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:17:43,584 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:17:43,584 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:17:43,585 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:17:43,586 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:17:43,586 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:17:43,586 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:17:43,588 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:17:43,588 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:17:43,588 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:17:43,589 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:17:43,589 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:17:43,589 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:17:43,589 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:17:43,590 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:17:43,591 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:17:43,591 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:17:43,591 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:17:43,591 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:17:43,591 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:17:43,591 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:17:43,592 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:17:43,592 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:17:43,592 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:17:43,592 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:17:43,593 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:17:43,593 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:17:43,593 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:17:43,594 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:17:43,595 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:17:43,658 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:17:43,658 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:17:43,697 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:17:43,746 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:17:44,488 - LiveReload server is running on port 35729
2018-07-05 17:17:44,615 - Registering beans for JMX exposure on startup
2018-07-05 17:17:44,616 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:17:44,623 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:17:44,635 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:17:44,663 - Using a shared selector for servlet write/read
2018-07-05 17:17:44,688 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:17:44,697 - Started FqLtdWasBackstageApplication in 5.855 seconds (JVM running for 7.091)
2018-07-05 17:18:29,277 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:18:29,278 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:18:29,319 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 17:18:29,348 - ===========进入拦截器==============
2018-07-05 17:18:29,384 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:18:29,384 - ===========请求时间:2018-07-05 17:18:29==========================
2018-07-05 17:18:29,385 - url=http://localhost:8081/login
2018-07-05 17:18:29,385 - method=GET
2018-07-05 17:18:29,385 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:29,385 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:18:29,385 - args:
2018-07-05 17:18:29,389 - =============结束请求时间:2018-07-05 17:18:29,耗时:0s======================
2018-07-05 17:18:29,389 - response=/login
2018-07-05 17:18:29,426 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:18:29,496 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:18:29,496 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:18:29,496 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:18:29,496 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:18:29,502 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:18:29,502 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:18:34,581 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:18:34,581 - ===========请求时间:2018-07-05 17:18:34==========================
2018-07-05 17:18:34,581 - url=http://localhost:8081/signIn
2018-07-05 17:18:34,581 - method=POST
2018-07-05 17:18:34,581 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:34,581 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:18:34,581 - args:userName=admin,password=123456,
2018-07-05 17:18:34,671 - {dataSource-1} inited
2018-07-05 17:18:35,100 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,100 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:18:35, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:18:35,202 - ===========进入拦截器==============
2018-07-05 17:18:35,202 - http://localhost:8081/home
2018-07-05 17:18:35,208 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:18:35,208 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,209 - url=http://localhost:8081/home
2018-07-05 17:18:35,209 - method=GET
2018-07-05 17:18:35,209 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,209 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:18:35,209 - args:
2018-07-05 17:18:35,209 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,209 - response=/home
2018-07-05 17:18:35,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:35,316 - ===========进入拦截器==============
2018-07-05 17:18:35,316 - http://localhost:8081/welcome
2018-07-05 17:18:35,320 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:18:35,321 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,321 - url=http://localhost:8081/welcome
2018-07-05 17:18:35,321 - method=GET
2018-07-05 17:18:35,321 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,321 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:18:35,321 - args:
2018-07-05 17:18:35,321 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,321 - response=/welcome
2018-07-05 17:18:35,322 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:35,372 - ===========进入拦截器==============
2018-07-05 17:18:35,372 - http://localhost:8081/common/top
2018-07-05 17:18:35,373 - ===========进入拦截器==============
2018-07-05 17:18:35,373 - http://localhost:8081/common/left
2018-07-05 17:18:35,375 - ===========进入拦截器==============
2018-07-05 17:18:35,375 - http://localhost:8081/common/footer
2018-07-05 17:18:35,393 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:18:35,393 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,393 - url=http://localhost:8081/common/top
2018-07-05 17:18:35,393 - method=GET
2018-07-05 17:18:35,393 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,393 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:18:35,393 - args:
2018-07-05 17:18:35,394 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,394 - response=/common/top
2018-07-05 17:18:35,394 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:35,410 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:18:35,410 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,410 - url=http://localhost:8081/common/left
2018-07-05 17:18:35,410 - method=GET
2018-07-05 17:18:35,410 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:18:35,410 - args:
2018-07-05 17:18:35,410 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,410 - response=/common/left
2018-07-05 17:18:35,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:35,425 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:18:35,425 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,425 - url=http://localhost:8081/common/footer
2018-07-05 17:18:35,425 - method=GET
2018-07-05 17:18:35,425 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,425 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:18:35,425 - args:
2018-07-05 17:18:35,425 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,425 - response=/common/footer
2018-07-05 17:18:35,426 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:35,456 - ===========进入拦截器==============
2018-07-05 17:18:35,456 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:18:35,468 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:18:35,468 - ===========请求时间:2018-07-05 17:18:35==========================
2018-07-05 17:18:35,468 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:18:35,468 - method=GET
2018-07-05 17:18:35,468 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:35,469 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:18:35,469 - args:roleId=1,
2018-07-05 17:18:35,508 - =============结束请求时间:2018-07-05 17:18:35,耗时:0s======================
2018-07-05 17:18:35,508 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:18:35,519 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:36,824 - ===========进入拦截器==============
2018-07-05 17:18:36,824 - http://localhost:8081/number-coin.html
2018-07-05 17:18:36,831 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:18:36,831 - ===========请求时间:2018-07-05 17:18:36==========================
2018-07-05 17:18:36,831 - url=http://localhost:8081/number-coin.html
2018-07-05 17:18:36,831 - method=GET
2018-07-05 17:18:36,831 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:36,831 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:18:36,831 - args:
2018-07-05 17:18:36,831 - =============结束请求时间:2018-07-05 17:18:36,耗时:0s======================
2018-07-05 17:18:36,831 - response=/number-coin
2018-07-05 17:18:36,831 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:37,007 - ===========进入拦截器==============
2018-07-05 17:18:37,007 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:18:37,053 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:18:37,053 - ===========请求时间:2018-07-05 17:18:37==========================
2018-07-05 17:18:37,053 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:18:37,053 - method=GET
2018-07-05 17:18:37,053 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:37,053 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:18:37,053 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:18:37,092 - =============结束请求时间:2018-07-05 17:18:37,耗时:0s======================
2018-07-05 17:18:37,094 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:18:37,107 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:18:43,451 - ===========进入拦截器==============
2018-07-05 17:18:43,452 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:18:43,466 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:18:43,466 - ===========请求时间:2018-07-05 17:18:43==========================
2018-07-05 17:18:43,466 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:18:43,466 - method=GET
2018-07-05 17:18:43,466 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:18:43,466 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:18:43,466 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:18:43,497 - =============结束请求时间:2018-07-05 17:18:43,耗时:0s======================
2018-07-05 17:18:43,497 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:18:43,498 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:19:52,713 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16344 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:19:52,716 - No active profile set, falling back to default profiles: default
2018-07-05 17:19:52,904 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:19:52,995 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26ea1e96: startup date [Thu Jul 05 17:19:52 CST 2018]; root of context hierarchy
2018-07-05 17:19:54,301 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,301 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,301 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,302 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,302 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,302 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:19:54,302 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:19:54,302 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:19:55,347 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:19:55,359 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:19:55,371 - Starting service [Tomcat]
2018-07-05 17:19:55,371 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:19:55,472 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:19:55,473 - Root WebApplicationContext: initialization completed in 2478 ms
2018-07-05 17:19:55,676 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:19:55,679 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:19:55,680 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:19:55,680 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:19:55,680 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:19:55,680 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:19:57,238 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@26ea1e96: startup date [Thu Jul 05 17:19:52 CST 2018]; root of context hierarchy
2018-07-05 17:19:57,338 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:19:57,339 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:19:57,340 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:19:57,340 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:19:57,340 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:19:57,340 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:19:57,340 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:19:57,340 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:19:57,340 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:19:57,341 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:19:57,341 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:19:57,341 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:19:57,341 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:19:57,341 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:19:57,341 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:19:57,341 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:19:57,342 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:19:57,342 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:19:57,342 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:19:57,342 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:19:57,342 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:19:57,342 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:19:57,346 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:19:57,347 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:19:57,348 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:19:57,348 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:19:57,349 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:19:57,349 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:19:57,349 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:19:57,349 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:19:57,349 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:19:57,349 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:19:57,350 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:19:57,351 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:19:57,351 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:19:57,351 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:19:57,351 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:19:57,352 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:19:57,352 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:19:57,352 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:19:57,352 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:19:57,352 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:19:57,353 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:19:57,354 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:19:57,354 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:19:57,355 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:19:57,355 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:19:57,356 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:19:57,356 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:19:57,356 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:19:57,356 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:19:57,356 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:19:57,357 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:19:57,359 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:19:57,359 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:19:57,412 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:19:57,412 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:19:57,436 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:19:57,467 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:19:58,270 - LiveReload server is running on port 35729
2018-07-05 17:19:58,401 - Registering beans for JMX exposure on startup
2018-07-05 17:19:58,403 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:19:58,411 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:19:58,427 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:19:58,462 - Using a shared selector for servlet write/read
2018-07-05 17:19:58,485 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:19:58,494 - Started FqLtdWasBackstageApplication in 6.631 seconds (JVM running for 8.988)
2018-07-05 17:20:02,167 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:20:02,168 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:20:02,209 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 17:20:02,240 - ===========进入拦截器==============
2018-07-05 17:20:02,274 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:20:02,275 - ===========请求时间:2018-07-05 17:20:02==========================
2018-07-05 17:20:02,276 - url=http://localhost:8081/login
2018-07-05 17:20:02,276 - method=GET
2018-07-05 17:20:02,276 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:02,276 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:20:02,276 - args:
2018-07-05 17:20:02,280 - =============结束请求时间:2018-07-05 17:20:02,耗时:0s======================
2018-07-05 17:20:02,280 - response=/login
2018-07-05 17:20:02,313 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:20:02,383 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:20:02,384 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:20:02,384 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:20:02,384 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:20:02,392 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:20:02,392 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:20:06,664 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:20:06,664 - ===========请求时间:2018-07-05 17:20:06==========================
2018-07-05 17:20:06,664 - url=http://localhost:8081/signIn
2018-07-05 17:20:06,664 - method=POST
2018-07-05 17:20:06,664 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:06,664 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:20:06,664 - args:userName=admin,password=123456,
2018-07-05 17:20:06,752 - {dataSource-1} inited
2018-07-05 17:20:07,246 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,247 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:20:07, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:20:07,357 - ===========进入拦截器==============
2018-07-05 17:20:07,357 - http://localhost:8081/home
2018-07-05 17:20:07,362 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:20:07,362 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,362 - url=http://localhost:8081/home
2018-07-05 17:20:07,362 - method=GET
2018-07-05 17:20:07,362 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,362 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:20:07,362 - args:
2018-07-05 17:20:07,363 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,363 - response=/home
2018-07-05 17:20:07,363 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:07,466 - ===========进入拦截器==============
2018-07-05 17:20:07,467 - http://localhost:8081/welcome
2018-07-05 17:20:07,472 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:20:07,472 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,472 - url=http://localhost:8081/welcome
2018-07-05 17:20:07,472 - method=GET
2018-07-05 17:20:07,473 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,473 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:20:07,473 - args:
2018-07-05 17:20:07,473 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,473 - response=/welcome
2018-07-05 17:20:07,473 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:07,528 - ===========进入拦截器==============
2018-07-05 17:20:07,529 - http://localhost:8081/common/top
2018-07-05 17:20:07,529 - ===========进入拦截器==============
2018-07-05 17:20:07,529 - http://localhost:8081/common/left
2018-07-05 17:20:07,529 - ===========进入拦截器==============
2018-07-05 17:20:07,530 - http://localhost:8081/common/footer
2018-07-05 17:20:07,538 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:20:07,539 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,539 - url=http://localhost:8081/common/top
2018-07-05 17:20:07,539 - method=GET
2018-07-05 17:20:07,539 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,539 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:20:07,539 - args:
2018-07-05 17:20:07,539 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,539 - response=/common/top
2018-07-05 17:20:07,539 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:07,552 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:20:07,553 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,553 - url=http://localhost:8081/common/left
2018-07-05 17:20:07,553 - method=GET
2018-07-05 17:20:07,553 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,553 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:20:07,553 - args:
2018-07-05 17:20:07,553 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,553 - response=/common/left
2018-07-05 17:20:07,553 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:07,561 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:20:07,561 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,561 - url=http://localhost:8081/common/footer
2018-07-05 17:20:07,561 - method=GET
2018-07-05 17:20:07,561 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,561 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:20:07,561 - args:
2018-07-05 17:20:07,562 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,562 - response=/common/footer
2018-07-05 17:20:07,562 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:07,613 - ===========进入拦截器==============
2018-07-05 17:20:07,614 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:20:07,625 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:20:07,625 - ===========请求时间:2018-07-05 17:20:07==========================
2018-07-05 17:20:07,625 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:20:07,625 - method=GET
2018-07-05 17:20:07,625 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:07,625 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:20:07,625 - args:roleId=1,
2018-07-05 17:20:07,650 - =============结束请求时间:2018-07-05 17:20:07,耗时:0s======================
2018-07-05 17:20:07,650 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:20:07,662 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:09,760 - ===========进入拦截器==============
2018-07-05 17:20:09,760 - http://localhost:8081/number-coin.html
2018-07-05 17:20:09,767 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:20:09,767 - ===========请求时间:2018-07-05 17:20:09==========================
2018-07-05 17:20:09,767 - url=http://localhost:8081/number-coin.html
2018-07-05 17:20:09,767 - method=GET
2018-07-05 17:20:09,767 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:09,767 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:20:09,767 - args:
2018-07-05 17:20:09,767 - =============结束请求时间:2018-07-05 17:20:09,耗时:0s======================
2018-07-05 17:20:09,767 - response=/number-coin
2018-07-05 17:20:09,767 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:09,943 - ===========进入拦截器==============
2018-07-05 17:20:09,943 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:20:09,964 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:20:09,964 - ===========请求时间:2018-07-05 17:20:09==========================
2018-07-05 17:20:09,964 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:20:09,964 - method=GET
2018-07-05 17:20:09,964 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:09,964 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:20:09,964 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:20:09,983 - =============结束请求时间:2018-07-05 17:20:09,耗时:0s======================
2018-07-05 17:20:09,983 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:20:09,991 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:20:12,955 - ===========进入拦截器==============
2018-07-05 17:20:12,955 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:20:12,961 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:20:12,961 - ===========请求时间:2018-07-05 17:20:12==========================
2018-07-05 17:20:12,961 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:20:12,961 - method=GET
2018-07-05 17:20:12,961 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:20:12,961 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:20:12,961 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:20:12,971 - =============结束请求时间:2018-07-05 17:20:12,耗时:0s======================
2018-07-05 17:20:12,971 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:20:12,973 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:33,352 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5964 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:21:33,356 - No active profile set, falling back to default profiles: default
2018-07-05 17:21:33,643 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:21:33,794 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Thu Jul 05 17:21:33 CST 2018]; root of context hierarchy
2018-07-05 17:21:34,865 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,865 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,865 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,865 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,865 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,866 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:21:34,866 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:21:34,866 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:21:36,283 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:21:36,294 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:21:36,303 - Starting service [Tomcat]
2018-07-05 17:21:36,303 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:21:36,408 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:21:36,408 - Root WebApplicationContext: initialization completed in 2614 ms
2018-07-05 17:21:36,616 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:21:36,620 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:21:36,620 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:21:36,620 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:21:36,620 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:21:36,620 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:21:38,099 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6cd11c0c: startup date [Thu Jul 05 17:21:33 CST 2018]; root of context hierarchy
2018-07-05 17:21:38,200 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:21:38,201 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:21:38,201 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:21:38,201 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:21:38,202 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:21:38,202 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:21:38,202 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:21:38,202 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:21:38,202 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:21:38,202 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:21:38,203 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:21:38,203 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:21:38,203 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:21:38,203 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:21:38,203 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:21:38,203 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:21:38,203 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:21:38,204 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:21:38,204 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:21:38,204 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:21:38,204 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:21:38,204 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:21:38,208 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:21:38,208 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:21:38,210 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:21:38,211 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:21:38,211 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:21:38,211 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:21:38,211 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:21:38,211 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:21:38,211 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:21:38,211 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:21:38,211 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:21:38,212 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:21:38,213 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:21:38,213 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:21:38,213 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:21:38,215 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:21:38,215 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:21:38,215 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:21:38,216 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:21:38,216 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:21:38,216 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:21:38,217 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:21:38,217 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:21:38,218 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:21:38,218 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:21:38,218 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:21:38,218 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:21:38,219 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:21:38,219 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:21:38,219 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:21:38,220 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:21:38,221 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:21:38,222 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:21:38,272 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:21:38,272 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:21:38,295 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:21:38,328 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:21:39,043 - LiveReload server is running on port 35729
2018-07-05 17:21:39,172 - Registering beans for JMX exposure on startup
2018-07-05 17:21:39,173 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:21:39,180 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:21:39,192 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:21:39,221 - Using a shared selector for servlet write/read
2018-07-05 17:21:39,239 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:21:39,247 - Started FqLtdWasBackstageApplication in 6.601 seconds (JVM running for 7.772)
2018-07-05 17:21:47,541 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:21:47,541 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:21:47,580 - FrameworkServlet 'dispatcherServlet': initialization completed in 39 ms
2018-07-05 17:21:47,610 - ===========进入拦截器==============
2018-07-05 17:21:47,655 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:21:47,655 - ===========请求时间:2018-07-05 17:21:47==========================
2018-07-05 17:21:47,656 - url=http://localhost:8081/login
2018-07-05 17:21:47,656 - method=GET
2018-07-05 17:21:47,656 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:47,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:21:47,656 - args:
2018-07-05 17:21:47,661 - =============结束请求时间:2018-07-05 17:21:47,耗时:0s======================
2018-07-05 17:21:47,662 - response=/login
2018-07-05 17:21:47,700 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:21:47,798 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:21:47,798 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:21:47,798 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:21:47,798 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:21:47,805 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:21:47,805 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:21:52,293 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:21:52,294 - ===========请求时间:2018-07-05 17:21:52==========================
2018-07-05 17:21:52,294 - url=http://localhost:8081/signIn
2018-07-05 17:21:52,294 - method=POST
2018-07-05 17:21:52,295 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:52,295 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:21:52,295 - args:userName=admin,password=123456,
2018-07-05 17:21:52,414 - {dataSource-1} inited
2018-07-05 17:21:52,881 - =============结束请求时间:2018-07-05 17:21:52,耗时:0s======================
2018-07-05 17:21:52,882 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:21:52, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:21:53,010 - ===========进入拦截器==============
2018-07-05 17:21:53,010 - http://localhost:8081/home
2018-07-05 17:21:53,025 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:21:53,025 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,025 - url=http://localhost:8081/home
2018-07-05 17:21:53,025 - method=GET
2018-07-05 17:21:53,025 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,026 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:21:53,026 - args:
2018-07-05 17:21:53,026 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,026 - response=/home
2018-07-05 17:21:53,026 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:53,129 - ===========进入拦截器==============
2018-07-05 17:21:53,130 - http://localhost:8081/welcome
2018-07-05 17:21:53,135 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:21:53,135 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,135 - url=http://localhost:8081/welcome
2018-07-05 17:21:53,135 - method=GET
2018-07-05 17:21:53,135 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,135 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:21:53,135 - args:
2018-07-05 17:21:53,136 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,136 - response=/welcome
2018-07-05 17:21:53,136 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:53,199 - ===========进入拦截器==============
2018-07-05 17:21:53,199 - http://localhost:8081/common/top
2018-07-05 17:21:53,202 - ===========进入拦截器==============
2018-07-05 17:21:53,202 - http://localhost:8081/common/left
2018-07-05 17:21:53,207 - ===========进入拦截器==============
2018-07-05 17:21:53,207 - http://localhost:8081/common/footer
2018-07-05 17:21:53,213 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:21:53,213 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,213 - url=http://localhost:8081/common/top
2018-07-05 17:21:53,213 - method=GET
2018-07-05 17:21:53,213 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,213 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:21:53,213 - args:
2018-07-05 17:21:53,213 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,213 - response=/common/top
2018-07-05 17:21:53,214 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:53,228 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:21:53,229 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,229 - url=http://localhost:8081/common/left
2018-07-05 17:21:53,229 - method=GET
2018-07-05 17:21:53,229 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,229 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:21:53,229 - args:
2018-07-05 17:21:53,229 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,229 - response=/common/left
2018-07-05 17:21:53,229 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:53,232 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:21:53,232 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,232 - url=http://localhost:8081/common/footer
2018-07-05 17:21:53,233 - method=GET
2018-07-05 17:21:53,233 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,233 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:21:53,233 - args:
2018-07-05 17:21:53,233 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,233 - response=/common/footer
2018-07-05 17:21:53,233 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:53,281 - ===========进入拦截器==============
2018-07-05 17:21:53,281 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:21:53,289 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:21:53,289 - ===========请求时间:2018-07-05 17:21:53==========================
2018-07-05 17:21:53,289 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:21:53,290 - method=GET
2018-07-05 17:21:53,290 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:53,290 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:21:53,290 - args:roleId=1,
2018-07-05 17:21:53,330 - =============结束请求时间:2018-07-05 17:21:53,耗时:0s======================
2018-07-05 17:21:53,330 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:21:53,346 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:55,992 - ===========进入拦截器==============
2018-07-05 17:21:55,992 - http://localhost:8081/number-coin.html
2018-07-05 17:21:56,001 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:21:56,001 - ===========请求时间:2018-07-05 17:21:56==========================
2018-07-05 17:21:56,001 - url=http://localhost:8081/number-coin.html
2018-07-05 17:21:56,001 - method=GET
2018-07-05 17:21:56,001 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:56,001 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:21:56,001 - args:
2018-07-05 17:21:56,001 - =============结束请求时间:2018-07-05 17:21:56,耗时:0s======================
2018-07-05 17:21:56,001 - response=/number-coin
2018-07-05 17:21:56,001 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:56,167 - ===========进入拦截器==============
2018-07-05 17:21:56,168 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:21:56,188 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:21:56,188 - ===========请求时间:2018-07-05 17:21:56==========================
2018-07-05 17:21:56,188 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:21:56,188 - method=GET
2018-07-05 17:21:56,188 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:56,188 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:21:56,188 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:21:56,207 - =============结束请求时间:2018-07-05 17:21:56,耗时:0s======================
2018-07-05 17:21:56,208 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:21:56,213 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:21:59,586 - ===========进入拦截器==============
2018-07-05 17:21:59,587 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:21:59,596 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:21:59,596 - ===========请求时间:2018-07-05 17:21:59==========================
2018-07-05 17:21:59,596 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:21:59,596 - method=GET
2018-07-05 17:21:59,596 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:21:59,596 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:21:59,596 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:21:59,613 - =============结束请求时间:2018-07-05 17:21:59,耗时:0s======================
2018-07-05 17:21:59,614 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:21:59,614 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:24:40,795 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16360 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:24:40,798 - No active profile set, falling back to default profiles: default
2018-07-05 17:24:40,980 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:24:41,081 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f31e05e: startup date [Thu Jul 05 17:24:41 CST 2018]; root of context hierarchy
2018-07-05 17:24:42,149 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,149 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,150 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,150 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,150 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,150 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:24:42,150 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:24:42,150 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:24:43,195 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:24:43,207 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:24:43,219 - Starting service [Tomcat]
2018-07-05 17:24:43,220 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:24:43,333 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:24:43,333 - Root WebApplicationContext: initialization completed in 2252 ms
2018-07-05 17:24:43,583 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:24:43,588 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:24:43,588 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:24:43,588 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:24:43,588 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:24:43,588 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:24:45,334 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5f31e05e: startup date [Thu Jul 05 17:24:41 CST 2018]; root of context hierarchy
2018-07-05 17:24:45,442 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:24:45,443 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:24:45,443 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:24:45,443 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:24:45,443 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:24:45,443 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:24:45,444 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:24:45,444 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:24:45,444 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:24:45,444 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:24:45,444 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:24:45,444 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:24:45,444 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:24:45,445 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:24:45,445 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:24:45,445 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:24:45,445 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:24:45,445 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:24:45,445 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:24:45,445 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:24:45,445 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:24:45,445 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:24:45,449 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:24:45,450 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:24:45,451 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:24:45,451 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:24:45,452 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:24:45,452 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:24:45,452 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:24:45,452 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:24:45,452 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:24:45,452 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:24:45,452 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:24:45,453 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:24:45,454 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:24:45,454 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:24:45,454 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:24:45,455 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:24:45,455 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:24:45,456 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:24:45,456 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:24:45,456 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:24:45,456 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:24:45,457 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:24:45,457 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:24:45,459 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:24:45,459 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:24:45,459 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:24:45,459 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:24:45,459 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:24:45,459 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:24:45,459 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:24:45,460 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:24:45,460 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:24:45,460 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:24:45,460 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:24:45,461 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:24:45,461 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:24:45,462 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:24:45,463 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:24:45,516 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:24:45,516 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:24:45,549 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:24:45,580 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:24:46,331 - LiveReload server is running on port 35729
2018-07-05 17:24:46,461 - Registering beans for JMX exposure on startup
2018-07-05 17:24:46,463 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:24:46,469 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:24:46,481 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:24:46,512 - Using a shared selector for servlet write/read
2018-07-05 17:24:46,531 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:24:46,539 - Started FqLtdWasBackstageApplication in 6.727 seconds (JVM running for 8.383)
2018-07-05 17:24:57,912 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:24:57,912 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:24:57,954 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 17:24:57,983 - ===========进入拦截器==============
2018-07-05 17:24:58,022 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:24:58,022 - ===========请求时间:2018-07-05 17:24:58==========================
2018-07-05 17:24:58,022 - url=http://localhost:8081/login
2018-07-05 17:24:58,022 - method=GET
2018-07-05 17:24:58,022 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:24:58,022 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:24:58,022 - args:
2018-07-05 17:24:58,026 - =============结束请求时间:2018-07-05 17:24:58,耗时:0s======================
2018-07-05 17:24:58,026 - response=/login
2018-07-05 17:24:58,057 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:24:58,124 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:24:58,125 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:24:58,125 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:24:58,125 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:24:58,131 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:24:58,131 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:25:03,061 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:25:03,061 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,061 - url=http://localhost:8081/signIn
2018-07-05 17:25:03,061 - method=POST
2018-07-05 17:25:03,061 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,061 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:25:03,061 - args:userName=admin,password=123456,
2018-07-05 17:25:03,152 - {dataSource-1} inited
2018-07-05 17:25:03,590 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,591 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:25:03, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:25:03,698 - ===========进入拦截器==============
2018-07-05 17:25:03,699 - http://localhost:8081/home
2018-07-05 17:25:03,703 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:25:03,704 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,705 - url=http://localhost:8081/home
2018-07-05 17:25:03,705 - method=GET
2018-07-05 17:25:03,705 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,705 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:25:03,705 - args:
2018-07-05 17:25:03,705 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,705 - response=/home
2018-07-05 17:25:03,705 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:03,822 - ===========进入拦截器==============
2018-07-05 17:25:03,822 - http://localhost:8081/welcome
2018-07-05 17:25:03,829 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:25:03,829 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,829 - url=http://localhost:8081/welcome
2018-07-05 17:25:03,830 - method=GET
2018-07-05 17:25:03,830 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,830 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:25:03,830 - args:
2018-07-05 17:25:03,830 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,830 - response=/welcome
2018-07-05 17:25:03,830 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:03,895 - ===========进入拦截器==============
2018-07-05 17:25:03,895 - ===========进入拦截器==============
2018-07-05 17:25:03,895 - http://localhost:8081/common/footer
2018-07-05 17:25:03,895 - http://localhost:8081/common/top
2018-07-05 17:25:03,896 - ===========进入拦截器==============
2018-07-05 17:25:03,896 - http://localhost:8081/common/left
2018-07-05 17:25:03,902 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:25:03,902 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,902 - url=http://localhost:8081/common/top
2018-07-05 17:25:03,902 - method=GET
2018-07-05 17:25:03,902 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,902 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:25:03,902 - args:
2018-07-05 17:25:03,902 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,902 - response=/common/top
2018-07-05 17:25:03,902 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:03,911 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:25:03,911 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,911 - url=http://localhost:8081/common/footer
2018-07-05 17:25:03,911 - method=GET
2018-07-05 17:25:03,911 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,911 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:25:03,911 - args:
2018-07-05 17:25:03,912 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,912 - response=/common/footer
2018-07-05 17:25:03,912 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:03,923 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:25:03,923 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,923 - url=http://localhost:8081/common/left
2018-07-05 17:25:03,923 - method=GET
2018-07-05 17:25:03,923 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,923 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:25:03,923 - args:
2018-07-05 17:25:03,923 - =============结束请求时间:2018-07-05 17:25:03,耗时:0s======================
2018-07-05 17:25:03,923 - response=/common/left
2018-07-05 17:25:03,923 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:03,981 - ===========进入拦截器==============
2018-07-05 17:25:03,982 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:25:03,992 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:25:03,992 - ===========请求时间:2018-07-05 17:25:03==========================
2018-07-05 17:25:03,992 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:25:03,992 - method=GET
2018-07-05 17:25:03,992 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:03,992 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:25:03,992 - args:roleId=1,
2018-07-05 17:25:04,023 - =============结束请求时间:2018-07-05 17:25:04,耗时:0s======================
2018-07-05 17:25:04,024 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:25:04,036 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:05,144 - ===========进入拦截器==============
2018-07-05 17:25:05,144 - http://localhost:8081/number-coin.html
2018-07-05 17:25:05,149 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:25:05,149 - ===========请求时间:2018-07-05 17:25:05==========================
2018-07-05 17:25:05,150 - url=http://localhost:8081/number-coin.html
2018-07-05 17:25:05,150 - method=GET
2018-07-05 17:25:05,150 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:05,150 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:25:05,150 - args:
2018-07-05 17:25:05,150 - =============结束请求时间:2018-07-05 17:25:05,耗时:0s======================
2018-07-05 17:25:05,150 - response=/number-coin
2018-07-05 17:25:05,150 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:05,330 - ===========进入拦截器==============
2018-07-05 17:25:05,330 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:25:05,357 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:25:05,357 - ===========请求时间:2018-07-05 17:25:05==========================
2018-07-05 17:25:05,357 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:25:05,357 - method=GET
2018-07-05 17:25:05,357 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:05,357 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:25:05,357 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:25:05,374 - =============结束请求时间:2018-07-05 17:25:05,耗时:0s======================
2018-07-05 17:25:05,375 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:25:05,381 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:25:08,212 - ===========进入拦截器==============
2018-07-05 17:25:08,212 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:25:08,221 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:25:08,221 - ===========请求时间:2018-07-05 17:25:08==========================
2018-07-05 17:25:08,221 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:25:08,221 - method=GET
2018-07-05 17:25:08,222 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:25:08,222 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:25:08,222 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:25:08,231 - =============结束请求时间:2018-07-05 17:25:08,耗时:0s======================
2018-07-05 17:25:08,231 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:25:08,232 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:43,671 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9536 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:27:43,673 - No active profile set, falling back to default profiles: default
2018-07-05 17:27:43,880 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:27:43,941 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Thu Jul 05 17:27:43 CST 2018]; root of context hierarchy
2018-07-05 17:27:44,936 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:27:44,937 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:27:44,937 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:27:45,962 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:27:45,973 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:27:45,983 - Starting service [Tomcat]
2018-07-05 17:27:45,983 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:27:46,082 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:27:46,083 - Root WebApplicationContext: initialization completed in 2142 ms
2018-07-05 17:27:46,320 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:27:46,327 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:27:46,327 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:27:46,327 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:27:46,327 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:27:46,327 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:27:47,970 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@561a1ff7: startup date [Thu Jul 05 17:27:43 CST 2018]; root of context hierarchy
2018-07-05 17:27:48,075 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:27:48,076 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:27:48,076 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:27:48,076 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:27:48,076 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:27:48,077 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:27:48,077 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:27:48,077 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:27:48,077 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:27:48,078 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:27:48,078 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:27:48,079 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:27:48,079 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:27:48,079 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:27:48,079 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:27:48,079 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:27:48,079 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:27:48,080 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:27:48,080 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:27:48,080 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:27:48,080 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:27:48,080 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:27:48,084 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:27:48,085 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:27:48,088 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:27:48,089 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:27:48,089 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:27:48,089 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:27:48,089 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:27:48,089 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:27:48,089 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:27:48,090 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:27:48,090 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:27:48,092 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:27:48,092 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:27:48,092 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:27:48,092 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:27:48,093 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:27:48,094 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:27:48,094 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:27:48,094 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:27:48,095 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:27:48,095 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:27:48,096 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:27:48,096 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:27:48,098 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:27:48,098 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:27:48,098 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:27:48,098 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:27:48,099 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:27:48,099 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:27:48,099 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:27:48,100 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:27:48,105 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:27:48,106 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:27:48,200 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:27:48,200 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:27:48,229 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:27:48,284 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:27:49,051 - LiveReload server is running on port 35729
2018-07-05 17:27:49,179 - Registering beans for JMX exposure on startup
2018-07-05 17:27:49,180 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:27:49,186 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:27:49,199 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:27:49,225 - Using a shared selector for servlet write/read
2018-07-05 17:27:49,243 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:27:49,252 - Started FqLtdWasBackstageApplication in 6.572 seconds (JVM running for 7.947)
2018-07-05 17:27:52,622 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:27:52,622 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:27:52,668 - FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2018-07-05 17:27:52,702 - ===========进入拦截器==============
2018-07-05 17:27:52,747 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:27:52,747 - ===========请求时间:2018-07-05 17:27:52==========================
2018-07-05 17:27:52,747 - url=http://localhost:8081/login
2018-07-05 17:27:52,747 - method=GET
2018-07-05 17:27:52,747 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:52,748 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:27:52,748 - args:
2018-07-05 17:27:52,753 - =============结束请求时间:2018-07-05 17:27:52,耗时:0s======================
2018-07-05 17:27:52,753 - response=/login
2018-07-05 17:27:52,789 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:27:52,863 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:27:52,863 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:27:52,863 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:27:52,863 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:27:52,868 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:27:52,868 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:27:58,417 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:27:58,418 - ===========请求时间:2018-07-05 17:27:58==========================
2018-07-05 17:27:58,418 - url=http://localhost:8081/signIn
2018-07-05 17:27:58,418 - method=POST
2018-07-05 17:27:58,418 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:58,418 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:27:58,418 - args:userName=admin,password=123456,
2018-07-05 17:27:58,510 - {dataSource-1} inited
2018-07-05 17:27:59,027 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,027 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:27:58, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:27:59,158 - ===========进入拦截器==============
2018-07-05 17:27:59,158 - http://localhost:8081/home
2018-07-05 17:27:59,164 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:27:59,165 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,165 - url=http://localhost:8081/home
2018-07-05 17:27:59,165 - method=GET
2018-07-05 17:27:59,165 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,165 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:27:59,165 - args:
2018-07-05 17:27:59,165 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,165 - response=/home
2018-07-05 17:27:59,165 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:59,272 - ===========进入拦截器==============
2018-07-05 17:27:59,273 - http://localhost:8081/welcome
2018-07-05 17:27:59,278 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:27:59,278 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,278 - url=http://localhost:8081/welcome
2018-07-05 17:27:59,278 - method=GET
2018-07-05 17:27:59,278 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,278 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:27:59,278 - args:
2018-07-05 17:27:59,278 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,278 - response=/welcome
2018-07-05 17:27:59,278 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:59,333 - ===========进入拦截器==============
2018-07-05 17:27:59,333 - http://localhost:8081/common/top
2018-07-05 17:27:59,333 - ===========进入拦截器==============
2018-07-05 17:27:59,334 - http://localhost:8081/common/left
2018-07-05 17:27:59,335 - ===========进入拦截器==============
2018-07-05 17:27:59,335 - http://localhost:8081/common/footer
2018-07-05 17:27:59,338 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:27:59,339 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,339 - url=http://localhost:8081/common/top
2018-07-05 17:27:59,339 - method=GET
2018-07-05 17:27:59,339 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,339 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:27:59,339 - args:
2018-07-05 17:27:59,340 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,340 - response=/common/top
2018-07-05 17:27:59,340 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:59,348 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:27:59,348 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,348 - url=http://localhost:8081/common/left
2018-07-05 17:27:59,348 - method=GET
2018-07-05 17:27:59,348 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,348 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:27:59,348 - args:
2018-07-05 17:27:59,348 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,349 - response=/common/left
2018-07-05 17:27:59,349 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:59,361 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:27:59,362 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,362 - url=http://localhost:8081/common/footer
2018-07-05 17:27:59,362 - method=GET
2018-07-05 17:27:59,362 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,362 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:27:59,362 - args:
2018-07-05 17:27:59,362 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,362 - response=/common/footer
2018-07-05 17:27:59,362 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:27:59,393 - ===========进入拦截器==============
2018-07-05 17:27:59,393 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:27:59,400 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:27:59,400 - ===========请求时间:2018-07-05 17:27:59==========================
2018-07-05 17:27:59,400 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:27:59,400 - method=GET
2018-07-05 17:27:59,400 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:27:59,401 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:27:59,401 - args:roleId=1,
2018-07-05 17:27:59,447 - =============结束请求时间:2018-07-05 17:27:59,耗时:0s======================
2018-07-05 17:27:59,447 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:27:59,461 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:28:00,759 - ===========进入拦截器==============
2018-07-05 17:28:00,759 - http://localhost:8081/number-coin.html
2018-07-05 17:28:00,764 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:28:00,765 - ===========请求时间:2018-07-05 17:28:00==========================
2018-07-05 17:28:00,765 - url=http://localhost:8081/number-coin.html
2018-07-05 17:28:00,765 - method=GET
2018-07-05 17:28:00,765 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:28:00,765 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:28:00,765 - args:
2018-07-05 17:28:00,765 - =============结束请求时间:2018-07-05 17:28:00,耗时:0s======================
2018-07-05 17:28:00,765 - response=/number-coin
2018-07-05 17:28:00,765 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:28:00,951 - ===========进入拦截器==============
2018-07-05 17:28:00,952 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:28:00,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:28:00,975 - ===========请求时间:2018-07-05 17:28:00==========================
2018-07-05 17:28:00,975 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:28:00,975 - method=GET
2018-07-05 17:28:00,975 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:28:00,975 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:28:00,975 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:28:00,997 - =============结束请求时间:2018-07-05 17:28:00,耗时:0s======================
2018-07-05 17:28:00,997 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:28:01,009 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:28:04,179 - ===========进入拦截器==============
2018-07-05 17:28:04,179 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:28:04,185 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:28:04,185 - ===========请求时间:2018-07-05 17:28:04==========================
2018-07-05 17:28:04,185 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:28:04,185 - method=GET
2018-07-05 17:28:04,185 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:28:04,185 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:28:04,185 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:28:04,201 - =============结束请求时间:2018-07-05 17:28:04,耗时:0s======================
2018-07-05 17:28:04,201 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:28:04,202 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:30:13,996 - ===========进入拦截器==============
2018-07-05 17:30:13,996 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:30:14,032 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:30:14,032 - ===========请求时间:2018-07-05 17:30:14==========================
2018-07-05 17:30:14,032 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:30:14,032 - method=GET
2018-07-05 17:30:14,032 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:30:14,032 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:30:14,032 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:30:14,047 - =============结束请求时间:2018-07-05 17:30:14,耗时:0s======================
2018-07-05 17:30:14,047 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:30:14,047 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:18,604 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 6700 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:31:18,607 - No active profile set, falling back to default profiles: default
2018-07-05 17:31:18,798 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:31:18,853 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2bf320: startup date [Thu Jul 05 17:31:18 CST 2018]; root of context hierarchy
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:31:19,916 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:31:19,917 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:31:21,739 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:31:21,750 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:31:21,758 - Starting service [Tomcat]
2018-07-05 17:31:21,758 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:31:21,859 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:31:21,859 - Root WebApplicationContext: initialization completed in 3006 ms
2018-07-05 17:31:22,073 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:31:22,077 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:31:22,077 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:31:22,077 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:31:22,077 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:31:22,077 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:31:24,227 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5c2bf320: startup date [Thu Jul 05 17:31:18 CST 2018]; root of context hierarchy
2018-07-05 17:31:24,330 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:31:24,331 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:31:24,332 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:31:24,332 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:31:24,332 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:31:24,332 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:31:24,332 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:31:24,332 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:31:24,332 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:31:24,332 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:31:24,333 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:31:24,333 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:31:24,333 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:31:24,333 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:31:24,333 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:31:24,333 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:31:24,333 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:31:24,333 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:31:24,334 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:31:24,334 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:31:24,334 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:31:24,334 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:31:24,337 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:31:24,337 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:31:24,341 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:31:24,341 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:31:24,341 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:31:24,341 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:31:24,341 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:31:24,342 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:31:24,342 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:31:24,342 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:31:24,342 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:31:24,343 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:31:24,343 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:31:24,343 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:31:24,343 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:31:24,345 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:31:24,345 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:31:24,345 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:31:24,346 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:31:24,346 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:31:24,346 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:31:24,346 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:31:24,346 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:31:24,348 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:31:24,348 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:31:24,348 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:31:24,348 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:31:24,348 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:31:24,348 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:31:24,348 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:31:24,349 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:31:24,349 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:31:24,349 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:31:24,350 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:31:24,350 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:31:24,350 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:31:24,351 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:31:24,352 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:31:24,403 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:31:24,403 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:31:24,427 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:31:24,460 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:31:25,220 - LiveReload server is running on port 35729
2018-07-05 17:31:25,356 - Registering beans for JMX exposure on startup
2018-07-05 17:31:25,357 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:31:25,366 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:31:25,380 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:31:25,413 - Using a shared selector for servlet write/read
2018-07-05 17:31:25,439 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:31:25,447 - Started FqLtdWasBackstageApplication in 7.623 seconds (JVM running for 9.016)
2018-07-05 17:31:26,751 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:31:26,751 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:31:26,792 - FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2018-07-05 17:31:26,821 - ===========进入拦截器==============
2018-07-05 17:31:26,861 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:31:26,861 - ===========请求时间:2018-07-05 17:31:26==========================
2018-07-05 17:31:26,861 - url=http://localhost:8081/login
2018-07-05 17:31:26,862 - method=GET
2018-07-05 17:31:26,862 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:26,862 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:31:26,862 - args:
2018-07-05 17:31:26,866 - =============结束请求时间:2018-07-05 17:31:26,耗时:0s======================
2018-07-05 17:31:26,866 - response=/login
2018-07-05 17:31:26,904 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:31:26,995 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:31:26,996 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:31:26,996 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:31:26,996 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:31:27,006 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:31:27,006 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:31:31,552 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:31:31,552 - ===========请求时间:2018-07-05 17:31:31==========================
2018-07-05 17:31:31,552 - url=http://localhost:8081/signIn
2018-07-05 17:31:31,552 - method=POST
2018-07-05 17:31:31,553 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:31,553 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:31:31,553 - args:userName=admin,password=123456,
2018-07-05 17:31:31,660 - {dataSource-1} inited
2018-07-05 17:31:32,285 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,286 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:31:32, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:31:32,429 - ===========进入拦截器==============
2018-07-05 17:31:32,429 - http://localhost:8081/home
2018-07-05 17:31:32,469 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:31:32,469 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,469 - url=http://localhost:8081/home
2018-07-05 17:31:32,470 - method=GET
2018-07-05 17:31:32,470 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,470 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:31:32,470 - args:
2018-07-05 17:31:32,470 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,470 - response=/home
2018-07-05 17:31:32,471 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:32,595 - ===========进入拦截器==============
2018-07-05 17:31:32,595 - http://localhost:8081/welcome
2018-07-05 17:31:32,600 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:31:32,600 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,600 - url=http://localhost:8081/welcome
2018-07-05 17:31:32,600 - method=GET
2018-07-05 17:31:32,600 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,600 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:31:32,600 - args:
2018-07-05 17:31:32,600 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,600 - response=/welcome
2018-07-05 17:31:32,601 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:32,665 - ===========进入拦截器==============
2018-07-05 17:31:32,665 - http://localhost:8081/common/top
2018-07-05 17:31:32,666 - ===========进入拦截器==============
2018-07-05 17:31:32,666 - http://localhost:8081/common/left
2018-07-05 17:31:32,671 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:31:32,672 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,672 - url=http://localhost:8081/common/top
2018-07-05 17:31:32,672 - method=GET
2018-07-05 17:31:32,672 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,672 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:31:32,672 - args:
2018-07-05 17:31:32,672 - ===========进入拦截器==============
2018-07-05 17:31:32,672 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,672 - response=/common/top
2018-07-05 17:31:32,672 - http://localhost:8081/common/footer
2018-07-05 17:31:32,672 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:32,686 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:31:32,686 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,686 - url=http://localhost:8081/common/left
2018-07-05 17:31:32,686 - method=GET
2018-07-05 17:31:32,686 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,686 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:31:32,687 - args:
2018-07-05 17:31:32,687 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,687 - response=/common/left
2018-07-05 17:31:32,687 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:32,692 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:31:32,692 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,692 - url=http://localhost:8081/common/footer
2018-07-05 17:31:32,692 - method=GET
2018-07-05 17:31:32,692 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,692 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:31:32,692 - args:
2018-07-05 17:31:32,692 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,692 - response=/common/footer
2018-07-05 17:31:32,692 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:32,732 - ===========进入拦截器==============
2018-07-05 17:31:32,733 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:31:32,741 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:31:32,741 - ===========请求时间:2018-07-05 17:31:32==========================
2018-07-05 17:31:32,741 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:31:32,741 - method=GET
2018-07-05 17:31:32,741 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:32,741 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:31:32,741 - args:roleId=1,
2018-07-05 17:31:32,775 - =============结束请求时间:2018-07-05 17:31:32,耗时:0s======================
2018-07-05 17:31:32,775 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:31:32,789 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:34,192 - ===========进入拦截器==============
2018-07-05 17:31:34,192 - http://localhost:8081/number-coin.html
2018-07-05 17:31:34,200 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:31:34,200 - ===========请求时间:2018-07-05 17:31:34==========================
2018-07-05 17:31:34,200 - url=http://localhost:8081/number-coin.html
2018-07-05 17:31:34,200 - method=GET
2018-07-05 17:31:34,200 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:34,200 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:31:34,200 - args:
2018-07-05 17:31:34,200 - =============结束请求时间:2018-07-05 17:31:34,耗时:0s======================
2018-07-05 17:31:34,200 - response=/number-coin
2018-07-05 17:31:34,200 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:34,447 - ===========进入拦截器==============
2018-07-05 17:31:34,447 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:31:34,477 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:31:34,478 - ===========请求时间:2018-07-05 17:31:34==========================
2018-07-05 17:31:34,478 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:31:34,478 - method=GET
2018-07-05 17:31:34,478 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:34,478 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:31:34,478 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:31:34,498 - =============结束请求时间:2018-07-05 17:31:34,耗时:0s======================
2018-07-05 17:31:34,498 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:31:34,509 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:31:38,675 - ===========进入拦截器==============
2018-07-05 17:31:38,675 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:31:38,682 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:31:38,683 - ===========请求时间:2018-07-05 17:31:38==========================
2018-07-05 17:31:38,683 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:31:38,683 - method=GET
2018-07-05 17:31:38,683 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:31:38,683 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:31:38,683 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:31:38,694 - =============结束请求时间:2018-07-05 17:31:38,耗时:0s======================
2018-07-05 17:31:38,694 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:31:38,695 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:25,075 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14864 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:32:25,077 - No active profile set, falling back to default profiles: default
2018-07-05 17:32:25,241 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:32:25,310 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d190b8a: startup date [Thu Jul 05 17:32:25 CST 2018]; root of context hierarchy
2018-07-05 17:32:26,145 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:32:26,146 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:32:26,146 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:32:27,336 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:32:27,350 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:32:27,361 - Starting service [Tomcat]
2018-07-05 17:32:27,362 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:32:27,498 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:32:27,498 - Root WebApplicationContext: initialization completed in 2188 ms
2018-07-05 17:32:27,750 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:32:27,754 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:32:27,755 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:32:27,755 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:32:27,755 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:32:27,755 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:32:29,452 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5d190b8a: startup date [Thu Jul 05 17:32:25 CST 2018]; root of context hierarchy
2018-07-05 17:32:29,556 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:32:29,558 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:32:29,558 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:32:29,558 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:32:29,558 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:32:29,559 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:32:29,559 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:32:29,559 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:32:29,559 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:32:29,559 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:32:29,559 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:32:29,560 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:32:29,560 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:32:29,560 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:32:29,560 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:32:29,561 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:32:29,562 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:32:29,562 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:32:29,562 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:32:29,562 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:32:29,562 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:32:29,563 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:32:29,566 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:32:29,566 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:32:29,569 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:32:29,569 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:32:29,569 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:32:29,569 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:32:29,569 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:32:29,570 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:32:29,570 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:32:29,570 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:32:29,570 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:32:29,571 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:32:29,572 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:32:29,572 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:32:29,572 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:32:29,574 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:32:29,574 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:32:29,575 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:32:29,575 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:32:29,575 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:32:29,575 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:32:29,576 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:32:29,576 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:32:29,578 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:32:29,578 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:32:29,578 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:32:29,578 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:32:29,578 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:32:29,578 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:32:29,578 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:32:29,579 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:32:29,579 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:32:29,580 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:32:29,580 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:32:29,580 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:32:29,580 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:32:29,582 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:32:29,583 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:32:29,655 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:32:29,656 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:32:29,691 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:32:29,990 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:32:30,747 - LiveReload server is running on port 35729
2018-07-05 17:32:30,876 - Registering beans for JMX exposure on startup
2018-07-05 17:32:30,878 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:32:30,884 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:32:30,897 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:32:30,925 - Using a shared selector for servlet write/read
2018-07-05 17:32:30,944 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:32:30,952 - Started FqLtdWasBackstageApplication in 6.747 seconds (JVM running for 7.966)
2018-07-05 17:32:34,511 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:32:34,511 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:32:34,551 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 17:32:34,583 - ===========进入拦截器==============
2018-07-05 17:32:34,624 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:32:34,625 - ===========请求时间:2018-07-05 17:32:34==========================
2018-07-05 17:32:34,625 - url=http://localhost:8081/login
2018-07-05 17:32:34,625 - method=GET
2018-07-05 17:32:34,625 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:34,625 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:32:34,625 - args:
2018-07-05 17:32:34,629 - =============结束请求时间:2018-07-05 17:32:34,耗时:0s======================
2018-07-05 17:32:34,629 - response=/login
2018-07-05 17:32:34,665 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:32:34,746 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:32:34,746 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:32:34,746 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:32:34,746 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:32:34,751 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:32:34,751 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:32:39,093 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:32:39,093 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,093 - url=http://localhost:8081/signIn
2018-07-05 17:32:39,093 - method=POST
2018-07-05 17:32:39,093 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,093 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:32:39,093 - args:userName=admin,password=123456,
2018-07-05 17:32:39,186 - {dataSource-1} inited
2018-07-05 17:32:39,626 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,626 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:32:39, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:32:39,738 - ===========进入拦截器==============
2018-07-05 17:32:39,738 - http://localhost:8081/home
2018-07-05 17:32:39,744 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:32:39,744 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,744 - url=http://localhost:8081/home
2018-07-05 17:32:39,744 - method=GET
2018-07-05 17:32:39,744 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,744 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:32:39,744 - args:
2018-07-05 17:32:39,744 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,744 - response=/home
2018-07-05 17:32:39,744 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:39,846 - ===========进入拦截器==============
2018-07-05 17:32:39,846 - http://localhost:8081/welcome
2018-07-05 17:32:39,851 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:32:39,851 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,851 - url=http://localhost:8081/welcome
2018-07-05 17:32:39,851 - method=GET
2018-07-05 17:32:39,851 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,851 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:32:39,851 - args:
2018-07-05 17:32:39,851 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,851 - response=/welcome
2018-07-05 17:32:39,852 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:39,909 - ===========进入拦截器==============
2018-07-05 17:32:39,909 - http://localhost:8081/common/top
2018-07-05 17:32:39,911 - ===========进入拦截器==============
2018-07-05 17:32:39,911 - http://localhost:8081/common/left
2018-07-05 17:32:39,913 - ===========进入拦截器==============
2018-07-05 17:32:39,913 - http://localhost:8081/common/footer
2018-07-05 17:32:39,914 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:32:39,914 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,914 - url=http://localhost:8081/common/top
2018-07-05 17:32:39,914 - method=GET
2018-07-05 17:32:39,915 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,915 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:32:39,915 - args:
2018-07-05 17:32:39,915 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,915 - response=/common/top
2018-07-05 17:32:39,915 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:39,930 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:32:39,930 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,930 - url=http://localhost:8081/common/left
2018-07-05 17:32:39,930 - method=GET
2018-07-05 17:32:39,930 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,930 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:32:39,930 - args:
2018-07-05 17:32:39,931 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,931 - response=/common/left
2018-07-05 17:32:39,931 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:39,938 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:32:39,938 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,938 - url=http://localhost:8081/common/footer
2018-07-05 17:32:39,938 - method=GET
2018-07-05 17:32:39,938 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,938 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:32:39,938 - args:
2018-07-05 17:32:39,939 - =============结束请求时间:2018-07-05 17:32:39,耗时:0s======================
2018-07-05 17:32:39,939 - response=/common/footer
2018-07-05 17:32:39,939 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:39,967 - ===========进入拦截器==============
2018-07-05 17:32:39,967 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:32:39,981 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:32:39,981 - ===========请求时间:2018-07-05 17:32:39==========================
2018-07-05 17:32:39,981 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:32:39,981 - method=GET
2018-07-05 17:32:39,981 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:39,981 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:32:39,981 - args:roleId=1,
2018-07-05 17:32:40,014 - =============结束请求时间:2018-07-05 17:32:40,耗时:0s======================
2018-07-05 17:32:40,014 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:32:40,028 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:42,079 - ===========进入拦截器==============
2018-07-05 17:32:42,080 - http://localhost:8081/number-coin.html
2018-07-05 17:32:42,089 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:32:42,089 - ===========请求时间:2018-07-05 17:32:42==========================
2018-07-05 17:32:42,089 - url=http://localhost:8081/number-coin.html
2018-07-05 17:32:42,089 - method=GET
2018-07-05 17:32:42,089 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:42,089 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:32:42,089 - args:
2018-07-05 17:32:42,089 - =============结束请求时间:2018-07-05 17:32:42,耗时:0s======================
2018-07-05 17:32:42,090 - response=/number-coin
2018-07-05 17:32:42,090 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:42,264 - ===========进入拦截器==============
2018-07-05 17:32:42,264 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:32:42,286 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:32:42,286 - ===========请求时间:2018-07-05 17:32:42==========================
2018-07-05 17:32:42,286 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:32:42,286 - method=GET
2018-07-05 17:32:42,286 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:42,286 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:32:42,286 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:32:42,309 - =============结束请求时间:2018-07-05 17:32:42,耗时:0s======================
2018-07-05 17:32:42,309 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:32:42,317 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:32:44,978 - ===========进入拦截器==============
2018-07-05 17:32:44,978 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:32:45,043 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:32:45,043 - ===========请求时间:2018-07-05 17:32:45==========================
2018-07-05 17:32:45,043 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:32:45,043 - method=GET
2018-07-05 17:32:45,043 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:32:45,043 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:32:45,043 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:32:45,054 - =============结束请求时间:2018-07-05 17:32:45,耗时:0s======================
2018-07-05 17:32:45,055 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:32:45,056 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:33:50,305 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 14776 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:33:50,309 - No active profile set, falling back to default profiles: default
2018-07-05 17:33:50,490 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:33:50,577 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@318b63a6: startup date [Thu Jul 05 17:33:50 CST 2018]; root of context hierarchy
2018-07-05 17:33:51,984 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,984 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,984 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,984 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,985 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,985 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:33:51,985 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:33:51,985 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:33:53,250 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:33:53,261 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:33:53,273 - Starting service [Tomcat]
2018-07-05 17:33:53,273 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:33:53,378 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:33:53,378 - Root WebApplicationContext: initialization completed in 2801 ms
2018-07-05 17:33:53,587 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:33:53,592 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:33:53,592 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:33:53,592 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:33:53,592 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:33:53,592 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:33:55,057 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@318b63a6: startup date [Thu Jul 05 17:33:50 CST 2018]; root of context hierarchy
2018-07-05 17:33:55,158 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:33:55,160 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:33:55,160 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:33:55,160 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:33:55,160 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:33:55,160 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:33:55,160 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:33:55,161 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:33:55,161 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:33:55,161 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:33:55,161 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:33:55,161 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:33:55,161 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:33:55,161 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:33:55,161 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:33:55,162 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:33:55,162 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:33:55,162 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:33:55,162 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:33:55,162 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:33:55,162 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:33:55,162 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:33:55,165 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:33:55,166 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:33:55,167 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:33:55,168 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:33:55,168 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:33:55,168 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:33:55,168 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:33:55,168 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:33:55,168 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:33:55,168 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:33:55,169 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:33:55,170 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:33:55,170 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:33:55,171 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:33:55,171 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:33:55,172 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:33:55,172 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:33:55,173 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:33:55,173 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:33:55,173 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:33:55,173 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:33:55,174 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:33:55,174 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:33:55,175 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:33:55,176 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:33:55,176 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:33:55,176 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:33:55,176 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:33:55,176 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:33:55,176 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:33:55,177 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:33:55,179 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:33:55,179 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:33:55,229 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:33:55,229 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:33:55,253 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:33:55,286 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:33:56,027 - LiveReload server is running on port 35729
2018-07-05 17:33:56,155 - Registering beans for JMX exposure on startup
2018-07-05 17:33:56,157 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:33:56,163 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:33:56,175 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:33:56,205 - Using a shared selector for servlet write/read
2018-07-05 17:33:56,224 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:33:56,234 - Started FqLtdWasBackstageApplication in 6.711 seconds (JVM running for 8.067)
2018-07-05 17:34:06,282 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:34:06,282 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:34:06,329 - FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2018-07-05 17:34:06,369 - ===========进入拦截器==============
2018-07-05 17:34:06,414 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:34:06,415 - ===========请求时间:2018-07-05 17:34:06==========================
2018-07-05 17:34:06,415 - url=http://localhost:8081/login
2018-07-05 17:34:06,415 - method=GET
2018-07-05 17:34:06,415 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:06,415 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:34:06,415 - args:
2018-07-05 17:34:06,419 - =============结束请求时间:2018-07-05 17:34:06,耗时:0s======================
2018-07-05 17:34:06,419 - response=/login
2018-07-05 17:34:06,457 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:34:06,545 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:34:06,545 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:34:06,545 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:34:06,545 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:34:06,550 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:34:06,550 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:34:10,781 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:34:10,781 - ===========请求时间:2018-07-05 17:34:10==========================
2018-07-05 17:34:10,781 - url=http://localhost:8081/signIn
2018-07-05 17:34:10,781 - method=POST
2018-07-05 17:34:10,781 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:10,781 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:34:10,781 - args:userName=admin,password=123456,
2018-07-05 17:34:10,881 - {dataSource-1} inited
2018-07-05 17:34:11,453 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,453 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:34:11, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:34:11,559 - ===========进入拦截器==============
2018-07-05 17:34:11,559 - http://localhost:8081/home
2018-07-05 17:34:11,565 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:34:11,565 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,565 - url=http://localhost:8081/home
2018-07-05 17:34:11,565 - method=GET
2018-07-05 17:34:11,565 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,565 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:34:11,565 - args:
2018-07-05 17:34:11,565 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,565 - response=/home
2018-07-05 17:34:11,565 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:11,665 - ===========进入拦截器==============
2018-07-05 17:34:11,665 - http://localhost:8081/welcome
2018-07-05 17:34:11,670 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:34:11,670 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,670 - url=http://localhost:8081/welcome
2018-07-05 17:34:11,670 - method=GET
2018-07-05 17:34:11,670 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,670 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:34:11,670 - args:
2018-07-05 17:34:11,670 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,671 - response=/welcome
2018-07-05 17:34:11,671 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:11,724 - ===========进入拦截器==============
2018-07-05 17:34:11,724 - http://localhost:8081/common/top
2018-07-05 17:34:11,726 - ===========进入拦截器==============
2018-07-05 17:34:11,726 - http://localhost:8081/common/left
2018-07-05 17:34:11,727 - ===========进入拦截器==============
2018-07-05 17:34:11,727 - http://localhost:8081/common/footer
2018-07-05 17:34:11,729 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:34:11,730 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,730 - url=http://localhost:8081/common/top
2018-07-05 17:34:11,730 - method=GET
2018-07-05 17:34:11,730 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,730 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:34:11,730 - args:
2018-07-05 17:34:11,730 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,730 - response=/common/top
2018-07-05 17:34:11,730 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:11,735 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:34:11,735 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,736 - url=http://localhost:8081/common/left
2018-07-05 17:34:11,736 - method=GET
2018-07-05 17:34:11,736 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,736 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:34:11,736 - args:
2018-07-05 17:34:11,736 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,736 - response=/common/left
2018-07-05 17:34:11,736 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:11,746 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:34:11,747 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,747 - url=http://localhost:8081/common/footer
2018-07-05 17:34:11,747 - method=GET
2018-07-05 17:34:11,747 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,747 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:34:11,747 - args:
2018-07-05 17:34:11,747 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,747 - response=/common/footer
2018-07-05 17:34:11,747 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:11,795 - ===========进入拦截器==============
2018-07-05 17:34:11,795 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:34:11,803 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:34:11,803 - ===========请求时间:2018-07-05 17:34:11==========================
2018-07-05 17:34:11,803 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:34:11,803 - method=GET
2018-07-05 17:34:11,803 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:11,803 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:34:11,803 - args:roleId=1,
2018-07-05 17:34:11,850 - =============结束请求时间:2018-07-05 17:34:11,耗时:0s======================
2018-07-05 17:34:11,850 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:34:11,866 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:13,274 - ===========进入拦截器==============
2018-07-05 17:34:13,274 - http://localhost:8081/number-coin.html
2018-07-05 17:34:13,281 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:34:13,281 - ===========请求时间:2018-07-05 17:34:13==========================
2018-07-05 17:34:13,281 - url=http://localhost:8081/number-coin.html
2018-07-05 17:34:13,281 - method=GET
2018-07-05 17:34:13,281 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:13,281 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:34:13,281 - args:
2018-07-05 17:34:13,281 - =============结束请求时间:2018-07-05 17:34:13,耗时:0s======================
2018-07-05 17:34:13,281 - response=/number-coin
2018-07-05 17:34:13,282 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:13,480 - ===========进入拦截器==============
2018-07-05 17:34:13,480 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:34:13,508 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:34:13,509 - ===========请求时间:2018-07-05 17:34:13==========================
2018-07-05 17:34:13,509 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:34:13,509 - method=GET
2018-07-05 17:34:13,509 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:13,509 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:34:13,509 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:34:13,546 - =============结束请求时间:2018-07-05 17:34:13,耗时:0s======================
2018-07-05 17:34:13,547 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:34:13,560 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:34:15,084 - ===========进入拦截器==============
2018-07-05 17:34:15,084 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:34:15,090 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:34:15,090 - ===========请求时间:2018-07-05 17:34:15==========================
2018-07-05 17:34:15,090 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:34:15,090 - method=GET
2018-07-05 17:34:15,090 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:34:15,090 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:34:15,090 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:34:15,104 - =============结束请求时间:2018-07-05 17:34:15,耗时:0s======================
2018-07-05 17:34:15,104 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:34:15,106 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:07,998 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 15648 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:35:08,001 - No active profile set, falling back to default profiles: default
2018-07-05 17:35:08,201 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:35:08,245 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2af8dbe9: startup date [Thu Jul 05 17:35:08 CST 2018]; root of context hierarchy
2018-07-05 17:35:09,374 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,374 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,374 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,375 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,375 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,375 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:35:09,375 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:35:09,375 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:35:10,933 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:35:10,944 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:35:10,953 - Starting service [Tomcat]
2018-07-05 17:35:10,953 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:35:11,065 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:35:11,065 - Root WebApplicationContext: initialization completed in 2820 ms
2018-07-05 17:35:11,278 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:35:11,282 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:35:11,282 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:35:11,282 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:35:11,282 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:35:11,282 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:35:13,134 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2af8dbe9: startup date [Thu Jul 05 17:35:08 CST 2018]; root of context hierarchy
2018-07-05 17:35:13,256 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:35:13,258 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:35:13,258 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:35:13,258 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:35:13,258 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:35:13,258 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:35:13,258 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:35:13,259 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:35:13,259 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:35:13,259 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:35:13,259 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:35:13,260 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:35:13,261 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:35:13,261 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:35:13,261 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:35:13,261 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:35:13,262 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:35:13,262 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:35:13,262 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:35:13,262 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:35:13,262 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:35:13,263 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:35:13,267 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:35:13,267 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:35:13,269 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:35:13,269 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:35:13,270 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:35:13,270 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:35:13,270 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:35:13,270 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:35:13,270 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:35:13,270 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:35:13,271 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:35:13,272 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:35:13,272 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:35:13,272 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:35:13,273 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:35:13,274 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:35:13,274 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:35:13,274 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:35:13,275 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:35:13,276 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:35:13,276 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:35:13,276 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:35:13,277 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:35:13,278 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:35:13,279 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:35:13,279 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:35:13,279 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:35:13,279 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:35:13,279 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:35:13,279 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:35:13,280 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:35:13,280 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:35:13,280 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:35:13,280 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:35:13,281 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:35:13,281 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:35:13,283 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:35:13,284 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:35:13,343 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:35:13,344 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:35:13,375 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:35:13,413 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:35:14,399 - LiveReload server is running on port 35729
2018-07-05 17:35:14,569 - Registering beans for JMX exposure on startup
2018-07-05 17:35:14,570 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:35:14,577 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:35:14,591 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:35:14,628 - Using a shared selector for servlet write/read
2018-07-05 17:35:14,654 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:35:14,663 - Started FqLtdWasBackstageApplication in 7.505 seconds (JVM running for 8.987)
2018-07-05 17:35:33,285 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:35:33,285 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:35:33,325 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 17:35:33,354 - ===========进入拦截器==============
2018-07-05 17:35:33,390 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:35:33,390 - ===========请求时间:2018-07-05 17:35:33==========================
2018-07-05 17:35:33,391 - url=http://localhost:8081/login
2018-07-05 17:35:33,391 - method=GET
2018-07-05 17:35:33,391 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:33,391 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:35:33,391 - args:
2018-07-05 17:35:33,395 - =============结束请求时间:2018-07-05 17:35:33,耗时:0s======================
2018-07-05 17:35:33,395 - response=/login
2018-07-05 17:35:33,427 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:35:33,509 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:35:33,509 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:35:33,509 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:35:33,509 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:35:33,515 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:35:33,515 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:35:38,305 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:35:38,305 - ===========请求时间:2018-07-05 17:35:38==========================
2018-07-05 17:35:38,306 - url=http://localhost:8081/signIn
2018-07-05 17:35:38,307 - method=POST
2018-07-05 17:35:38,307 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:38,307 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:35:38,307 - args:userName=admin,password=123456,
2018-07-05 17:35:38,402 - {dataSource-1} inited
2018-07-05 17:35:38,825 - =============结束请求时间:2018-07-05 17:35:38,耗时:0s======================
2018-07-05 17:35:38,826 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:35:38, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:35:38,936 - ===========进入拦截器==============
2018-07-05 17:35:38,936 - http://localhost:8081/home
2018-07-05 17:35:38,941 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:35:38,941 - ===========请求时间:2018-07-05 17:35:38==========================
2018-07-05 17:35:38,941 - url=http://localhost:8081/home
2018-07-05 17:35:38,941 - method=GET
2018-07-05 17:35:38,941 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:38,941 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:35:38,941 - args:
2018-07-05 17:35:38,941 - =============结束请求时间:2018-07-05 17:35:38,耗时:0s======================
2018-07-05 17:35:38,941 - response=/home
2018-07-05 17:35:38,942 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:39,056 - ===========进入拦截器==============
2018-07-05 17:35:39,057 - http://localhost:8081/welcome
2018-07-05 17:35:39,062 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:35:39,062 - ===========请求时间:2018-07-05 17:35:39==========================
2018-07-05 17:35:39,062 - url=http://localhost:8081/welcome
2018-07-05 17:35:39,062 - method=GET
2018-07-05 17:35:39,062 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:39,062 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:35:39,062 - args:
2018-07-05 17:35:39,062 - =============结束请求时间:2018-07-05 17:35:39,耗时:0s======================
2018-07-05 17:35:39,062 - response=/welcome
2018-07-05 17:35:39,062 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:39,128 - ===========进入拦截器==============
2018-07-05 17:35:39,128 - http://localhost:8081/common/top
2018-07-05 17:35:39,129 - ===========进入拦截器==============
2018-07-05 17:35:39,129 - http://localhost:8081/common/left
2018-07-05 17:35:39,131 - ===========进入拦截器==============
2018-07-05 17:35:39,131 - http://localhost:8081/common/footer
2018-07-05 17:35:39,133 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:35:39,133 - ===========请求时间:2018-07-05 17:35:39==========================
2018-07-05 17:35:39,133 - url=http://localhost:8081/common/top
2018-07-05 17:35:39,133 - method=GET
2018-07-05 17:35:39,133 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:39,133 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:35:39,133 - args:
2018-07-05 17:35:39,133 - =============结束请求时间:2018-07-05 17:35:39,耗时:0s======================
2018-07-05 17:35:39,133 - response=/common/top
2018-07-05 17:35:39,133 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:39,139 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:35:39,139 - ===========请求时间:2018-07-05 17:35:39==========================
2018-07-05 17:35:39,139 - url=http://localhost:8081/common/left
2018-07-05 17:35:39,139 - method=GET
2018-07-05 17:35:39,140 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:39,140 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:35:39,140 - args:
2018-07-05 17:35:39,140 - =============结束请求时间:2018-07-05 17:35:39,耗时:0s======================
2018-07-05 17:35:39,140 - response=/common/left
2018-07-05 17:35:39,140 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:39,157 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:35:39,157 - ===========请求时间:2018-07-05 17:35:39==========================
2018-07-05 17:35:39,157 - url=http://localhost:8081/common/footer
2018-07-05 17:35:39,157 - method=GET
2018-07-05 17:35:39,157 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:39,157 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:35:39,157 - args:
2018-07-05 17:35:39,157 - =============结束请求时间:2018-07-05 17:35:39,耗时:0s======================
2018-07-05 17:35:39,157 - response=/common/footer
2018-07-05 17:35:39,157 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:39,191 - ===========进入拦截器==============
2018-07-05 17:35:39,192 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:35:39,204 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:35:39,205 - ===========请求时间:2018-07-05 17:35:39==========================
2018-07-05 17:35:39,205 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:35:39,205 - method=GET
2018-07-05 17:35:39,206 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:39,206 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:35:39,206 - args:roleId=1,
2018-07-05 17:35:39,251 - =============结束请求时间:2018-07-05 17:35:39,耗时:0s======================
2018-07-05 17:35:39,251 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:35:39,269 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:40,783 - ===========进入拦截器==============
2018-07-05 17:35:40,783 - http://localhost:8081/number-coin.html
2018-07-05 17:35:40,790 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:35:40,790 - ===========请求时间:2018-07-05 17:35:40==========================
2018-07-05 17:35:40,790 - url=http://localhost:8081/number-coin.html
2018-07-05 17:35:40,790 - method=GET
2018-07-05 17:35:40,790 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:40,790 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:35:40,790 - args:
2018-07-05 17:35:40,790 - =============结束请求时间:2018-07-05 17:35:40,耗时:0s======================
2018-07-05 17:35:40,790 - response=/number-coin
2018-07-05 17:35:40,791 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:40,969 - ===========进入拦截器==============
2018-07-05 17:35:40,970 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:35:40,990 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:35:40,991 - ===========请求时间:2018-07-05 17:35:40==========================
2018-07-05 17:35:40,991 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:35:40,991 - method=GET
2018-07-05 17:35:40,991 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:40,991 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:35:40,991 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:35:41,014 - =============结束请求时间:2018-07-05 17:35:41,耗时:0s======================
2018-07-05 17:35:41,015 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:35:41,025 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:35:43,017 - ===========进入拦截器==============
2018-07-05 17:35:43,017 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:35:43,024 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:35:43,025 - ===========请求时间:2018-07-05 17:35:43==========================
2018-07-05 17:35:43,025 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:35:43,025 - method=GET
2018-07-05 17:35:43,025 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:35:43,025 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:35:43,025 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:35:43,037 - =============结束请求时间:2018-07-05 17:35:43,耗时:0s======================
2018-07-05 17:35:43,037 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:35:43,039 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:50:53,873 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 13832 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:50:53,876 - No active profile set, falling back to default profiles: default
2018-07-05 17:50:54,061 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:50:54,159 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2c13c: startup date [Thu Jul 05 17:50:54 CST 2018]; root of context hierarchy
2018-07-05 17:50:55,424 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,424 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,425 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,425 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,425 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,425 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:50:55,425 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:50:55,425 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:50:56,476 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:50:56,488 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:50:56,497 - Starting service [Tomcat]
2018-07-05 17:50:56,497 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:50:56,596 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:50:56,596 - Root WebApplicationContext: initialization completed in 2438 ms
2018-07-05 17:50:56,805 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:50:56,810 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:50:56,810 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:50:56,810 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:50:56,810 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:50:56,811 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:50:58,325 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c2c13c: startup date [Thu Jul 05 17:50:54 CST 2018]; root of context hierarchy
2018-07-05 17:50:58,430 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:50:58,432 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:50:58,432 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:50:58,432 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:50:58,432 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:50:58,432 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:50:58,432 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:50:58,432 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:50:58,433 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:50:58,434 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:50:58,434 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:50:58,434 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:50:58,434 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:50:58,435 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:50:58,435 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:50:58,435 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:50:58,435 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:50:58,435 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:50:58,435 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:50:58,435 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:50:58,435 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:50:58,435 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:50:58,439 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:50:58,440 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:50:58,442 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:50:58,442 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:50:58,442 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:50:58,442 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:50:58,442 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:50:58,442 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:50:58,443 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:50:58,443 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:50:58,443 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:50:58,444 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:50:58,444 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:50:58,444 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:50:58,444 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:50:58,446 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:50:58,446 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:50:58,446 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:50:58,446 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:50:58,446 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:50:58,446 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:50:58,447 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:50:58,447 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:50:58,448 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:50:58,448 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:50:58,449 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:50:58,449 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:50:58,449 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:50:58,449 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:50:58,449 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:50:58,450 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:50:58,450 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:50:58,450 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:50:58,451 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:50:58,452 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:50:58,452 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:50:58,454 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:50:58,454 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:50:58,504 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:50:58,504 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:50:58,527 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:50:58,561 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:50:59,322 - LiveReload server is running on port 35729
2018-07-05 17:50:59,450 - Registering beans for JMX exposure on startup
2018-07-05 17:50:59,452 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:50:59,458 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:50:59,470 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:50:59,497 - Using a shared selector for servlet write/read
2018-07-05 17:50:59,515 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:50:59,522 - Started FqLtdWasBackstageApplication in 6.105 seconds (JVM running for 7.386)
2018-07-05 17:51:03,975 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:51:03,976 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:51:04,018 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 17:51:04,053 - ===========进入拦截器==============
2018-07-05 17:51:04,102 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:51:04,103 - ===========请求时间:2018-07-05 17:51:04==========================
2018-07-05 17:51:04,103 - url=http://localhost:8081/login
2018-07-05 17:51:04,103 - method=GET
2018-07-05 17:51:04,103 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:04,103 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:51:04,103 - args:
2018-07-05 17:51:04,109 - =============结束请求时间:2018-07-05 17:51:04,耗时:0s======================
2018-07-05 17:51:04,109 - response=/login
2018-07-05 17:51:04,143 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:51:04,216 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:51:04,216 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:51:04,216 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:51:04,216 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:51:04,221 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:51:04,221 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:51:08,834 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:51:08,834 - ===========请求时间:2018-07-05 17:51:08==========================
2018-07-05 17:51:08,834 - url=http://localhost:8081/signIn
2018-07-05 17:51:08,834 - method=POST
2018-07-05 17:51:08,834 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:08,834 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:51:08,834 - args:userName=admin,password=123456,
2018-07-05 17:51:08,929 - {dataSource-1} inited
2018-07-05 17:51:09,402 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,402 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:51:09, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:51:09,522 - ===========进入拦截器==============
2018-07-05 17:51:09,522 - http://localhost:8081/home
2018-07-05 17:51:09,530 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:51:09,530 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,530 - url=http://localhost:8081/home
2018-07-05 17:51:09,530 - method=GET
2018-07-05 17:51:09,530 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,530 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:51:09,530 - args:
2018-07-05 17:51:09,530 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,530 - response=/home
2018-07-05 17:51:09,530 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:09,635 - ===========进入拦截器==============
2018-07-05 17:51:09,635 - http://localhost:8081/welcome
2018-07-05 17:51:09,640 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:51:09,640 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,640 - url=http://localhost:8081/welcome
2018-07-05 17:51:09,640 - method=GET
2018-07-05 17:51:09,641 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,641 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:51:09,641 - args:
2018-07-05 17:51:09,641 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,641 - response=/welcome
2018-07-05 17:51:09,641 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:09,695 - ===========进入拦截器==============
2018-07-05 17:51:09,695 - http://localhost:8081/common/top
2018-07-05 17:51:09,696 - ===========进入拦截器==============
2018-07-05 17:51:09,696 - ===========进入拦截器==============
2018-07-05 17:51:09,696 - http://localhost:8081/common/left
2018-07-05 17:51:09,696 - http://localhost:8081/common/footer
2018-07-05 17:51:09,700 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:51:09,700 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,701 - url=http://localhost:8081/common/top
2018-07-05 17:51:09,701 - method=GET
2018-07-05 17:51:09,701 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,701 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:51:09,701 - args:
2018-07-05 17:51:09,701 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,701 - response=/common/top
2018-07-05 17:51:09,701 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:09,707 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:51:09,707 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,707 - url=http://localhost:8081/common/footer
2018-07-05 17:51:09,707 - method=GET
2018-07-05 17:51:09,707 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,707 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:51:09,707 - args:
2018-07-05 17:51:09,708 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,708 - response=/common/footer
2018-07-05 17:51:09,708 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:09,716 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:51:09,716 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,717 - url=http://localhost:8081/common/left
2018-07-05 17:51:09,717 - method=GET
2018-07-05 17:51:09,717 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,717 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:51:09,717 - args:
2018-07-05 17:51:09,717 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,717 - response=/common/left
2018-07-05 17:51:09,717 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:09,764 - ===========进入拦截器==============
2018-07-05 17:51:09,764 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:51:09,772 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:51:09,772 - ===========请求时间:2018-07-05 17:51:09==========================
2018-07-05 17:51:09,772 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:51:09,772 - method=GET
2018-07-05 17:51:09,773 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:09,773 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:51:09,773 - args:roleId=1,
2018-07-05 17:51:09,819 - =============结束请求时间:2018-07-05 17:51:09,耗时:0s======================
2018-07-05 17:51:09,819 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:51:09,831 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:11,390 - ===========进入拦截器==============
2018-07-05 17:51:11,391 - http://localhost:8081/number-coin.html
2018-07-05 17:51:11,397 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:51:11,398 - ===========请求时间:2018-07-05 17:51:11==========================
2018-07-05 17:51:11,398 - url=http://localhost:8081/number-coin.html
2018-07-05 17:51:11,398 - method=GET
2018-07-05 17:51:11,398 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:11,398 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:51:11,398 - args:
2018-07-05 17:51:11,398 - =============结束请求时间:2018-07-05 17:51:11,耗时:0s======================
2018-07-05 17:51:11,398 - response=/number-coin
2018-07-05 17:51:11,398 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:11,629 - ===========进入拦截器==============
2018-07-05 17:51:11,629 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:51:11,716 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:51:11,716 - ===========请求时间:2018-07-05 17:51:11==========================
2018-07-05 17:51:11,716 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:51:11,716 - method=GET
2018-07-05 17:51:11,716 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:11,716 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:51:11,716 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:51:11,739 - =============结束请求时间:2018-07-05 17:51:11,耗时:0s======================
2018-07-05 17:51:11,739 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:51:11,748 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:51:14,193 - ===========进入拦截器==============
2018-07-05 17:51:14,194 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:51:14,202 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:51:14,202 - ===========请求时间:2018-07-05 17:51:14==========================
2018-07-05 17:51:14,202 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:51:14,202 - method=GET
2018-07-05 17:51:14,202 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:51:14,202 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:51:14,202 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:51:14,212 - =============结束请求时间:2018-07-05 17:51:14,耗时:0s======================
2018-07-05 17:51:14,213 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:51:14,214 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:33,174 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11148 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:52:33,176 - No active profile set, falling back to default profiles: default
2018-07-05 17:52:33,381 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:52:33,483 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d9fad8c: startup date [Thu Jul 05 17:52:33 CST 2018]; root of context hierarchy
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,868 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:52:34,869 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:52:34,888 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:52:36,259 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:52:36,270 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:52:36,280 - Starting service [Tomcat]
2018-07-05 17:52:36,280 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:52:36,387 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:52:36,387 - Root WebApplicationContext: initialization completed in 2904 ms
2018-07-05 17:52:36,602 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:52:36,607 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:52:36,608 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:52:36,608 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:52:36,608 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:52:36,608 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:52:38,183 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4d9fad8c: startup date [Thu Jul 05 17:52:33 CST 2018]; root of context hierarchy
2018-07-05 17:52:38,290 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:52:38,291 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:52:38,291 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:52:38,292 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:52:38,292 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:52:38,292 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:52:38,292 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:52:38,292 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:52:38,292 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:52:38,292 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:52:38,293 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:52:38,293 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:52:38,293 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:52:38,293 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:52:38,293 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:52:38,293 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:52:38,293 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:52:38,294 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:52:38,294 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:52:38,294 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:52:38,295 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:52:38,295 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:52:38,299 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:52:38,299 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:52:38,301 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:52:38,301 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:52:38,301 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:52:38,301 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:52:38,302 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:52:38,302 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:52:38,302 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:52:38,302 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:52:38,303 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:52:38,304 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:52:38,304 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:52:38,304 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:52:38,304 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:52:38,306 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:52:38,307 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:52:38,307 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:52:38,307 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:52:38,307 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:52:38,307 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:52:38,308 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:52:38,308 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:52:38,309 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:52:38,309 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:52:38,310 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:52:38,310 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:52:38,310 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:52:38,310 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:52:38,310 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:52:38,311 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:52:38,311 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:52:38,312 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:52:38,312 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:52:38,312 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:52:38,312 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:52:38,313 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:52:38,314 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:52:38,365 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:52:38,366 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:52:38,390 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:52:38,421 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:52:39,198 - LiveReload server is running on port 35729
2018-07-05 17:52:39,364 - Registering beans for JMX exposure on startup
2018-07-05 17:52:39,366 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:52:39,379 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:52:39,397 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:52:39,434 - Using a shared selector for servlet write/read
2018-07-05 17:52:39,453 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:52:39,460 - Started FqLtdWasBackstageApplication in 7.039 seconds (JVM running for 8.981)
2018-07-05 17:52:39,753 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:52:39,753 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:52:39,796 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 17:52:39,834 - ===========进入拦截器==============
2018-07-05 17:52:39,872 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:52:39,872 - ===========请求时间:2018-07-05 17:52:39==========================
2018-07-05 17:52:39,872 - url=http://localhost:8081/login
2018-07-05 17:52:39,872 - method=GET
2018-07-05 17:52:39,873 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:39,873 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:52:39,873 - args:
2018-07-05 17:52:39,876 - =============结束请求时间:2018-07-05 17:52:39,耗时:0s======================
2018-07-05 17:52:39,876 - response=/login
2018-07-05 17:52:39,923 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:52:40,050 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:52:40,050 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:52:40,050 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:52:40,050 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:52:40,072 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:52:40,072 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:52:44,705 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:52:44,705 - ===========请求时间:2018-07-05 17:52:44==========================
2018-07-05 17:52:44,705 - url=http://localhost:8081/signIn
2018-07-05 17:52:44,705 - method=POST
2018-07-05 17:52:44,705 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:44,705 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:52:44,705 - args:userName=admin,password=123456,
2018-07-05 17:52:44,799 - {dataSource-1} inited
2018-07-05 17:52:45,386 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,386 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:52:45, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:52:45,492 - ===========进入拦截器==============
2018-07-05 17:52:45,492 - http://localhost:8081/home
2018-07-05 17:52:45,498 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:52:45,499 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,499 - url=http://localhost:8081/home
2018-07-05 17:52:45,499 - method=GET
2018-07-05 17:52:45,499 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,499 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:52:45,499 - args:
2018-07-05 17:52:45,499 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,499 - response=/home
2018-07-05 17:52:45,500 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:45,611 - ===========进入拦截器==============
2018-07-05 17:52:45,611 - http://localhost:8081/welcome
2018-07-05 17:52:45,616 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:52:45,616 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,616 - url=http://localhost:8081/welcome
2018-07-05 17:52:45,616 - method=GET
2018-07-05 17:52:45,616 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,616 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:52:45,616 - args:
2018-07-05 17:52:45,616 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,616 - response=/welcome
2018-07-05 17:52:45,617 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:45,679 - ===========进入拦截器==============
2018-07-05 17:52:45,680 - http://localhost:8081/common/top
2018-07-05 17:52:45,680 - ===========进入拦截器==============
2018-07-05 17:52:45,680 - http://localhost:8081/common/left
2018-07-05 17:52:45,682 - ===========进入拦截器==============
2018-07-05 17:52:45,682 - http://localhost:8081/common/footer
2018-07-05 17:52:45,686 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:52:45,686 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,686 - url=http://localhost:8081/common/top
2018-07-05 17:52:45,686 - method=GET
2018-07-05 17:52:45,686 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,687 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:52:45,687 - args:
2018-07-05 17:52:45,687 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,687 - response=/common/top
2018-07-05 17:52:45,687 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:45,701 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:52:45,702 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,702 - url=http://localhost:8081/common/left
2018-07-05 17:52:45,702 - method=GET
2018-07-05 17:52:45,702 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,702 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:52:45,702 - args:
2018-07-05 17:52:45,702 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,702 - response=/common/left
2018-07-05 17:52:45,702 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:45,706 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:52:45,706 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,706 - url=http://localhost:8081/common/footer
2018-07-05 17:52:45,706 - method=GET
2018-07-05 17:52:45,706 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,706 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:52:45,706 - args:
2018-07-05 17:52:45,707 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,707 - response=/common/footer
2018-07-05 17:52:45,707 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:45,756 - ===========进入拦截器==============
2018-07-05 17:52:45,756 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:52:45,764 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:52:45,764 - ===========请求时间:2018-07-05 17:52:45==========================
2018-07-05 17:52:45,764 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:52:45,765 - method=GET
2018-07-05 17:52:45,765 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:45,765 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:52:45,765 - args:roleId=1,
2018-07-05 17:52:45,805 - =============结束请求时间:2018-07-05 17:52:45,耗时:0s======================
2018-07-05 17:52:45,805 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:52:45,820 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:48,117 - ===========进入拦截器==============
2018-07-05 17:52:48,118 - http://localhost:8081/number-coin.html
2018-07-05 17:52:48,122 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:52:48,122 - ===========请求时间:2018-07-05 17:52:48==========================
2018-07-05 17:52:48,122 - url=http://localhost:8081/number-coin.html
2018-07-05 17:52:48,122 - method=GET
2018-07-05 17:52:48,122 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:48,122 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:52:48,122 - args:
2018-07-05 17:52:48,123 - =============结束请求时间:2018-07-05 17:52:48,耗时:0s======================
2018-07-05 17:52:48,123 - response=/number-coin
2018-07-05 17:52:48,123 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:48,310 - ===========进入拦截器==============
2018-07-05 17:52:48,310 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:52:48,332 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:52:48,332 - ===========请求时间:2018-07-05 17:52:48==========================
2018-07-05 17:52:48,332 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:52:48,332 - method=GET
2018-07-05 17:52:48,332 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:48,332 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:52:48,332 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:52:48,347 - =============结束请求时间:2018-07-05 17:52:48,耗时:0s======================
2018-07-05 17:52:48,348 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:52:48,353 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:52:51,145 - ===========进入拦截器==============
2018-07-05 17:52:51,146 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:52:51,152 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:52:51,152 - ===========请求时间:2018-07-05 17:52:51==========================
2018-07-05 17:52:51,152 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:52:51,152 - method=GET
2018-07-05 17:52:51,152 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:52:51,152 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:52:51,152 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:52:51,163 - =============结束请求时间:2018-07-05 17:52:51,耗时:0s======================
2018-07-05 17:52:51,163 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:52:51,164 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:32,553 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9372 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 17:53:32,555 - No active profile set, falling back to default profiles: default
2018-07-05 17:53:32,753 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 17:53:32,842 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@465f55ff: startup date [Thu Jul 05 17:53:32 CST 2018]; root of context hierarchy
2018-07-05 17:53:33,976 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,976 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,976 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,976 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,976 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,977 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 17:53:33,977 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 17:53:33,977 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 17:53:35,273 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 17:53:35,285 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 17:53:35,293 - Starting service [Tomcat]
2018-07-05 17:53:35,293 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 17:53:35,395 - Initializing Spring embedded WebApplicationContext
2018-07-05 17:53:35,395 - Root WebApplicationContext: initialization completed in 2553 ms
2018-07-05 17:53:35,601 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 17:53:35,608 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 17:53:35,608 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 17:53:35,608 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 17:53:35,608 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 17:53:35,608 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 17:53:37,079 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@465f55ff: startup date [Thu Jul 05 17:53:32 CST 2018]; root of context hierarchy
2018-07-05 17:53:37,176 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 17:53:37,177 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 17:53:37,178 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 17:53:37,178 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 17:53:37,178 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 17:53:37,178 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 17:53:37,178 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 17:53:37,178 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 17:53:37,178 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 17:53:37,179 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 17:53:37,179 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 17:53:37,179 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 17:53:37,179 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 17:53:37,179 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 17:53:37,179 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 17:53:37,180 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 17:53:37,180 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 17:53:37,180 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 17:53:37,180 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 17:53:37,180 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 17:53:37,180 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 17:53:37,181 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 17:53:37,185 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 17:53:37,185 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 17:53:37,187 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 17:53:37,187 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 17:53:37,187 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 17:53:37,187 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 17:53:37,187 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:53:37,187 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 17:53:37,187 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 17:53:37,187 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 17:53:37,188 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 17:53:37,189 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 17:53:37,189 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 17:53:37,189 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 17:53:37,189 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 17:53:37,190 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 17:53:37,190 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 17:53:37,191 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 17:53:37,191 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 17:53:37,191 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 17:53:37,191 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 17:53:37,191 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 17:53:37,192 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 17:53:37,194 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:53:37,194 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 17:53:37,194 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 17:53:37,194 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:53:37,194 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 17:53:37,194 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 17:53:37,194 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 17:53:37,195 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 17:53:37,195 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 17:53:37,195 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 17:53:37,195 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 17:53:37,195 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 17:53:37,196 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 17:53:37,197 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 17:53:37,197 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 17:53:37,267 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:53:37,267 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:53:37,295 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 17:53:37,328 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 17:53:38,055 - LiveReload server is running on port 35729
2018-07-05 17:53:38,184 - Registering beans for JMX exposure on startup
2018-07-05 17:53:38,185 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 17:53:38,192 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 17:53:38,204 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 17:53:38,235 - Using a shared selector for servlet write/read
2018-07-05 17:53:38,253 - Tomcat started on port(s): 8081 (http)
2018-07-05 17:53:38,261 - Started FqLtdWasBackstageApplication in 6.387 seconds (JVM running for 8.108)
2018-07-05 17:53:42,697 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 17:53:42,697 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 17:53:42,740 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 17:53:42,770 - ===========进入拦截器==============
2018-07-05 17:53:42,807 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 17:53:42,807 - ===========请求时间:2018-07-05 17:53:42==========================
2018-07-05 17:53:42,808 - url=http://localhost:8081/login
2018-07-05 17:53:42,808 - method=GET
2018-07-05 17:53:42,808 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:42,808 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 17:53:42,808 - args:
2018-07-05 17:53:42,812 - =============结束请求时间:2018-07-05 17:53:42,耗时:0s======================
2018-07-05 17:53:42,812 - response=/login
2018-07-05 17:53:42,852 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 17:53:42,941 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 17:53:42,941 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 17:53:42,941 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 17:53:42,941 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 17:53:42,947 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 17:53:42,947 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 17:53:47,281 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 17:53:47,281 - ===========请求时间:2018-07-05 17:53:47==========================
2018-07-05 17:53:47,281 - url=http://localhost:8081/signIn
2018-07-05 17:53:47,283 - method=POST
2018-07-05 17:53:47,283 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:47,283 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 17:53:47,283 - args:userName=admin,password=123456,
2018-07-05 17:53:47,381 - {dataSource-1} inited
2018-07-05 17:53:47,872 - =============结束请求时间:2018-07-05 17:53:47,耗时:0s======================
2018-07-05 17:53:47,873 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 17:53:47, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 17:53:47,984 - ===========进入拦截器==============
2018-07-05 17:53:47,984 - http://localhost:8081/home
2018-07-05 17:53:47,989 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 17:53:47,989 - ===========请求时间:2018-07-05 17:53:47==========================
2018-07-05 17:53:47,989 - url=http://localhost:8081/home
2018-07-05 17:53:47,989 - method=GET
2018-07-05 17:53:47,989 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:47,989 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 17:53:47,989 - args:
2018-07-05 17:53:47,990 - =============结束请求时间:2018-07-05 17:53:47,耗时:0s======================
2018-07-05 17:53:47,990 - response=/home
2018-07-05 17:53:47,990 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:48,098 - ===========进入拦截器==============
2018-07-05 17:53:48,098 - http://localhost:8081/welcome
2018-07-05 17:53:48,103 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 17:53:48,103 - ===========请求时间:2018-07-05 17:53:48==========================
2018-07-05 17:53:48,103 - url=http://localhost:8081/welcome
2018-07-05 17:53:48,103 - method=GET
2018-07-05 17:53:48,103 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:48,103 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 17:53:48,103 - args:
2018-07-05 17:53:48,104 - =============结束请求时间:2018-07-05 17:53:48,耗时:0s======================
2018-07-05 17:53:48,104 - response=/welcome
2018-07-05 17:53:48,104 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:48,169 - ===========进入拦截器==============
2018-07-05 17:53:48,169 - http://localhost:8081/common/top
2018-07-05 17:53:48,169 - ===========进入拦截器==============
2018-07-05 17:53:48,169 - http://localhost:8081/common/left
2018-07-05 17:53:48,169 - ===========进入拦截器==============
2018-07-05 17:53:48,169 - http://localhost:8081/common/footer
2018-07-05 17:53:48,174 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 17:53:48,175 - ===========请求时间:2018-07-05 17:53:48==========================
2018-07-05 17:53:48,175 - url=http://localhost:8081/common/top
2018-07-05 17:53:48,175 - method=GET
2018-07-05 17:53:48,175 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:48,175 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 17:53:48,175 - args:
2018-07-05 17:53:48,175 - =============结束请求时间:2018-07-05 17:53:48,耗时:0s======================
2018-07-05 17:53:48,175 - response=/common/top
2018-07-05 17:53:48,175 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:48,181 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 17:53:48,182 - ===========请求时间:2018-07-05 17:53:48==========================
2018-07-05 17:53:48,182 - url=http://localhost:8081/common/left
2018-07-05 17:53:48,182 - method=GET
2018-07-05 17:53:48,182 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:48,182 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 17:53:48,182 - args:
2018-07-05 17:53:48,182 - =============结束请求时间:2018-07-05 17:53:48,耗时:0s======================
2018-07-05 17:53:48,182 - response=/common/left
2018-07-05 17:53:48,183 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:48,189 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 17:53:48,190 - ===========请求时间:2018-07-05 17:53:48==========================
2018-07-05 17:53:48,190 - url=http://localhost:8081/common/footer
2018-07-05 17:53:48,190 - method=GET
2018-07-05 17:53:48,190 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:48,190 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 17:53:48,190 - args:
2018-07-05 17:53:48,190 - =============结束请求时间:2018-07-05 17:53:48,耗时:0s======================
2018-07-05 17:53:48,190 - response=/common/footer
2018-07-05 17:53:48,190 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:48,234 - ===========进入拦截器==============
2018-07-05 17:53:48,234 - http://localhost:8081/menu/findMenuByRole
2018-07-05 17:53:48,246 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 17:53:48,246 - ===========请求时间:2018-07-05 17:53:48==========================
2018-07-05 17:53:48,246 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 17:53:48,246 - method=GET
2018-07-05 17:53:48,246 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:48,246 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 17:53:48,246 - args:roleId=1,
2018-07-05 17:53:48,281 - =============结束请求时间:2018-07-05 17:53:48,耗时:0s======================
2018-07-05 17:53:48,282 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 17:53:48,296 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:49,966 - ===========进入拦截器==============
2018-07-05 17:53:49,966 - http://localhost:8081/number-coin.html
2018-07-05 17:53:49,971 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 17:53:49,972 - ===========请求时间:2018-07-05 17:53:49==========================
2018-07-05 17:53:49,972 - url=http://localhost:8081/number-coin.html
2018-07-05 17:53:49,972 - method=GET
2018-07-05 17:53:49,972 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:49,972 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 17:53:49,972 - args:
2018-07-05 17:53:49,972 - =============结束请求时间:2018-07-05 17:53:49,耗时:0s======================
2018-07-05 17:53:49,972 - response=/number-coin
2018-07-05 17:53:49,972 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:50,148 - ===========进入拦截器==============
2018-07-05 17:53:50,149 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:53:50,170 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:53:50,170 - ===========请求时间:2018-07-05 17:53:50==========================
2018-07-05 17:53:50,170 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:53:50,170 - method=GET
2018-07-05 17:53:50,170 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:50,170 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:53:50,170 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 17:53:50,198 - =============结束请求时间:2018-07-05 17:53:50,耗时:0s======================
2018-07-05 17:53:50,199 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 17:53:50,215 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 17:53:52,151 - ===========进入拦截器==============
2018-07-05 17:53:52,151 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:53:52,162 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 17:53:52,162 - ===========请求时间:2018-07-05 17:53:52==========================
2018-07-05 17:53:52,162 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 17:53:52,162 - method=GET
2018-07-05 17:53:52,162 - ip=0:0:0:0:0:0:0:1
2018-07-05 17:53:52,162 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 17:53:52,162 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 17:53:52,177 - =============结束请求时间:2018-07-05 17:53:52,耗时:0s======================
2018-07-05 17:53:52,177 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 17:53:52,178 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:09:22,594 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@465f55ff: startup date [Thu Jul 05 17:53:32 CST 2018]; root of context hierarchy
2018-07-05 18:09:22,647 - Unregistering JMX-exposed beans on shutdown
2018-07-05 18:09:22,659 - Unregistering JMX-exposed beans
2018-07-05 18:09:22,669 - {dataSource-1} closed
2018-07-05 18:09:23,149 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9372 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:09:23,151 - No active profile set, falling back to default profiles: default
2018-07-05 18:09:23,156 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@521c4b0b: startup date [Thu Jul 05 18:09:23 CST 2018]; root of context hierarchy
2018-07-05 18:09:23,782 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:09:24,804 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:09:24,805 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:09:24,806 - Starting service [Tomcat]
2018-07-05 18:09:24,806 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:09:24,944 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:09:24,945 - Root WebApplicationContext: initialization completed in 1789 ms
2018-07-05 18:09:24,991 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:09:24,992 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:09:24,992 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:09:24,992 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:09:24,992 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:09:25,176 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@521c4b0b: startup date [Thu Jul 05 18:09:23 CST 2018]; root of context hierarchy
2018-07-05 18:09:25,210 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:09:25,211 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:09:25,224 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:25,224 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:25,255 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:25,425 - LiveReload server is running on port 35729
2018-07-05 18:09:25,905 - Registering beans for JMX exposure on startup
2018-07-05 18:09:25,989 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:09:26,005 - Using a shared selector for servlet write/read
2018-07-05 18:09:26,045 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:09:26,047 - Started FqLtdWasBackstageApplication in 2.997 seconds (JVM running for 955.894)
2018-07-05 18:09:28,172 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@521c4b0b: startup date [Thu Jul 05 18:09:23 CST 2018]; root of context hierarchy
2018-07-05 18:09:28,174 - Unregistering JMX-exposed beans on shutdown
2018-07-05 18:09:30,032 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9372 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:09:30,033 - No active profile set, falling back to default profiles: default
2018-07-05 18:09:30,040 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@497973b1: startup date [Thu Jul 05 18:09:30 CST 2018]; root of context hierarchy
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:09:32,042 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:09:32,043 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:09:32,786 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:09:32,788 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:09:32,790 - Starting service [Tomcat]
2018-07-05 18:09:32,790 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:09:32,848 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:09:32,849 - Root WebApplicationContext: initialization completed in 2809 ms
2018-07-05 18:09:32,941 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:09:32,941 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:09:32,941 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:09:32,941 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:09:32,941 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:09:32,941 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:09:33,471 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@497973b1: startup date [Thu Jul 05 18:09:30 CST 2018]; root of context hierarchy
2018-07-05 18:09:33,500 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:09:33,500 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:09:33,500 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:09:33,500 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:09:33,501 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:09:33,501 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:09:33,501 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:09:33,501 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:09:33,501 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:09:33,501 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:09:33,501 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:09:33,501 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:09:33,502 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:09:33,502 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:09:33,502 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:09:33,502 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:09:33,502 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:09:33,502 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:09:33,502 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:09:33,502 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:09:33,502 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:09:33,502 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:09:33,503 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:09:33,503 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:09:33,505 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:09:33,506 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:09:33,506 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:09:33,506 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:09:33,506 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:09:33,506 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:09:33,507 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:09:33,507 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:09:33,507 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:09:33,508 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:09:33,508 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:09:33,509 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:09:33,509 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:09:33,511 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:09:33,511 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:09:33,511 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:09:33,511 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:09:33,512 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:09:33,512 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:09:33,512 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:09:33,513 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:09:33,514 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:09:33,515 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:09:33,515 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:09:33,515 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:09:33,515 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:09:33,515 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:09:33,515 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:09:33,521 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:09:33,521 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:09:33,522 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:09:33,522 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:09:33,522 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:09:33,522 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:09:33,524 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:09:33,525 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:09:33,570 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:33,570 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:33,595 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:09:33,612 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:09:33,883 - LiveReload server is running on port 35729
2018-07-05 18:09:34,026 - Registering beans for JMX exposure on startup
2018-07-05 18:09:34,026 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:09:34,030 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:09:34,033 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:09:34,033 - Using a shared selector for servlet write/read
2018-07-05 18:09:34,036 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:09:34,038 - Started FqLtdWasBackstageApplication in 4.241 seconds (JVM running for 963.885)
2018-07-05 18:11:31,717 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@497973b1: startup date [Thu Jul 05 18:09:30 CST 2018]; root of context hierarchy
2018-07-05 18:11:31,719 - Unregistering JMX-exposed beans on shutdown
2018-07-05 18:11:31,719 - Unregistering JMX-exposed beans
2018-07-05 18:11:32,272 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9372 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:11:32,273 - No active profile set, falling back to default profiles: default
2018-07-05 18:11:32,276 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@774060ff: startup date [Thu Jul 05 18:11:32 CST 2018]; root of context hierarchy
2018-07-05 18:11:32,844 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:32,845 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:11:32,845 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:11:33,267 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:11:33,271 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:11:33,271 - Starting service [Tomcat]
2018-07-05 18:11:33,272 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:11:33,345 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:11:33,346 - Root WebApplicationContext: initialization completed in 1070 ms
2018-07-05 18:11:33,435 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:11:33,437 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:11:33,437 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:11:33,437 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:11:33,437 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:11:33,437 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:11:33,885 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@774060ff: startup date [Thu Jul 05 18:11:32 CST 2018]; root of context hierarchy
2018-07-05 18:11:33,898 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:11:33,899 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:11:33,899 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:11:33,899 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:11:33,899 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:11:33,899 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:11:33,899 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:11:33,899 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:11:33,900 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:11:33,900 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:11:33,900 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:11:33,900 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:11:33,900 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:11:33,900 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:11:33,900 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:11:33,901 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:11:33,901 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:11:33,901 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:11:33,901 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:11:33,901 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:11:33,901 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:11:33,901 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:11:33,902 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:11:33,902 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:11:33,903 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:11:33,903 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:11:33,903 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:11:33,903 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:11:33,903 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:11:33,904 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:11:33,904 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:11:33,905 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:11:33,905 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:11:33,905 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:11:33,905 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:11:33,905 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:11:33,905 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:11:33,906 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:11:33,906 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:11:33,906 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:11:33,906 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:11:33,907 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:11:33,907 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:11:33,907 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:11:33,907 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:11:33,908 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:33,908 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:11:33,909 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:11:33,909 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:33,909 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:11:33,909 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:11:33,909 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:33,909 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:11:33,909 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:11:33,910 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:11:33,910 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:11:33,910 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:11:33,910 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:11:33,911 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:11:33,911 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:11:33,935 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:33,935 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:33,945 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:11:33,954 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:34,129 - LiveReload server is running on port 35729
2018-07-05 18:11:34,247 - Registering beans for JMX exposure on startup
2018-07-05 18:11:34,247 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:11:34,250 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:11:34,253 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:11:34,254 - Using a shared selector for servlet write/read
2018-07-05 18:11:34,257 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:11:34,258 - Started FqLtdWasBackstageApplication in 2.054 seconds (JVM running for 1084.105)
2018-07-05 18:11:50,530 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@774060ff: startup date [Thu Jul 05 18:11:32 CST 2018]; root of context hierarchy
2018-07-05 18:11:50,555 - Unregistering JMX-exposed beans on shutdown
2018-07-05 18:11:50,555 - Unregistering JMX-exposed beans
2018-07-05 18:11:50,995 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9372 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:11:50,995 - No active profile set, falling back to default profiles: default
2018-07-05 18:11:50,998 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@607e04e9: startup date [Thu Jul 05 18:11:50 CST 2018]; root of context hierarchy
2018-07-05 18:11:52,131 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:11:52,132 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:11:52,132 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:11:52,759 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:11:52,760 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:11:52,760 - Starting service [Tomcat]
2018-07-05 18:11:52,760 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:11:52,859 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:11:52,859 - Root WebApplicationContext: initialization completed in 1861 ms
2018-07-05 18:11:52,943 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:11:52,943 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:11:52,943 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:11:52,943 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:11:52,943 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:11:52,943 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:11:53,984 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@607e04e9: startup date [Thu Jul 05 18:11:50 CST 2018]; root of context hierarchy
2018-07-05 18:11:54,019 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:11:54,020 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:11:54,020 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:11:54,020 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:11:54,020 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:11:54,021 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:11:54,021 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:11:54,021 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:11:54,021 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:11:54,021 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:11:54,021 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:11:54,021 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:11:54,022 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:11:54,022 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:11:54,022 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:11:54,022 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:11:54,022 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:11:54,022 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:11:54,022 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:11:54,022 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:11:54,023 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:11:54,023 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:11:54,023 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:11:54,024 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:11:54,025 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:11:54,026 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:11:54,026 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:11:54,026 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:11:54,026 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:11:54,026 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:11:54,026 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:11:54,026 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:11:54,027 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:11:54,027 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:11:54,028 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:11:54,028 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:11:54,028 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:11:54,029 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:11:54,029 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:11:54,030 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:11:54,030 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:11:54,031 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:11:54,031 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:11:54,032 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:11:54,032 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:11:54,033 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:54,033 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:11:54,033 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:11:54,034 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:54,034 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:11:54,034 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:11:54,034 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:11:54,038 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:11:54,041 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:11:54,041 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:11:54,101 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:54,101 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:54,117 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:11:54,131 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:11:54,308 - LiveReload server is running on port 35729
2018-07-05 18:11:54,426 - Registering beans for JMX exposure on startup
2018-07-05 18:11:54,426 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:11:54,428 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:11:54,431 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:11:54,432 - Using a shared selector for servlet write/read
2018-07-05 18:11:54,435 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:11:54,436 - Started FqLtdWasBackstageApplication in 3.57 seconds (JVM running for 1104.284)
2018-07-05 18:22:58,297 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:22:58,297 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:22:58,304 - FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
2018-07-05 18:34:08,138 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19580 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:34:08,140 - No active profile set, falling back to default profiles: default
2018-07-05 18:34:08,263 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:34:08,349 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79755e2: startup date [Thu Jul 05 18:34:08 CST 2018]; root of context hierarchy
2018-07-05 18:34:09,170 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,170 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,170 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,171 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,171 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,171 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:34:09,171 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:34:09,171 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:34:10,367 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:34:10,379 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:34:10,390 - Starting service [Tomcat]
2018-07-05 18:34:10,390 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:34:10,498 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:34:10,498 - Root WebApplicationContext: initialization completed in 2149 ms
2018-07-05 18:34:10,744 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:34:10,748 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:34:10,748 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:34:10,748 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:34:10,748 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:34:10,748 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:34:12,445 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79755e2: startup date [Thu Jul 05 18:34:08 CST 2018]; root of context hierarchy
2018-07-05 18:34:12,540 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel() throws java.io.IOException
2018-07-05 18:34:12,551 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:34:12,552 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:34:12,552 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:34:12,552 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:34:12,552 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:34:12,552 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:34:12,552 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:34:12,552 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:34:12,552 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:34:12,553 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:34:12,553 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:34:12,553 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:34:12,553 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:34:12,553 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:34:12,553 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:34:12,553 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:34:12,553 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:34:12,554 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:34:12,554 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:34:12,554 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:34:12,554 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:34:12,554 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:34:12,558 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:34:12,558 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:34:12,561 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:34:12,561 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:34:12,562 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:34:12,563 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:34:12,563 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:34:12,563 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:34:12,563 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:34:12,563 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:34:12,564 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:34:12,565 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:34:12,565 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:34:12,566 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:34:12,566 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:34:12,567 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:34:12,568 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:34:12,568 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:34:12,568 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:34:12,569 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:34:12,569 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:34:12,570 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:34:12,570 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:34:12,571 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:34:12,572 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:34:12,572 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:34:12,572 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:34:12,572 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:34:12,572 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:34:12,572 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:34:12,573 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:34:12,575 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:34:12,576 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:34:12,632 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:34:12,632 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:34:12,662 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:34:12,715 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:34:13,557 - LiveReload server is running on port 35729
2018-07-05 18:34:13,697 - Registering beans for JMX exposure on startup
2018-07-05 18:34:13,699 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:34:13,707 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:34:13,721 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:34:13,750 - Using a shared selector for servlet write/read
2018-07-05 18:34:13,781 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:34:13,790 - Started FqLtdWasBackstageApplication in 6.554 seconds (JVM running for 8.199)
2018-07-05 18:34:19,043 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:34:19,043 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:34:19,093 - FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2018-07-05 18:34:19,126 - ===========进入拦截器==============
2018-07-05 18:34:19,162 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:34:19,163 - ===========请求时间:2018-07-05 18:34:19==========================
2018-07-05 18:34:19,163 - url=http://localhost:8081/login
2018-07-05 18:34:19,163 - method=GET
2018-07-05 18:34:19,163 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:19,163 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:34:19,163 - args:
2018-07-05 18:34:19,167 - =============结束请求时间:2018-07-05 18:34:19,耗时:0s======================
2018-07-05 18:34:19,167 - response=/login
2018-07-05 18:34:19,197 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:34:19,264 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:34:19,264 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:34:19,264 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:34:19,264 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:34:19,268 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:34:19,268 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:34:23,666 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:34:23,666 - ===========请求时间:2018-07-05 18:34:23==========================
2018-07-05 18:34:23,666 - url=http://localhost:8081/signIn
2018-07-05 18:34:23,666 - method=POST
2018-07-05 18:34:23,666 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:23,666 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:34:23,666 - args:userName=admin,password=123456,
2018-07-05 18:34:23,763 - {dataSource-1} inited
2018-07-05 18:34:24,276 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,276 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:34:24, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:34:24,377 - ===========进入拦截器==============
2018-07-05 18:34:24,378 - http://localhost:8081/home
2018-07-05 18:34:24,383 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:34:24,383 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,383 - url=http://localhost:8081/home
2018-07-05 18:34:24,383 - method=GET
2018-07-05 18:34:24,383 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,383 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:34:24,383 - args:
2018-07-05 18:34:24,383 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,383 - response=/home
2018-07-05 18:34:24,383 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:24,496 - ===========进入拦截器==============
2018-07-05 18:34:24,496 - http://localhost:8081/welcome
2018-07-05 18:34:24,501 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:34:24,501 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,501 - url=http://localhost:8081/welcome
2018-07-05 18:34:24,501 - method=GET
2018-07-05 18:34:24,501 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,501 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:34:24,501 - args:
2018-07-05 18:34:24,502 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,502 - response=/welcome
2018-07-05 18:34:24,502 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:24,567 - ===========进入拦截器==============
2018-07-05 18:34:24,568 - http://localhost:8081/common/top
2018-07-05 18:34:24,569 - ===========进入拦截器==============
2018-07-05 18:34:24,569 - http://localhost:8081/common/left
2018-07-05 18:34:24,569 - ===========进入拦截器==============
2018-07-05 18:34:24,569 - http://localhost:8081/common/footer
2018-07-05 18:34:24,573 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:34:24,574 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,574 - url=http://localhost:8081/common/top
2018-07-05 18:34:24,574 - method=GET
2018-07-05 18:34:24,574 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:34:24,574 - args:
2018-07-05 18:34:24,574 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,574 - response=/common/top
2018-07-05 18:34:24,574 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:24,582 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:34:24,582 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,582 - url=http://localhost:8081/common/left
2018-07-05 18:34:24,582 - method=GET
2018-07-05 18:34:24,582 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,582 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:34:24,582 - args:
2018-07-05 18:34:24,582 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,582 - response=/common/left
2018-07-05 18:34:24,583 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:24,586 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:34:24,586 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,586 - url=http://localhost:8081/common/footer
2018-07-05 18:34:24,586 - method=GET
2018-07-05 18:34:24,586 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,586 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:34:24,586 - args:
2018-07-05 18:34:24,586 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,586 - response=/common/footer
2018-07-05 18:34:24,586 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:24,637 - ===========进入拦截器==============
2018-07-05 18:34:24,638 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:34:24,647 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:34:24,647 - ===========请求时间:2018-07-05 18:34:24==========================
2018-07-05 18:34:24,647 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:34:24,647 - method=GET
2018-07-05 18:34:24,647 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:24,647 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:34:24,647 - args:roleId=1,
2018-07-05 18:34:24,693 - =============结束请求时间:2018-07-05 18:34:24,耗时:0s======================
2018-07-05 18:34:24,694 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:34:24,709 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:26,746 - ===========进入拦截器==============
2018-07-05 18:34:26,746 - http://localhost:8081/number-coin.html
2018-07-05 18:34:26,750 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:34:26,750 - ===========请求时间:2018-07-05 18:34:26==========================
2018-07-05 18:34:26,750 - url=http://localhost:8081/number-coin.html
2018-07-05 18:34:26,750 - method=GET
2018-07-05 18:34:26,750 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:26,750 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:34:26,750 - args:
2018-07-05 18:34:26,750 - =============结束请求时间:2018-07-05 18:34:26,耗时:0s======================
2018-07-05 18:34:26,750 - response=/number-coin
2018-07-05 18:34:26,750 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:26,950 - ===========进入拦截器==============
2018-07-05 18:34:26,950 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:34:27,035 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:34:27,035 - ===========请求时间:2018-07-05 18:34:27==========================
2018-07-05 18:34:27,035 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:34:27,035 - method=GET
2018-07-05 18:34:27,035 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:27,035 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:34:27,035 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:34:27,060 - =============结束请求时间:2018-07-05 18:34:27,耗时:0s======================
2018-07-05 18:34:27,060 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:34:27,065 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:30,320 - ===========进入拦截器==============
2018-07-05 18:34:30,320 - http://localhost:8081/excel/toExcel
2018-07-05 18:34:30,325 - ===========进入拦截器==============
2018-07-05 18:34:30,325 - http://localhost:8081/number-coin.html
2018-07-05 18:34:30,326 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:34:30,326 - ===========请求时间:2018-07-05 18:34:30==========================
2018-07-05 18:34:30,326 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:34:30,326 - method=GET
2018-07-05 18:34:30,326 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:30,326 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:34:30,327 - args:
2018-07-05 18:34:30,329 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:34:30,329 - ===========请求时间:2018-07-05 18:34:30==========================
2018-07-05 18:34:30,330 - url=http://localhost:8081/number-coin.html
2018-07-05 18:34:30,330 - method=GET
2018-07-05 18:34:30,330 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:30,330 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:34:30,330 - args:
2018-07-05 18:34:30,330 - =============结束请求时间:2018-07-05 18:34:30,耗时:0s======================
2018-07-05 18:34:30,330 - response=/number-coin
2018-07-05 18:34:30,330 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:34:30,335 - =============结束请求时间:2018-07-05 18:34:30,耗时:0s======================
2018-07-05 18:34:30,498 - ===========进入拦截器==============
2018-07-05 18:34:30,498 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:34:30,506 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:34:30,507 - ===========请求时间:2018-07-05 18:34:30==========================
2018-07-05 18:34:30,507 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:34:30,507 - method=GET
2018-07-05 18:34:30,507 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:34:30,507 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:34:30,507 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:34:30,531 - =============结束请求时间:2018-07-05 18:34:30,耗时:0s======================
2018-07-05 18:34:30,532 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:34:30,582 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:31,572 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 11808 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:35:31,575 - No active profile set, falling back to default profiles: default
2018-07-05 18:35:31,783 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:35:31,895 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cd3a40: startup date [Thu Jul 05 18:35:31 CST 2018]; root of context hierarchy
2018-07-05 18:35:33,261 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:35:33,262 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:35:33,262 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:35:34,345 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:35:34,356 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:35:34,365 - Starting service [Tomcat]
2018-07-05 18:35:34,366 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:35:34,470 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:35:34,471 - Root WebApplicationContext: initialization completed in 2576 ms
2018-07-05 18:35:34,707 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:35:34,711 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:35:34,711 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:35:34,711 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:35:34,711 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:35:34,711 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:35:36,742 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cd3a40: startup date [Thu Jul 05 18:35:31 CST 2018]; root of context hierarchy
2018-07-05 18:35:36,847 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel() throws java.io.IOException
2018-07-05 18:35:36,859 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:35:36,859 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:35:36,859 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:35:36,859 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:35:36,859 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:35:36,859 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:35:36,860 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:35:36,860 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:35:36,860 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:35:36,860 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:35:36,860 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:35:36,860 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:35:36,860 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:35:36,860 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:35:36,861 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:35:36,861 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:35:36,861 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:35:36,861 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:35:36,861 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:35:36,861 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:35:36,861 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:35:36,861 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:35:36,865 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:35:36,865 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:35:36,867 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:35:36,867 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:35:36,867 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:35:36,867 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:35:36,868 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:35:36,868 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:35:36,868 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:35:36,868 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:35:36,868 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:35:36,869 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:35:36,869 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:35:36,869 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:35:36,869 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:35:36,870 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:35:36,871 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:35:36,871 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:35:36,871 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:35:36,871 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:35:36,871 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:35:36,872 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:35:36,872 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:35:36,873 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:35:36,873 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:35:36,874 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:35:36,875 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:35:36,875 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:35:36,875 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:35:36,875 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:35:36,876 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:35:36,876 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:35:36,876 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:35:36,876 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:35:36,877 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:35:36,877 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:35:36,878 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:35:36,879 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:35:36,929 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:36,930 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:36,959 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:35:36,991 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:35:37,822 - LiveReload server is running on port 35729
2018-07-05 18:35:37,949 - Registering beans for JMX exposure on startup
2018-07-05 18:35:37,951 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:35:37,957 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:35:37,970 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:35:38,001 - Using a shared selector for servlet write/read
2018-07-05 18:35:38,019 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:35:38,027 - Started FqLtdWasBackstageApplication in 6.892 seconds (JVM running for 8.102)
2018-07-05 18:35:41,491 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:35:41,491 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:35:41,531 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 18:35:41,564 - ===========进入拦截器==============
2018-07-05 18:35:41,601 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:35:41,602 - ===========请求时间:2018-07-05 18:35:41==========================
2018-07-05 18:35:41,602 - url=http://localhost:8081/login
2018-07-05 18:35:41,602 - method=GET
2018-07-05 18:35:41,602 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:41,602 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:35:41,602 - args:
2018-07-05 18:35:41,606 - =============结束请求时间:2018-07-05 18:35:41,耗时:0s======================
2018-07-05 18:35:41,606 - response=/login
2018-07-05 18:35:41,642 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:35:41,719 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:35:41,719 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:35:41,719 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:35:41,719 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:35:41,724 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:35:41,724 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:35:46,144 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:35:46,144 - ===========请求时间:2018-07-05 18:35:46==========================
2018-07-05 18:35:46,144 - url=http://localhost:8081/signIn
2018-07-05 18:35:46,144 - method=POST
2018-07-05 18:35:46,144 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:46,144 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:35:46,144 - args:userName=admin,password=123456,
2018-07-05 18:35:46,243 - {dataSource-1} inited
2018-07-05 18:35:46,684 - =============结束请求时间:2018-07-05 18:35:46,耗时:0s======================
2018-07-05 18:35:46,684 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:35:46, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:35:46,800 - ===========进入拦截器==============
2018-07-05 18:35:46,801 - http://localhost:8081/home
2018-07-05 18:35:46,808 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:35:46,808 - ===========请求时间:2018-07-05 18:35:46==========================
2018-07-05 18:35:46,808 - url=http://localhost:8081/home
2018-07-05 18:35:46,808 - method=GET
2018-07-05 18:35:46,808 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:46,808 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:35:46,808 - args:
2018-07-05 18:35:46,808 - =============结束请求时间:2018-07-05 18:35:46,耗时:0s======================
2018-07-05 18:35:46,808 - response=/home
2018-07-05 18:35:46,809 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:46,920 - ===========进入拦截器==============
2018-07-05 18:35:46,920 - http://localhost:8081/welcome
2018-07-05 18:35:46,935 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:35:46,935 - ===========请求时间:2018-07-05 18:35:46==========================
2018-07-05 18:35:46,935 - url=http://localhost:8081/welcome
2018-07-05 18:35:46,935 - method=GET
2018-07-05 18:35:46,935 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:46,935 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:35:46,935 - args:
2018-07-05 18:35:46,935 - =============结束请求时间:2018-07-05 18:35:46,耗时:0s======================
2018-07-05 18:35:46,936 - response=/welcome
2018-07-05 18:35:46,936 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:46,980 - ===========进入拦截器==============
2018-07-05 18:35:46,980 - http://localhost:8081/common/top
2018-07-05 18:35:46,980 - ===========进入拦截器==============
2018-07-05 18:35:46,980 - http://localhost:8081/common/left
2018-07-05 18:35:46,982 - ===========进入拦截器==============
2018-07-05 18:35:46,982 - http://localhost:8081/common/footer
2018-07-05 18:35:46,985 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:35:46,985 - ===========请求时间:2018-07-05 18:35:46==========================
2018-07-05 18:35:46,985 - url=http://localhost:8081/common/top
2018-07-05 18:35:46,985 - method=GET
2018-07-05 18:35:46,985 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:46,985 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:35:46,985 - args:
2018-07-05 18:35:46,986 - =============结束请求时间:2018-07-05 18:35:46,耗时:0s======================
2018-07-05 18:35:46,986 - response=/common/top
2018-07-05 18:35:46,986 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:47,034 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:35:47,034 - ===========请求时间:2018-07-05 18:35:47==========================
2018-07-05 18:35:47,034 - url=http://localhost:8081/common/left
2018-07-05 18:35:47,034 - method=GET
2018-07-05 18:35:47,034 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:47,034 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:35:47,034 - args:
2018-07-05 18:35:47,035 - =============结束请求时间:2018-07-05 18:35:47,耗时:0s======================
2018-07-05 18:35:47,035 - response=/common/left
2018-07-05 18:35:47,035 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:47,043 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:35:47,044 - ===========请求时间:2018-07-05 18:35:47==========================
2018-07-05 18:35:47,044 - url=http://localhost:8081/common/footer
2018-07-05 18:35:47,044 - method=GET
2018-07-05 18:35:47,044 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:47,044 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:35:47,044 - args:
2018-07-05 18:35:47,044 - =============结束请求时间:2018-07-05 18:35:47,耗时:0s======================
2018-07-05 18:35:47,044 - response=/common/footer
2018-07-05 18:35:47,044 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:47,103 - ===========进入拦截器==============
2018-07-05 18:35:47,104 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:35:47,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:35:47,120 - ===========请求时间:2018-07-05 18:35:47==========================
2018-07-05 18:35:47,120 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:35:47,120 - method=GET
2018-07-05 18:35:47,120 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:47,120 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:35:47,120 - args:roleId=1,
2018-07-05 18:35:47,184 - =============结束请求时间:2018-07-05 18:35:47,耗时:0s======================
2018-07-05 18:35:47,184 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:35:47,201 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:48,547 - ===========进入拦截器==============
2018-07-05 18:35:48,548 - http://localhost:8081/number-coin.html
2018-07-05 18:35:48,557 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:35:48,557 - ===========请求时间:2018-07-05 18:35:48==========================
2018-07-05 18:35:48,557 - url=http://localhost:8081/number-coin.html
2018-07-05 18:35:48,557 - method=GET
2018-07-05 18:35:48,557 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:48,557 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:35:48,557 - args:
2018-07-05 18:35:48,557 - =============结束请求时间:2018-07-05 18:35:48,耗时:0s======================
2018-07-05 18:35:48,558 - response=/number-coin
2018-07-05 18:35:48,558 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:48,767 - ===========进入拦截器==============
2018-07-05 18:35:48,767 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:35:48,786 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:35:48,786 - ===========请求时间:2018-07-05 18:35:48==========================
2018-07-05 18:35:48,786 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:35:48,786 - method=GET
2018-07-05 18:35:48,786 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:48,786 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:35:48,786 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:35:48,822 - =============结束请求时间:2018-07-05 18:35:48,耗时:0s======================
2018-07-05 18:35:48,823 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:35:48,830 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:35:50,616 - ===========进入拦截器==============
2018-07-05 18:35:50,616 - http://localhost:8081/excel/toExcel
2018-07-05 18:35:50,622 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:35:50,622 - ===========请求时间:2018-07-05 18:35:50==========================
2018-07-05 18:35:50,622 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:35:50,622 - method=GET
2018-07-05 18:35:50,622 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:35:50,622 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:35:50,622 - args:
2018-07-05 18:35:50,657 - =============结束请求时间:2018-07-05 18:35:50,耗时:0s======================
2018-07-05 18:36:12,031 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 2264 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:36:12,033 - No active profile set, falling back to default profiles: default
2018-07-05 18:36:12,250 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:36:12,352 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@dad784a: startup date [Thu Jul 05 18:36:12 CST 2018]; root of context hierarchy
2018-07-05 18:36:13,899 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,899 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,899 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,899 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,900 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,900 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:36:13,900 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:36:13,901 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:36:15,178 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:36:15,193 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:36:15,206 - Starting service [Tomcat]
2018-07-05 18:36:15,206 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:36:15,352 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:36:15,352 - Root WebApplicationContext: initialization completed in 3000 ms
2018-07-05 18:36:15,577 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:36:15,581 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:36:15,581 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:36:15,581 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:36:15,581 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:36:15,581 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:36:17,136 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@dad784a: startup date [Thu Jul 05 18:36:12 CST 2018]; root of context hierarchy
2018-07-05 18:36:17,229 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel() throws java.io.IOException
2018-07-05 18:36:17,242 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:36:17,242 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:36:17,242 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:36:17,242 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:36:17,242 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:36:17,243 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:36:17,243 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:36:17,243 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:36:17,243 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:36:17,243 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:36:17,245 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:36:17,245 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:36:17,245 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:36:17,245 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:36:17,246 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:36:17,246 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:36:17,246 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:36:17,246 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:36:17,246 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:36:17,247 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:36:17,247 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:36:17,247 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:36:17,251 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:36:17,251 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:36:17,254 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:36:17,254 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:36:17,255 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:36:17,255 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:36:17,255 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:36:17,255 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:36:17,255 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:36:17,256 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:36:17,256 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:36:17,257 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:36:17,257 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:36:17,257 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:36:17,257 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:36:17,259 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:36:17,260 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:36:17,260 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:36:17,260 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:36:17,260 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:36:17,260 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:36:17,261 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:36:17,261 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:36:17,263 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:36:17,263 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:36:17,263 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:36:17,264 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:36:17,264 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:36:17,264 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:36:17,265 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:36:17,266 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:36:17,266 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:36:17,266 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:36:17,266 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:36:17,266 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:36:17,267 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:36:17,268 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:36:17,269 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:36:17,319 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:36:17,319 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:36:17,343 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:36:17,377 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:36:18,196 - LiveReload server is running on port 35729
2018-07-05 18:36:18,326 - Registering beans for JMX exposure on startup
2018-07-05 18:36:18,328 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:36:18,334 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:36:18,347 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:36:18,375 - Using a shared selector for servlet write/read
2018-07-05 18:36:18,394 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:36:18,403 - Started FqLtdWasBackstageApplication in 7.167 seconds (JVM running for 10.355)
2018-07-05 18:36:27,927 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:36:27,927 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:36:27,979 - FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2018-07-05 18:36:28,020 - ===========进入拦截器==============
2018-07-05 18:36:28,072 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:36:28,072 - ===========请求时间:2018-07-05 18:36:28==========================
2018-07-05 18:36:28,073 - url=http://localhost:8081/login
2018-07-05 18:36:28,073 - method=GET
2018-07-05 18:36:28,073 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:28,073 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:36:28,073 - args:
2018-07-05 18:36:28,076 - =============结束请求时间:2018-07-05 18:36:28,耗时:0s======================
2018-07-05 18:36:28,076 - response=/login
2018-07-05 18:36:28,106 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:36:28,221 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:36:28,221 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:36:28,221 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:36:28,221 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:36:28,225 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:36:28,226 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:36:32,566 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:36:32,566 - ===========请求时间:2018-07-05 18:36:32==========================
2018-07-05 18:36:32,566 - url=http://localhost:8081/signIn
2018-07-05 18:36:32,567 - method=POST
2018-07-05 18:36:32,567 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:32,567 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:36:32,567 - args:userName=admin,password=123456,
2018-07-05 18:36:32,672 - {dataSource-1} inited
2018-07-05 18:36:33,207 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,208 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:36:33, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:36:33,325 - ===========进入拦截器==============
2018-07-05 18:36:33,325 - http://localhost:8081/home
2018-07-05 18:36:33,337 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:36:33,337 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,337 - url=http://localhost:8081/home
2018-07-05 18:36:33,337 - method=GET
2018-07-05 18:36:33,337 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,337 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:36:33,337 - args:
2018-07-05 18:36:33,337 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,338 - response=/home
2018-07-05 18:36:33,338 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:33,464 - ===========进入拦截器==============
2018-07-05 18:36:33,464 - http://localhost:8081/welcome
2018-07-05 18:36:33,473 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:36:33,473 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,473 - url=http://localhost:8081/welcome
2018-07-05 18:36:33,474 - method=GET
2018-07-05 18:36:33,474 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,474 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:36:33,474 - args:
2018-07-05 18:36:33,474 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,474 - response=/welcome
2018-07-05 18:36:33,474 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:33,531 - ===========进入拦截器==============
2018-07-05 18:36:33,531 - http://localhost:8081/common/top
2018-07-05 18:36:33,532 - ===========进入拦截器==============
2018-07-05 18:36:33,533 - ===========进入拦截器==============
2018-07-05 18:36:33,533 - http://localhost:8081/common/left
2018-07-05 18:36:33,533 - http://localhost:8081/common/footer
2018-07-05 18:36:33,551 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:36:33,552 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,552 - url=http://localhost:8081/common/top
2018-07-05 18:36:33,552 - method=GET
2018-07-05 18:36:33,552 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,552 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:36:33,552 - args:
2018-07-05 18:36:33,552 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,552 - response=/common/top
2018-07-05 18:36:33,553 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:33,574 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:36:33,574 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,574 - url=http://localhost:8081/common/footer
2018-07-05 18:36:33,574 - method=GET
2018-07-05 18:36:33,574 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:36:33,574 - args:
2018-07-05 18:36:33,574 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,575 - response=/common/footer
2018-07-05 18:36:33,575 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:33,578 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:36:33,578 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,578 - url=http://localhost:8081/common/left
2018-07-05 18:36:33,578 - method=GET
2018-07-05 18:36:33,578 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,578 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:36:33,578 - args:
2018-07-05 18:36:33,579 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,579 - response=/common/left
2018-07-05 18:36:33,579 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:33,640 - ===========进入拦截器==============
2018-07-05 18:36:33,640 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:36:33,674 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:36:33,674 - ===========请求时间:2018-07-05 18:36:33==========================
2018-07-05 18:36:33,674 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:36:33,674 - method=GET
2018-07-05 18:36:33,674 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:33,674 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:36:33,674 - args:roleId=1,
2018-07-05 18:36:33,771 - =============结束请求时间:2018-07-05 18:36:33,耗时:0s======================
2018-07-05 18:36:33,772 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:36:33,785 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:35,066 - ===========进入拦截器==============
2018-07-05 18:36:35,066 - http://localhost:8081/number-coin.html
2018-07-05 18:36:35,072 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:36:35,072 - ===========请求时间:2018-07-05 18:36:35==========================
2018-07-05 18:36:35,072 - url=http://localhost:8081/number-coin.html
2018-07-05 18:36:35,073 - method=GET
2018-07-05 18:36:35,073 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:35,073 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:36:35,073 - args:
2018-07-05 18:36:35,073 - =============结束请求时间:2018-07-05 18:36:35,耗时:0s======================
2018-07-05 18:36:35,073 - response=/number-coin
2018-07-05 18:36:35,073 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:35,276 - ===========进入拦截器==============
2018-07-05 18:36:35,276 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:36:35,303 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:36:35,303 - ===========请求时间:2018-07-05 18:36:35==========================
2018-07-05 18:36:35,303 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:36:35,303 - method=GET
2018-07-05 18:36:35,303 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:35,303 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:36:35,303 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:36:35,321 - =============结束请求时间:2018-07-05 18:36:35,耗时:0s======================
2018-07-05 18:36:35,323 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:36:35,331 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:36:37,512 - ===========进入拦截器==============
2018-07-05 18:36:37,512 - http://localhost:8081/excel/toExcel
2018-07-05 18:36:37,515 - ===========进入拦截器==============
2018-07-05 18:36:37,515 - http://localhost:8081/excel/toExcel
2018-07-05 18:36:37,518 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:36:37,518 - ===========请求时间:2018-07-05 18:36:37==========================
2018-07-05 18:36:37,518 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:36:37,518 - method=GET
2018-07-05 18:36:37,518 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:37,518 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:36:37,518 - args:
2018-07-05 18:36:37,520 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:36:37,520 - ===========请求时间:2018-07-05 18:36:37==========================
2018-07-05 18:36:37,520 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:36:37,520 - method=GET
2018-07-05 18:36:37,520 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:36:37,520 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:36:37,520 - args:
2018-07-05 18:36:37,529 - =============结束请求时间:2018-07-05 18:36:37,耗时:0s======================
2018-07-05 18:36:37,538 - =============结束请求时间:2018-07-05 18:36:37,耗时:0s======================
2018-07-05 18:37:05,682 - ===========进入拦截器==============
2018-07-05 18:37:05,682 - http://localhost:8081/number-coin.html
2018-07-05 18:37:05,686 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:37:05,686 - ===========请求时间:2018-07-05 18:37:05==========================
2018-07-05 18:37:05,686 - url=http://localhost:8081/number-coin.html
2018-07-05 18:37:05,686 - method=GET
2018-07-05 18:37:05,686 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:37:05,686 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:37:05,686 - args:
2018-07-05 18:37:05,687 - =============结束请求时间:2018-07-05 18:37:05,耗时:0s======================
2018-07-05 18:37:05,687 - response=/number-coin
2018-07-05 18:37:05,687 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:37:05,909 - ===========进入拦截器==============
2018-07-05 18:37:05,909 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:37:05,916 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:37:05,916 - ===========请求时间:2018-07-05 18:37:05==========================
2018-07-05 18:37:05,916 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:37:05,916 - method=GET
2018-07-05 18:37:05,916 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:37:05,916 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:37:05,916 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:37:05,938 - =============结束请求时间:2018-07-05 18:37:05,耗时:0s======================
2018-07-05 18:37:05,939 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:37:05,952 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:37:06,967 - ===========进入拦截器==============
2018-07-05 18:37:06,967 - http://localhost:8081/excel/toExcel
2018-07-05 18:37:06,971 - ===========进入拦截器==============
2018-07-05 18:37:06,971 - http://localhost:8081/excel/toExcel
2018-07-05 18:37:06,971 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:37:06,972 - ===========请求时间:2018-07-05 18:37:06==========================
2018-07-05 18:37:06,972 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:37:06,972 - method=GET
2018-07-05 18:37:06,972 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:37:06,972 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:37:06,972 - args:
2018-07-05 18:37:06,975 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:37:06,975 - ===========请求时间:2018-07-05 18:37:06==========================
2018-07-05 18:37:06,975 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:37:06,975 - method=GET
2018-07-05 18:37:06,975 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:37:06,975 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:37:06,975 - args:
2018-07-05 18:37:07,279 - =============结束请求时间:2018-07-05 18:37:07,耗时:0s======================
2018-07-05 18:37:30,660 - =============结束请求时间:2018-07-05 18:37:30,耗时:23s======================
2018-07-05 18:41:09,848 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12536 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:41:09,850 - No active profile set, falling back to default profiles: default
2018-07-05 18:41:10,074 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:41:10,151 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18138479: startup date [Thu Jul 05 18:41:10 CST 2018]; root of context hierarchy
2018-07-05 18:41:11,560 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,561 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,563 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,563 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,563 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,563 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:41:11,563 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:41:11,564 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:41:13,142 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:41:13,157 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:41:13,169 - Starting service [Tomcat]
2018-07-05 18:41:13,169 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:41:13,308 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:41:13,308 - Root WebApplicationContext: initialization completed in 3157 ms
2018-07-05 18:41:13,637 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:41:13,641 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:41:13,642 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:41:13,642 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:41:13,642 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:41:13,642 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:41:15,202 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18138479: startup date [Thu Jul 05 18:41:10 CST 2018]; root of context hierarchy
2018-07-05 18:41:15,360 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:41:15,370 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:41:15,371 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:41:15,371 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:41:15,371 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:41:15,372 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:41:15,372 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:41:15,372 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:41:15,372 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:41:15,372 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:41:15,372 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:41:15,372 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:41:15,373 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:41:15,373 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:41:15,374 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:41:15,374 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:41:15,374 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:41:15,374 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:41:15,374 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:41:15,374 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:41:15,374 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:41:15,374 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:41:15,375 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:41:15,376 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:41:15,376 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:41:15,378 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:41:15,378 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:41:15,378 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:41:15,378 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:41:15,378 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:41:15,379 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:41:15,379 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:41:15,379 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:41:15,379 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:41:15,380 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:41:15,380 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:41:15,380 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:41:15,380 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:41:15,381 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:41:15,382 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:41:15,382 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:41:15,382 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:41:15,382 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:41:15,382 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:41:15,384 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:41:15,384 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:41:15,385 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:41:15,386 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:41:15,386 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:41:15,386 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:41:15,386 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:41:15,386 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:41:15,386 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:41:15,387 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:41:15,387 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:41:15,387 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:41:15,387 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:41:15,388 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:41:15,388 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:41:15,389 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:41:15,390 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:41:15,458 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:41:15,458 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:41:15,492 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:41:15,525 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:41:16,348 - LiveReload server is running on port 35729
2018-07-05 18:41:16,496 - Registering beans for JMX exposure on startup
2018-07-05 18:41:16,498 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:41:16,505 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:41:16,519 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:41:16,554 - Using a shared selector for servlet write/read
2018-07-05 18:41:16,579 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:41:16,588 - Started FqLtdWasBackstageApplication in 7.665 seconds (JVM running for 9.076)
2018-07-05 18:41:19,523 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:41:19,523 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:41:19,563 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 18:41:19,593 - ===========进入拦截器==============
2018-07-05 18:41:19,629 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:41:19,629 - ===========请求时间:2018-07-05 18:41:19==========================
2018-07-05 18:41:19,629 - url=http://localhost:8081/login
2018-07-05 18:41:19,630 - method=GET
2018-07-05 18:41:19,630 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:19,630 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:41:19,630 - args:
2018-07-05 18:41:19,633 - =============结束请求时间:2018-07-05 18:41:19,耗时:0s======================
2018-07-05 18:41:19,633 - response=/login
2018-07-05 18:41:19,665 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:41:19,733 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:41:19,734 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:41:19,734 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:41:19,734 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:41:19,740 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:41:19,740 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:41:24,114 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:41:24,114 - ===========请求时间:2018-07-05 18:41:24==========================
2018-07-05 18:41:24,114 - url=http://localhost:8081/signIn
2018-07-05 18:41:24,114 - method=POST
2018-07-05 18:41:24,114 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:24,114 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:41:24,114 - args:userName=admin,password=123456,
2018-07-05 18:41:24,211 - {dataSource-1} inited
2018-07-05 18:41:24,740 - =============结束请求时间:2018-07-05 18:41:24,耗时:0s======================
2018-07-05 18:41:24,740 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:41:24, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:41:24,848 - ===========进入拦截器==============
2018-07-05 18:41:24,848 - http://localhost:8081/home
2018-07-05 18:41:24,853 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:41:24,853 - ===========请求时间:2018-07-05 18:41:24==========================
2018-07-05 18:41:24,853 - url=http://localhost:8081/home
2018-07-05 18:41:24,853 - method=GET
2018-07-05 18:41:24,853 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:24,853 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:41:24,853 - args:
2018-07-05 18:41:24,853 - =============结束请求时间:2018-07-05 18:41:24,耗时:0s======================
2018-07-05 18:41:24,853 - response=/home
2018-07-05 18:41:24,854 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:24,995 - ===========进入拦截器==============
2018-07-05 18:41:24,995 - http://localhost:8081/welcome
2018-07-05 18:41:25,003 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:41:25,003 - ===========请求时间:2018-07-05 18:41:25==========================
2018-07-05 18:41:25,003 - url=http://localhost:8081/welcome
2018-07-05 18:41:25,003 - method=GET
2018-07-05 18:41:25,003 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:25,003 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:41:25,003 - args:
2018-07-05 18:41:25,003 - =============结束请求时间:2018-07-05 18:41:25,耗时:0s======================
2018-07-05 18:41:25,003 - response=/welcome
2018-07-05 18:41:25,004 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:25,069 - ===========进入拦截器==============
2018-07-05 18:41:25,069 - http://localhost:8081/common/top
2018-07-05 18:41:25,069 - ===========进入拦截器==============
2018-07-05 18:41:25,070 - http://localhost:8081/common/left
2018-07-05 18:41:25,070 - ===========进入拦截器==============
2018-07-05 18:41:25,070 - http://localhost:8081/common/footer
2018-07-05 18:41:25,077 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:41:25,077 - ===========请求时间:2018-07-05 18:41:25==========================
2018-07-05 18:41:25,077 - url=http://localhost:8081/common/top
2018-07-05 18:41:25,077 - method=GET
2018-07-05 18:41:25,077 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:25,077 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:41:25,077 - args:
2018-07-05 18:41:25,077 - =============结束请求时间:2018-07-05 18:41:25,耗时:0s======================
2018-07-05 18:41:25,077 - response=/common/top
2018-07-05 18:41:25,078 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:25,101 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:41:25,101 - ===========请求时间:2018-07-05 18:41:25==========================
2018-07-05 18:41:25,101 - url=http://localhost:8081/common/left
2018-07-05 18:41:25,101 - method=GET
2018-07-05 18:41:25,101 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:25,101 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:41:25,101 - args:
2018-07-05 18:41:25,101 - =============结束请求时间:2018-07-05 18:41:25,耗时:0s======================
2018-07-05 18:41:25,101 - response=/common/left
2018-07-05 18:41:25,102 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:25,108 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:41:25,108 - ===========请求时间:2018-07-05 18:41:25==========================
2018-07-05 18:41:25,108 - url=http://localhost:8081/common/footer
2018-07-05 18:41:25,108 - method=GET
2018-07-05 18:41:25,108 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:25,109 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:41:25,109 - args:
2018-07-05 18:41:25,109 - =============结束请求时间:2018-07-05 18:41:25,耗时:0s======================
2018-07-05 18:41:25,109 - response=/common/footer
2018-07-05 18:41:25,109 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:25,152 - ===========进入拦截器==============
2018-07-05 18:41:25,153 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:41:25,162 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:41:25,162 - ===========请求时间:2018-07-05 18:41:25==========================
2018-07-05 18:41:25,162 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:41:25,162 - method=GET
2018-07-05 18:41:25,162 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:25,162 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:41:25,162 - args:roleId=1,
2018-07-05 18:41:25,273 - =============结束请求时间:2018-07-05 18:41:25,耗时:0s======================
2018-07-05 18:41:25,273 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:41:25,289 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:26,522 - ===========进入拦截器==============
2018-07-05 18:41:26,522 - http://localhost:8081/number-coin.html
2018-07-05 18:41:26,527 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:41:26,527 - ===========请求时间:2018-07-05 18:41:26==========================
2018-07-05 18:41:26,527 - url=http://localhost:8081/number-coin.html
2018-07-05 18:41:26,527 - method=GET
2018-07-05 18:41:26,527 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:26,527 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:41:26,527 - args:
2018-07-05 18:41:26,527 - =============结束请求时间:2018-07-05 18:41:26,耗时:0s======================
2018-07-05 18:41:26,527 - response=/number-coin
2018-07-05 18:41:26,528 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:26,710 - ===========进入拦截器==============
2018-07-05 18:41:26,710 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:41:26,736 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:41:26,736 - ===========请求时间:2018-07-05 18:41:26==========================
2018-07-05 18:41:26,736 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:41:26,736 - method=GET
2018-07-05 18:41:26,736 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:26,736 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:41:26,736 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:41:27,124 - =============结束请求时间:2018-07-05 18:41:27,耗时:0s======================
2018-07-05 18:41:27,126 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:41:27,145 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:29,239 - ===========进入拦截器==============
2018-07-05 18:41:29,239 - http://localhost:8081/excel/toExcel
2018-07-05 18:41:29,242 - ===========进入拦截器==============
2018-07-05 18:41:29,242 - http://localhost:8081/excel/toExcel
2018-07-05 18:41:29,244 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:41:29,244 - ===========请求时间:2018-07-05 18:41:29==========================
2018-07-05 18:41:29,244 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:41:29,244 - method=GET
2018-07-05 18:41:29,244 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:29,244 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:41:29,244 - args:
2018-07-05 18:41:29,370 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:41:29,371 - ===========请求时间:2018-07-05 18:41:29==========================
2018-07-05 18:41:29,371 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:41:29,371 - method=GET
2018-07-05 18:41:29,371 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:41:29,371 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:41:29,371 - args:
2018-07-05 18:41:29,529 - =============结束请求时间:2018-07-05 18:41:29,耗时:0s======================
2018-07-05 18:41:29,529 - =============结束请求时间:2018-07-05 18:41:29,耗时:0s======================
2018-07-05 18:41:29,530 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184100029.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:41:29,530 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184100029.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:41:29,539 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:41:29,542 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:42:53,152 - ===========进入拦截器==============
2018-07-05 18:42:53,152 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:42:53,189 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:42:53,189 - ===========请求时间:2018-07-05 18:42:53==========================
2018-07-05 18:42:53,189 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:42:53,189 - method=GET
2018-07-05 18:42:53,189 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:42:53,189 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:42:53,190 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 18:42:53,202 - =============结束请求时间:2018-07-05 18:42:53,耗时:0s======================
2018-07-05 18:42:53,202 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 18:42:53,203 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:42:54,567 - ===========进入拦截器==============
2018-07-05 18:42:54,567 - http://localhost:8081/excel/toExcel
2018-07-05 18:42:54,569 - ===========进入拦截器==============
2018-07-05 18:42:54,569 - http://localhost:8081/excel/toExcel
2018-07-05 18:42:54,571 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:42:54,571 - ===========请求时间:2018-07-05 18:42:54==========================
2018-07-05 18:42:54,571 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:42:54,571 - method=GET
2018-07-05 18:42:54,571 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:42:54,571 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:42:54,571 - args:
2018-07-05 18:42:54,582 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:42:54,582 - ===========请求时间:2018-07-05 18:42:54==========================
2018-07-05 18:42:54,582 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:42:54,582 - method=GET
2018-07-05 18:42:54,582 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:42:54,582 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:42:54,582 - args:
2018-07-05 18:42:54,587 - =============结束请求时间:2018-07-05 18:42:54,耗时:0s======================
2018-07-05 18:42:54,587 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184200054.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:42:54,588 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:42:54,596 - =============结束请求时间:2018-07-05 18:42:54,耗时:0s======================
2018-07-05 18:42:54,596 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184200054.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:42:54,597 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:43:43,480 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19316 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:43:43,483 - No active profile set, falling back to default profiles: default
2018-07-05 18:43:43,682 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:43:43,817 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6589f59b: startup date [Thu Jul 05 18:43:43 CST 2018]; root of context hierarchy
2018-07-05 18:43:44,701 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:43:44,702 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:43:44,702 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:43:45,900 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:43:45,911 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:43:45,922 - Starting service [Tomcat]
2018-07-05 18:43:45,922 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:43:46,115 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:43:46,115 - Root WebApplicationContext: initialization completed in 2298 ms
2018-07-05 18:43:46,460 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:43:46,485 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:43:46,486 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:43:46,486 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:43:46,486 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:43:46,486 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:43:48,131 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6589f59b: startup date [Thu Jul 05 18:43:43 CST 2018]; root of context hierarchy
2018-07-05 18:43:48,222 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:43:48,232 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:43:48,232 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:43:48,233 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:43:48,233 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:43:48,233 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:43:48,233 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:43:48,233 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:43:48,233 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:43:48,233 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:43:48,234 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:43:48,234 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:43:48,234 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:43:48,234 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:43:48,234 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:43:48,234 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:43:48,234 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:43:48,235 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:43:48,235 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:43:48,235 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:43:48,235 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:43:48,235 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:43:48,235 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:43:48,237 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:43:48,237 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:43:48,239 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:43:48,239 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:43:48,239 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:43:48,239 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:43:48,239 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:43:48,239 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:43:48,240 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:43:48,240 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:43:48,240 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:43:48,241 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:43:48,241 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:43:48,241 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:43:48,241 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:43:48,242 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:43:48,243 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:43:48,243 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:43:48,243 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:43:48,243 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:43:48,243 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:43:48,244 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:43:48,245 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:43:48,246 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:43:48,246 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:43:48,246 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:43:48,246 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:43:48,247 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:43:48,247 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:43:48,247 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:43:48,248 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:43:48,248 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:43:48,248 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:43:48,248 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:43:48,248 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:43:48,249 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:43:48,250 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:43:48,250 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:43:48,301 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:43:48,301 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:43:48,326 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:43:48,361 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:43:50,000 - LiveReload server is running on port 35729
2018-07-05 18:43:50,178 - Registering beans for JMX exposure on startup
2018-07-05 18:43:50,181 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:43:50,190 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:43:50,205 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:43:50,277 - Using a shared selector for servlet write/read
2018-07-05 18:43:50,297 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:43:50,304 - Started FqLtdWasBackstageApplication in 7.957 seconds (JVM running for 9.13)
2018-07-05 18:44:01,999 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:44:01,999 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:44:02,045 - FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2018-07-05 18:44:02,074 - ===========进入拦截器==============
2018-07-05 18:44:02,111 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:44:02,111 - ===========请求时间:2018-07-05 18:44:02==========================
2018-07-05 18:44:02,111 - url=http://localhost:8081/login
2018-07-05 18:44:02,112 - method=GET
2018-07-05 18:44:02,112 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:02,112 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:44:02,112 - args:
2018-07-05 18:44:02,115 - =============结束请求时间:2018-07-05 18:44:02,耗时:0s======================
2018-07-05 18:44:02,116 - response=/login
2018-07-05 18:44:02,146 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:44:02,218 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:44:02,218 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:44:02,218 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:44:02,218 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:44:02,223 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:44:02,223 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:44:06,374 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:44:06,374 - ===========请求时间:2018-07-05 18:44:06==========================
2018-07-05 18:44:06,374 - url=http://localhost:8081/signIn
2018-07-05 18:44:06,374 - method=POST
2018-07-05 18:44:06,374 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:06,374 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:44:06,374 - args:userName=admin,password=123456,
2018-07-05 18:44:06,498 - {dataSource-1} inited
2018-07-05 18:44:06,995 - =============结束请求时间:2018-07-05 18:44:06,耗时:0s======================
2018-07-05 18:44:06,995 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:44:06, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:44:07,099 - ===========进入拦截器==============
2018-07-05 18:44:07,099 - http://localhost:8081/home
2018-07-05 18:44:07,105 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:44:07,105 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,105 - url=http://localhost:8081/home
2018-07-05 18:44:07,105 - method=GET
2018-07-05 18:44:07,105 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,105 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:44:07,105 - args:
2018-07-05 18:44:07,105 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,105 - response=/home
2018-07-05 18:44:07,105 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:07,185 - ===========进入拦截器==============
2018-07-05 18:44:07,185 - http://localhost:8081/welcome
2018-07-05 18:44:07,189 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:44:07,189 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,189 - url=http://localhost:8081/welcome
2018-07-05 18:44:07,189 - method=GET
2018-07-05 18:44:07,189 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,189 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:44:07,189 - args:
2018-07-05 18:44:07,189 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,189 - response=/welcome
2018-07-05 18:44:07,189 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:07,226 - ===========进入拦截器==============
2018-07-05 18:44:07,227 - http://localhost:8081/common/top
2018-07-05 18:44:07,228 - ===========进入拦截器==============
2018-07-05 18:44:07,228 - http://localhost:8081/common/left
2018-07-05 18:44:07,230 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:44:07,230 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,230 - url=http://localhost:8081/common/top
2018-07-05 18:44:07,230 - method=GET
2018-07-05 18:44:07,230 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,230 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:44:07,230 - args:
2018-07-05 18:44:07,230 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,230 - response=/common/top
2018-07-05 18:44:07,230 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:07,230 - ===========进入拦截器==============
2018-07-05 18:44:07,231 - http://localhost:8081/common/footer
2018-07-05 18:44:07,240 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:44:07,240 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,240 - url=http://localhost:8081/common/footer
2018-07-05 18:44:07,241 - method=GET
2018-07-05 18:44:07,241 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,241 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:44:07,241 - args:
2018-07-05 18:44:07,241 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,241 - response=/common/footer
2018-07-05 18:44:07,241 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:07,244 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:44:07,244 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,245 - url=http://localhost:8081/common/left
2018-07-05 18:44:07,245 - method=GET
2018-07-05 18:44:07,245 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,245 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:44:07,245 - args:
2018-07-05 18:44:07,245 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,245 - response=/common/left
2018-07-05 18:44:07,245 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:07,269 - ===========进入拦截器==============
2018-07-05 18:44:07,269 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:44:07,282 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:44:07,283 - ===========请求时间:2018-07-05 18:44:07==========================
2018-07-05 18:44:07,283 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:44:07,283 - method=GET
2018-07-05 18:44:07,283 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:07,283 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:44:07,283 - args:roleId=1,
2018-07-05 18:44:07,592 - =============结束请求时间:2018-07-05 18:44:07,耗时:0s======================
2018-07-05 18:44:07,592 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:44:07,604 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:09,048 - ===========进入拦截器==============
2018-07-05 18:44:09,049 - http://localhost:8081/number-coin.html
2018-07-05 18:44:09,053 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:44:09,053 - ===========请求时间:2018-07-05 18:44:09==========================
2018-07-05 18:44:09,053 - url=http://localhost:8081/number-coin.html
2018-07-05 18:44:09,053 - method=GET
2018-07-05 18:44:09,053 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:09,053 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:44:09,053 - args:
2018-07-05 18:44:09,053 - =============结束请求时间:2018-07-05 18:44:09,耗时:0s======================
2018-07-05 18:44:09,053 - response=/number-coin
2018-07-05 18:44:09,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:09,183 - ===========进入拦截器==============
2018-07-05 18:44:09,183 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:44:09,210 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:44:09,210 - ===========请求时间:2018-07-05 18:44:09==========================
2018-07-05 18:44:09,210 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:44:09,210 - method=GET
2018-07-05 18:44:09,210 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:09,210 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:44:09,210 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:44:09,227 - =============结束请求时间:2018-07-05 18:44:09,耗时:0s======================
2018-07-05 18:44:09,228 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:44:09,233 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:11,692 - ===========进入拦截器==============
2018-07-05 18:44:11,692 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:44:11,702 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:44:11,702 - ===========请求时间:2018-07-05 18:44:11==========================
2018-07-05 18:44:11,702 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:44:11,702 - method=GET
2018-07-05 18:44:11,702 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:11,702 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:44:11,702 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 18:44:11,713 - =============结束请求时间:2018-07-05 18:44:11,耗时:0s======================
2018-07-05 18:44:11,713 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 18:44:11,714 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:13,640 - ===========进入拦截器==============
2018-07-05 18:44:13,640 - http://localhost:8081/excel/toExcel
2018-07-05 18:44:13,643 - ===========进入拦截器==============
2018-07-05 18:44:13,643 - http://localhost:8081/excel/toExcel
2018-07-05 18:44:13,646 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:44:13,647 - ===========请求时间:2018-07-05 18:44:13==========================
2018-07-05 18:44:13,647 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:44:13,647 - method=GET
2018-07-05 18:44:13,647 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:13,647 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:44:13,647 - args:
2018-07-05 18:44:13,650 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:44:13,651 - ===========请求时间:2018-07-05 18:44:13==========================
2018-07-05 18:44:13,651 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:44:13,651 - method=GET
2018-07-05 18:44:13,651 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:13,651 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:44:13,651 - args:wasId=1,wasType=,
2018-07-05 18:44:13,895 - =============结束请求时间:2018-07-05 18:44:13,耗时:0s======================
2018-07-05 18:44:13,895 - =============结束请求时间:2018-07-05 18:44:13,耗时:0s======================
2018-07-05 18:44:13,896 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184400013.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:44:13,896 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184400013.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:44:13,906 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:13,909 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:37,334 - ===========进入拦截器==============
2018-07-05 18:44:37,334 - http://localhost:8081/excel/toExcel
2018-07-05 18:44:37,335 - ===========进入拦截器==============
2018-07-05 18:44:37,336 - http://localhost:8081/excel/toExcel
2018-07-05 18:44:37,339 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:44:37,339 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:44:37,339 - ===========请求时间:2018-07-05 18:44:37==========================
2018-07-05 18:44:37,339 - ===========请求时间:2018-07-05 18:44:37==========================
2018-07-05 18:44:37,339 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:44:37,339 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:44:37,339 - method=GET
2018-07-05 18:44:37,339 - method=GET
2018-07-05 18:44:37,339 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:37,339 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:44:37,339 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:44:37,339 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:44:37,339 - args:
2018-07-05 18:44:37,339 - args:wasId=1,wasType=,
2018-07-05 18:44:39,692 - =============结束请求时间:2018-07-05 18:44:39,耗时:2s======================
2018-07-05 18:44:39,692 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184400037.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:44:40,584 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:44:50,702 - =============结束请求时间:2018-07-05 18:44:50,耗时:13s======================
2018-07-05 18:44:50,702 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184400050.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:44:50,703 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:45:56,001 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 17964 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:45:56,004 - No active profile set, falling back to default profiles: default
2018-07-05 18:45:56,218 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:45:56,280 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41199b40: startup date [Thu Jul 05 18:45:56 CST 2018]; root of context hierarchy
2018-07-05 18:45:57,076 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:45:57,077 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:45:57,077 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:45:58,063 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:45:58,075 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:45:58,084 - Starting service [Tomcat]
2018-07-05 18:45:58,084 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:45:58,194 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:45:58,195 - Root WebApplicationContext: initialization completed in 1915 ms
2018-07-05 18:45:58,433 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:45:58,438 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:45:58,439 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:45:58,439 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:45:58,439 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:45:58,439 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:45:59,963 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@41199b40: startup date [Thu Jul 05 18:45:56 CST 2018]; root of context hierarchy
2018-07-05 18:46:00,059 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:46:00,069 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:46:00,069 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:46:00,069 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:46:00,069 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:46:00,069 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:46:00,070 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:46:00,070 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:46:00,070 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:46:00,070 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:46:00,070 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:46:00,070 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:46:00,070 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:46:00,071 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:46:00,071 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:46:00,071 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:46:00,071 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:46:00,071 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:46:00,071 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:46:00,071 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:46:00,071 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:46:00,071 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:46:00,071 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:46:00,074 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:46:00,074 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:46:00,076 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:46:00,076 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:46:00,076 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:46:00,076 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:46:00,076 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:46:00,076 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:46:00,077 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:46:00,077 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:46:00,077 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:46:00,078 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:46:00,078 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:46:00,078 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:46:00,078 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:46:00,079 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:46:00,080 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:46:00,080 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:46:00,080 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:46:00,080 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:46:00,080 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:46:00,081 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:46:00,081 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:46:00,082 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:46:00,082 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:46:00,082 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:46:00,082 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:46:00,083 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:46:00,083 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:46:00,083 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:46:00,084 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:46:00,086 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:46:00,086 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:46:00,139 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:46:00,139 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:46:00,165 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:46:00,214 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:46:01,052 - LiveReload server is running on port 35729
2018-07-05 18:46:01,186 - Registering beans for JMX exposure on startup
2018-07-05 18:46:01,188 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:46:01,195 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:46:01,207 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:46:01,235 - Using a shared selector for servlet write/read
2018-07-05 18:46:01,253 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:46:01,262 - Started FqLtdWasBackstageApplication in 6.08 seconds (JVM running for 7.306)
2018-07-05 18:46:09,327 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:46:09,328 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:46:09,368 - FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2018-07-05 18:46:09,398 - ===========进入拦截器==============
2018-07-05 18:46:09,435 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:46:09,435 - ===========请求时间:2018-07-05 18:46:09==========================
2018-07-05 18:46:09,435 - url=http://localhost:8081/login
2018-07-05 18:46:09,436 - method=GET
2018-07-05 18:46:09,436 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:09,436 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:46:09,436 - args:
2018-07-05 18:46:09,440 - =============结束请求时间:2018-07-05 18:46:09,耗时:0s======================
2018-07-05 18:46:09,440 - response=/login
2018-07-05 18:46:09,475 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:46:09,546 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:46:09,546 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:46:09,546 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:46:09,546 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:46:09,552 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:46:09,552 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:46:14,733 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:46:14,733 - ===========请求时间:2018-07-05 18:46:14==========================
2018-07-05 18:46:14,733 - url=http://localhost:8081/signIn
2018-07-05 18:46:14,733 - method=POST
2018-07-05 18:46:14,733 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:14,733 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:46:14,733 - args:userName=admin,password=123456,
2018-07-05 18:46:14,832 - {dataSource-1} inited
2018-07-05 18:46:15,272 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,272 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:46:15, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:46:15,401 - ===========进入拦截器==============
2018-07-05 18:46:15,401 - http://localhost:8081/home
2018-07-05 18:46:15,410 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:46:15,410 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,410 - url=http://localhost:8081/home
2018-07-05 18:46:15,410 - method=GET
2018-07-05 18:46:15,410 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,410 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:46:15,411 - args:
2018-07-05 18:46:15,411 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,411 - response=/home
2018-07-05 18:46:15,411 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:15,496 - ===========进入拦截器==============
2018-07-05 18:46:15,496 - http://localhost:8081/welcome
2018-07-05 18:46:15,505 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:46:15,505 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,505 - url=http://localhost:8081/welcome
2018-07-05 18:46:15,506 - method=GET
2018-07-05 18:46:15,506 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,506 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:46:15,506 - args:
2018-07-05 18:46:15,506 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,506 - response=/welcome
2018-07-05 18:46:15,506 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:15,528 - ===========进入拦截器==============
2018-07-05 18:46:15,528 - http://localhost:8081/common/top
2018-07-05 18:46:15,529 - ===========进入拦截器==============
2018-07-05 18:46:15,529 - http://localhost:8081/common/left
2018-07-05 18:46:15,530 - ===========进入拦截器==============
2018-07-05 18:46:15,530 - http://localhost:8081/common/footer
2018-07-05 18:46:15,533 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:46:15,533 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,534 - url=http://localhost:8081/common/top
2018-07-05 18:46:15,534 - method=GET
2018-07-05 18:46:15,534 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,534 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:46:15,534 - args:
2018-07-05 18:46:15,534 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,534 - response=/common/top
2018-07-05 18:46:15,534 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:15,539 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:46:15,539 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,539 - url=http://localhost:8081/common/left
2018-07-05 18:46:15,539 - method=GET
2018-07-05 18:46:15,539 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,539 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:46:15,539 - args:
2018-07-05 18:46:15,539 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,540 - response=/common/left
2018-07-05 18:46:15,540 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:15,576 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:46:15,576 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,576 - url=http://localhost:8081/common/footer
2018-07-05 18:46:15,576 - method=GET
2018-07-05 18:46:15,576 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,576 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:46:15,576 - args:
2018-07-05 18:46:15,577 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,577 - response=/common/footer
2018-07-05 18:46:15,577 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:15,582 - ===========进入拦截器==============
2018-07-05 18:46:15,582 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:46:15,597 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:46:15,597 - ===========请求时间:2018-07-05 18:46:15==========================
2018-07-05 18:46:15,598 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:46:15,598 - method=GET
2018-07-05 18:46:15,598 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:15,598 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:46:15,598 - args:roleId=1,
2018-07-05 18:46:15,634 - =============结束请求时间:2018-07-05 18:46:15,耗时:0s======================
2018-07-05 18:46:15,634 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:46:15,645 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:29,834 - ===========进入拦截器==============
2018-07-05 18:46:29,834 - http://localhost:8081/number-coin.html
2018-07-05 18:46:29,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:46:29,841 - ===========请求时间:2018-07-05 18:46:29==========================
2018-07-05 18:46:29,841 - url=http://localhost:8081/number-coin.html
2018-07-05 18:46:29,841 - method=GET
2018-07-05 18:46:29,841 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:29,841 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:46:29,841 - args:
2018-07-05 18:46:29,841 - =============结束请求时间:2018-07-05 18:46:29,耗时:0s======================
2018-07-05 18:46:29,841 - response=/number-coin
2018-07-05 18:46:29,842 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:29,984 - ===========进入拦截器==============
2018-07-05 18:46:29,984 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:46:30,007 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:46:30,007 - ===========请求时间:2018-07-05 18:46:30==========================
2018-07-05 18:46:30,007 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:46:30,007 - method=GET
2018-07-05 18:46:30,007 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:30,007 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:46:30,007 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:46:30,025 - =============结束请求时间:2018-07-05 18:46:30,耗时:0s======================
2018-07-05 18:46:30,027 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:46:30,051 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:32,036 - ===========进入拦截器==============
2018-07-05 18:46:32,036 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:46:32,044 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:46:32,044 - ===========请求时间:2018-07-05 18:46:32==========================
2018-07-05 18:46:32,044 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:46:32,044 - method=GET
2018-07-05 18:46:32,044 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:32,044 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:46:32,044 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 18:46:32,053 - =============结束请求时间:2018-07-05 18:46:32,耗时:0s======================
2018-07-05 18:46:32,053 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 18:46:32,054 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:33,439 - ===========进入拦截器==============
2018-07-05 18:46:33,439 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:33,457 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:33,457 - ===========请求时间:2018-07-05 18:46:33==========================
2018-07-05 18:46:33,457 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:33,457 - method=GET
2018-07-05 18:46:33,457 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:33,457 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:33,457 - args:wasId=1,wasType=,
2018-07-05 18:46:33,672 - =============结束请求时间:2018-07-05 18:46:33,耗时:0s======================
2018-07-05 18:46:33,672 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600033.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:33,678 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:38,461 - ===========进入拦截器==============
2018-07-05 18:46:38,461 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:38,467 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:38,467 - ===========请求时间:2018-07-05 18:46:38==========================
2018-07-05 18:46:38,467 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:38,467 - method=GET
2018-07-05 18:46:38,467 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:38,467 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:38,468 - args:wasId=1,wasType=,
2018-07-05 18:46:38,482 - =============结束请求时间:2018-07-05 18:46:38,耗时:0s======================
2018-07-05 18:46:38,482 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600038.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:38,483 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:38,638 - ===========进入拦截器==============
2018-07-05 18:46:38,638 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:38,645 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:38,645 - ===========请求时间:2018-07-05 18:46:38==========================
2018-07-05 18:46:38,645 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:38,645 - method=GET
2018-07-05 18:46:38,645 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:38,645 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:38,645 - args:wasId=1,wasType=,
2018-07-05 18:46:38,658 - =============结束请求时间:2018-07-05 18:46:38,耗时:0s======================
2018-07-05 18:46:38,658 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600038.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:38,659 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:43,983 - ===========进入拦截器==============
2018-07-05 18:46:43,983 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:43,988 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:43,988 - ===========请求时间:2018-07-05 18:46:43==========================
2018-07-05 18:46:43,988 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:43,988 - method=GET
2018-07-05 18:46:43,988 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:43,988 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:43,988 - args:wasId=1,wasType=,
2018-07-05 18:46:43,999 - =============结束请求时间:2018-07-05 18:46:43,耗时:0s======================
2018-07-05 18:46:43,999 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600043.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:44,000 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:44,837 - ===========进入拦截器==============
2018-07-05 18:46:44,837 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:44,841 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:44,841 - ===========请求时间:2018-07-05 18:46:44==========================
2018-07-05 18:46:44,841 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:44,841 - method=GET
2018-07-05 18:46:44,842 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:44,842 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:44,842 - args:wasId=1,wasType=,
2018-07-05 18:46:44,859 - =============结束请求时间:2018-07-05 18:46:44,耗时:0s======================
2018-07-05 18:46:44,859 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600044.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:44,860 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,048 - ===========进入拦截器==============
2018-07-05 18:46:45,048 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,052 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,052 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,052 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,052 - method=GET
2018-07-05 18:46:45,052 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,052 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,052 - args:wasId=1,wasType=,
2018-07-05 18:46:45,063 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,064 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,064 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,230 - ===========进入拦截器==============
2018-07-05 18:46:45,230 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,239 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,239 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,239 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,239 - method=GET
2018-07-05 18:46:45,239 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,239 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,239 - args:wasId=1,wasType=,
2018-07-05 18:46:45,249 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,249 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,250 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,406 - ===========进入拦截器==============
2018-07-05 18:46:45,406 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,412 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,412 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,412 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,412 - method=GET
2018-07-05 18:46:45,412 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,412 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,412 - args:wasId=1,wasType=,
2018-07-05 18:46:45,421 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,421 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,422 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,575 - ===========进入拦截器==============
2018-07-05 18:46:45,575 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,580 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,580 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,580 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,580 - method=GET
2018-07-05 18:46:45,580 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,580 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,580 - args:wasId=1,wasType=,
2018-07-05 18:46:45,596 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,596 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,596 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,741 - ===========进入拦截器==============
2018-07-05 18:46:45,741 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,746 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,746 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,746 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,746 - method=GET
2018-07-05 18:46:45,746 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,746 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,746 - args:wasId=1,wasType=,
2018-07-05 18:46:45,754 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,754 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,755 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:45,925 - ===========进入拦截器==============
2018-07-05 18:46:45,926 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,931 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:45,931 - ===========请求时间:2018-07-05 18:46:45==========================
2018-07-05 18:46:45,931 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:45,931 - method=GET
2018-07-05 18:46:45,931 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:45,931 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:45,931 - args:wasId=1,wasType=,
2018-07-05 18:46:45,941 - =============结束请求时间:2018-07-05 18:46:45,耗时:0s======================
2018-07-05 18:46:45,941 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600045.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:45,942 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:46,101 - ===========进入拦截器==============
2018-07-05 18:46:46,101 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:46,111 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:46,111 - ===========请求时间:2018-07-05 18:46:46==========================
2018-07-05 18:46:46,112 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:46,112 - method=GET
2018-07-05 18:46:46,112 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:46,112 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:46,112 - args:wasId=1,wasType=,
2018-07-05 18:46:46,127 - =============结束请求时间:2018-07-05 18:46:46,耗时:0s======================
2018-07-05 18:46:46,127 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600046.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:46,128 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:46,982 - ===========进入拦截器==============
2018-07-05 18:46:46,982 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:46,988 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:46,989 - ===========请求时间:2018-07-05 18:46:46==========================
2018-07-05 18:46:46,989 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:46,989 - method=GET
2018-07-05 18:46:46,989 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:46,989 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:46,989 - args:wasId=1,wasType=,
2018-07-05 18:46:47,010 - =============结束请求时间:2018-07-05 18:46:47,耗时:0s======================
2018-07-05 18:46:47,010 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600047.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:47,010 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:47,174 - ===========进入拦截器==============
2018-07-05 18:46:47,174 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:47,216 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:47,216 - ===========请求时间:2018-07-05 18:46:47==========================
2018-07-05 18:46:47,216 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:47,216 - method=GET
2018-07-05 18:46:47,216 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:47,216 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:47,216 - args:wasId=1,wasType=,
2018-07-05 18:46:47,231 - =============结束请求时间:2018-07-05 18:46:47,耗时:0s======================
2018-07-05 18:46:47,231 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600047.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:47,232 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:47,350 - ===========进入拦截器==============
2018-07-05 18:46:47,350 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:47,354 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:47,354 - ===========请求时间:2018-07-05 18:46:47==========================
2018-07-05 18:46:47,354 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:47,354 - method=GET
2018-07-05 18:46:47,354 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:47,355 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:47,355 - args:wasId=1,wasType=,
2018-07-05 18:46:47,364 - =============结束请求时间:2018-07-05 18:46:47,耗时:0s======================
2018-07-05 18:46:47,364 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600047.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:47,365 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:50,869 - ===========进入拦截器==============
2018-07-05 18:46:50,869 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:50,876 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:50,876 - ===========请求时间:2018-07-05 18:46:50==========================
2018-07-05 18:46:50,876 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:50,876 - method=GET
2018-07-05 18:46:50,876 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:50,876 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:50,876 - args:wasId=1,wasType=,
2018-07-05 18:46:50,886 - =============结束请求时间:2018-07-05 18:46:50,耗时:0s======================
2018-07-05 18:46:50,886 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600050.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:50,887 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:51,053 - ===========进入拦截器==============
2018-07-05 18:46:51,053 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,058 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:51,058 - ===========请求时间:2018-07-05 18:46:51==========================
2018-07-05 18:46:51,058 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,058 - method=GET
2018-07-05 18:46:51,058 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:51,058 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:51,058 - args:wasId=1,wasType=,
2018-07-05 18:46:51,068 - =============结束请求时间:2018-07-05 18:46:51,耗时:0s======================
2018-07-05 18:46:51,068 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600051.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:51,069 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:51,223 - ===========进入拦截器==============
2018-07-05 18:46:51,223 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,228 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:51,228 - ===========请求时间:2018-07-05 18:46:51==========================
2018-07-05 18:46:51,228 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,228 - method=GET
2018-07-05 18:46:51,228 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:51,228 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:51,228 - args:wasId=1,wasType=,
2018-07-05 18:46:51,239 - =============结束请求时间:2018-07-05 18:46:51,耗时:0s======================
2018-07-05 18:46:51,239 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600051.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:51,240 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:46:51,405 - ===========进入拦截器==============
2018-07-05 18:46:51,405 - http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,409 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:46:51,409 - ===========请求时间:2018-07-05 18:46:51==========================
2018-07-05 18:46:51,410 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:46:51,410 - method=GET
2018-07-05 18:46:51,410 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:46:51,410 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:46:51,410 - args:wasId=1,wasType=,
2018-07-05 18:46:51,426 - =============结束请求时间:2018-07-05 18:46:51,耗时:0s======================
2018-07-05 18:46:51,426 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184600051.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:46:51,427 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:30,325 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 1452 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:48:30,327 - No active profile set, falling back to default profiles: default
2018-07-05 18:48:30,483 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:48:30,544 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f99dd6e: startup date [Thu Jul 05 18:48:30 CST 2018]; root of context hierarchy
2018-07-05 18:48:31,895 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:48:31,896 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:48:31,897 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:48:33,408 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:48:33,420 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:48:33,428 - Starting service [Tomcat]
2018-07-05 18:48:33,429 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:48:33,537 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:48:33,538 - Root WebApplicationContext: initialization completed in 2994 ms
2018-07-05 18:48:33,790 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:48:33,794 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:48:33,794 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:48:33,794 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:48:33,794 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:48:33,794 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:48:35,352 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1f99dd6e: startup date [Thu Jul 05 18:48:30 CST 2018]; root of context hierarchy
2018-07-05 18:48:35,450 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:48:35,460 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:48:35,460 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:48:35,460 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:48:35,460 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:48:35,460 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:48:35,460 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:48:35,461 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:48:35,461 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:48:35,461 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:48:35,461 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:48:35,461 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:48:35,461 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:48:35,461 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:48:35,462 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:48:35,462 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:48:35,462 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:48:35,462 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:48:35,462 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:48:35,462 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:48:35,462 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:48:35,462 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:48:35,463 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:48:35,465 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:48:35,465 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:48:35,466 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:48:35,467 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:48:35,467 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:48:35,467 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:48:35,467 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:48:35,467 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:48:35,467 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:48:35,468 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:48:35,468 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:48:35,469 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:48:35,469 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:48:35,469 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:48:35,469 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:48:35,470 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:48:35,470 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:48:35,471 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:48:35,471 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:48:35,471 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:48:35,471 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:48:35,471 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:48:35,471 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:48:35,472 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:48:35,473 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:48:35,473 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:48:35,473 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:48:35,473 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:48:35,473 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:48:35,473 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:48:35,474 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:48:35,474 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:48:35,474 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:48:35,474 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:48:35,474 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:48:35,475 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:48:35,476 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:48:35,476 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:48:35,527 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:48:35,527 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:48:35,552 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:48:35,590 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:48:36,448 - LiveReload server is running on port 35729
2018-07-05 18:48:36,579 - Registering beans for JMX exposure on startup
2018-07-05 18:48:36,580 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:48:36,586 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:48:36,600 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:48:36,632 - Using a shared selector for servlet write/read
2018-07-05 18:48:36,653 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:48:36,662 - Started FqLtdWasBackstageApplication in 7.187 seconds (JVM running for 8.795)
2018-07-05 18:48:39,438 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:48:39,439 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:48:39,488 - FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2018-07-05 18:48:39,523 - ===========进入拦截器==============
2018-07-05 18:48:39,562 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:48:39,563 - ===========请求时间:2018-07-05 18:48:39==========================
2018-07-05 18:48:39,563 - url=http://localhost:8081/login
2018-07-05 18:48:39,563 - method=GET
2018-07-05 18:48:39,563 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:39,563 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:48:39,563 - args:
2018-07-05 18:48:39,567 - =============结束请求时间:2018-07-05 18:48:39,耗时:0s======================
2018-07-05 18:48:39,567 - response=/login
2018-07-05 18:48:39,597 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:48:39,668 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:48:39,668 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:48:39,668 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:48:39,668 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:48:39,674 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:48:39,674 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:48:44,150 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:48:44,150 - ===========请求时间:2018-07-05 18:48:44==========================
2018-07-05 18:48:44,150 - url=http://localhost:8081/signIn
2018-07-05 18:48:44,151 - method=POST
2018-07-05 18:48:44,151 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:44,151 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:48:44,151 - args:userName=admin,password=123456,
2018-07-05 18:48:44,251 - {dataSource-1} inited
2018-07-05 18:48:44,768 - =============结束请求时间:2018-07-05 18:48:44,耗时:0s======================
2018-07-05 18:48:44,768 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:48:44, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:48:44,875 - ===========进入拦截器==============
2018-07-05 18:48:44,876 - http://localhost:8081/home
2018-07-05 18:48:44,882 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:48:44,882 - ===========请求时间:2018-07-05 18:48:44==========================
2018-07-05 18:48:44,882 - url=http://localhost:8081/home
2018-07-05 18:48:44,882 - method=GET
2018-07-05 18:48:44,882 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:44,882 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:48:44,882 - args:
2018-07-05 18:48:44,882 - =============结束请求时间:2018-07-05 18:48:44,耗时:0s======================
2018-07-05 18:48:44,882 - response=/home
2018-07-05 18:48:44,882 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:44,989 - ===========进入拦截器==============
2018-07-05 18:48:44,989 - http://localhost:8081/welcome
2018-07-05 18:48:44,993 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:48:44,993 - ===========请求时间:2018-07-05 18:48:44==========================
2018-07-05 18:48:44,993 - url=http://localhost:8081/welcome
2018-07-05 18:48:44,993 - method=GET
2018-07-05 18:48:44,993 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:44,993 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:48:44,993 - args:
2018-07-05 18:48:44,993 - =============结束请求时间:2018-07-05 18:48:44,耗时:0s======================
2018-07-05 18:48:44,994 - response=/welcome
2018-07-05 18:48:44,994 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:45,051 - ===========进入拦截器==============
2018-07-05 18:48:45,051 - http://localhost:8081/common/top
2018-07-05 18:48:45,052 - ===========进入拦截器==============
2018-07-05 18:48:45,052 - http://localhost:8081/common/left
2018-07-05 18:48:45,053 - ===========进入拦截器==============
2018-07-05 18:48:45,053 - http://localhost:8081/common/footer
2018-07-05 18:48:45,057 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:48:45,057 - ===========请求时间:2018-07-05 18:48:45==========================
2018-07-05 18:48:45,058 - url=http://localhost:8081/common/top
2018-07-05 18:48:45,058 - method=GET
2018-07-05 18:48:45,058 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:45,058 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:48:45,058 - args:
2018-07-05 18:48:45,058 - =============结束请求时间:2018-07-05 18:48:45,耗时:0s======================
2018-07-05 18:48:45,058 - response=/common/top
2018-07-05 18:48:45,058 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:45,063 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:48:45,063 - ===========请求时间:2018-07-05 18:48:45==========================
2018-07-05 18:48:45,063 - url=http://localhost:8081/common/left
2018-07-05 18:48:45,063 - method=GET
2018-07-05 18:48:45,063 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:45,063 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:48:45,063 - args:
2018-07-05 18:48:45,063 - =============结束请求时间:2018-07-05 18:48:45,耗时:0s======================
2018-07-05 18:48:45,063 - response=/common/left
2018-07-05 18:48:45,063 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:45,076 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:48:45,076 - ===========请求时间:2018-07-05 18:48:45==========================
2018-07-05 18:48:45,076 - url=http://localhost:8081/common/footer
2018-07-05 18:48:45,076 - method=GET
2018-07-05 18:48:45,076 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:45,076 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:48:45,076 - args:
2018-07-05 18:48:45,076 - =============结束请求时间:2018-07-05 18:48:45,耗时:0s======================
2018-07-05 18:48:45,077 - response=/common/footer
2018-07-05 18:48:45,077 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:45,127 - ===========进入拦截器==============
2018-07-05 18:48:45,127 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:48:45,136 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:48:45,136 - ===========请求时间:2018-07-05 18:48:45==========================
2018-07-05 18:48:45,137 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:48:45,137 - method=GET
2018-07-05 18:48:45,137 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:45,137 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:48:45,137 - args:roleId=1,
2018-07-05 18:48:45,184 - =============结束请求时间:2018-07-05 18:48:45,耗时:0s======================
2018-07-05 18:48:45,185 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:48:45,199 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:46,417 - ===========进入拦截器==============
2018-07-05 18:48:46,418 - http://localhost:8081/number-coin.html
2018-07-05 18:48:46,432 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:48:46,432 - ===========请求时间:2018-07-05 18:48:46==========================
2018-07-05 18:48:46,432 - url=http://localhost:8081/number-coin.html
2018-07-05 18:48:46,432 - method=GET
2018-07-05 18:48:46,432 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:46,432 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:48:46,432 - args:
2018-07-05 18:48:46,432 - =============结束请求时间:2018-07-05 18:48:46,耗时:0s======================
2018-07-05 18:48:46,433 - response=/number-coin
2018-07-05 18:48:46,433 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:46,624 - ===========进入拦截器==============
2018-07-05 18:48:46,624 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:48:46,652 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:48:46,653 - ===========请求时间:2018-07-05 18:48:46==========================
2018-07-05 18:48:46,653 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:48:46,653 - method=GET
2018-07-05 18:48:46,653 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:46,653 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:48:46,653 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:48:46,752 - =============结束请求时间:2018-07-05 18:48:46,耗时:0s======================
2018-07-05 18:48:46,752 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:48:46,764 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:48,558 - ===========进入拦截器==============
2018-07-05 18:48:48,558 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:48:48,567 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:48:48,567 - ===========请求时间:2018-07-05 18:48:48==========================
2018-07-05 18:48:48,567 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:48:48,567 - method=GET
2018-07-05 18:48:48,567 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:48,567 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:48:48,567 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 18:48:48,576 - =============结束请求时间:2018-07-05 18:48:48,耗时:0s======================
2018-07-05 18:48:48,576 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 18:48:48,577 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:48:50,650 - ===========进入拦截器==============
2018-07-05 18:48:50,650 - http://localhost:8081/excel/toExcel
2018-07-05 18:48:50,656 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:48:50,656 - ===========请求时间:2018-07-05 18:48:50==========================
2018-07-05 18:48:50,656 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:48:50,656 - method=GET
2018-07-05 18:48:50,656 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:48:50,656 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:48:50,656 - args:wasId=1,wasType=,
2018-07-05 18:48:50,872 - =============结束请求时间:2018-07-05 18:48:50,耗时:0s======================
2018-07-05 18:48:50,873 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705184800050.xls], Pragma=[no-cache], Expires=[0], Content-Length=[5120], Content-Type=[application/octet-stream]}>
2018-07-05 18:48:50,880 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:37,798 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 1656 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:50:37,801 - No active profile set, falling back to default profiles: default
2018-07-05 18:50:38,035 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:50:38,097 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 18:50:38 CST 2018]; root of context hierarchy
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:50:39,372 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:50:39,373 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:50:40,574 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:50:40,585 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:50:40,595 - Starting service [Tomcat]
2018-07-05 18:50:40,595 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:50:40,704 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:50:40,704 - Root WebApplicationContext: initialization completed in 2607 ms
2018-07-05 18:50:40,944 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:50:40,950 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:50:40,950 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:50:40,951 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:50:40,951 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:50:40,951 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:50:42,549 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 18:50:38 CST 2018]; root of context hierarchy
2018-07-05 18:50:42,641 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:50:42,651 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:50:42,651 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:50:42,652 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:50:42,652 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:50:42,653 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:50:42,653 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:50:42,653 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:50:42,653 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:50:42,653 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:50:42,653 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:50:42,654 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:50:42,654 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:50:42,654 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:50:42,654 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:50:42,654 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:50:42,654 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:50:42,654 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:50:42,654 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:50:42,655 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:50:42,655 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:50:42,655 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:50:42,655 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:50:42,657 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:50:42,657 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:50:42,660 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:50:42,660 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:50:42,660 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:50:42,661 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:50:42,661 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:50:42,661 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:50:42,661 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:50:42,662 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:50:42,662 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:50:42,663 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:50:42,663 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:50:42,663 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:50:42,663 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:50:42,664 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:50:42,664 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:50:42,665 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:50:42,665 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:50:42,665 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:50:42,665 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:50:42,666 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:50:42,666 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:50:42,668 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:50:42,668 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:50:42,668 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:50:42,668 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:50:42,669 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:50:42,669 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:50:42,669 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:50:42,670 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:50:42,670 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:50:42,671 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:50:42,671 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:50:42,671 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:50:42,671 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:50:42,673 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:50:42,673 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:50:42,724 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:50:42,725 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:50:42,749 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:50:42,783 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:50:43,643 - LiveReload server is running on port 35729
2018-07-05 18:50:43,776 - Registering beans for JMX exposure on startup
2018-07-05 18:50:43,777 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:50:43,784 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:50:43,797 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:50:43,826 - Using a shared selector for servlet write/read
2018-07-05 18:50:43,845 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:50:43,853 - Started FqLtdWasBackstageApplication in 6.808 seconds (JVM running for 8.005)
2018-07-05 18:50:47,135 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:50:47,135 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:50:47,177 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 18:50:47,208 - ===========进入拦截器==============
2018-07-05 18:50:47,246 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:50:47,247 - ===========请求时间:2018-07-05 18:50:47==========================
2018-07-05 18:50:47,247 - url=http://localhost:8081/login
2018-07-05 18:50:47,247 - method=GET
2018-07-05 18:50:47,247 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:47,247 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:50:47,247 - args:
2018-07-05 18:50:47,251 - =============结束请求时间:2018-07-05 18:50:47,耗时:0s======================
2018-07-05 18:50:47,251 - response=/login
2018-07-05 18:50:47,285 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:50:47,369 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:50:47,369 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:50:47,369 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:50:47,369 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:50:47,377 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:50:47,377 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:50:52,086 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:50:52,086 - ===========请求时间:2018-07-05 18:50:52==========================
2018-07-05 18:50:52,086 - url=http://localhost:8081/signIn
2018-07-05 18:50:52,086 - method=POST
2018-07-05 18:50:52,086 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:52,086 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:50:52,086 - args:userName=admin,password=123456,
2018-07-05 18:50:52,186 - {dataSource-1} inited
2018-07-05 18:50:52,719 - =============结束请求时间:2018-07-05 18:50:52,耗时:0s======================
2018-07-05 18:50:52,720 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:50:52, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:50:52,832 - ===========进入拦截器==============
2018-07-05 18:50:52,832 - http://localhost:8081/home
2018-07-05 18:50:52,844 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:50:52,844 - ===========请求时间:2018-07-05 18:50:52==========================
2018-07-05 18:50:52,844 - url=http://localhost:8081/home
2018-07-05 18:50:52,844 - method=GET
2018-07-05 18:50:52,844 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:52,844 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:50:52,844 - args:
2018-07-05 18:50:52,844 - =============结束请求时间:2018-07-05 18:50:52,耗时:0s======================
2018-07-05 18:50:52,844 - response=/home
2018-07-05 18:50:52,844 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:52,950 - ===========进入拦截器==============
2018-07-05 18:50:52,950 - http://localhost:8081/welcome
2018-07-05 18:50:52,955 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:50:52,955 - ===========请求时间:2018-07-05 18:50:52==========================
2018-07-05 18:50:52,955 - url=http://localhost:8081/welcome
2018-07-05 18:50:52,955 - method=GET
2018-07-05 18:50:52,955 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:52,955 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:50:52,955 - args:
2018-07-05 18:50:52,955 - =============结束请求时间:2018-07-05 18:50:52,耗时:0s======================
2018-07-05 18:50:52,955 - response=/welcome
2018-07-05 18:50:52,956 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:53,016 - ===========进入拦截器==============
2018-07-05 18:50:53,016 - http://localhost:8081/common/left
2018-07-05 18:50:53,016 - ===========进入拦截器==============
2018-07-05 18:50:53,016 - http://localhost:8081/common/top
2018-07-05 18:50:53,019 - ===========进入拦截器==============
2018-07-05 18:50:53,019 - http://localhost:8081/common/footer
2018-07-05 18:50:53,021 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:50:53,022 - ===========请求时间:2018-07-05 18:50:53==========================
2018-07-05 18:50:53,022 - url=http://localhost:8081/common/left
2018-07-05 18:50:53,022 - method=GET
2018-07-05 18:50:53,022 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:53,022 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:50:53,022 - args:
2018-07-05 18:50:53,022 - =============结束请求时间:2018-07-05 18:50:53,耗时:0s======================
2018-07-05 18:50:53,023 - response=/common/left
2018-07-05 18:50:53,023 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:53,036 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:50:53,036 - ===========请求时间:2018-07-05 18:50:53==========================
2018-07-05 18:50:53,036 - url=http://localhost:8081/common/top
2018-07-05 18:50:53,036 - method=GET
2018-07-05 18:50:53,036 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:53,036 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:50:53,036 - args:
2018-07-05 18:50:53,036 - =============结束请求时间:2018-07-05 18:50:53,耗时:0s======================
2018-07-05 18:50:53,036 - response=/common/top
2018-07-05 18:50:53,037 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:53,040 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:50:53,040 - ===========请求时间:2018-07-05 18:50:53==========================
2018-07-05 18:50:53,040 - url=http://localhost:8081/common/footer
2018-07-05 18:50:53,040 - method=GET
2018-07-05 18:50:53,040 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:53,040 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:50:53,040 - args:
2018-07-05 18:50:53,041 - =============结束请求时间:2018-07-05 18:50:53,耗时:0s======================
2018-07-05 18:50:53,041 - response=/common/footer
2018-07-05 18:50:53,041 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:53,069 - ===========进入拦截器==============
2018-07-05 18:50:53,069 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:50:53,074 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:50:53,075 - ===========请求时间:2018-07-05 18:50:53==========================
2018-07-05 18:50:53,075 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:50:53,075 - method=GET
2018-07-05 18:50:53,075 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:53,075 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:50:53,075 - args:roleId=1,
2018-07-05 18:50:53,109 - =============结束请求时间:2018-07-05 18:50:53,耗时:0s======================
2018-07-05 18:50:53,109 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:50:53,122 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:54,245 - ===========进入拦截器==============
2018-07-05 18:50:54,245 - http://localhost:8081/number-coin.html
2018-07-05 18:50:54,251 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:50:54,252 - ===========请求时间:2018-07-05 18:50:54==========================
2018-07-05 18:50:54,252 - url=http://localhost:8081/number-coin.html
2018-07-05 18:50:54,252 - method=GET
2018-07-05 18:50:54,252 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:54,252 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:50:54,252 - args:
2018-07-05 18:50:54,252 - =============结束请求时间:2018-07-05 18:50:54,耗时:0s======================
2018-07-05 18:50:54,252 - response=/number-coin
2018-07-05 18:50:54,252 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:54,436 - ===========进入拦截器==============
2018-07-05 18:50:54,436 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:50:54,458 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:50:54,458 - ===========请求时间:2018-07-05 18:50:54==========================
2018-07-05 18:50:54,458 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:50:54,458 - method=GET
2018-07-05 18:50:54,458 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:54,458 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:50:54,458 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:50:54,483 - =============结束请求时间:2018-07-05 18:50:54,耗时:0s======================
2018-07-05 18:50:54,484 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:50:54,495 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:50:56,962 - ===========进入拦截器==============
2018-07-05 18:50:56,962 - http://localhost:8081/excel/toExcel
2018-07-05 18:50:56,967 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:50:56,968 - ===========请求时间:2018-07-05 18:50:56==========================
2018-07-05 18:50:56,968 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:50:56,968 - method=GET
2018-07-05 18:50:56,968 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:50:56,968 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:50:56,968 - args:wasId=,wasType=,
2018-07-05 18:50:57,228 - =============结束请求时间:2018-07-05 18:50:57,耗时:0s======================
2018-07-05 18:50:57,230 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705185000057.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:50:57,240 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:35,825 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 20424 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:53:35,828 - No active profile set, falling back to default profiles: default
2018-07-05 18:53:36,027 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:53:36,144 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a40422e: startup date [Thu Jul 05 18:53:36 CST 2018]; root of context hierarchy
2018-07-05 18:53:37,623 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:53:37,624 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:53:37,625 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:53:38,875 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:53:38,886 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:53:38,896 - Starting service [Tomcat]
2018-07-05 18:53:38,896 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:53:39,012 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:53:39,012 - Root WebApplicationContext: initialization completed in 2868 ms
2018-07-05 18:53:39,254 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:53:39,258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:53:39,259 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:53:39,259 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:53:39,259 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:53:39,259 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:53:40,778 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6a40422e: startup date [Thu Jul 05 18:53:36 CST 2018]; root of context hierarchy
2018-07-05 18:53:40,873 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:53:40,884 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:53:40,884 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:53:40,885 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:53:40,886 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:53:40,886 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:53:40,886 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:53:40,886 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:53:40,887 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:53:40,887 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:53:40,887 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:53:40,887 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:53:40,887 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:53:40,887 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:53:40,888 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:53:40,888 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:53:40,888 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:53:40,888 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:53:40,888 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:53:40,889 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:53:40,889 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:53:40,889 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:53:40,889 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:53:40,891 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:53:40,891 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:53:40,893 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:53:40,893 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:53:40,893 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:53:40,893 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:53:40,893 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:53:40,893 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:53:40,893 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:53:40,894 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:53:40,894 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:53:40,895 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:53:40,895 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:53:40,895 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:53:40,895 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:53:40,896 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:53:40,896 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:53:40,896 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:53:40,896 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:53:40,897 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:53:40,897 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:53:40,899 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:53:40,899 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:53:40,900 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:53:40,900 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:53:40,901 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:53:40,901 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:53:40,901 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:53:40,901 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:53:40,901 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:53:40,902 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:53:40,904 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:53:40,905 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:53:40,957 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:53:40,957 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:53:40,984 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:53:41,018 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:53:41,887 - LiveReload server is running on port 35729
2018-07-05 18:53:42,014 - Registering beans for JMX exposure on startup
2018-07-05 18:53:42,016 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:53:42,022 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:53:42,036 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:53:42,074 - Using a shared selector for servlet write/read
2018-07-05 18:53:42,096 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:53:42,109 - Started FqLtdWasBackstageApplication in 7.148 seconds (JVM running for 8.511)
2018-07-05 18:53:44,537 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:53:44,537 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:53:44,598 - FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2018-07-05 18:53:44,630 - ===========进入拦截器==============
2018-07-05 18:53:44,669 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:53:44,670 - ===========请求时间:2018-07-05 18:53:44==========================
2018-07-05 18:53:44,670 - url=http://localhost:8081/login
2018-07-05 18:53:44,670 - method=GET
2018-07-05 18:53:44,670 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:44,670 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:53:44,670 - args:
2018-07-05 18:53:44,676 - =============结束请求时间:2018-07-05 18:53:44,耗时:0s======================
2018-07-05 18:53:44,676 - response=/login
2018-07-05 18:53:44,710 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:53:44,786 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:53:44,786 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:53:44,786 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:53:44,786 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:53:44,793 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:53:44,793 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:53:49,190 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:53:49,190 - ===========请求时间:2018-07-05 18:53:49==========================
2018-07-05 18:53:49,190 - url=http://localhost:8081/signIn
2018-07-05 18:53:49,190 - method=POST
2018-07-05 18:53:49,190 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:49,190 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:53:49,190 - args:userName=admin,password=123456,
2018-07-05 18:53:49,284 - {dataSource-1} inited
2018-07-05 18:53:49,759 - =============结束请求时间:2018-07-05 18:53:49,耗时:0s======================
2018-07-05 18:53:49,759 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:53:49, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:53:49,865 - ===========进入拦截器==============
2018-07-05 18:53:49,865 - http://localhost:8081/home
2018-07-05 18:53:49,872 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:53:49,872 - ===========请求时间:2018-07-05 18:53:49==========================
2018-07-05 18:53:49,872 - url=http://localhost:8081/home
2018-07-05 18:53:49,872 - method=GET
2018-07-05 18:53:49,872 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:49,872 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:53:49,872 - args:
2018-07-05 18:53:49,873 - =============结束请求时间:2018-07-05 18:53:49,耗时:0s======================
2018-07-05 18:53:49,873 - response=/home
2018-07-05 18:53:49,873 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:49,975 - ===========进入拦截器==============
2018-07-05 18:53:49,975 - http://localhost:8081/welcome
2018-07-05 18:53:49,979 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:53:49,980 - ===========请求时间:2018-07-05 18:53:49==========================
2018-07-05 18:53:49,980 - url=http://localhost:8081/welcome
2018-07-05 18:53:49,980 - method=GET
2018-07-05 18:53:49,980 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:49,980 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:53:49,980 - args:
2018-07-05 18:53:49,980 - =============结束请求时间:2018-07-05 18:53:49,耗时:0s======================
2018-07-05 18:53:49,980 - response=/welcome
2018-07-05 18:53:49,980 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:50,040 - ===========进入拦截器==============
2018-07-05 18:53:50,042 - http://localhost:8081/common/top
2018-07-05 18:53:50,042 - ===========进入拦截器==============
2018-07-05 18:53:50,043 - http://localhost:8081/common/left
2018-07-05 18:53:50,046 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:53:50,046 - ===========请求时间:2018-07-05 18:53:50==========================
2018-07-05 18:53:50,046 - url=http://localhost:8081/common/top
2018-07-05 18:53:50,046 - method=GET
2018-07-05 18:53:50,046 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:50,046 - ===========进入拦截器==============
2018-07-05 18:53:50,046 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:53:50,046 - http://localhost:8081/common/footer
2018-07-05 18:53:50,046 - args:
2018-07-05 18:53:50,046 - =============结束请求时间:2018-07-05 18:53:50,耗时:0s======================
2018-07-05 18:53:50,046 - response=/common/top
2018-07-05 18:53:50,046 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:50,051 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:53:50,052 - ===========请求时间:2018-07-05 18:53:50==========================
2018-07-05 18:53:50,052 - url=http://localhost:8081/common/left
2018-07-05 18:53:50,052 - method=GET
2018-07-05 18:53:50,052 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:50,052 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:53:50,052 - args:
2018-07-05 18:53:50,052 - =============结束请求时间:2018-07-05 18:53:50,耗时:0s======================
2018-07-05 18:53:50,052 - response=/common/left
2018-07-05 18:53:50,052 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:50,055 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:53:50,055 - ===========请求时间:2018-07-05 18:53:50==========================
2018-07-05 18:53:50,055 - url=http://localhost:8081/common/footer
2018-07-05 18:53:50,056 - method=GET
2018-07-05 18:53:50,056 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:50,056 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:53:50,056 - args:
2018-07-05 18:53:50,056 - =============结束请求时间:2018-07-05 18:53:50,耗时:0s======================
2018-07-05 18:53:50,056 - response=/common/footer
2018-07-05 18:53:50,056 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:50,111 - ===========进入拦截器==============
2018-07-05 18:53:50,111 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:53:50,119 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:53:50,119 - ===========请求时间:2018-07-05 18:53:50==========================
2018-07-05 18:53:50,119 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:53:50,119 - method=GET
2018-07-05 18:53:50,119 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:50,119 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:53:50,119 - args:roleId=1,
2018-07-05 18:53:50,145 - =============结束请求时间:2018-07-05 18:53:50,耗时:0s======================
2018-07-05 18:53:50,145 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:53:50,157 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:51,385 - ===========进入拦截器==============
2018-07-05 18:53:51,386 - http://localhost:8081/number-coin.html
2018-07-05 18:53:51,399 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:53:51,399 - ===========请求时间:2018-07-05 18:53:51==========================
2018-07-05 18:53:51,399 - url=http://localhost:8081/number-coin.html
2018-07-05 18:53:51,399 - method=GET
2018-07-05 18:53:51,399 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:51,399 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:53:51,399 - args:
2018-07-05 18:53:51,399 - =============结束请求时间:2018-07-05 18:53:51,耗时:0s======================
2018-07-05 18:53:51,399 - response=/number-coin
2018-07-05 18:53:51,399 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:51,573 - ===========进入拦截器==============
2018-07-05 18:53:51,573 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:53:51,601 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:53:51,601 - ===========请求时间:2018-07-05 18:53:51==========================
2018-07-05 18:53:51,601 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:53:51,601 - method=GET
2018-07-05 18:53:51,601 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:51,601 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:53:51,601 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:53:51,628 - =============结束请求时间:2018-07-05 18:53:51,耗时:0s======================
2018-07-05 18:53:51,629 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:53:51,646 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:53:54,760 - ===========进入拦截器==============
2018-07-05 18:53:54,760 - http://localhost:8081/excel/toExcel
2018-07-05 18:53:54,776 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:53:54,776 - ===========请求时间:2018-07-05 18:53:54==========================
2018-07-05 18:53:54,776 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:53:54,776 - method=GET
2018-07-05 18:53:54,776 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:53:54,776 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:53:54,776 - args:wasId=,wasType=,
2018-07-05 18:53:55,069 - =============结束请求时间:2018-07-05 18:53:55,耗时:0s======================
2018-07-05 18:53:55,069 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705185300054.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:53:55,084 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:55:49,749 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18804 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 18:55:49,752 - No active profile set, falling back to default profiles: default
2018-07-05 18:55:49,950 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 18:55:49,985 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bd37c79: startup date [Thu Jul 05 18:55:49 CST 2018]; root of context hierarchy
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 18:55:51,091 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 18:55:51,092 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 18:55:52,757 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 18:55:52,770 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 18:55:52,782 - Starting service [Tomcat]
2018-07-05 18:55:52,782 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 18:55:52,923 - Initializing Spring embedded WebApplicationContext
2018-07-05 18:55:52,923 - Root WebApplicationContext: initialization completed in 2939 ms
2018-07-05 18:55:53,166 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 18:55:53,171 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 18:55:53,172 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 18:55:53,172 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 18:55:53,172 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 18:55:53,172 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 18:55:54,828 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bd37c79: startup date [Thu Jul 05 18:55:49 CST 2018]; root of context hierarchy
2018-07-05 18:55:54,939 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 18:55:54,957 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 18:55:54,957 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 18:55:54,957 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 18:55:54,957 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 18:55:54,958 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 18:55:54,958 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 18:55:54,959 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 18:55:54,959 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 18:55:54,959 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 18:55:54,960 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 18:55:54,960 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 18:55:54,960 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 18:55:54,961 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 18:55:54,961 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 18:55:54,961 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 18:55:54,961 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 18:55:54,962 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 18:55:54,962 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 18:55:54,962 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 18:55:54,964 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 18:55:54,964 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 18:55:54,964 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 18:55:54,967 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 18:55:54,967 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 18:55:54,971 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 18:55:54,971 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:55:54,971 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 18:55:54,972 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 18:55:54,972 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 18:55:54,972 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 18:55:54,973 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 18:55:54,973 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 18:55:54,973 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 18:55:54,974 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 18:55:54,974 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 18:55:54,975 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 18:55:54,975 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 18:55:54,978 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 18:55:54,978 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 18:55:54,978 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 18:55:54,979 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 18:55:54,981 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 18:55:54,982 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 18:55:54,983 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 18:55:54,984 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 18:55:54,986 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 18:55:54,986 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:55:54,986 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 18:55:54,987 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 18:55:54,987 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 18:55:54,987 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:55:54,988 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 18:55:54,989 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 18:55:54,990 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 18:55:54,990 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 18:55:54,990 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 18:55:54,990 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 18:55:54,991 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 18:55:54,994 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 18:55:54,995 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 18:55:55,086 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:55:55,088 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:55:55,134 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 18:55:55,179 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 18:55:56,001 - LiveReload server is running on port 35729
2018-07-05 18:55:56,128 - Registering beans for JMX exposure on startup
2018-07-05 18:55:56,129 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 18:55:56,136 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 18:55:56,149 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 18:55:56,177 - Using a shared selector for servlet write/read
2018-07-05 18:55:56,196 - Tomcat started on port(s): 8081 (http)
2018-07-05 18:55:56,204 - Started FqLtdWasBackstageApplication in 7.473 seconds (JVM running for 9.114)
2018-07-05 18:56:11,102 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 18:56:11,103 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 18:56:11,146 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 18:56:11,177 - ===========进入拦截器==============
2018-07-05 18:56:11,215 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 18:56:11,216 - ===========请求时间:2018-07-05 18:56:11==========================
2018-07-05 18:56:11,216 - url=http://localhost:8081/login
2018-07-05 18:56:11,216 - method=GET
2018-07-05 18:56:11,216 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:11,216 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 18:56:11,216 - args:
2018-07-05 18:56:11,220 - =============结束请求时间:2018-07-05 18:56:11,耗时:0s======================
2018-07-05 18:56:11,220 - response=/login
2018-07-05 18:56:11,255 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 18:56:11,339 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 18:56:11,339 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 18:56:11,339 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 18:56:11,339 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 18:56:11,345 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 18:56:11,345 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 18:56:17,741 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 18:56:17,741 - ===========请求时间:2018-07-05 18:56:17==========================
2018-07-05 18:56:17,741 - url=http://localhost:8081/signIn
2018-07-05 18:56:17,741 - method=POST
2018-07-05 18:56:17,742 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:17,742 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 18:56:17,742 - args:userName=admin,password=123456,
2018-07-05 18:56:17,839 - {dataSource-1} inited
2018-07-05 18:56:18,379 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,379 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 18:56:18, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 18:56:18,488 - ===========进入拦截器==============
2018-07-05 18:56:18,488 - http://localhost:8081/home
2018-07-05 18:56:18,497 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 18:56:18,497 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,497 - url=http://localhost:8081/home
2018-07-05 18:56:18,497 - method=GET
2018-07-05 18:56:18,497 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,497 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 18:56:18,497 - args:
2018-07-05 18:56:18,497 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,497 - response=/home
2018-07-05 18:56:18,497 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:18,569 - ===========进入拦截器==============
2018-07-05 18:56:18,569 - http://localhost:8081/welcome
2018-07-05 18:56:18,574 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 18:56:18,574 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,574 - url=http://localhost:8081/welcome
2018-07-05 18:56:18,574 - method=GET
2018-07-05 18:56:18,574 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 18:56:18,574 - args:
2018-07-05 18:56:18,574 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,574 - response=/welcome
2018-07-05 18:56:18,575 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:18,605 - ===========进入拦截器==============
2018-07-05 18:56:18,606 - http://localhost:8081/common/top
2018-07-05 18:56:18,606 - ===========进入拦截器==============
2018-07-05 18:56:18,606 - http://localhost:8081/common/left
2018-07-05 18:56:18,606 - ===========进入拦截器==============
2018-07-05 18:56:18,606 - http://localhost:8081/common/footer
2018-07-05 18:56:18,613 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 18:56:18,614 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,614 - url=http://localhost:8081/common/top
2018-07-05 18:56:18,614 - method=GET
2018-07-05 18:56:18,614 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,614 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 18:56:18,614 - args:
2018-07-05 18:56:18,614 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,614 - response=/common/top
2018-07-05 18:56:18,614 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:18,652 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 18:56:18,652 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,652 - url=http://localhost:8081/common/left
2018-07-05 18:56:18,652 - method=GET
2018-07-05 18:56:18,652 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,652 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 18:56:18,652 - args:
2018-07-05 18:56:18,652 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,653 - response=/common/left
2018-07-05 18:56:18,653 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:18,664 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 18:56:18,664 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,664 - url=http://localhost:8081/common/footer
2018-07-05 18:56:18,664 - method=GET
2018-07-05 18:56:18,664 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,664 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 18:56:18,664 - args:
2018-07-05 18:56:18,664 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,664 - response=/common/footer
2018-07-05 18:56:18,665 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:18,700 - ===========进入拦截器==============
2018-07-05 18:56:18,700 - http://localhost:8081/menu/findMenuByRole
2018-07-05 18:56:18,708 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 18:56:18,708 - ===========请求时间:2018-07-05 18:56:18==========================
2018-07-05 18:56:18,708 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 18:56:18,708 - method=GET
2018-07-05 18:56:18,708 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:18,708 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 18:56:18,708 - args:roleId=1,
2018-07-05 18:56:18,739 - =============结束请求时间:2018-07-05 18:56:18,耗时:0s======================
2018-07-05 18:56:18,739 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 18:56:18,750 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:20,217 - ===========进入拦截器==============
2018-07-05 18:56:20,217 - http://localhost:8081/number-coin.html
2018-07-05 18:56:20,224 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 18:56:20,225 - ===========请求时间:2018-07-05 18:56:20==========================
2018-07-05 18:56:20,225 - url=http://localhost:8081/number-coin.html
2018-07-05 18:56:20,225 - method=GET
2018-07-05 18:56:20,225 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:20,225 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 18:56:20,225 - args:
2018-07-05 18:56:20,225 - =============结束请求时间:2018-07-05 18:56:20,耗时:0s======================
2018-07-05 18:56:20,225 - response=/number-coin
2018-07-05 18:56:20,225 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:20,356 - ===========进入拦截器==============
2018-07-05 18:56:20,356 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:56:20,377 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 18:56:20,377 - ===========请求时间:2018-07-05 18:56:20==========================
2018-07-05 18:56:20,377 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 18:56:20,377 - method=GET
2018-07-05 18:56:20,377 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:20,377 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 18:56:20,377 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 18:56:20,404 - =============结束请求时间:2018-07-05 18:56:20,耗时:0s======================
2018-07-05 18:56:20,405 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 18:56:20,415 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 18:56:22,984 - ===========进入拦截器==============
2018-07-05 18:56:22,984 - http://localhost:8081/excel/toExcel
2018-07-05 18:56:22,989 - ===========开始请求com.fq.fqltdwasbackstage.controller.ExcelController.toExcel============
2018-07-05 18:56:22,989 - ===========请求时间:2018-07-05 18:56:22==========================
2018-07-05 18:56:22,989 - url=http://localhost:8081/excel/toExcel
2018-07-05 18:56:22,989 - method=GET
2018-07-05 18:56:22,989 - ip=0:0:0:0:0:0:0:1
2018-07-05 18:56:22,989 - class_method=com.fq.fqltdwasbackstage.controller.ExcelController.toExcel
2018-07-05 18:56:22,989 - args:wasId=,wasType=,
2018-07-05 18:56:23,245 - =============结束请求时间:2018-07-05 18:56:23,耗时:0s======================
2018-07-05 18:56:23,245 - response=<200 OK,InputStream resource [resource loaded through InputStream],{Cache-Control=[no-cache, no-store, must-revalidate], Content-Disposition=[attachment; filename=数字货币管理20180705185600023.xls], Pragma=[no-cache], Expires=[0], Content-Length=[13312], Content-Type=[application/octet-stream]}>
2018-07-05 18:56:23,251 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:09:31,993 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6bd37c79: startup date [Thu Jul 05 18:55:49 CST 2018]; root of context hierarchy
2018-07-05 19:09:31,996 - Unregistering JMX-exposed beans on shutdown
2018-07-05 19:09:31,997 - Unregistering JMX-exposed beans
2018-07-05 19:09:32,005 - {dataSource-1} closed
2018-07-05 19:09:32,885 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18804 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:09:32,886 - No active profile set, falling back to default profiles: default
2018-07-05 19:09:32,890 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@392b0bd0: startup date [Thu Jul 05 19:09:32 CST 2018]; root of context hierarchy
2018-07-05 19:09:34,132 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:09:34,206 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage]' package. Please check your configuration.
2018-07-05 19:09:34,646 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:09:34,647 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:09:34,648 - Starting service [Tomcat]
2018-07-05 19:09:34,648 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:09:34,740 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:09:34,741 - Root WebApplicationContext: initialization completed in 1851 ms
2018-07-05 19:09:34,794 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:09:34,794 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:09:34,795 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:09:34,795 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:09:34,795 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:09:35,253 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@392b0bd0: startup date [Thu Jul 05 19:09:32 CST 2018]; root of context hierarchy
2018-07-05 19:09:35,379 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:09:35,380 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:09:35,412 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:09:35,412 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:09:35,820 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:09:37,107 - LiveReload server is running on port 35729
2018-07-05 19:09:37,380 - Registering beans for JMX exposure on startup
2018-07-05 19:09:37,396 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:09:37,398 - Using a shared selector for servlet write/read
2018-07-05 19:09:37,406 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:09:37,408 - Started FqLtdWasBackstageApplication in 4.626 seconds (JVM running for 830.318)
2018-07-05 19:10:15,925 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@392b0bd0: startup date [Thu Jul 05 19:09:32 CST 2018]; root of context hierarchy
2018-07-05 19:10:15,927 - Unregistering JMX-exposed beans on shutdown
2018-07-05 19:10:16,684 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18804 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:10:16,684 - No active profile set, falling back to default profiles: default
2018-07-05 19:10:16,686 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@353d4f94: startup date [Thu Jul 05 19:10:16 CST 2018]; root of context hierarchy
2018-07-05 19:10:17,572 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:10:17,662 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage]' package. Please check your configuration.
2018-07-05 19:10:18,092 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:10:18,092 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:10:18,093 - Starting service [Tomcat]
2018-07-05 19:10:18,093 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:10:18,225 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:10:18,226 - Root WebApplicationContext: initialization completed in 1540 ms
2018-07-05 19:10:18,342 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:10:18,342 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:10:18,342 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:10:18,342 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:10:18,342 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:10:18,655 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@353d4f94: startup date [Thu Jul 05 19:10:16 CST 2018]; root of context hierarchy
2018-07-05 19:10:18,710 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:10:18,711 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:10:18,726 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:18,726 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:18,764 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:19,324 - LiveReload server is running on port 35729
2018-07-05 19:10:19,829 - Registering beans for JMX exposure on startup
2018-07-05 19:10:19,844 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:10:19,845 - Using a shared selector for servlet write/read
2018-07-05 19:10:19,875 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:10:19,878 - Started FqLtdWasBackstageApplication in 3.28 seconds (JVM running for 872.788)
2018-07-05 19:10:21,111 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@353d4f94: startup date [Thu Jul 05 19:10:16 CST 2018]; root of context hierarchy
2018-07-05 19:10:21,113 - Unregistering JMX-exposed beans on shutdown
2018-07-05 19:10:21,822 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18804 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:10:21,822 - No active profile set, falling back to default profiles: default
2018-07-05 19:10:21,826 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7db6cd44: startup date [Thu Jul 05 19:10:21 CST 2018]; root of context hierarchy
2018-07-05 19:10:22,577 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:10:22,578 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:10:22,578 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:10:23,703 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:10:23,705 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:10:23,706 - Starting service [Tomcat]
2018-07-05 19:10:23,706 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:10:23,758 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:10:23,774 - Root WebApplicationContext: initialization completed in 1948 ms
2018-07-05 19:10:23,869 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:10:23,869 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:10:23,870 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:10:23,870 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:10:23,870 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:10:23,870 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:10:25,781 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7db6cd44: startup date [Thu Jul 05 19:10:21 CST 2018]; root of context hierarchy
2018-07-05 19:10:25,891 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:10:25,896 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:10:25,896 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:10:25,896 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:10:25,896 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:10:25,897 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:10:25,897 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:10:25,897 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:10:25,897 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:10:25,897 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:10:25,897 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:10:25,897 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:10:25,897 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:10:25,898 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:10:25,898 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:10:25,898 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:10:25,899 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:10:25,899 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:10:25,900 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:10:25,900 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:10:25,900 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:10:25,901 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:10:25,901 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:10:25,902 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:10:25,903 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:10:25,905 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:10:25,917 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:10:25,917 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:10:25,917 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:10:25,917 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:10:25,918 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:10:25,918 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:10:25,918 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:10:25,918 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:10:25,920 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:10:25,920 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:10:25,920 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:10:25,920 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:10:25,922 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:10:25,922 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:10:25,922 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:10:25,922 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:10:25,923 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:10:25,923 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:10:25,923 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:10:25,923 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:10:25,926 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:10:25,926 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:10:25,926 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:10:25,926 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:10:25,926 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:10:25,927 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:10:25,927 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:10:25,928 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:10:25,928 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:10:25,929 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:10:25,929 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:10:25,929 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:10:25,929 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:10:25,964 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:10:25,967 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:10:26,042 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:26,042 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:26,066 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:10:26,084 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:10:26,787 - LiveReload server is running on port 35729
2018-07-05 19:10:27,111 - Registering beans for JMX exposure on startup
2018-07-05 19:10:27,111 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:10:27,114 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:10:27,118 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:10:27,119 - Using a shared selector for servlet write/read
2018-07-05 19:10:27,123 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:10:27,125 - Started FqLtdWasBackstageApplication in 5.386 seconds (JVM running for 880.035)
2018-07-05 19:14:26,982 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7db6cd44: startup date [Thu Jul 05 19:10:21 CST 2018]; root of context hierarchy
2018-07-05 19:14:26,983 - Unregistering JMX-exposed beans on shutdown
2018-07-05 19:14:26,985 - Unregistering JMX-exposed beans
2018-07-05 19:14:27,860 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18804 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:14:27,860 - No active profile set, falling back to default profiles: default
2018-07-05 19:14:27,862 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ffe5fd8: startup date [Thu Jul 05 19:14:27 CST 2018]; root of context hierarchy
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:29,528 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:14:29,528 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:14:30,218 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:14:30,223 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:14:30,224 - Starting service [Tomcat]
2018-07-05 19:14:30,224 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:14:30,281 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:14:30,282 - Root WebApplicationContext: initialization completed in 2420 ms
2018-07-05 19:14:30,393 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:14:30,422 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:14:30,422 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:14:30,424 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:14:30,424 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:14:30,424 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:14:39,726 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 16852 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:14:39,728 - No active profile set, falling back to default profiles: default
2018-07-05 19:14:39,943 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:14:40,022 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46dde4a7: startup date [Thu Jul 05 19:14:40 CST 2018]; root of context hierarchy
2018-07-05 19:14:41,459 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,460 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,461 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,461 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,461 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,461 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:14:41,461 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:14:41,461 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:14:42,915 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:14:42,928 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:14:42,940 - Starting service [Tomcat]
2018-07-05 19:14:42,940 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:14:43,054 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:14:43,055 - Root WebApplicationContext: initialization completed in 3033 ms
2018-07-05 19:14:43,299 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:14:43,302 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:14:43,303 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:14:43,303 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:14:43,303 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:14:43,303 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:14:44,985 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@46dde4a7: startup date [Thu Jul 05 19:14:40 CST 2018]; root of context hierarchy
2018-07-05 19:14:45,074 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:14:45,084 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:14:45,084 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:14:45,084 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:14:45,084 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:14:45,084 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:14:45,084 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:14:45,085 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:14:45,085 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:14:45,085 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:14:45,085 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:14:45,085 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:14:45,086 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:14:45,086 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:14:45,086 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:14:45,086 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:14:45,087 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:14:45,087 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:14:45,087 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:14:45,087 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:14:45,087 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:14:45,087 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:14:45,088 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:14:45,089 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:14:45,090 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:14:45,092 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:14:45,093 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:14:45,093 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:14:45,093 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:14:45,093 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:14:45,093 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:14:45,093 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:14:45,093 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:14:45,094 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:14:45,094 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:14:45,095 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:14:45,095 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:14:45,095 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:14:45,096 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:14:45,096 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:14:45,097 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:14:45,097 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:14:45,097 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:14:45,097 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:14:45,097 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:14:45,098 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:14:45,099 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:14:45,099 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:14:45,100 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:14:45,100 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:14:45,100 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:14:45,100 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:14:45,100 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:14:45,101 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:14:45,103 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:14:45,104 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:14:45,156 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:14:45,156 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:14:45,183 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:14:45,240 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:14:46,096 - LiveReload server is running on port 35729
2018-07-05 19:14:46,226 - Registering beans for JMX exposure on startup
2018-07-05 19:14:46,228 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:14:46,234 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:14:46,248 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:14:46,285 - Using a shared selector for servlet write/read
2018-07-05 19:14:46,309 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:14:46,317 - Started FqLtdWasBackstageApplication in 7.098 seconds (JVM running for 8.441)
2018-07-05 19:14:49,679 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:14:49,679 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:14:49,728 - FrameworkServlet 'dispatcherServlet': initialization completed in 49 ms
2018-07-05 19:14:49,765 - ===========进入拦截器==============
2018-07-05 19:14:49,813 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:14:49,813 - ===========请求时间:2018-07-05 19:14:49==========================
2018-07-05 19:14:49,814 - url=http://localhost:8081/login
2018-07-05 19:14:49,814 - method=GET
2018-07-05 19:14:49,814 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:49,814 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:14:49,814 - args:
2018-07-05 19:14:49,819 - =============结束请求时间:2018-07-05 19:14:49,耗时:0s======================
2018-07-05 19:14:49,819 - response=/login
2018-07-05 19:14:49,865 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:14:49,982 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:14:49,982 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:14:49,982 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:14:49,982 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:14:49,989 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:14:49,990 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:14:54,197 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:14:54,197 - ===========请求时间:2018-07-05 19:14:54==========================
2018-07-05 19:14:54,198 - url=http://localhost:8081/signIn
2018-07-05 19:14:54,198 - method=POST
2018-07-05 19:14:54,198 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:54,198 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:14:54,198 - args:userName=admin,password=123456,
2018-07-05 19:14:54,296 - {dataSource-1} inited
2018-07-05 19:14:54,978 - =============结束请求时间:2018-07-05 19:14:54,耗时:0s======================
2018-07-05 19:14:54,978 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:14:54, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:14:55,092 - ===========进入拦截器==============
2018-07-05 19:14:55,093 - http://localhost:8081/home
2018-07-05 19:14:55,098 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:14:55,098 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,098 - url=http://localhost:8081/home
2018-07-05 19:14:55,098 - method=GET
2018-07-05 19:14:55,098 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,098 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:14:55,099 - args:
2018-07-05 19:14:55,099 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,099 - response=/home
2018-07-05 19:14:55,099 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:55,185 - ===========进入拦截器==============
2018-07-05 19:14:55,185 - http://localhost:8081/welcome
2018-07-05 19:14:55,195 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:14:55,195 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,195 - url=http://localhost:8081/welcome
2018-07-05 19:14:55,195 - method=GET
2018-07-05 19:14:55,195 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,195 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:14:55,195 - args:
2018-07-05 19:14:55,195 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,195 - response=/welcome
2018-07-05 19:14:55,196 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:55,232 - ===========进入拦截器==============
2018-07-05 19:14:55,233 - http://localhost:8081/common/top
2018-07-05 19:14:55,233 - ===========进入拦截器==============
2018-07-05 19:14:55,233 - http://localhost:8081/common/left
2018-07-05 19:14:55,233 - ===========进入拦截器==============
2018-07-05 19:14:55,233 - http://localhost:8081/common/footer
2018-07-05 19:14:55,238 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:14:55,238 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,238 - url=http://localhost:8081/common/top
2018-07-05 19:14:55,238 - method=GET
2018-07-05 19:14:55,238 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,238 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:14:55,238 - args:
2018-07-05 19:14:55,239 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,239 - response=/common/top
2018-07-05 19:14:55,239 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:55,268 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:14:55,268 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,268 - url=http://localhost:8081/common/left
2018-07-05 19:14:55,268 - method=GET
2018-07-05 19:14:55,269 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,269 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:14:55,269 - args:
2018-07-05 19:14:55,269 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,269 - response=/common/left
2018-07-05 19:14:55,269 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:55,282 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:14:55,283 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,283 - url=http://localhost:8081/common/footer
2018-07-05 19:14:55,283 - method=GET
2018-07-05 19:14:55,283 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,283 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:14:55,283 - args:
2018-07-05 19:14:55,283 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,283 - response=/common/footer
2018-07-05 19:14:55,283 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:55,312 - ===========进入拦截器==============
2018-07-05 19:14:55,312 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:14:55,329 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:14:55,329 - ===========请求时间:2018-07-05 19:14:55==========================
2018-07-05 19:14:55,329 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:14:55,329 - method=GET
2018-07-05 19:14:55,329 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:55,329 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:14:55,329 - args:roleId=1,
2018-07-05 19:14:55,401 - =============结束请求时间:2018-07-05 19:14:55,耗时:0s======================
2018-07-05 19:14:55,402 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:14:55,414 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:57,057 - ===========进入拦截器==============
2018-07-05 19:14:57,057 - http://localhost:8081/number-coin.html
2018-07-05 19:14:57,064 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:14:57,064 - ===========请求时间:2018-07-05 19:14:57==========================
2018-07-05 19:14:57,064 - url=http://localhost:8081/number-coin.html
2018-07-05 19:14:57,064 - method=GET
2018-07-05 19:14:57,064 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:57,064 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:14:57,064 - args:
2018-07-05 19:14:57,064 - =============结束请求时间:2018-07-05 19:14:57,耗时:0s======================
2018-07-05 19:14:57,064 - response=/number-coin
2018-07-05 19:14:57,064 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:14:57,255 - ===========进入拦截器==============
2018-07-05 19:14:57,255 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:14:57,285 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:14:57,285 - ===========请求时间:2018-07-05 19:14:57==========================
2018-07-05 19:14:57,285 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:14:57,285 - method=GET
2018-07-05 19:14:57,285 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:14:57,285 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:14:57,285 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:14:57,309 - =============结束请求时间:2018-07-05 19:14:57,耗时:0s======================
2018-07-05 19:14:57,309 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:14:57,316 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:00,612 - ===========进入拦截器==============
2018-07-05 19:15:00,613 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:00,620 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:15:00,620 - ===========请求时间:2018-07-05 19:15:00==========================
2018-07-05 19:15:00,620 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:00,620 - method=GET
2018-07-05 19:15:00,620 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:00,620 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:15:00,620 - args:pageNumber=1,pageSize=10,wasId=31,wasType=,
2018-07-05 19:15:00,632 - =============结束请求时间:2018-07-05 19:15:00,耗时:0s======================
2018-07-05 19:15:00,632 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=31, wasBaseCurrency=test1, wasType=test1, wasBeginBlock=100, wasBlockNum=100, wasGateWay=hqrr3123, wasTokenAddress=312312reqwe1, wasMinConfirm=11, wasStatus=0, wasPrecision=31, wasZeroGasPrice=12, wasZeroGasLimit=12, wasTransferGasPrice=null, wasTransferGasLimit=12, wasRemark=哈哈哈哈,tesrt111111111111
, wasCreateTime=Thu Jul 05 16:24:08 CST 2018, wasLastTime=Thu Jul 05 16:52:46 CST 2018, wasCoinIntroduceUrl=https://www.baidu.com, wasBlockBrowsersUrl=https://www.baidu.com)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:15:00,633 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:04,113 - ===========进入拦截器==============
2018-07-05 19:15:04,113 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:04,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:15:04,120 - ===========请求时间:2018-07-05 19:15:04==========================
2018-07-05 19:15:04,120 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:04,120 - method=GET
2018-07-05 19:15:04,120 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:04,120 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:15:04,120 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:15:04,133 - =============结束请求时间:2018-07-05 19:15:04,耗时:0s======================
2018-07-05 19:15:04,134 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:15:04,135 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:07,617 - ===========进入拦截器==============
2018-07-05 19:15:07,617 - http://localhost:8081/error
2018-07-05 19:15:07,634 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:23,417 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 5964 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:15:23,419 - No active profile set, falling back to default profiles: default
2018-07-05 19:15:23,756 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:15:23,939 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@dad784a: startup date [Thu Jul 05 19:15:23 CST 2018]; root of context hierarchy
2018-07-05 19:15:25,236 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,237 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,237 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,237 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,237 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,237 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:15:25,238 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:15:25,238 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:15:27,035 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:15:27,048 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:15:27,058 - Starting service [Tomcat]
2018-07-05 19:15:27,058 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:15:27,180 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:15:27,180 - Root WebApplicationContext: initialization completed in 3241 ms
2018-07-05 19:15:27,417 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:15:27,420 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:15:27,422 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:15:27,422 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:15:27,422 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:15:27,422 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:15:29,072 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@dad784a: startup date [Thu Jul 05 19:15:23 CST 2018]; root of context hierarchy
2018-07-05 19:15:29,173 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:15:29,186 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:15:29,186 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:15:29,187 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:15:29,187 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:15:29,187 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:15:29,187 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:15:29,187 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:15:29,188 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:15:29,188 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:15:29,188 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:15:29,188 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:15:29,188 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:15:29,189 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:15:29,189 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:15:29,189 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:15:29,189 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:15:29,190 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:15:29,190 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:15:29,190 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:15:29,190 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:15:29,190 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:15:29,190 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:15:29,192 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:15:29,192 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:15:29,195 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:15:29,195 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:15:29,195 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:15:29,195 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:15:29,195 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:15:29,196 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:15:29,196 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:15:29,196 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:15:29,196 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:15:29,197 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:15:29,197 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:15:29,198 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:15:29,198 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:15:29,199 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:15:29,200 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:15:29,200 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:15:29,200 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:15:29,200 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:15:29,200 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:15:29,201 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:15:29,201 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:15:29,203 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:15:29,203 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:15:29,203 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:15:29,203 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:15:29,203 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:15:29,204 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:15:29,204 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:15:29,205 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:15:29,205 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:15:29,206 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:15:29,206 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:15:29,206 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:15:29,206 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:15:29,206 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:15:29,208 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:15:29,209 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:15:29,269 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:15:29,269 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:15:29,541 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:15:29,577 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:15:30,398 - LiveReload server is running on port 35729
2018-07-05 19:15:30,523 - Registering beans for JMX exposure on startup
2018-07-05 19:15:30,525 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:15:30,532 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:15:30,544 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:15:30,572 - Using a shared selector for servlet write/read
2018-07-05 19:15:30,590 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:15:30,598 - Started FqLtdWasBackstageApplication in 8.186 seconds (JVM running for 10.484)
2018-07-05 19:15:38,771 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:15:38,771 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:15:38,813 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 19:15:38,842 - ===========进入拦截器==============
2018-07-05 19:15:38,878 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:15:38,878 - ===========请求时间:2018-07-05 19:15:38==========================
2018-07-05 19:15:38,879 - url=http://localhost:8081/login
2018-07-05 19:15:38,879 - method=GET
2018-07-05 19:15:38,879 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:38,879 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:15:38,879 - args:
2018-07-05 19:15:38,882 - =============结束请求时间:2018-07-05 19:15:38,耗时:0s======================
2018-07-05 19:15:38,883 - response=/login
2018-07-05 19:15:38,916 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:15:38,987 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:15:38,987 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:15:38,987 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:15:38,987 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:15:38,992 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:15:38,992 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:15:43,429 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:15:43,429 - ===========请求时间:2018-07-05 19:15:43==========================
2018-07-05 19:15:43,429 - url=http://localhost:8081/signIn
2018-07-05 19:15:43,429 - method=POST
2018-07-05 19:15:43,429 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:43,429 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:15:43,429 - args:userName=admin,password=123456,
2018-07-05 19:15:43,533 - {dataSource-1} inited
2018-07-05 19:15:44,010 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,010 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:15:43, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:15:44,115 - ===========进入拦截器==============
2018-07-05 19:15:44,115 - http://localhost:8081/home
2018-07-05 19:15:44,120 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:15:44,120 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,120 - url=http://localhost:8081/home
2018-07-05 19:15:44,120 - method=GET
2018-07-05 19:15:44,120 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,120 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:15:44,120 - args:
2018-07-05 19:15:44,120 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,120 - response=/home
2018-07-05 19:15:44,120 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:44,218 - ===========进入拦截器==============
2018-07-05 19:15:44,218 - http://localhost:8081/welcome
2018-07-05 19:15:44,223 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:15:44,223 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,223 - url=http://localhost:8081/welcome
2018-07-05 19:15:44,223 - method=GET
2018-07-05 19:15:44,223 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,223 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:15:44,223 - args:
2018-07-05 19:15:44,223 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,223 - response=/welcome
2018-07-05 19:15:44,224 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:44,277 - ===========进入拦截器==============
2018-07-05 19:15:44,278 - http://localhost:8081/common/top
2018-07-05 19:15:44,279 - ===========进入拦截器==============
2018-07-05 19:15:44,279 - http://localhost:8081/common/left
2018-07-05 19:15:44,280 - ===========进入拦截器==============
2018-07-05 19:15:44,280 - http://localhost:8081/common/footer
2018-07-05 19:15:44,284 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:15:44,285 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,285 - url=http://localhost:8081/common/top
2018-07-05 19:15:44,285 - method=GET
2018-07-05 19:15:44,285 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,285 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:15:44,285 - args:
2018-07-05 19:15:44,285 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,285 - response=/common/top
2018-07-05 19:15:44,285 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:44,301 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:15:44,302 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,302 - url=http://localhost:8081/common/left
2018-07-05 19:15:44,302 - method=GET
2018-07-05 19:15:44,302 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,302 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:15:44,302 - args:
2018-07-05 19:15:44,302 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,302 - response=/common/left
2018-07-05 19:15:44,302 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:44,305 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:15:44,305 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,305 - url=http://localhost:8081/common/footer
2018-07-05 19:15:44,306 - method=GET
2018-07-05 19:15:44,306 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,306 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:15:44,306 - args:
2018-07-05 19:15:44,306 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,306 - response=/common/footer
2018-07-05 19:15:44,306 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:44,349 - ===========进入拦截器==============
2018-07-05 19:15:44,349 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:15:44,357 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:15:44,357 - ===========请求时间:2018-07-05 19:15:44==========================
2018-07-05 19:15:44,357 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:15:44,357 - method=GET
2018-07-05 19:15:44,357 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:44,357 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:15:44,357 - args:roleId=1,
2018-07-05 19:15:44,402 - =============结束请求时间:2018-07-05 19:15:44,耗时:0s======================
2018-07-05 19:15:44,402 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:15:44,414 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:45,631 - ===========进入拦截器==============
2018-07-05 19:15:45,631 - http://localhost:8081/number-coin.html
2018-07-05 19:15:45,656 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:15:45,656 - ===========请求时间:2018-07-05 19:15:45==========================
2018-07-05 19:15:45,656 - url=http://localhost:8081/number-coin.html
2018-07-05 19:15:45,656 - method=GET
2018-07-05 19:15:45,656 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:45,656 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:15:45,656 - args:
2018-07-05 19:15:45,656 - =============结束请求时间:2018-07-05 19:15:45,耗时:0s======================
2018-07-05 19:15:45,657 - response=/number-coin
2018-07-05 19:15:45,657 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:45,856 - ===========进入拦截器==============
2018-07-05 19:15:45,856 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:45,879 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:15:45,879 - ===========请求时间:2018-07-05 19:15:45==========================
2018-07-05 19:15:45,879 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:45,879 - method=GET
2018-07-05 19:15:45,879 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:45,879 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:15:45,879 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:15:45,904 - =============结束请求时间:2018-07-05 19:15:45,耗时:0s======================
2018-07-05 19:15:45,905 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:15:45,914 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:49,699 - ===========进入拦截器==============
2018-07-05 19:15:49,700 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:49,709 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:15:49,709 - ===========请求时间:2018-07-05 19:15:49==========================
2018-07-05 19:15:49,709 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:15:49,709 - method=GET
2018-07-05 19:15:49,709 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:15:49,709 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:15:49,709 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:15:49,718 - =============结束请求时间:2018-07-05 19:15:49,耗时:0s======================
2018-07-05 19:15:49,718 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:15:49,719 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:15:54,191 - ===========进入拦截器==============
2018-07-05 19:15:54,191 - http://localhost:8081/error
2018-07-05 19:15:54,209 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:20,532 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 17940 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:16:20,535 - No active profile set, falling back to default profiles: default
2018-07-05 19:16:20,780 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:16:20,815 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e81626a: startup date [Thu Jul 05 19:16:20 CST 2018]; root of context hierarchy
2018-07-05 19:16:22,316 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,316 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,316 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,317 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,317 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,317 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:16:22,317 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:16:22,317 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:16:24,241 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:16:24,254 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:16:24,265 - Starting service [Tomcat]
2018-07-05 19:16:24,266 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:16:24,428 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:16:24,429 - Root WebApplicationContext: initialization completed in 3615 ms
2018-07-05 19:16:24,696 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:16:24,701 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:16:24,701 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:16:24,701 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:16:24,701 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:16:24,701 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:16:26,309 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e81626a: startup date [Thu Jul 05 19:16:20 CST 2018]; root of context hierarchy
2018-07-05 19:16:26,403 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:16:26,416 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:16:26,416 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:16:26,416 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:16:26,417 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:16:26,417 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:16:26,417 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:16:26,417 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:16:26,417 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:16:26,418 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:16:26,418 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:16:26,418 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:16:26,418 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:16:26,418 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:16:26,418 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:16:26,419 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:16:26,419 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:16:26,419 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:16:26,419 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:16:26,419 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:16:26,419 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:16:26,419 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:16:26,420 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:16:26,423 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:16:26,423 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:16:26,426 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:16:26,427 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:16:26,427 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:16:26,427 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:16:26,427 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:16:26,427 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:16:26,427 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:16:26,427 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:16:26,428 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:16:26,428 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:16:26,428 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:16:26,429 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:16:26,429 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:16:26,430 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:16:26,430 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:16:26,430 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:16:26,430 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:16:26,430 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:16:26,431 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:16:26,431 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:16:26,431 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:16:26,433 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:16:26,433 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:16:26,433 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:16:26,433 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:16:26,434 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:16:26,434 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:16:26,434 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:16:26,435 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:16:26,436 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:16:26,438 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:16:26,439 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:16:26,493 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:16:26,493 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:16:26,520 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:16:26,556 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:16:27,461 - LiveReload server is running on port 35729
2018-07-05 19:16:27,609 - Registering beans for JMX exposure on startup
2018-07-05 19:16:27,611 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:16:27,618 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:16:27,629 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:16:27,657 - Using a shared selector for servlet write/read
2018-07-05 19:16:27,683 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:16:27,692 - Started FqLtdWasBackstageApplication in 8.129 seconds (JVM running for 10.563)
2018-07-05 19:16:30,246 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:16:30,246 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:16:30,284 - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
2018-07-05 19:16:30,312 - ===========进入拦截器==============
2018-07-05 19:16:30,345 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:16:30,346 - ===========请求时间:2018-07-05 19:16:30==========================
2018-07-05 19:16:30,346 - url=http://localhost:8081/login
2018-07-05 19:16:30,346 - method=GET
2018-07-05 19:16:30,346 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:30,346 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:16:30,346 - args:
2018-07-05 19:16:30,350 - =============结束请求时间:2018-07-05 19:16:30,耗时:0s======================
2018-07-05 19:16:30,350 - response=/login
2018-07-05 19:16:30,383 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:16:30,459 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:16:30,459 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:16:30,460 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:16:30,460 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:16:30,466 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:16:30,466 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:16:34,787 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:16:34,787 - ===========请求时间:2018-07-05 19:16:34==========================
2018-07-05 19:16:34,787 - url=http://localhost:8081/signIn
2018-07-05 19:16:34,787 - method=POST
2018-07-05 19:16:34,787 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:34,787 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:16:34,788 - args:userName=admin,password=123456,
2018-07-05 19:16:34,883 - {dataSource-1} inited
2018-07-05 19:16:35,533 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,533 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:16:35, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:16:35,632 - ===========进入拦截器==============
2018-07-05 19:16:35,633 - http://localhost:8081/home
2018-07-05 19:16:35,639 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:16:35,640 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,640 - url=http://localhost:8081/home
2018-07-05 19:16:35,640 - method=GET
2018-07-05 19:16:35,640 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,640 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:16:35,640 - args:
2018-07-05 19:16:35,640 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,640 - response=/home
2018-07-05 19:16:35,640 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:35,737 - ===========进入拦截器==============
2018-07-05 19:16:35,737 - http://localhost:8081/welcome
2018-07-05 19:16:35,742 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:16:35,742 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,742 - url=http://localhost:8081/welcome
2018-07-05 19:16:35,742 - method=GET
2018-07-05 19:16:35,742 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,742 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:16:35,742 - args:
2018-07-05 19:16:35,742 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,742 - response=/welcome
2018-07-05 19:16:35,742 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:35,802 - ===========进入拦截器==============
2018-07-05 19:16:35,802 - http://localhost:8081/common/top
2018-07-05 19:16:35,803 - ===========进入拦截器==============
2018-07-05 19:16:35,803 - ===========进入拦截器==============
2018-07-05 19:16:35,803 - http://localhost:8081/common/footer
2018-07-05 19:16:35,803 - http://localhost:8081/common/left
2018-07-05 19:16:35,809 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:16:35,809 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,809 - url=http://localhost:8081/common/top
2018-07-05 19:16:35,809 - method=GET
2018-07-05 19:16:35,809 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,809 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:16:35,809 - args:
2018-07-05 19:16:35,810 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,810 - response=/common/top
2018-07-05 19:16:35,810 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:35,833 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:16:35,833 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,833 - url=http://localhost:8081/common/left
2018-07-05 19:16:35,833 - method=GET
2018-07-05 19:16:35,833 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,833 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:16:35,833 - args:
2018-07-05 19:16:35,833 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,833 - response=/common/left
2018-07-05 19:16:35,833 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:35,839 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:16:35,839 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,839 - url=http://localhost:8081/common/footer
2018-07-05 19:16:35,839 - method=GET
2018-07-05 19:16:35,839 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,839 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:16:35,839 - args:
2018-07-05 19:16:35,840 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,840 - response=/common/footer
2018-07-05 19:16:35,840 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:35,895 - ===========进入拦截器==============
2018-07-05 19:16:35,896 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:16:35,904 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:16:35,904 - ===========请求时间:2018-07-05 19:16:35==========================
2018-07-05 19:16:35,904 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:16:35,904 - method=GET
2018-07-05 19:16:35,904 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:35,904 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:16:35,904 - args:roleId=1,
2018-07-05 19:16:35,936 - =============结束请求时间:2018-07-05 19:16:35,耗时:0s======================
2018-07-05 19:16:35,937 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:16:35,947 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:38,112 - ===========进入拦截器==============
2018-07-05 19:16:38,112 - http://localhost:8081/number-coin.html
2018-07-05 19:16:38,116 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:16:38,116 - ===========请求时间:2018-07-05 19:16:38==========================
2018-07-05 19:16:38,116 - url=http://localhost:8081/number-coin.html
2018-07-05 19:16:38,116 - method=GET
2018-07-05 19:16:38,116 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:38,116 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:16:38,116 - args:
2018-07-05 19:16:38,117 - =============结束请求时间:2018-07-05 19:16:38,耗时:0s======================
2018-07-05 19:16:38,117 - response=/number-coin
2018-07-05 19:16:38,117 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:38,296 - ===========进入拦截器==============
2018-07-05 19:16:38,297 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:16:38,316 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:16:38,317 - ===========请求时间:2018-07-05 19:16:38==========================
2018-07-05 19:16:38,317 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:16:38,317 - method=GET
2018-07-05 19:16:38,317 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:38,317 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:16:38,317 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:16:38,342 - =============结束请求时间:2018-07-05 19:16:38,耗时:0s======================
2018-07-05 19:16:38,344 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:16:38,361 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:41,284 - ===========进入拦截器==============
2018-07-05 19:16:41,284 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:16:41,300 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:16:41,300 - ===========请求时间:2018-07-05 19:16:41==========================
2018-07-05 19:16:41,300 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:16:41,300 - method=GET
2018-07-05 19:16:41,300 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:41,300 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:16:41,300 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:16:41,309 - =============结束请求时间:2018-07-05 19:16:41,耗时:0s======================
2018-07-05 19:16:41,309 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:16:41,310 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:16:45,065 - ===========进入拦截器==============
2018-07-05 19:16:45,065 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:16:45,074 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-05 19:16:45,075 - ===========请求时间:2018-07-05 19:16:45==========================
2018-07-05 19:16:45,075 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:16:45,075 - method=GET
2018-07-05 19:16:45,075 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:16:45,075 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-05 19:16:45,075 - args:wasType=BTC,
2018-07-05 19:16:45,748 - =============结束请求时间:2018-07-05 19:16:45,耗时:0s======================
2018-07-05 19:16:45,748 - response=Result(code=200, msg=成功, data=, page=null, totalCount=null)
2018-07-05 19:16:45,750 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:17:46,756 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 18996 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:17:46,758 - No active profile set, falling back to default profiles: default
2018-07-05 19:17:46,959 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:17:46,994 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 19:17:46 CST 2018]; root of context hierarchy
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:17:48,074 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:17:48,075 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:17:49,545 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:17:49,559 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:17:49,572 - Starting service [Tomcat]
2018-07-05 19:17:49,572 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:17:49,706 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:17:49,707 - Root WebApplicationContext: initialization completed in 2713 ms
2018-07-05 19:17:49,997 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:17:50,001 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:17:50,002 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:17:50,002 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:17:50,002 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:17:50,002 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:17:51,671 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 19:17:46 CST 2018]; root of context hierarchy
2018-07-05 19:17:51,770 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:17:51,782 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:17:51,782 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:17:51,782 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:17:51,782 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:17:51,783 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:17:51,783 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:17:51,783 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:17:51,783 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:17:51,783 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:17:51,784 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:17:51,784 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:17:51,784 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:17:51,784 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:17:51,784 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:17:51,784 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:17:51,785 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:17:51,785 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:17:51,785 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:17:51,785 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:17:51,785 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:17:51,785 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:17:51,785 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:17:51,787 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:17:51,787 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:17:51,789 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:17:51,789 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:17:51,789 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:17:51,790 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:17:51,790 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:17:51,790 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:17:51,790 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:17:51,790 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:17:51,790 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:17:51,792 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:17:51,792 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:17:51,792 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:17:51,792 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:17:51,793 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:17:51,793 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:17:51,794 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:17:51,794 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:17:51,794 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:17:51,794 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:17:51,795 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:17:51,795 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:17:51,796 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:17:51,796 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:17:51,796 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:17:51,796 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:17:51,796 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:17:51,797 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:17:51,797 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:17:51,798 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:17:51,799 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:17:51,799 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:17:51,799 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:17:51,799 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:17:51,799 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:17:51,800 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:17:51,801 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:17:51,802 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:17:51,864 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:17:51,864 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:17:51,895 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:17:51,958 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:17:52,826 - LiveReload server is running on port 35729
2018-07-05 19:17:52,960 - Registering beans for JMX exposure on startup
2018-07-05 19:17:52,962 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:17:52,970 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:17:52,984 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:17:53,018 - Using a shared selector for servlet write/read
2018-07-05 19:17:53,046 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:17:53,055 - Started FqLtdWasBackstageApplication in 7.06 seconds (JVM running for 8.252)
2018-07-05 19:18:23,858 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:18:23,858 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:18:23,901 - FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2018-07-05 19:18:23,931 - ===========进入拦截器==============
2018-07-05 19:18:23,969 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:18:23,969 - ===========请求时间:2018-07-05 19:18:23==========================
2018-07-05 19:18:23,969 - url=http://localhost:8081/login
2018-07-05 19:18:23,969 - method=GET
2018-07-05 19:18:23,969 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:23,969 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:18:23,970 - args:
2018-07-05 19:18:23,974 - =============结束请求时间:2018-07-05 19:18:23,耗时:0s======================
2018-07-05 19:18:23,974 - response=/login
2018-07-05 19:18:24,011 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:18:24,098 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:18:24,098 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:18:24,098 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:18:24,098 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:18:24,105 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:18:24,105 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:18:28,052 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:18:28,053 - ===========请求时间:2018-07-05 19:18:28==========================
2018-07-05 19:18:28,053 - url=http://localhost:8081/signIn
2018-07-05 19:18:28,053 - method=POST
2018-07-05 19:18:28,053 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:28,053 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:18:28,053 - args:userName=admin,password=123456,
2018-07-05 19:18:28,154 - {dataSource-1} inited
2018-07-05 19:18:28,693 - =============结束请求时间:2018-07-05 19:18:28,耗时:0s======================
2018-07-05 19:18:28,693 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:18:28, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:18:28,807 - ===========进入拦截器==============
2018-07-05 19:18:28,807 - http://localhost:8081/home
2018-07-05 19:18:28,865 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:18:28,866 - ===========请求时间:2018-07-05 19:18:28==========================
2018-07-05 19:18:28,866 - url=http://localhost:8081/home
2018-07-05 19:18:28,866 - method=GET
2018-07-05 19:18:28,866 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:28,866 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:18:28,866 - args:
2018-07-05 19:18:28,866 - =============结束请求时间:2018-07-05 19:18:28,耗时:0s======================
2018-07-05 19:18:28,866 - response=/home
2018-07-05 19:18:28,866 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:28,991 - ===========进入拦截器==============
2018-07-05 19:18:28,991 - http://localhost:8081/welcome
2018-07-05 19:18:28,997 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:18:28,997 - ===========请求时间:2018-07-05 19:18:28==========================
2018-07-05 19:18:28,997 - url=http://localhost:8081/welcome
2018-07-05 19:18:28,997 - method=GET
2018-07-05 19:18:28,997 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:28,997 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:18:28,997 - args:
2018-07-05 19:18:28,998 - =============结束请求时间:2018-07-05 19:18:28,耗时:0s======================
2018-07-05 19:18:28,998 - response=/welcome
2018-07-05 19:18:28,998 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:29,045 - ===========进入拦截器==============
2018-07-05 19:18:29,045 - http://localhost:8081/common/top
2018-07-05 19:18:29,046 - ===========进入拦截器==============
2018-07-05 19:18:29,046 - http://localhost:8081/common/left
2018-07-05 19:18:29,046 - ===========进入拦截器==============
2018-07-05 19:18:29,046 - http://localhost:8081/common/footer
2018-07-05 19:18:29,050 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:18:29,050 - ===========请求时间:2018-07-05 19:18:29==========================
2018-07-05 19:18:29,050 - url=http://localhost:8081/common/top
2018-07-05 19:18:29,050 - method=GET
2018-07-05 19:18:29,050 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:29,050 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:18:29,050 - args:
2018-07-05 19:18:29,050 - =============结束请求时间:2018-07-05 19:18:29,耗时:0s======================
2018-07-05 19:18:29,050 - response=/common/top
2018-07-05 19:18:29,050 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:29,057 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:18:29,057 - ===========请求时间:2018-07-05 19:18:29==========================
2018-07-05 19:18:29,057 - url=http://localhost:8081/common/left
2018-07-05 19:18:29,057 - method=GET
2018-07-05 19:18:29,057 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:29,057 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:18:29,057 - args:
2018-07-05 19:18:29,057 - =============结束请求时间:2018-07-05 19:18:29,耗时:0s======================
2018-07-05 19:18:29,057 - response=/common/left
2018-07-05 19:18:29,057 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:29,061 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:18:29,062 - ===========请求时间:2018-07-05 19:18:29==========================
2018-07-05 19:18:29,062 - url=http://localhost:8081/common/footer
2018-07-05 19:18:29,062 - method=GET
2018-07-05 19:18:29,062 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:29,062 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:18:29,062 - args:
2018-07-05 19:18:29,062 - =============结束请求时间:2018-07-05 19:18:29,耗时:0s======================
2018-07-05 19:18:29,062 - response=/common/footer
2018-07-05 19:18:29,062 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:29,122 - ===========进入拦截器==============
2018-07-05 19:18:29,122 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:18:29,131 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:18:29,131 - ===========请求时间:2018-07-05 19:18:29==========================
2018-07-05 19:18:29,131 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:18:29,131 - method=GET
2018-07-05 19:18:29,131 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:29,131 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:18:29,131 - args:roleId=1,
2018-07-05 19:18:29,181 - =============结束请求时间:2018-07-05 19:18:29,耗时:0s======================
2018-07-05 19:18:29,181 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:18:29,193 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:31,119 - ===========进入拦截器==============
2018-07-05 19:18:31,119 - http://localhost:8081/number-coin.html
2018-07-05 19:18:31,125 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:18:31,125 - ===========请求时间:2018-07-05 19:18:31==========================
2018-07-05 19:18:31,125 - url=http://localhost:8081/number-coin.html
2018-07-05 19:18:31,125 - method=GET
2018-07-05 19:18:31,125 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:31,125 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:18:31,125 - args:
2018-07-05 19:18:31,125 - =============结束请求时间:2018-07-05 19:18:31,耗时:0s======================
2018-07-05 19:18:31,125 - response=/number-coin
2018-07-05 19:18:31,126 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:31,322 - ===========进入拦截器==============
2018-07-05 19:18:31,322 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:18:31,345 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:18:31,345 - ===========请求时间:2018-07-05 19:18:31==========================
2018-07-05 19:18:31,345 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:18:31,345 - method=GET
2018-07-05 19:18:31,346 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:31,346 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:18:31,346 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:18:31,374 - =============结束请求时间:2018-07-05 19:18:31,耗时:0s======================
2018-07-05 19:18:31,375 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:18:31,384 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:35,083 - ===========进入拦截器==============
2018-07-05 19:18:35,084 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:18:35,090 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:18:35,090 - ===========请求时间:2018-07-05 19:18:35==========================
2018-07-05 19:18:35,091 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:18:35,091 - method=GET
2018-07-05 19:18:35,091 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:35,091 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:18:35,091 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:18:35,099 - =============结束请求时间:2018-07-05 19:18:35,耗时:0s======================
2018-07-05 19:18:35,099 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:18:35,101 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:18:38,409 - ===========进入拦截器==============
2018-07-05 19:18:38,409 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:18:38,414 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-05 19:18:38,414 - ===========请求时间:2018-07-05 19:18:38==========================
2018-07-05 19:18:38,415 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:18:38,415 - method=GET
2018-07-05 19:18:38,415 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:18:38,415 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-05 19:18:38,415 - args:wasType=BTC,
2018-07-05 19:18:38,931 - =============结束请求时间:2018-07-05 19:18:38,耗时:0s======================
2018-07-05 19:18:38,931 - response=Result(code=200, msg=成功, data=, page=null, totalCount=null)
2018-07-05 19:18:38,934 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:21,992 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12304 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:19:21,996 - No active profile set, falling back to default profiles: default
2018-07-05 19:19:22,184 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:19:22,267 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4a62cb85: startup date [Thu Jul 05 19:19:22 CST 2018]; root of context hierarchy
2018-07-05 19:19:23,670 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,671 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,671 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,671 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,671 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,672 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:19:23,672 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:19:23,673 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:19:24,936 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:19:24,948 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:19:24,968 - Starting service [Tomcat]
2018-07-05 19:19:24,970 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:19:25,090 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:19:25,091 - Root WebApplicationContext: initialization completed in 2824 ms
2018-07-05 19:19:25,330 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:19:25,334 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:19:25,334 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:19:25,334 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:19:25,334 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:19:25,334 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:19:26,867 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4a62cb85: startup date [Thu Jul 05 19:19:22 CST 2018]; root of context hierarchy
2018-07-05 19:19:27,032 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:19:27,045 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:19:27,046 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:19:27,046 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:19:27,046 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:19:27,046 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:19:27,046 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:19:27,046 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:19:27,046 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:19:27,047 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:19:27,047 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:19:27,047 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:19:27,047 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:19:27,047 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:19:27,047 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:19:27,047 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:19:27,047 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:19:27,047 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:19:27,048 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:19:27,048 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:19:27,048 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:19:27,048 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:19:27,049 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:19:27,050 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:19:27,051 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:19:27,052 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:19:27,052 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:19:27,053 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:19:27,053 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:19:27,053 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:19:27,053 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:19:27,053 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:19:27,053 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:19:27,053 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:19:27,054 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:19:27,055 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:19:27,055 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:19:27,055 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:19:27,056 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:19:27,056 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:19:27,056 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:19:27,056 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:19:27,056 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:19:27,056 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:19:27,057 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:19:27,057 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:19:27,058 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:19:27,058 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:19:27,059 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:19:27,059 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:19:27,059 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:19:27,059 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:19:27,059 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:19:27,060 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:19:27,061 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:19:27,063 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:19:27,064 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:19:27,132 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:19:27,132 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:19:27,159 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:19:27,191 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:19:27,987 - LiveReload server is running on port 35729
2018-07-05 19:19:28,114 - Registering beans for JMX exposure on startup
2018-07-05 19:19:28,115 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:19:28,121 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:19:28,133 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:19:28,163 - Using a shared selector for servlet write/read
2018-07-05 19:19:28,181 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:19:28,189 - Started FqLtdWasBackstageApplication in 7.018 seconds (JVM running for 8.202)
2018-07-05 19:19:33,020 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:19:33,020 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:19:33,062 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 19:19:33,091 - ===========进入拦截器==============
2018-07-05 19:19:33,125 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:19:33,125 - ===========请求时间:2018-07-05 19:19:33==========================
2018-07-05 19:19:33,125 - url=http://localhost:8081/login
2018-07-05 19:19:33,125 - method=GET
2018-07-05 19:19:33,125 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:33,125 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:19:33,125 - args:
2018-07-05 19:19:33,129 - =============结束请求时间:2018-07-05 19:19:33,耗时:0s======================
2018-07-05 19:19:33,130 - response=/login
2018-07-05 19:19:33,161 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:19:33,228 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:19:33,228 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:19:33,228 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:19:33,228 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:19:33,235 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:19:33,235 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:19:37,867 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:19:37,867 - ===========请求时间:2018-07-05 19:19:37==========================
2018-07-05 19:19:37,867 - url=http://localhost:8081/signIn
2018-07-05 19:19:37,868 - method=POST
2018-07-05 19:19:37,868 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:37,868 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:19:37,868 - args:userName=admin,password=123456,
2018-07-05 19:19:37,983 - {dataSource-1} inited
2018-07-05 19:19:38,450 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,450 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:19:38, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:19:38,568 - ===========进入拦截器==============
2018-07-05 19:19:38,568 - http://localhost:8081/home
2018-07-05 19:19:38,573 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:19:38,574 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,574 - url=http://localhost:8081/home
2018-07-05 19:19:38,574 - method=GET
2018-07-05 19:19:38,574 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,574 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:19:38,574 - args:
2018-07-05 19:19:38,574 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,574 - response=/home
2018-07-05 19:19:38,574 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:38,668 - ===========进入拦截器==============
2018-07-05 19:19:38,669 - http://localhost:8081/welcome
2018-07-05 19:19:38,674 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:19:38,674 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,674 - url=http://localhost:8081/welcome
2018-07-05 19:19:38,674 - method=GET
2018-07-05 19:19:38,674 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,674 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:19:38,674 - args:
2018-07-05 19:19:38,674 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,674 - response=/welcome
2018-07-05 19:19:38,674 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:38,735 - ===========进入拦截器==============
2018-07-05 19:19:38,735 - http://localhost:8081/common/top
2018-07-05 19:19:38,737 - ===========进入拦截器==============
2018-07-05 19:19:38,737 - http://localhost:8081/common/left
2018-07-05 19:19:38,740 - ===========进入拦截器==============
2018-07-05 19:19:38,740 - http://localhost:8081/common/footer
2018-07-05 19:19:38,742 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:19:38,742 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,742 - url=http://localhost:8081/common/top
2018-07-05 19:19:38,742 - method=GET
2018-07-05 19:19:38,742 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,742 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:19:38,742 - args:
2018-07-05 19:19:38,742 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,742 - response=/common/top
2018-07-05 19:19:38,742 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:38,748 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:19:38,748 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,748 - url=http://localhost:8081/common/left
2018-07-05 19:19:38,748 - method=GET
2018-07-05 19:19:38,748 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,748 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:19:38,748 - args:
2018-07-05 19:19:38,748 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,748 - response=/common/left
2018-07-05 19:19:38,748 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:38,755 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:19:38,755 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,755 - url=http://localhost:8081/common/footer
2018-07-05 19:19:38,756 - method=GET
2018-07-05 19:19:38,756 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,756 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:19:38,756 - args:
2018-07-05 19:19:38,756 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,756 - response=/common/footer
2018-07-05 19:19:38,756 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:38,795 - ===========进入拦截器==============
2018-07-05 19:19:38,796 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:19:38,812 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:19:38,812 - ===========请求时间:2018-07-05 19:19:38==========================
2018-07-05 19:19:38,812 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:19:38,812 - method=GET
2018-07-05 19:19:38,812 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:38,812 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:19:38,813 - args:roleId=1,
2018-07-05 19:19:38,886 - =============结束请求时间:2018-07-05 19:19:38,耗时:0s======================
2018-07-05 19:19:38,887 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:19:38,906 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:41,352 - ===========进入拦截器==============
2018-07-05 19:19:41,352 - http://localhost:8081/number-coin.html
2018-07-05 19:19:41,359 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:19:41,359 - ===========请求时间:2018-07-05 19:19:41==========================
2018-07-05 19:19:41,359 - url=http://localhost:8081/number-coin.html
2018-07-05 19:19:41,359 - method=GET
2018-07-05 19:19:41,359 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:41,359 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:19:41,359 - args:
2018-07-05 19:19:41,359 - =============结束请求时间:2018-07-05 19:19:41,耗时:0s======================
2018-07-05 19:19:41,359 - response=/number-coin
2018-07-05 19:19:41,359 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:41,530 - ===========进入拦截器==============
2018-07-05 19:19:41,530 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:19:41,552 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:19:41,552 - ===========请求时间:2018-07-05 19:19:41==========================
2018-07-05 19:19:41,552 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:19:41,552 - method=GET
2018-07-05 19:19:41,552 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:41,552 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:19:41,552 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:19:41,576 - =============结束请求时间:2018-07-05 19:19:41,耗时:0s======================
2018-07-05 19:19:41,577 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:19:41,584 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:44,131 - ===========进入拦截器==============
2018-07-05 19:19:44,131 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:19:44,138 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:19:44,138 - ===========请求时间:2018-07-05 19:19:44==========================
2018-07-05 19:19:44,138 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:19:44,138 - method=GET
2018-07-05 19:19:44,138 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:44,138 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:19:44,138 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:19:44,162 - =============结束请求时间:2018-07-05 19:19:44,耗时:0s======================
2018-07-05 19:19:44,162 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:19:44,163 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:19:48,457 - ===========进入拦截器==============
2018-07-05 19:19:48,457 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:19:48,464 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-05 19:19:48,464 - ===========请求时间:2018-07-05 19:19:48==========================
2018-07-05 19:19:48,464 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:19:48,464 - method=GET
2018-07-05 19:19:48,464 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:19:48,464 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-05 19:19:48,464 - args:wasType=BTC,
2018-07-05 19:19:49,013 - =============结束请求时间:2018-07-05 19:19:49,耗时:0s======================
2018-07-05 19:19:49,013 - response=Result(code=200, msg=成功, data=, page=null, totalCount=null)
2018-07-05 19:19:49,016 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:20:46,248 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 9276 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:20:46,251 - No active profile set, falling back to default profiles: default
2018-07-05 19:20:46,420 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:20:46,469 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 19:20:46 CST 2018]; root of context hierarchy
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:20:47,258 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:20:47,258 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:20:48,252 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:20:48,264 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:20:48,273 - Starting service [Tomcat]
2018-07-05 19:20:48,274 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:20:48,384 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:20:48,384 - Root WebApplicationContext: initialization completed in 1915 ms
2018-07-05 19:20:48,620 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:20:48,624 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:20:48,625 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:20:48,625 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:20:48,625 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:20:48,625 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:20:50,120 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@59147dd0: startup date [Thu Jul 05 19:20:46 CST 2018]; root of context hierarchy
2018-07-05 19:20:50,212 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:20:50,223 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:20:50,223 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:20:50,223 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:20:50,223 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:20:50,223 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:20:50,223 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:20:50,224 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:20:50,224 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:20:50,224 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:20:50,224 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:20:50,224 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:20:50,224 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:20:50,224 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:20:50,224 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:20:50,225 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:20:50,225 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:20:50,225 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:20:50,225 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:20:50,225 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:20:50,225 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:20:50,225 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:20:50,225 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:20:50,227 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:20:50,227 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:20:50,229 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:20:50,229 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:20:50,229 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:20:50,229 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:20:50,230 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:20:50,231 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:20:50,231 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:20:50,231 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:20:50,231 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:20:50,232 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:20:50,232 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:20:50,233 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:20:50,233 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:20:50,234 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:20:50,234 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:20:50,234 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:20:50,234 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:20:50,235 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:20:50,235 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:20:50,235 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:20:50,235 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:20:50,236 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:20:50,237 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:20:50,237 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:20:50,237 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:20:50,237 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:20:50,237 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:20:50,237 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:20:50,238 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:20:50,238 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:20:50,238 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:20:50,239 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:20:50,239 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:20:50,239 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:20:50,239 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:20:50,240 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:20:50,241 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:20:50,292 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:20:50,292 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:20:50,317 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:20:50,353 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:20:51,180 - LiveReload server is running on port 35729
2018-07-05 19:20:51,307 - Registering beans for JMX exposure on startup
2018-07-05 19:20:51,309 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:20:51,315 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:20:51,328 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:20:51,360 - Using a shared selector for servlet write/read
2018-07-05 19:20:51,378 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:20:51,386 - Started FqLtdWasBackstageApplication in 5.879 seconds (JVM running for 7.042)
2018-07-05 19:23:34,664 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:23:34,664 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:23:34,706 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 19:23:34,735 - ===========进入拦截器==============
2018-07-05 19:23:34,771 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:23:34,772 - ===========请求时间:2018-07-05 19:23:34==========================
2018-07-05 19:23:34,772 - url=http://localhost:8081/login
2018-07-05 19:23:34,772 - method=GET
2018-07-05 19:23:34,772 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:23:34,772 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:23:34,772 - args:
2018-07-05 19:23:34,776 - =============结束请求时间:2018-07-05 19:23:34,耗时:0s======================
2018-07-05 19:23:34,776 - response=/login
2018-07-05 19:23:34,813 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:23:34,893 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:23:34,893 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:23:34,893 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:23:34,893 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:23:34,899 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:23:34,899 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:24:02,929 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 19860 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:24:02,931 - No active profile set, falling back to default profiles: default
2018-07-05 19:24:03,183 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:24:03,195 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53156879: startup date [Thu Jul 05 19:24:03 CST 2018]; root of context hierarchy
2018-07-05 19:24:04,410 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,411 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,412 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,412 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,412 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,412 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:24:04,412 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:24:04,413 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:24:05,823 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:24:05,835 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:24:05,848 - Starting service [Tomcat]
2018-07-05 19:24:05,848 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:24:05,961 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:24:05,961 - Root WebApplicationContext: initialization completed in 2766 ms
2018-07-05 19:24:06,203 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:24:06,207 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:24:06,207 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:24:06,207 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:24:06,207 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:24:06,207 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:24:07,840 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@53156879: startup date [Thu Jul 05 19:24:03 CST 2018]; root of context hierarchy
2018-07-05 19:24:07,933 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:24:07,943 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:24:07,943 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:24:07,943 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:24:07,943 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:24:07,943 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:24:07,944 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:24:07,944 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:24:07,944 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:24:07,944 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:24:07,944 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:24:07,944 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:24:07,944 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:24:07,944 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:24:07,945 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:24:07,945 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:24:07,945 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:24:07,945 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:24:07,945 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:24:07,945 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:24:07,945 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:24:07,945 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:24:07,945 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:24:07,948 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:24:07,948 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:24:07,949 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:24:07,950 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:24:07,950 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:24:07,950 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:24:07,950 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:24:07,950 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:24:07,950 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:24:07,950 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:24:07,951 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:24:07,952 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:24:07,952 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:24:07,952 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:24:07,952 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:24:07,953 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:24:07,953 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:24:07,953 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:24:07,954 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:24:07,954 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:24:07,954 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:24:07,954 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:24:07,954 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:24:07,955 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:24:07,956 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:24:07,956 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:24:07,956 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:24:07,956 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:24:07,956 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:24:07,956 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:24:07,957 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:24:07,957 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:24:07,957 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:24:07,957 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:24:07,957 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:24:07,958 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:24:07,958 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:24:07,959 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:24:07,959 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:24:08,010 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:24:08,010 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:24:08,039 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:24:08,073 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:24:08,907 - LiveReload server is running on port 35729
2018-07-05 19:24:09,033 - Registering beans for JMX exposure on startup
2018-07-05 19:24:09,036 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:24:09,045 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:24:09,058 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:24:09,089 - Using a shared selector for servlet write/read
2018-07-05 19:24:09,111 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:24:09,121 - Started FqLtdWasBackstageApplication in 7.032 seconds (JVM running for 8.222)
2018-07-05 19:24:12,957 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-07-05 19:24:12,957 - FrameworkServlet 'dispatcherServlet': initialization started
2018-07-05 19:24:12,999 - FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2018-07-05 19:24:13,029 - ===========进入拦截器==============
2018-07-05 19:24:13,073 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.login============
2018-07-05 19:24:13,073 - ===========请求时间:2018-07-05 19:24:13==========================
2018-07-05 19:24:13,073 - url=http://localhost:8081/login
2018-07-05 19:24:13,074 - method=GET
2018-07-05 19:24:13,074 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:13,074 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.login
2018-07-05 19:24:13,074 - args:
2018-07-05 19:24:13,077 - =============结束请求时间:2018-07-05 19:24:13,耗时:0s======================
2018-07-05 19:24:13,078 - response=/login
2018-07-05 19:24:13,112 - [THYMELEAF] INITIALIZING TEMPLATE ENGINE
2018-07-05 19:24:13,198 - [THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2018-07-05 19:24:13,199 - [THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2018-07-05 19:24:13,199 - [THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2018-07-05 19:24:13,199 - [THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2018-07-05 19:24:13,205 - [THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 2]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 2]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2018-07-05 19:24:13,205 - [THYMELEAF] TEMPLATE ENGINE INITIALIZED
2018-07-05 19:24:17,138 - ===========开始请求com.fq.fqltdwasbackstage.controller.LoginController.login============
2018-07-05 19:24:17,138 - ===========请求时间:2018-07-05 19:24:17==========================
2018-07-05 19:24:17,138 - url=http://localhost:8081/signIn
2018-07-05 19:24:17,138 - method=POST
2018-07-05 19:24:17,138 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:17,138 - class_method=com.fq.fqltdwasbackstage.controller.LoginController.login
2018-07-05 19:24:17,138 - args:userName=admin,password=123456,
2018-07-05 19:24:17,234 - {dataSource-1} inited
2018-07-05 19:24:17,755 - =============结束请求时间:2018-07-05 19:24:17,耗时:0s======================
2018-07-05 19:24:17,756 - response=Result(code=200, msg=成功, data={user=User(gid=1, userName=admin, password=98F6FAD709E28617CF0421CC885C484F, tel=15215215962, email=liuyingjie@fengqun.ltd, roleId=1, roleName=超级管理员, loginTime=2018-07-05 19:24:17, version=9, createTime=2018-07-03 19:02:31.0, updateTime=2018-07-04 18:26:28.0, status=0)}, page=null, totalCount=null)
2018-07-05 19:24:17,852 - ===========进入拦截器==============
2018-07-05 19:24:17,855 - http://localhost:8081/home
2018-07-05 19:24:17,866 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.home============
2018-07-05 19:24:17,866 - ===========请求时间:2018-07-05 19:24:17==========================
2018-07-05 19:24:17,866 - url=http://localhost:8081/home
2018-07-05 19:24:17,866 - method=GET
2018-07-05 19:24:17,866 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:17,866 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.home
2018-07-05 19:24:17,866 - args:
2018-07-05 19:24:17,866 - =============结束请求时间:2018-07-05 19:24:17,耗时:0s======================
2018-07-05 19:24:17,866 - response=/home
2018-07-05 19:24:17,867 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:17,978 - ===========进入拦截器==============
2018-07-05 19:24:17,978 - http://localhost:8081/welcome
2018-07-05 19:24:17,986 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.welcome============
2018-07-05 19:24:17,986 - ===========请求时间:2018-07-05 19:24:17==========================
2018-07-05 19:24:17,986 - url=http://localhost:8081/welcome
2018-07-05 19:24:17,986 - method=GET
2018-07-05 19:24:17,986 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:17,986 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.welcome
2018-07-05 19:24:17,986 - args:
2018-07-05 19:24:17,986 - =============结束请求时间:2018-07-05 19:24:17,耗时:0s======================
2018-07-05 19:24:17,987 - response=/welcome
2018-07-05 19:24:17,987 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:18,044 - ===========进入拦截器==============
2018-07-05 19:24:18,044 - ===========进入拦截器==============
2018-07-05 19:24:18,044 - http://localhost:8081/common/top
2018-07-05 19:24:18,044 - http://localhost:8081/common/left
2018-07-05 19:24:18,045 - ===========进入拦截器==============
2018-07-05 19:24:18,045 - http://localhost:8081/common/footer
2018-07-05 19:24:18,054 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.left============
2018-07-05 19:24:18,054 - ===========请求时间:2018-07-05 19:24:18==========================
2018-07-05 19:24:18,054 - url=http://localhost:8081/common/left
2018-07-05 19:24:18,054 - method=GET
2018-07-05 19:24:18,054 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:18,054 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.left
2018-07-05 19:24:18,054 - args:
2018-07-05 19:24:18,054 - =============结束请求时间:2018-07-05 19:24:18,耗时:0s======================
2018-07-05 19:24:18,055 - response=/common/left
2018-07-05 19:24:18,055 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:18,078 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.top============
2018-07-05 19:24:18,078 - ===========请求时间:2018-07-05 19:24:18==========================
2018-07-05 19:24:18,078 - url=http://localhost:8081/common/top
2018-07-05 19:24:18,078 - method=GET
2018-07-05 19:24:18,078 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:18,078 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.top
2018-07-05 19:24:18,078 - args:
2018-07-05 19:24:18,078 - =============结束请求时间:2018-07-05 19:24:18,耗时:0s======================
2018-07-05 19:24:18,078 - response=/common/top
2018-07-05 19:24:18,079 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:18,083 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.footer============
2018-07-05 19:24:18,083 - ===========请求时间:2018-07-05 19:24:18==========================
2018-07-05 19:24:18,083 - url=http://localhost:8081/common/footer
2018-07-05 19:24:18,083 - method=GET
2018-07-05 19:24:18,083 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:18,083 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.footer
2018-07-05 19:24:18,084 - args:
2018-07-05 19:24:18,084 - =============结束请求时间:2018-07-05 19:24:18,耗时:0s======================
2018-07-05 19:24:18,084 - response=/common/footer
2018-07-05 19:24:18,084 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:18,097 - ===========进入拦截器==============
2018-07-05 19:24:18,097 - http://localhost:8081/menu/findMenuByRole
2018-07-05 19:24:18,102 - ===========开始请求com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole============
2018-07-05 19:24:18,103 - ===========请求时间:2018-07-05 19:24:18==========================
2018-07-05 19:24:18,103 - url=http://localhost:8081/menu/findMenuByRole
2018-07-05 19:24:18,103 - method=GET
2018-07-05 19:24:18,103 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:18,103 - class_method=com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole
2018-07-05 19:24:18,103 - args:roleId=1,
2018-07-05 19:24:18,157 - =============结束请求时间:2018-07-05 19:24:18,耗时:0s======================
2018-07-05 19:24:18,157 - response=Result(code=200, msg=成功, data=[MenuList(gid=1, icon=, menuName=数字货币管理, url=--, menuList=[MenuList(gid=25, icon=, menuName=数字货币管理;0, url=/number-coin.html, menuList=null)]), MenuList(gid=3, icon=, menuName=数字货币监控及预警, url=--, menuList=[MenuList(gid=4, icon=, menuName=数字货币监控及预警;0, url=/control-waring.html, menuList=null)]), MenuList(gid=5, icon=, menuName=地址池管理, url=--, menuList=[MenuList(gid=24, icon=, menuName=地址池管理;0, url=/address-pool.html, menuList=null)]), MenuList(gid=6, icon=, menuName=平台充值管理, url=--, menuList=[MenuList(gid=14, icon=, menuName=平台充值管理;0, url=/recharge-control.html, menuList=null)]), MenuList(gid=7, icon=, menuName=平台提币管理, url=--, menuList=[MenuList(gid=23, icon=, menuName=平台提币管理;0, url=/withdraw-coin.html, menuList=null)]), MenuList(gid=8, icon=, menuName=系统管理, url=--, menuList=[MenuList(gid=9, icon=, menuName=用户管理;0, url=/user.html, menuList=null), MenuList(gid=10, icon=, menuName=角色管理;0, url=/role.html, menuList=null), MenuList(gid=11, icon=, menuName=菜单管理;0, url=/menu.html, menuList=null), MenuList(gid=12, icon=, menuName=图标管理;0, url=/icon.html, menuList=null), MenuList(gid=26, icon=, menuName=新增用户;1, url=user/addUser, menuList=null), MenuList(gid=44, icon=, menuName=编辑用户;1, url=user/updateUser, menuList=null), MenuList(gid=45, icon=, menuName=查询用户;1, url=user/findAllUser, menuList=null), MenuList(gid=46, icon=, menuName=添加角色;1, url=role/addRole, menuList=null), MenuList(gid=48, icon=, menuName=编辑角色;1, url=role/updateRole, menuList=null), MenuList(gid=49, icon=, menuName=编辑权限;1, url=role/updateRoleMenu, menuList=null), MenuList(gid=50, icon=, menuName=查询角色;1, url=role/findAllRole, menuList=null), MenuList(gid=51, icon=, menuName=添加菜单;1, url=menu/addMenu, menuList=null), MenuList(gid=52, icon=, menuName=编辑菜单;1, url=menu/editMenu, menuList=null), MenuList(gid=54, icon=, menuName=菜单列表;1, url=menu/findAllMenu, menuList=null), MenuList(gid=55, icon=, menuName=添加图标;1, url=menu/addIcon, menuList=null), MenuList(gid=56, icon=, menuName=图标列表;1, url=menu/findIconList, menuList=null)])], page=null, totalCount=null)
2018-07-05 19:24:18,168 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:20,247 - ===========进入拦截器==============
2018-07-05 19:24:20,248 - http://localhost:8081/number-coin.html
2018-07-05 19:24:20,260 - ===========开始请求com.fq.fqltdwasbackstage.controller.IndexController.numberCoin============
2018-07-05 19:24:20,260 - ===========请求时间:2018-07-05 19:24:20==========================
2018-07-05 19:24:20,260 - url=http://localhost:8081/number-coin.html
2018-07-05 19:24:20,260 - method=GET
2018-07-05 19:24:20,260 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:20,260 - class_method=com.fq.fqltdwasbackstage.controller.IndexController.numberCoin
2018-07-05 19:24:20,261 - args:
2018-07-05 19:24:20,261 - =============结束请求时间:2018-07-05 19:24:20,耗时:0s======================
2018-07-05 19:24:20,261 - response=/number-coin
2018-07-05 19:24:20,261 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:20,440 - ===========进入拦截器==============
2018-07-05 19:24:20,440 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:24:20,462 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:24:20,462 - ===========请求时间:2018-07-05 19:24:20==========================
2018-07-05 19:24:20,462 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:24:20,462 - method=GET
2018-07-05 19:24:20,462 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:20,462 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:24:20,462 - args:pageNumber=1,pageSize=10,wasId=,wasType=,
2018-07-05 19:24:20,479 - =============结束请求时间:2018-07-05 19:24:20,耗时:0s======================
2018-07-05 19:24:20,480 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=16, wasBaseCurrency=BASE_BTC_, wasType=ADA, wasBeginBlock=0, wasBlockNum=100, wasGateWay=ADA, wasTokenAddress=null, wasMinConfirm=9, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=19, wasBaseCurrency=ETH/token, wasType=AION, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x4CEdA7906a5Ed2179785Cd3A40A69ee8bc99C466, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=20, wasBaseCurrency=ETH/token, wasType=BAT, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0x0d8775f648430679a709e98d2b0cb6250d2887ef, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=17, wasBaseCurrency=BASE_BTS_, wasType=BTS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BTS, wasTokenAddress=null, wasMinConfirm=1, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=30, wasBaseCurrency=BUC, wasType=BUC, wasBeginBlock=0, wasBlockNum=100, wasGateWay=BUC, wasTokenAddress=null, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.07.05新增，最小确认数待确认, wasCreateTime=Thu Jul 05 11:17:37 CST 2018, wasLastTime=Thu Jul 05 11:17:38 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=6, wasBaseCurrency=BTC, wasType=DCR, wasBeginBlock=323553, wasBlockNum=100, wasGateWay=DCR, wasTokenAddress=, wasMinConfirm=9, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Fri Jun 15 02:21:31 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=21, wasBaseCurrency=ETH/token, wasType=ELF, wasBeginBlock=1100, wasBlockNum=100, wasGateWay=ETH/token, wasTokenAddress=0xbf2179859fc6d5bee9bf9158632dc51678a4100e, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=50, wasZeroGasLimit=210000, wasTransferGasPrice=null, wasTransferGasLimit=50, wasRemark=2018.06.14维护was数据字典表, wasCreateTime=Thu Jun 14 02:20:34 CST 2018, wasLastTime=Fri Jun 15 09:21:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=14, wasBaseCurrency=BASE_BTC_, wasType=EOS, wasBeginBlock=0, wasBlockNum=100, wasGateWay=EOS, wasTokenAddress=null, wasMinConfirm=10, wasStatus=0, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=), WasDataDictionary(wasId=7, wasBaseCurrency=ETH, wasType=ETC, wasBeginBlock=2279518, wasBlockNum=100, wasGateWay=ETC, wasTokenAddress=, wasMinConfirm=58, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Tue Jun 19 08:30:00 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=30, totalPage=3), totalCount=30)
2018-07-05 19:24:20,489 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:22,779 - ===========进入拦截器==============
2018-07-05 19:24:22,779 - http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:24:22,786 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list============
2018-07-05 19:24:22,786 - ===========请求时间:2018-07-05 19:24:22==========================
2018-07-05 19:24:22,786 - url=http://localhost:8081/generator/wasdatadictionary/list
2018-07-05 19:24:22,786 - method=GET
2018-07-05 19:24:22,786 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:22,786 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list
2018-07-05 19:24:22,786 - args:pageNumber=1,pageSize=10,wasId=1,wasType=,
2018-07-05 19:24:22,795 - =============结束请求时间:2018-07-05 19:24:22,耗时:0s======================
2018-07-05 19:24:22,795 - response=Result(code=200, msg=成功, data=[WasDataDictionary(wasId=1, wasBaseCurrency=BTC, wasType=BTC, wasBeginBlock=424, wasBlockNum=100, wasGateWay=BTC, wasTokenAddress=, wasMinConfirm=1, wasStatus=1, wasPrecision=38, wasZeroGasPrice=null, wasZeroGasLimit=null, wasTransferGasPrice=null, wasTransferGasLimit=null, wasRemark=2018.06.11维护was数据字典表, wasCreateTime=Mon Jun 11 10:56:07 CST 2018, wasLastTime=Mon Jun 11 10:56:09 CST 2018, wasCoinIntroduceUrl=, wasBlockBrowsersUrl=)], page=Pages(first=false, last=false, pageSize=10, pageNumber=1, totalCount=1, totalPage=1), totalCount=1)
2018-07-05 19:24:22,796 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:24:26,455 - ===========进入拦截器==============
2018-07-05 19:24:26,455 - http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:24:26,469 - ===========开始请求com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight============
2018-07-05 19:24:26,469 - ===========请求时间:2018-07-05 19:24:26==========================
2018-07-05 19:24:26,469 - url=http://localhost:8081/generator/wasdatadictionary/getNewHeight
2018-07-05 19:24:26,469 - method=GET
2018-07-05 19:24:26,469 - ip=0:0:0:0:0:0:0:1
2018-07-05 19:24:26,469 - class_method=com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight
2018-07-05 19:24:26,469 - args:wasType=BTC,
2018-07-05 19:25:56,868 - =============结束请求时间:2018-07-05 19:25:56,耗时:90s======================
2018-07-05 19:25:56,868 - response=Result(code=200, msg=成功, data=, page=null, totalCount=null)
2018-07-05 19:25:56,876 - >>>MyInterceptor1>>>>>>>请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）
2018-07-05 19:26:50,724 - Starting FqLtdWasBackstageApplication on DESKTOP-8KVBGHI with PID 12196 (D:\project\fq-ltd-was-backstage\target\classes started by fengqun in D:\project\fq-ltd-was-backstage)
2018-07-05 19:26:50,726 - No active profile set, falling back to default profiles: default
2018-07-05 19:26:50,921 - HV000001: Hibernate Validator 5.3.6.Final
2018-07-05 19:26:51,009 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18138479: startup date [Thu Jul 05 19:26:51 CST 2018]; root of context hierarchy
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'menuMapper' and 'com.fq.fqltdwasbackstage.mapper.MenuMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'projectMapper' and 'com.fq.fqltdwasbackstage.mapper.ProjectMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'roleMapper' and 'com.fq.fqltdwasbackstage.mapper.RoleMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'sysGeneratorMapper' and 'com.fq.fqltdwasbackstage.mapper.SysGeneratorMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'userMapper' and 'com.fq.fqltdwasbackstage.mapper.UserMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - Skipping MapperFactoryBean with name 'wasDataDictionaryMapper' and 'com.fq.fqltdwasbackstage.mapper.WasDataDictionaryMapper' mapperInterface. Bean already defined with the same name!
2018-07-05 19:26:52,346 - No MyBatis mapper was found in '[com.fq.fqltdwasbackstage.mapper]' package. Please check your configuration.
2018-07-05 19:26:52,346 - Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
2018-07-05 19:26:53,436 - Tomcat initialized with port(s): 8081 (http)
2018-07-05 19:26:53,448 - Initializing ProtocolHandler ["http-nio-8081"]
2018-07-05 19:26:53,457 - Starting service [Tomcat]
2018-07-05 19:26:53,457 - Starting Servlet Engine: Apache Tomcat/8.5.31
2018-07-05 19:26:53,568 - Initializing Spring embedded WebApplicationContext
2018-07-05 19:26:53,568 - Root WebApplicationContext: initialization completed in 2559 ms
2018-07-05 19:26:53,813 - Mapping servlet: 'dispatcherServlet' to [/]
2018-07-05 19:26:53,817 - Mapping filter: 'characterEncodingFilter' to: [/*]
2018-07-05 19:26:53,818 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-07-05 19:26:53,818 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-07-05 19:26:53,818 - Mapping filter: 'requestContextFilter' to: [/*]
2018-07-05 19:26:53,818 - Mapping filter: 'originFilter' to: [/*]
2018-07-05 19:26:55,322 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@18138479: startup date [Thu Jul 05 19:26:51 CST 2018]; root of context hierarchy
2018-07-05 19:26:55,423 - Mapped "{[/excel/toExcel]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.InputStreamResource> com.fq.fqltdwasbackstage.controller.ExcelController.toExcel(com.fq.fqltdwasbackstage.domain.WasDataDictionary) throws java.io.IOException
2018-07-05 19:26:55,433 - Mapped "{[/errorpage/500],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.error()
2018-07-05 19:26:55,433 - Mapped "{[/user-info],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userInfo()
2018-07-05 19:26:55,433 - Mapped "{[/common/left],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.left()
2018-07-05 19:26:55,434 - Mapped "{[/generator],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.generator()
2018-07-05 19:26:55,434 - Mapped "{[/user],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.user()
2018-07-05 19:26:55,434 - Mapped "{[/common/top],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.top()
2018-07-05 19:26:55,434 - Mapped "{[/common/footer],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.footer()
2018-07-05 19:26:55,434 - Mapped "{[/home],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.home()
2018-07-05 19:26:55,434 - Mapped "{[/role],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.role()
2018-07-05 19:26:55,434 - Mapped "{[/recharge-control],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.rechargeControl()
2018-07-05 19:26:55,434 - Mapped "{[/withdraw-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.withdrawCoin()
2018-07-05 19:26:55,435 - Mapped "{[/errorpage/404],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.notFound()
2018-07-05 19:26:55,435 - Mapped "{[/login],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.login()
2018-07-05 19:26:55,435 - Mapped "{[/welcome],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.welcome()
2018-07-05 19:26:55,435 - Mapped "{[/number-coin-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoinAdd()
2018-07-05 19:26:55,435 - Mapped "{[/control-waring],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.controlWaring()
2018-07-05 19:26:55,435 - Mapped "{[/address-pool],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.addressPool()
2018-07-05 19:26:55,435 - Mapped "{[/number-coin],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.numberCoin()
2018-07-05 19:26:55,435 - Mapped "{[/menu],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.menu()
2018-07-05 19:26:55,436 - Mapped "{[/icon],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.icon()
2018-07-05 19:26:55,436 - Mapped "{[/user-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.userAdd()
2018-07-05 19:26:55,436 - Mapped "{[/role-add],methods=[GET]}" onto public java.lang.String com.fq.fqltdwasbackstage.controller.IndexController.roleAdd()
2018-07-05 19:26:55,438 - Mapped "{[/signIn],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.login(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)
2018-07-05 19:26:55,439 - Mapped "{[/signOut],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.LoginController.loginOut(java.lang.String)
2018-07-05 19:26:55,440 - Mapped "{[/menu/findMenuByRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findMenuByRole(java.lang.Long)
2018-07-05 19:26:55,441 - Mapped "{[/menu/editMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.editMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:26:55,441 - Mapped "{[/menu/addIcon],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addIcon(java.lang.String,java.lang.String)
2018-07-05 19:26:55,441 - Mapped "{[/menu/findById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findById(java.lang.Long)
2018-07-05 19:26:55,441 - Mapped "{[/menu/findIconList],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findIconList()
2018-07-05 19:26:55,441 - Mapped "{[/menu/findAllMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findAllMenu()
2018-07-05 19:26:55,441 - Mapped "{[/menu/findChildMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.findChildMenu(java.lang.String)
2018-07-05 19:26:55,441 - Mapped "{[/menu/addMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.addMenu(com.fq.fqltdwasbackstage.domain.Menu)
2018-07-05 19:26:55,442 - Mapped "{[/menu/delMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.MenuController.delMenu(java.lang.Long)
2018-07-05 19:26:55,442 - Mapped "{[/project/addProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.addProject(java.lang.String,java.lang.String)
2018-07-05 19:26:55,443 - Mapped "{[/project/updateProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.updateProject(com.fq.fqltdwasbackstage.domain.Project)
2018-07-05 19:26:55,443 - Mapped "{[/project/findAllProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.findAllProject(java.lang.String)
2018-07-05 19:26:55,443 - Mapped "{[/project/deleteProject],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.ProjectController.deleteProject(java.lang.Long)
2018-07-05 19:26:55,444 - Mapped "{[/role/addRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.addRole(com.fq.fqltdwasbackstage.domain.Role,java.lang.String)
2018-07-05 19:26:55,444 - Mapped "{[/role/findRoleById],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findRoleById(java.lang.Long)
2018-07-05 19:26:55,444 - Mapped "{[/role/updateRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRole(com.fq.fqltdwasbackstage.domain.Role)
2018-07-05 19:26:55,444 - Mapped "{[/role/updateRoleMenu],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.updateRomeMenu(com.fq.fqltdwasbackstage.domain.Role,java.lang.String,java.lang.String)
2018-07-05 19:26:55,444 - Mapped "{[/role/findAllRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.findAllRole(java.lang.String)
2018-07-05 19:26:55,445 - Mapped "{[/role/deleteRole],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.RoleController.deleteRole(java.lang.Long)
2018-07-05 19:26:55,445 - Mapped "{[/sys/generator/list]}" onto public com.fq.fqltdwasbackstage.utils.R com.fq.fqltdwasbackstage.controller.SysGeneratorController.list(java.util.Map<java.lang.String, java.lang.Object>)
2018-07-05 19:26:55,445 - Mapped "{[/sys/generator/code]}" onto public void com.fq.fqltdwasbackstage.controller.SysGeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-07-05 19:26:55,446 - Mapped "{[/user/addUser],methods=[POST]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.addUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:26:55,447 - Mapped "{[/user/findUserByName],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findUserByName(java.lang.String)
2018-07-05 19:26:55,447 - Mapped "{[/user/findAllUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.findAllUser(java.lang.String)
2018-07-05 19:26:55,447 - Mapped "{[/user/deleteUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.deleteUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:26:55,447 - Mapped "{[/user/updatePassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updatePassword(java.lang.String,java.lang.String)
2018-07-05 19:26:55,447 - Mapped "{[/user/checkPassword],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.checkPassword(java.lang.String,java.lang.String)
2018-07-05 19:26:55,447 - Mapped "{[/user/updateUser],methods=[GET]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.UserController.updateUser(com.fq.fqltdwasbackstage.domain.User)
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/update]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.update(com.fq.fqltdwasbackstage.domain.WasDataDictionary)
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/delete]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.delete(java.lang.Integer[])
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/list]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.list(com.fq.fqltdwasbackstage.domain.WasDataDictionary,com.fq.fqltdwasbackstage.domain.common.Pages)
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/saveOrUpdate]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.save(com.fq.fqltdwasbackstage.domain.WasDataDictionary,java.lang.String)
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/info/{wasId}]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.info(java.lang.Integer)
2018-07-05 19:26:55,449 - Mapped "{[/generator/wasdatadictionary/getNewHeight]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.getNewHeight(java.lang.String)
2018-07-05 19:26:55,450 - Mapped "{[/generator/wasdatadictionary/disabledAll]}" onto public com.fq.fqltdwasbackstage.domain.common.Result com.fq.fqltdwasbackstage.controller.WasDataDictionaryController.disabledAll(java.lang.String)
2018-07-05 19:26:55,451 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-07-05 19:26:55,451 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-07-05 19:26:55,503 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:26:55,504 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:26:55,528 - Detected @ExceptionHandler methods in exceptionHandle
2018-07-05 19:26:55,568 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-07-05 19:26:56,475 - LiveReload server is running on port 35729
2018-07-05 19:26:56,644 - Registering beans for JMX exposure on startup
2018-07-05 19:26:56,646 - Bean with name 'primaryDataSource' has been autodetected for JMX exposure
2018-07-05 19:26:56,653 - Located MBean 'primaryDataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=primaryDataSource,type=DruidDataSource]
2018-07-05 19:26:56,667 - Starting ProtocolHandler ["http-nio-8081"]
2018-07-05 19:26:56,713 - Using a shared selector for servlet write/read
2018-07-05 19:26:56,738 - Tomcat started on port(s): 8081 (http)
2018-07-05 19:26:56,745 - Started FqLtdWasBackstageApplication in 6.606 seconds (JVM running for 8.144)
